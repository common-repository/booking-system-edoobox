{"version":3,"file":"main.js","sources":["../widgets/facebook/main.js","../widgets/google-maps/main.ts","../widgets/social_xing/main.js","../widgets/social_googleplus/main.js","../../node_modules/luxon/src/errors.js","../../node_modules/luxon/src/impl/formats.js","../../node_modules/luxon/src/zone.js","../../node_modules/luxon/src/zones/systemZone.js","../../node_modules/luxon/src/zones/IANAZone.js","../../node_modules/luxon/src/impl/locale.js","../../node_modules/luxon/src/zones/fixedOffsetZone.js","../../node_modules/luxon/src/zones/invalidZone.js","../../node_modules/luxon/src/impl/zoneUtil.js","../../node_modules/luxon/src/settings.js","../../node_modules/luxon/src/impl/util.js","../../node_modules/luxon/src/impl/english.js","../../node_modules/luxon/src/impl/formatter.js","../../node_modules/luxon/src/impl/invalid.js","../../node_modules/luxon/src/impl/regexParser.js","../../node_modules/luxon/src/duration.js","../../node_modules/luxon/src/interval.js","../../node_modules/luxon/src/info.js","../../node_modules/luxon/src/impl/diff.js","../../node_modules/luxon/src/impl/digits.js","../../node_modules/luxon/src/impl/tokenParser.js","../../node_modules/luxon/src/impl/conversions.js","../../node_modules/luxon/src/datetime.js","../router/router.js","../../node_modules/preact/dist/preact.module.js","../../node_modules/preact/hooks/dist/hooks.module.js","../../node_modules/preact/compat/dist/compat.module.js","../../node_modules/@fullcalendar/core/internal-common.js","../../node_modules/@fullcalendar/core/index.js","../../node_modules/@fullcalendar/daygrid/internal.js","../../node_modules/@fullcalendar/daygrid/index.js","../../node_modules/@fullcalendar/timegrid/internal.js","../../node_modules/@fullcalendar/timegrid/index.js","../../node_modules/@fullcalendar/list/internal.js","../../node_modules/@fullcalendar/list/index.js","../../../../node_modules/preact/dist/preact.module.js","../../../../node_modules/preact/hooks/dist/hooks.module.js","../../../../node_modules/preact/compat/dist/compat.module.js","../../../../node_modules/@fullcalendar/core/internal-common.js","../../../../node_modules/luxon/src/errors.js","../../../../node_modules/luxon/src/impl/formats.js","../../../../node_modules/luxon/src/impl/util.js","../../../../node_modules/luxon/src/impl/english.js","../../../../node_modules/luxon/src/impl/formatter.js","../../../../node_modules/luxon/src/impl/invalid.js","../../../../node_modules/luxon/src/zone.js","../../../../node_modules/luxon/src/zones/systemZone.js","../../../../node_modules/luxon/src/zones/IANAZone.js","../../../../node_modules/luxon/src/zones/fixedOffsetZone.js","../../../../node_modules/luxon/src/zones/invalidZone.js","../../../../node_modules/luxon/src/impl/zoneUtil.js","../../../../node_modules/luxon/src/settings.js","../../../../node_modules/luxon/src/impl/locale.js","../../../../node_modules/luxon/src/impl/regexParser.js","../../../../node_modules/luxon/src/duration.js","../../../../node_modules/luxon/src/interval.js","../../../../node_modules/luxon/src/info.js","../../../../node_modules/luxon/src/impl/diff.js","../../../../node_modules/luxon/src/impl/digits.js","../../../../node_modules/luxon/src/impl/tokenParser.js","../../../../node_modules/luxon/src/impl/conversions.js","../../../../node_modules/luxon/src/datetime.js","../../../../node_modules/@fullcalendar/luxon2/index.js","../localisation/language.js","../models/offer.js","../widgets/ucalendar/main.ts","../widgets/utable/main.ts","../iframe/iframe.ts","../widgets/alektionen/main.ts","../widgets/sameHeight/sameHeight.ts","../widgets/main.ts","../main.ts"],"sourcesContent":["export default function () {\n    window.fbAsyncInit = function () {\n        FB.init({\n            appId: '1945424902141041',\n            cookie: true,\n            xfbml: true,\n            version: 'v2.11'\n        });\n    };\n    var userLang = navigator.language || navigator.userLanguage;\n    \n    var lang = 'de_DE';\n    switch (userLang.split('-')[0]) {\n        case 'de':\n            lang = 'de_DE';\n            break;\n        case 'en':\n            lang = 'en_GB';\n            break;\n        case 'fr':\n            lang = 'fr_FR';\n            break;\n        case 'es':\n            lang = 'es_ES';\n            break;\n        case 'cs':\n            lang = 'cs_CZ';\n            break;\n        case 'cn':\n            lang = 'zh_CN';\n            break;\n    }\n    \n    \n    (function (d, s, id) {\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {\n            return;\n        }\n        js = d.createElement(s);\n        js.id = id;\n        js.src = \"https://connect.facebook.net/\" + lang + \"/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n    }(document, 'script', 'facebook-jssdk'));\n}","export default function () {\n    var script = document.createElement('script');\n    var apiKey = window.googleMapsApiKey?.[0];\n    script.type = 'text/javascript';\n    script.src = 'https://maps.googleapis.com/maps/api/js?v=3.exp&callback=window.initialiseGoogleMaps&key=' + apiKey;\n    document.body.appendChild(script);\n}\n\nexport function initialiseGoogleMaps() {\n    const mapCollection: NodeList = document.querySelectorAll(\".wdg_google_init\");\n    mapCollection.forEach(function (element: HTMLElement) {\n        const googleMarker: string = element.dataset.gmarker;\n        const googleStyle: string = element.dataset.gstyle;\n        const googleType: string = element.dataset.gtype;\n        const styleIsJson: boolean = googleStyle === \"json\";\n        const addMarker: boolean = googleMarker === \"1\";\n        const zoom: number = +element.dataset.zoom || 0;\n        const langitude: number = parseFloat(element.dataset.lan);\n        const latitude: number = parseFloat(element.dataset.lat);\n        const myLatlng = new google.maps.LatLng(latitude, langitude);\n\n        let map: google.maps.Map = new google.maps.Map(element, buildMapOptions({\n            zoom,\n            center: myLatlng,\n            googleStyle,\n            googleType\n        }));\n\n        if (styleIsJson) {\n            setCustomEdooboxMapType(map);\n        }\n\n        if (addMarker) {\n            setMapMarker({ map, position: myLatlng });\n        }\n    });\n}\n\nfunction buildMapOptions({ zoom, center, googleStyle, googleType }) {\n    const edooboxStyle = \"edooboxstyle\";\n    return googleStyle === \"json\" ? {\n        zoom,\n        center,\n        streetViewControl: true,\n        mapTypeControlOptions: {\n            mapTypeIds: [google.maps.MapTypeId[googleType], edooboxStyle]\n        },\n        mapTypeId: edooboxStyle\n    } : {\n        zoom,\n        center,\n        streetViewControl: true,\n        mapTypeId: googleType.toLowerCase()\n    };\n}\n\nfunction setCustomEdooboxMapType(map: google.maps.Map) {\n    map.mapTypes.set('edooboxstyle', new google.maps.StyledMapType(window.googlemapstyle, {\n        name: 'Event Style'\n    }));\n}\n\nfunction setMapMarker({ map, position }): google.maps.Marker {\n    return new google.maps.Marker({\n        position,\n        map,\n        animation: google.maps.Animation.DROP,\n        title: \"Location\"\n    });\n}","export default function () {\n    (function (d, s) {\n        var x = d.createElement(s), s = d.getElementsByTagName(s)[0];\n        x.src = \"https://www.xing-share.com/js/external/share.js\";\n        s.parentNode.insertBefore(x, s);\n    })(document, \"script\");\n}","export default function () {\n    var userLang = navigator.language || navigator.userLanguage;\n    \n    var lang = 'de-DE';\n    switch (userLang.split('-')[0]) {\n        case 'de':\n            lang = 'de-DE';\n            break;\n        case 'en':\n            lang = 'en-US';\n            break;\n        case 'fr':\n            lang = 'fr-FR';\n            break;\n    }\n    \n    window.___gcfg = { lang };\n    \n    (function () {\n        var po = document.createElement('script');\n        po.type = 'text/javascript';\n        po.async = true;\n        po.src = 'https://apis.google.com/js/plusone.js';\n        var s = document.getElementsByTagName('script')[0];\n        s.parentNode.insertBefore(po, s);\n    })();\n}","// these aren't really private, but nor are they really useful to document\n\n/**\n * @private\n */\nclass LuxonError extends Error {}\n\n/**\n * @private\n */\nexport class InvalidDateTimeError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid DateTime: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidIntervalError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid Interval: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidDurationError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid Duration: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class ConflictingSpecificationError extends LuxonError {}\n\n/**\n * @private\n */\nexport class InvalidUnitError extends LuxonError {\n  constructor(unit) {\n    super(`Invalid unit ${unit}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidArgumentError extends LuxonError {}\n\n/**\n * @private\n */\nexport class ZoneIsAbstractError extends LuxonError {\n  constructor() {\n    super(\"Zone is an abstract class\");\n  }\n}\n","/**\n * @private\n */\n\nconst n = \"numeric\",\n  s = \"short\",\n  l = \"long\";\n\nexport const DATE_SHORT = {\n  year: n,\n  month: n,\n  day: n,\n};\n\nexport const DATE_MED = {\n  year: n,\n  month: s,\n  day: n,\n};\n\nexport const DATE_MED_WITH_WEEKDAY = {\n  year: n,\n  month: s,\n  day: n,\n  weekday: s,\n};\n\nexport const DATE_FULL = {\n  year: n,\n  month: l,\n  day: n,\n};\n\nexport const DATE_HUGE = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n};\n\nexport const TIME_SIMPLE = {\n  hour: n,\n  minute: n,\n};\n\nexport const TIME_WITH_SECONDS = {\n  hour: n,\n  minute: n,\n  second: n,\n};\n\nexport const TIME_WITH_SHORT_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: s,\n};\n\nexport const TIME_WITH_LONG_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: l,\n};\n\nexport const TIME_24_SIMPLE = {\n  hour: n,\n  minute: n,\n  hourCycle: \"h23\",\n};\n\nexport const TIME_24_WITH_SECONDS = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\",\n};\n\nexport const TIME_24_WITH_SHORT_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\",\n  timeZoneName: s,\n};\n\nexport const TIME_24_WITH_LONG_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\",\n  timeZoneName: l,\n};\n\nexport const DATETIME_SHORT = {\n  year: n,\n  month: n,\n  day: n,\n  hour: n,\n  minute: n,\n};\n\nexport const DATETIME_SHORT_WITH_SECONDS = {\n  year: n,\n  month: n,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n,\n};\n\nexport const DATETIME_MED = {\n  year: n,\n  month: s,\n  day: n,\n  hour: n,\n  minute: n,\n};\n\nexport const DATETIME_MED_WITH_SECONDS = {\n  year: n,\n  month: s,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n,\n};\n\nexport const DATETIME_MED_WITH_WEEKDAY = {\n  year: n,\n  month: s,\n  day: n,\n  weekday: s,\n  hour: n,\n  minute: n,\n};\n\nexport const DATETIME_FULL = {\n  year: n,\n  month: l,\n  day: n,\n  hour: n,\n  minute: n,\n  timeZoneName: s,\n};\n\nexport const DATETIME_FULL_WITH_SECONDS = {\n  year: n,\n  month: l,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: s,\n};\n\nexport const DATETIME_HUGE = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n  hour: n,\n  minute: n,\n  timeZoneName: l,\n};\n\nexport const DATETIME_HUGE_WITH_SECONDS = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: l,\n};\n","import { ZoneIsAbstractError } from \"./errors.js\";\n\n/**\n * @interface\n */\nexport default class Zone {\n  /**\n   * The type of zone\n   * @abstract\n   * @type {string}\n   */\n  get type() {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * The name of this zone.\n   * @abstract\n   * @type {string}\n   */\n  get name() {\n    throw new ZoneIsAbstractError();\n  }\n\n  get ianaName() {\n    return this.name;\n  }\n\n  /**\n   * Returns whether the offset is known to be fixed for the whole year.\n   * @abstract\n   * @type {boolean}\n   */\n  get isUniversal() {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Returns the offset's common name (such as EST) at the specified timestamp\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to get the name\n   * @param {Object} opts - Options to affect the format\n   * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.\n   * @param {string} opts.locale - What locale to return the offset name in.\n   * @return {string}\n   */\n  offsetName(ts, opts) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Returns the offset's value as a string\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to get the offset\n   * @param {string} format - What style of offset to return.\n   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively\n   * @return {string}\n   */\n  formatOffset(ts, format) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return the offset in minutes for this zone at the specified timestamp.\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to compute the offset\n   * @return {number}\n   */\n  offset(ts) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return whether this Zone is equal to another zone\n   * @abstract\n   * @param {Zone} otherZone - the zone to compare\n   * @return {boolean}\n   */\n  equals(otherZone) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return whether this Zone is valid.\n   * @abstract\n   * @type {boolean}\n   */\n  get isValid() {\n    throw new ZoneIsAbstractError();\n  }\n}\n","import { formatOffset, parseZoneInfo } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet singleton = null;\n\n/**\n * Represents the local zone for this JavaScript environment.\n * @implements {Zone}\n */\nexport default class SystemZone extends Zone {\n  /**\n   * Get a singleton instance of the local zone\n   * @return {SystemZone}\n   */\n  static get instance() {\n    if (singleton === null) {\n      singleton = new SystemZone();\n    }\n    return singleton;\n  }\n\n  /** @override **/\n  get type() {\n    return \"system\";\n  }\n\n  /** @override **/\n  get name() {\n    return new Intl.DateTimeFormat().resolvedOptions().timeZone;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName(ts, { format, locale }) {\n    return parseZoneInfo(ts, format, locale);\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.offset(ts), format);\n  }\n\n  /** @override **/\n  offset(ts) {\n    return -new Date(ts).getTimezoneOffset();\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"system\";\n  }\n\n  /** @override **/\n  get isValid() {\n    return true;\n  }\n}\n","import { formatOffset, parseZoneInfo, isUndefined, objToLocalTS } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet dtfCache = {};\nfunction makeDTF(zone) {\n  if (!dtfCache[zone]) {\n    dtfCache[zone] = new Intl.DateTimeFormat(\"en-US\", {\n      hour12: false,\n      timeZone: zone,\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      era: \"short\",\n    });\n  }\n  return dtfCache[zone];\n}\n\nconst typeToPos = {\n  year: 0,\n  month: 1,\n  day: 2,\n  era: 3,\n  hour: 4,\n  minute: 5,\n  second: 6,\n};\n\nfunction hackyOffset(dtf, date) {\n  const formatted = dtf.format(date).replace(/\\u200E/g, \"\"),\n    parsed = /(\\d+)\\/(\\d+)\\/(\\d+) (AD|BC),? (\\d+):(\\d+):(\\d+)/.exec(formatted),\n    [, fMonth, fDay, fYear, fadOrBc, fHour, fMinute, fSecond] = parsed;\n  return [fYear, fMonth, fDay, fadOrBc, fHour, fMinute, fSecond];\n}\n\nfunction partsOffset(dtf, date) {\n  const formatted = dtf.formatToParts(date);\n  const filled = [];\n  for (let i = 0; i < formatted.length; i++) {\n    const { type, value } = formatted[i];\n    const pos = typeToPos[type];\n\n    if (type === \"era\") {\n      filled[pos] = value;\n    } else if (!isUndefined(pos)) {\n      filled[pos] = parseInt(value, 10);\n    }\n  }\n  return filled;\n}\n\nlet ianaZoneCache = {};\n/**\n * A zone identified by an IANA identifier, like America/New_York\n * @implements {Zone}\n */\nexport default class IANAZone extends Zone {\n  /**\n   * @param {string} name - Zone name\n   * @return {IANAZone}\n   */\n  static create(name) {\n    if (!ianaZoneCache[name]) {\n      ianaZoneCache[name] = new IANAZone(name);\n    }\n    return ianaZoneCache[name];\n  }\n\n  /**\n   * Reset local caches. Should only be necessary in testing scenarios.\n   * @return {void}\n   */\n  static resetCache() {\n    ianaZoneCache = {};\n    dtfCache = {};\n  }\n\n  /**\n   * Returns whether the provided string is a valid specifier. This only checks the string's format, not that the specifier identifies a known zone; see isValidZone for that.\n   * @param {string} s - The string to check validity on\n   * @example IANAZone.isValidSpecifier(\"America/New_York\") //=> true\n   * @example IANAZone.isValidSpecifier(\"Sport~~blorp\") //=> false\n   * @deprecated This method returns false for some valid IANA names. Use isValidZone instead.\n   * @return {boolean}\n   */\n  static isValidSpecifier(s) {\n    return this.isValidZone(s);\n  }\n\n  /**\n   * Returns whether the provided string identifies a real zone\n   * @param {string} zone - The string to check\n   * @example IANAZone.isValidZone(\"America/New_York\") //=> true\n   * @example IANAZone.isValidZone(\"Fantasia/Castle\") //=> false\n   * @example IANAZone.isValidZone(\"Sport~~blorp\") //=> false\n   * @return {boolean}\n   */\n  static isValidZone(zone) {\n    if (!zone) {\n      return false;\n    }\n    try {\n      new Intl.DateTimeFormat(\"en-US\", { timeZone: zone }).format();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  constructor(name) {\n    super();\n    /** @private **/\n    this.zoneName = name;\n    /** @private **/\n    this.valid = IANAZone.isValidZone(name);\n  }\n\n  /** @override **/\n  get type() {\n    return \"iana\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.zoneName;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName(ts, { format, locale }) {\n    return parseZoneInfo(ts, format, locale, this.name);\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.offset(ts), format);\n  }\n\n  /** @override **/\n  offset(ts) {\n    const date = new Date(ts);\n\n    if (isNaN(date)) return NaN;\n\n    const dtf = makeDTF(this.name);\n    let [year, month, day, adOrBc, hour, minute, second] = dtf.formatToParts\n      ? partsOffset(dtf, date)\n      : hackyOffset(dtf, date);\n\n    if (adOrBc === \"BC\") {\n      year = -Math.abs(year) + 1;\n    }\n\n    // because we're using hour12 and https://bugs.chromium.org/p/chromium/issues/detail?id=1025564&can=2&q=%2224%3A00%22%20datetimeformat\n    const adjustedHour = hour === 24 ? 0 : hour;\n\n    const asUTC = objToLocalTS({\n      year,\n      month,\n      day,\n      hour: adjustedHour,\n      minute,\n      second,\n      millisecond: 0,\n    });\n\n    let asTS = +date;\n    const over = asTS % 1000;\n    asTS -= over >= 0 ? over : 1000 + over;\n    return (asUTC - asTS) / (60 * 1000);\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"iana\" && otherZone.name === this.name;\n  }\n\n  /** @override **/\n  get isValid() {\n    return this.valid;\n  }\n}\n","import { padStart, roundTo, hasRelative, formatOffset } from \"./util.js\";\nimport * as English from \"./english.js\";\nimport Settings from \"../settings.js\";\nimport DateTime from \"../datetime.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\n\n// todo - remap caching\n\nlet intlLFCache = {};\nfunction getCachedLF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlLFCache[key];\n  if (!dtf) {\n    dtf = new Intl.ListFormat(locString, opts);\n    intlLFCache[key] = dtf;\n  }\n  return dtf;\n}\n\nlet intlDTCache = {};\nfunction getCachedDTF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlDTCache[key];\n  if (!dtf) {\n    dtf = new Intl.DateTimeFormat(locString, opts);\n    intlDTCache[key] = dtf;\n  }\n  return dtf;\n}\n\nlet intlNumCache = {};\nfunction getCachedINF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let inf = intlNumCache[key];\n  if (!inf) {\n    inf = new Intl.NumberFormat(locString, opts);\n    intlNumCache[key] = inf;\n  }\n  return inf;\n}\n\nlet intlRelCache = {};\nfunction getCachedRTF(locString, opts = {}) {\n  const { base, ...cacheKeyOpts } = opts; // exclude `base` from the options\n  const key = JSON.stringify([locString, cacheKeyOpts]);\n  let inf = intlRelCache[key];\n  if (!inf) {\n    inf = new Intl.RelativeTimeFormat(locString, opts);\n    intlRelCache[key] = inf;\n  }\n  return inf;\n}\n\nlet sysLocaleCache = null;\nfunction systemLocale() {\n  if (sysLocaleCache) {\n    return sysLocaleCache;\n  } else {\n    sysLocaleCache = new Intl.DateTimeFormat().resolvedOptions().locale;\n    return sysLocaleCache;\n  }\n}\n\nfunction parseLocaleString(localeStr) {\n  // I really want to avoid writing a BCP 47 parser\n  // see, e.g. https://github.com/wooorm/bcp-47\n  // Instead, we'll do this:\n\n  // a) if the string has no -u extensions, just leave it alone\n  // b) if it does, use Intl to resolve everything\n  // c) if Intl fails, try again without the -u\n\n  // private subtags and unicode subtags have ordering requirements,\n  // and we're not properly parsing this, so just strip out the\n  // private ones if they exist.\n  const xIndex = localeStr.indexOf(\"-x-\");\n  if (xIndex !== -1) {\n    localeStr = localeStr.substring(0, xIndex);\n  }\n\n  const uIndex = localeStr.indexOf(\"-u-\");\n  if (uIndex === -1) {\n    return [localeStr];\n  } else {\n    let options;\n    let selectedStr;\n    try {\n      options = getCachedDTF(localeStr).resolvedOptions();\n      selectedStr = localeStr;\n    } catch (e) {\n      const smaller = localeStr.substring(0, uIndex);\n      options = getCachedDTF(smaller).resolvedOptions();\n      selectedStr = smaller;\n    }\n\n    const { numberingSystem, calendar } = options;\n    return [selectedStr, numberingSystem, calendar];\n  }\n}\n\nfunction intlConfigString(localeStr, numberingSystem, outputCalendar) {\n  if (outputCalendar || numberingSystem) {\n    if (!localeStr.includes(\"-u-\")) {\n      localeStr += \"-u\";\n    }\n\n    if (outputCalendar) {\n      localeStr += `-ca-${outputCalendar}`;\n    }\n\n    if (numberingSystem) {\n      localeStr += `-nu-${numberingSystem}`;\n    }\n    return localeStr;\n  } else {\n    return localeStr;\n  }\n}\n\nfunction mapMonths(f) {\n  const ms = [];\n  for (let i = 1; i <= 12; i++) {\n    const dt = DateTime.utc(2009, i, 1);\n    ms.push(f(dt));\n  }\n  return ms;\n}\n\nfunction mapWeekdays(f) {\n  const ms = [];\n  for (let i = 1; i <= 7; i++) {\n    const dt = DateTime.utc(2016, 11, 13 + i);\n    ms.push(f(dt));\n  }\n  return ms;\n}\n\nfunction listStuff(loc, length, englishFn, intlFn) {\n  const mode = loc.listingMode();\n\n  if (mode === \"error\") {\n    return null;\n  } else if (mode === \"en\") {\n    return englishFn(length);\n  } else {\n    return intlFn(length);\n  }\n}\n\nfunction supportsFastNumbers(loc) {\n  if (loc.numberingSystem && loc.numberingSystem !== \"latn\") {\n    return false;\n  } else {\n    return (\n      loc.numberingSystem === \"latn\" ||\n      !loc.locale ||\n      loc.locale.startsWith(\"en\") ||\n      new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem === \"latn\"\n    );\n  }\n}\n\n/**\n * @private\n */\n\nclass PolyNumberFormatter {\n  constructor(intl, forceSimple, opts) {\n    this.padTo = opts.padTo || 0;\n    this.floor = opts.floor || false;\n\n    const { padTo, floor, ...otherOpts } = opts;\n\n    if (!forceSimple || Object.keys(otherOpts).length > 0) {\n      const intlOpts = { useGrouping: false, ...opts };\n      if (opts.padTo > 0) intlOpts.minimumIntegerDigits = opts.padTo;\n      this.inf = getCachedINF(intl, intlOpts);\n    }\n  }\n\n  format(i) {\n    if (this.inf) {\n      const fixed = this.floor ? Math.floor(i) : i;\n      return this.inf.format(fixed);\n    } else {\n      // to match the browser's numberformatter defaults\n      const fixed = this.floor ? Math.floor(i) : roundTo(i, 3);\n      return padStart(fixed, this.padTo);\n    }\n  }\n}\n\n/**\n * @private\n */\n\nclass PolyDateFormatter {\n  constructor(dt, intl, opts) {\n    this.opts = opts;\n    this.originalZone = undefined;\n\n    let z = undefined;\n    if (this.opts.timeZone) {\n      // Don't apply any workarounds if a timeZone is explicitly provided in opts\n      this.dt = dt;\n    } else if (dt.zone.type === \"fixed\") {\n      // UTC-8 or Etc/UTC-8 are not part of tzdata, only Etc/GMT+8 and the like.\n      // That is why fixed-offset TZ is set to that unless it is:\n      // 1. Representing offset 0 when UTC is used to maintain previous behavior and does not become GMT.\n      // 2. Unsupported by the browser:\n      //    - some do not support Etc/\n      //    - < Etc/GMT-14, > Etc/GMT+12, and 30-minute or 45-minute offsets are not part of tzdata\n      const gmtOffset = -1 * (dt.offset / 60);\n      const offsetZ = gmtOffset >= 0 ? `Etc/GMT+${gmtOffset}` : `Etc/GMT${gmtOffset}`;\n      if (dt.offset !== 0 && IANAZone.create(offsetZ).valid) {\n        z = offsetZ;\n        this.dt = dt;\n      } else {\n        // Not all fixed-offset zones like Etc/+4:30 are present in tzdata so\n        // we manually apply the offset and substitute the zone as needed.\n        z = \"UTC\";\n        this.dt = dt.offset === 0 ? dt : dt.setZone(\"UTC\").plus({ minutes: dt.offset });\n        this.originalZone = dt.zone;\n      }\n    } else if (dt.zone.type === \"system\") {\n      this.dt = dt;\n    } else if (dt.zone.type === \"iana\") {\n      this.dt = dt;\n      z = dt.zone.name;\n    } else {\n      // Custom zones can have any offset / offsetName so we just manually\n      // apply the offset and substitute the zone as needed.\n      z = \"UTC\";\n      this.dt = dt.setZone(\"UTC\").plus({ minutes: dt.offset });\n      this.originalZone = dt.zone;\n    }\n\n    const intlOpts = { ...this.opts };\n    intlOpts.timeZone = intlOpts.timeZone || z;\n    this.dtf = getCachedDTF(intl, intlOpts);\n  }\n\n  format() {\n    if (this.originalZone) {\n      // If we have to substitute in the actual zone name, we have to use\n      // formatToParts so that the timezone can be replaced.\n      return this.formatToParts()\n        .map(({ value }) => value)\n        .join(\"\");\n    }\n    return this.dtf.format(this.dt.toJSDate());\n  }\n\n  formatToParts() {\n    const parts = this.dtf.formatToParts(this.dt.toJSDate());\n    if (this.originalZone) {\n      return parts.map((part) => {\n        if (part.type === \"timeZoneName\") {\n          const offsetName = this.originalZone.offsetName(this.dt.ts, {\n            locale: this.dt.locale,\n            format: this.opts.timeZoneName,\n          });\n          return {\n            ...part,\n            value: offsetName,\n          };\n        } else {\n          return part;\n        }\n      });\n    }\n    return parts;\n  }\n\n  resolvedOptions() {\n    return this.dtf.resolvedOptions();\n  }\n}\n\n/**\n * @private\n */\nclass PolyRelFormatter {\n  constructor(intl, isEnglish, opts) {\n    this.opts = { style: \"long\", ...opts };\n    if (!isEnglish && hasRelative()) {\n      this.rtf = getCachedRTF(intl, opts);\n    }\n  }\n\n  format(count, unit) {\n    if (this.rtf) {\n      return this.rtf.format(count, unit);\n    } else {\n      return English.formatRelativeTime(unit, count, this.opts.numeric, this.opts.style !== \"long\");\n    }\n  }\n\n  formatToParts(count, unit) {\n    if (this.rtf) {\n      return this.rtf.formatToParts(count, unit);\n    } else {\n      return [];\n    }\n  }\n}\n\n/**\n * @private\n */\n\nexport default class Locale {\n  static fromOpts(opts) {\n    return Locale.create(opts.locale, opts.numberingSystem, opts.outputCalendar, opts.defaultToEN);\n  }\n\n  static create(locale, numberingSystem, outputCalendar, defaultToEN = false) {\n    const specifiedLocale = locale || Settings.defaultLocale;\n    // the system locale is useful for human readable strings but annoying for parsing/formatting known formats\n    const localeR = specifiedLocale || (defaultToEN ? \"en-US\" : systemLocale());\n    const numberingSystemR = numberingSystem || Settings.defaultNumberingSystem;\n    const outputCalendarR = outputCalendar || Settings.defaultOutputCalendar;\n    return new Locale(localeR, numberingSystemR, outputCalendarR, specifiedLocale);\n  }\n\n  static resetCache() {\n    sysLocaleCache = null;\n    intlDTCache = {};\n    intlNumCache = {};\n    intlRelCache = {};\n  }\n\n  static fromObject({ locale, numberingSystem, outputCalendar } = {}) {\n    return Locale.create(locale, numberingSystem, outputCalendar);\n  }\n\n  constructor(locale, numbering, outputCalendar, specifiedLocale) {\n    const [parsedLocale, parsedNumberingSystem, parsedOutputCalendar] = parseLocaleString(locale);\n\n    this.locale = parsedLocale;\n    this.numberingSystem = numbering || parsedNumberingSystem || null;\n    this.outputCalendar = outputCalendar || parsedOutputCalendar || null;\n    this.intl = intlConfigString(this.locale, this.numberingSystem, this.outputCalendar);\n\n    this.weekdaysCache = { format: {}, standalone: {} };\n    this.monthsCache = { format: {}, standalone: {} };\n    this.meridiemCache = null;\n    this.eraCache = {};\n\n    this.specifiedLocale = specifiedLocale;\n    this.fastNumbersCached = null;\n  }\n\n  get fastNumbers() {\n    if (this.fastNumbersCached == null) {\n      this.fastNumbersCached = supportsFastNumbers(this);\n    }\n\n    return this.fastNumbersCached;\n  }\n\n  listingMode() {\n    const isActuallyEn = this.isEnglish();\n    const hasNoWeirdness =\n      (this.numberingSystem === null || this.numberingSystem === \"latn\") &&\n      (this.outputCalendar === null || this.outputCalendar === \"gregory\");\n    return isActuallyEn && hasNoWeirdness ? \"en\" : \"intl\";\n  }\n\n  clone(alts) {\n    if (!alts || Object.getOwnPropertyNames(alts).length === 0) {\n      return this;\n    } else {\n      return Locale.create(\n        alts.locale || this.specifiedLocale,\n        alts.numberingSystem || this.numberingSystem,\n        alts.outputCalendar || this.outputCalendar,\n        alts.defaultToEN || false\n      );\n    }\n  }\n\n  redefaultToEN(alts = {}) {\n    return this.clone({ ...alts, defaultToEN: true });\n  }\n\n  redefaultToSystem(alts = {}) {\n    return this.clone({ ...alts, defaultToEN: false });\n  }\n\n  months(length, format = false) {\n    return listStuff(this, length, English.months, () => {\n      const intl = format ? { month: length, day: \"numeric\" } : { month: length },\n        formatStr = format ? \"format\" : \"standalone\";\n      if (!this.monthsCache[formatStr][length]) {\n        this.monthsCache[formatStr][length] = mapMonths((dt) => this.extract(dt, intl, \"month\"));\n      }\n      return this.monthsCache[formatStr][length];\n    });\n  }\n\n  weekdays(length, format = false) {\n    return listStuff(this, length, English.weekdays, () => {\n      const intl = format\n          ? { weekday: length, year: \"numeric\", month: \"long\", day: \"numeric\" }\n          : { weekday: length },\n        formatStr = format ? \"format\" : \"standalone\";\n      if (!this.weekdaysCache[formatStr][length]) {\n        this.weekdaysCache[formatStr][length] = mapWeekdays((dt) =>\n          this.extract(dt, intl, \"weekday\")\n        );\n      }\n      return this.weekdaysCache[formatStr][length];\n    });\n  }\n\n  meridiems() {\n    return listStuff(\n      this,\n      undefined,\n      () => English.meridiems,\n      () => {\n        // In theory there could be aribitrary day periods. We're gonna assume there are exactly two\n        // for AM and PM. This is probably wrong, but it's makes parsing way easier.\n        if (!this.meridiemCache) {\n          const intl = { hour: \"numeric\", hourCycle: \"h12\" };\n          this.meridiemCache = [DateTime.utc(2016, 11, 13, 9), DateTime.utc(2016, 11, 13, 19)].map(\n            (dt) => this.extract(dt, intl, \"dayperiod\")\n          );\n        }\n\n        return this.meridiemCache;\n      }\n    );\n  }\n\n  eras(length) {\n    return listStuff(this, length, English.eras, () => {\n      const intl = { era: length };\n\n      // This is problematic. Different calendars are going to define eras totally differently. What I need is the minimum set of dates\n      // to definitely enumerate them.\n      if (!this.eraCache[length]) {\n        this.eraCache[length] = [DateTime.utc(-40, 1, 1), DateTime.utc(2017, 1, 1)].map((dt) =>\n          this.extract(dt, intl, \"era\")\n        );\n      }\n\n      return this.eraCache[length];\n    });\n  }\n\n  extract(dt, intlOpts, field) {\n    const df = this.dtFormatter(dt, intlOpts),\n      results = df.formatToParts(),\n      matching = results.find((m) => m.type.toLowerCase() === field);\n    return matching ? matching.value : null;\n  }\n\n  numberFormatter(opts = {}) {\n    // this forcesimple option is never used (the only caller short-circuits on it, but it seems safer to leave)\n    // (in contrast, the rest of the condition is used heavily)\n    return new PolyNumberFormatter(this.intl, opts.forceSimple || this.fastNumbers, opts);\n  }\n\n  dtFormatter(dt, intlOpts = {}) {\n    return new PolyDateFormatter(dt, this.intl, intlOpts);\n  }\n\n  relFormatter(opts = {}) {\n    return new PolyRelFormatter(this.intl, this.isEnglish(), opts);\n  }\n\n  listFormatter(opts = {}) {\n    return getCachedLF(this.intl, opts);\n  }\n\n  isEnglish() {\n    return (\n      this.locale === \"en\" ||\n      this.locale.toLowerCase() === \"en-us\" ||\n      new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith(\"en-us\")\n    );\n  }\n\n  equals(other) {\n    return (\n      this.locale === other.locale &&\n      this.numberingSystem === other.numberingSystem &&\n      this.outputCalendar === other.outputCalendar\n    );\n  }\n}\n","import { formatOffset, signedOffset } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet singleton = null;\n\n/**\n * A zone with a fixed offset (meaning no DST)\n * @implements {Zone}\n */\nexport default class FixedOffsetZone extends Zone {\n  /**\n   * Get a singleton instance of UTC\n   * @return {FixedOffsetZone}\n   */\n  static get utcInstance() {\n    if (singleton === null) {\n      singleton = new FixedOffsetZone(0);\n    }\n    return singleton;\n  }\n\n  /**\n   * Get an instance with a specified offset\n   * @param {number} offset - The offset in minutes\n   * @return {FixedOffsetZone}\n   */\n  static instance(offset) {\n    return offset === 0 ? FixedOffsetZone.utcInstance : new FixedOffsetZone(offset);\n  }\n\n  /**\n   * Get an instance of FixedOffsetZone from a UTC offset string, like \"UTC+6\"\n   * @param {string} s - The offset string to parse\n   * @example FixedOffsetZone.parseSpecifier(\"UTC+6\")\n   * @example FixedOffsetZone.parseSpecifier(\"UTC+06\")\n   * @example FixedOffsetZone.parseSpecifier(\"UTC-6:00\")\n   * @return {FixedOffsetZone}\n   */\n  static parseSpecifier(s) {\n    if (s) {\n      const r = s.match(/^utc(?:([+-]\\d{1,2})(?::(\\d{2}))?)?$/i);\n      if (r) {\n        return new FixedOffsetZone(signedOffset(r[1], r[2]));\n      }\n    }\n    return null;\n  }\n\n  constructor(offset) {\n    super();\n    /** @private **/\n    this.fixed = offset;\n  }\n\n  /** @override **/\n  get type() {\n    return \"fixed\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.fixed === 0 ? \"UTC\" : `UTC${formatOffset(this.fixed, \"narrow\")}`;\n  }\n\n  get ianaName() {\n    if (this.fixed === 0) {\n      return \"Etc/UTC\";\n    } else {\n      return `Etc/GMT${formatOffset(-this.fixed, \"narrow\")}`;\n    }\n  }\n\n  /** @override **/\n  offsetName() {\n    return this.name;\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.fixed, format);\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return true;\n  }\n\n  /** @override **/\n  offset() {\n    return this.fixed;\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"fixed\" && otherZone.fixed === this.fixed;\n  }\n\n  /** @override **/\n  get isValid() {\n    return true;\n  }\n}\n","import Zone from \"../zone.js\";\n\n/**\n * A zone that failed to parse. You should never need to instantiate this.\n * @implements {Zone}\n */\nexport default class InvalidZone extends Zone {\n  constructor(zoneName) {\n    super();\n    /**  @private */\n    this.zoneName = zoneName;\n  }\n\n  /** @override **/\n  get type() {\n    return \"invalid\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.zoneName;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName() {\n    return null;\n  }\n\n  /** @override **/\n  formatOffset() {\n    return \"\";\n  }\n\n  /** @override **/\n  offset() {\n    return NaN;\n  }\n\n  /** @override **/\n  equals() {\n    return false;\n  }\n\n  /** @override **/\n  get isValid() {\n    return false;\n  }\n}\n","/**\n * @private\n */\n\nimport Zone from \"../zone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport InvalidZone from \"../zones/invalidZone.js\";\n\nimport { isUndefined, isString, isNumber } from \"./util.js\";\nimport SystemZone from \"../zones/systemZone.js\";\n\nexport function normalizeZone(input, defaultZone) {\n  let offset;\n  if (isUndefined(input) || input === null) {\n    return defaultZone;\n  } else if (input instanceof Zone) {\n    return input;\n  } else if (isString(input)) {\n    const lowered = input.toLowerCase();\n    if (lowered === \"default\") return defaultZone;\n    else if (lowered === \"local\" || lowered === \"system\") return SystemZone.instance;\n    else if (lowered === \"utc\" || lowered === \"gmt\") return FixedOffsetZone.utcInstance;\n    else return FixedOffsetZone.parseSpecifier(lowered) || IANAZone.create(input);\n  } else if (isNumber(input)) {\n    return FixedOffsetZone.instance(input);\n  } else if (typeof input === \"object\" && \"offset\" in input && typeof input.offset === \"function\") {\n    // This is dumb, but the instanceof check above doesn't seem to really work\n    // so we're duck checking it\n    return input;\n  } else {\n    return new InvalidZone(input);\n  }\n}\n","import SystemZone from \"./zones/systemZone.js\";\nimport IANAZone from \"./zones/IANAZone.js\";\nimport Locale from \"./impl/locale.js\";\n\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\n\nlet now = () => Date.now(),\n  defaultZone = \"system\",\n  defaultLocale = null,\n  defaultNumberingSystem = null,\n  defaultOutputCalendar = null,\n  twoDigitCutoffYear = 60,\n  throwOnInvalid;\n\n/**\n * Settings contains static getters and setters that control Luxon's overall behavior. Luxon is a simple library with few options, but the ones it does have live here.\n */\nexport default class Settings {\n  /**\n   * Get the callback for returning the current timestamp.\n   * @type {function}\n   */\n  static get now() {\n    return now;\n  }\n\n  /**\n   * Set the callback for returning the current timestamp.\n   * The function should return a number, which will be interpreted as an Epoch millisecond count\n   * @type {function}\n   * @example Settings.now = () => Date.now() + 3000 // pretend it is 3 seconds in the future\n   * @example Settings.now = () => 0 // always pretend it's Jan 1, 1970 at midnight in UTC time\n   */\n  static set now(n) {\n    now = n;\n  }\n\n  /**\n   * Set the default time zone to create DateTimes in. Does not affect existing instances.\n   * Use the value \"system\" to reset this value to the system's time zone.\n   * @type {string}\n   */\n  static set defaultZone(zone) {\n    defaultZone = zone;\n  }\n\n  /**\n   * Get the default time zone object currently used to create DateTimes. Does not affect existing instances.\n   * The default value is the system's time zone (the one set on the machine that runs this code).\n   * @type {Zone}\n   */\n  static get defaultZone() {\n    return normalizeZone(defaultZone, SystemZone.instance);\n  }\n\n  /**\n   * Get the default locale to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultLocale() {\n    return defaultLocale;\n  }\n\n  /**\n   * Set the default locale to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultLocale(locale) {\n    defaultLocale = locale;\n  }\n\n  /**\n   * Get the default numbering system to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultNumberingSystem() {\n    return defaultNumberingSystem;\n  }\n\n  /**\n   * Set the default numbering system to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultNumberingSystem(numberingSystem) {\n    defaultNumberingSystem = numberingSystem;\n  }\n\n  /**\n   * Get the default output calendar to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultOutputCalendar() {\n    return defaultOutputCalendar;\n  }\n\n  /**\n   * Set the default output calendar to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultOutputCalendar(outputCalendar) {\n    defaultOutputCalendar = outputCalendar;\n  }\n\n  /**\n   * Get the cutoff year after which a string encoding a year as two digits is interpreted to occur in the current century.\n   * @type {number}\n   */\n  static get twoDigitCutoffYear() {\n    return twoDigitCutoffYear;\n  }\n\n  /**\n   * Set the cutoff year after which a string encoding a year as two digits is interpreted to occur in the current century.\n   * @type {number}\n   * @example Settings.twoDigitCutoffYear = 0 // cut-off year is 0, so all 'yy' are interpreted as current century\n   * @example Settings.twoDigitCutoffYear = 50 // '49' -> 1949; '50' -> 2050\n   * @example Settings.twoDigitCutoffYear = 1950 // interpreted as 50\n   * @example Settings.twoDigitCutoffYear = 2050 // ALSO interpreted as 50\n   */\n  static set twoDigitCutoffYear(cutoffYear) {\n    twoDigitCutoffYear = cutoffYear % 100;\n  }\n\n  /**\n   * Get whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals\n   * @type {boolean}\n   */\n  static get throwOnInvalid() {\n    return throwOnInvalid;\n  }\n\n  /**\n   * Set whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals\n   * @type {boolean}\n   */\n  static set throwOnInvalid(t) {\n    throwOnInvalid = t;\n  }\n\n  /**\n   * Reset Luxon's global caches. Should only be necessary in testing scenarios.\n   * @return {void}\n   */\n  static resetCaches() {\n    Locale.resetCache();\n    IANAZone.resetCache();\n  }\n}\n","/*\n  This is just a junk drawer, containing anything used across multiple classes.\n  Because Luxon is small(ish), this should stay small and we won't worry about splitting\n  it up into, say, parsingUtil.js and basicUtil.js and so on. But they are divided up by feature area.\n*/\n\nimport { InvalidArgumentError } from \"../errors.js\";\nimport Settings from \"../settings.js\";\n\n/**\n * @private\n */\n\n// TYPES\n\nexport function isUndefined(o) {\n  return typeof o === \"undefined\";\n}\n\nexport function isNumber(o) {\n  return typeof o === \"number\";\n}\n\nexport function isInteger(o) {\n  return typeof o === \"number\" && o % 1 === 0;\n}\n\nexport function isString(o) {\n  return typeof o === \"string\";\n}\n\nexport function isDate(o) {\n  return Object.prototype.toString.call(o) === \"[object Date]\";\n}\n\n// CAPABILITIES\n\nexport function hasRelative() {\n  try {\n    return typeof Intl !== \"undefined\" && !!Intl.RelativeTimeFormat;\n  } catch (e) {\n    return false;\n  }\n}\n\n// OBJECTS AND ARRAYS\n\nexport function maybeArray(thing) {\n  return Array.isArray(thing) ? thing : [thing];\n}\n\nexport function bestBy(arr, by, compare) {\n  if (arr.length === 0) {\n    return undefined;\n  }\n  return arr.reduce((best, next) => {\n    const pair = [by(next), next];\n    if (!best) {\n      return pair;\n    } else if (compare(best[0], pair[0]) === best[0]) {\n      return best;\n    } else {\n      return pair;\n    }\n  }, null)[1];\n}\n\nexport function pick(obj, keys) {\n  return keys.reduce((a, k) => {\n    a[k] = obj[k];\n    return a;\n  }, {});\n}\n\nexport function hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n// NUMBERS AND STRINGS\n\nexport function integerBetween(thing, bottom, top) {\n  return isInteger(thing) && thing >= bottom && thing <= top;\n}\n\n// x % n but takes the sign of n instead of x\nexport function floorMod(x, n) {\n  return x - n * Math.floor(x / n);\n}\n\nexport function padStart(input, n = 2) {\n  const isNeg = input < 0;\n  let padded;\n  if (isNeg) {\n    padded = \"-\" + (\"\" + -input).padStart(n, \"0\");\n  } else {\n    padded = (\"\" + input).padStart(n, \"0\");\n  }\n  return padded;\n}\n\nexport function parseInteger(string) {\n  if (isUndefined(string) || string === null || string === \"\") {\n    return undefined;\n  } else {\n    return parseInt(string, 10);\n  }\n}\n\nexport function parseFloating(string) {\n  if (isUndefined(string) || string === null || string === \"\") {\n    return undefined;\n  } else {\n    return parseFloat(string);\n  }\n}\n\nexport function parseMillis(fraction) {\n  // Return undefined (instead of 0) in these cases, where fraction is not set\n  if (isUndefined(fraction) || fraction === null || fraction === \"\") {\n    return undefined;\n  } else {\n    const f = parseFloat(\"0.\" + fraction) * 1000;\n    return Math.floor(f);\n  }\n}\n\nexport function roundTo(number, digits, towardZero = false) {\n  const factor = 10 ** digits,\n    rounder = towardZero ? Math.trunc : Math.round;\n  return rounder(number * factor) / factor;\n}\n\n// DATE BASICS\n\nexport function isLeapYear(year) {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nexport function daysInYear(year) {\n  return isLeapYear(year) ? 366 : 365;\n}\n\nexport function daysInMonth(year, month) {\n  const modMonth = floorMod(month - 1, 12) + 1,\n    modYear = year + (month - modMonth) / 12;\n\n  if (modMonth === 2) {\n    return isLeapYear(modYear) ? 29 : 28;\n  } else {\n    return [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][modMonth - 1];\n  }\n}\n\n// convert a calendar object to a local timestamp (epoch, but with the offset baked in)\nexport function objToLocalTS(obj) {\n  let d = Date.UTC(\n    obj.year,\n    obj.month - 1,\n    obj.day,\n    obj.hour,\n    obj.minute,\n    obj.second,\n    obj.millisecond\n  );\n\n  // for legacy reasons, years between 0 and 99 are interpreted as 19XX; revert that\n  if (obj.year < 100 && obj.year >= 0) {\n    d = new Date(d);\n    // set the month and day again, this is necessary because year 2000 is a leap year, but year 100 is not\n    // so if obj.year is in 99, but obj.day makes it roll over into year 100,\n    // the calculations done by Date.UTC are using year 2000 - which is incorrect\n    d.setUTCFullYear(obj.year, obj.month - 1, obj.day);\n  }\n  return +d;\n}\n\nexport function weeksInWeekYear(weekYear) {\n  const p1 =\n      (weekYear +\n        Math.floor(weekYear / 4) -\n        Math.floor(weekYear / 100) +\n        Math.floor(weekYear / 400)) %\n      7,\n    last = weekYear - 1,\n    p2 = (last + Math.floor(last / 4) - Math.floor(last / 100) + Math.floor(last / 400)) % 7;\n  return p1 === 4 || p2 === 3 ? 53 : 52;\n}\n\nexport function untruncateYear(year) {\n  if (year > 99) {\n    return year;\n  } else return year > Settings.twoDigitCutoffYear ? 1900 + year : 2000 + year;\n}\n\n// PARSING\n\nexport function parseZoneInfo(ts, offsetFormat, locale, timeZone = null) {\n  const date = new Date(ts),\n    intlOpts = {\n      hourCycle: \"h23\",\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    };\n\n  if (timeZone) {\n    intlOpts.timeZone = timeZone;\n  }\n\n  const modified = { timeZoneName: offsetFormat, ...intlOpts };\n\n  const parsed = new Intl.DateTimeFormat(locale, modified)\n    .formatToParts(date)\n    .find((m) => m.type.toLowerCase() === \"timezonename\");\n  return parsed ? parsed.value : null;\n}\n\n// signedOffset('-5', '30') -> -330\nexport function signedOffset(offHourStr, offMinuteStr) {\n  let offHour = parseInt(offHourStr, 10);\n\n  // don't || this because we want to preserve -0\n  if (Number.isNaN(offHour)) {\n    offHour = 0;\n  }\n\n  const offMin = parseInt(offMinuteStr, 10) || 0,\n    offMinSigned = offHour < 0 || Object.is(offHour, -0) ? -offMin : offMin;\n  return offHour * 60 + offMinSigned;\n}\n\n// COERCION\n\nexport function asNumber(value) {\n  const numericValue = Number(value);\n  if (typeof value === \"boolean\" || value === \"\" || Number.isNaN(numericValue))\n    throw new InvalidArgumentError(`Invalid unit value ${value}`);\n  return numericValue;\n}\n\nexport function normalizeObject(obj, normalizer) {\n  const normalized = {};\n  for (const u in obj) {\n    if (hasOwnProperty(obj, u)) {\n      const v = obj[u];\n      if (v === undefined || v === null) continue;\n      normalized[normalizer(u)] = asNumber(v);\n    }\n  }\n  return normalized;\n}\n\nexport function formatOffset(offset, format) {\n  const hours = Math.trunc(Math.abs(offset / 60)),\n    minutes = Math.trunc(Math.abs(offset % 60)),\n    sign = offset >= 0 ? \"+\" : \"-\";\n\n  switch (format) {\n    case \"short\":\n      return `${sign}${padStart(hours, 2)}:${padStart(minutes, 2)}`;\n    case \"narrow\":\n      return `${sign}${hours}${minutes > 0 ? `:${minutes}` : \"\"}`;\n    case \"techie\":\n      return `${sign}${padStart(hours, 2)}${padStart(minutes, 2)}`;\n    default:\n      throw new RangeError(`Value format ${format} is out of range for property format`);\n  }\n}\n\nexport function timeObject(obj) {\n  return pick(obj, [\"hour\", \"minute\", \"second\", \"millisecond\"]);\n}\n","import * as Formats from \"./formats.js\";\nimport { pick } from \"./util.js\";\n\nfunction stringify(obj) {\n  return JSON.stringify(obj, Object.keys(obj).sort());\n}\n\n/**\n * @private\n */\n\nexport const monthsLong = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport const monthsShort = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n\nexport const monthsNarrow = [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"];\n\nexport function months(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...monthsNarrow];\n    case \"short\":\n      return [...monthsShort];\n    case \"long\":\n      return [...monthsLong];\n    case \"numeric\":\n      return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"];\n    case \"2-digit\":\n      return [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\n    default:\n      return null;\n  }\n}\n\nexport const weekdaysLong = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n];\n\nexport const weekdaysShort = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n\nexport const weekdaysNarrow = [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"];\n\nexport function weekdays(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...weekdaysNarrow];\n    case \"short\":\n      return [...weekdaysShort];\n    case \"long\":\n      return [...weekdaysLong];\n    case \"numeric\":\n      return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\n    default:\n      return null;\n  }\n}\n\nexport const meridiems = [\"AM\", \"PM\"];\n\nexport const erasLong = [\"Before Christ\", \"Anno Domini\"];\n\nexport const erasShort = [\"BC\", \"AD\"];\n\nexport const erasNarrow = [\"B\", \"A\"];\n\nexport function eras(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...erasNarrow];\n    case \"short\":\n      return [...erasShort];\n    case \"long\":\n      return [...erasLong];\n    default:\n      return null;\n  }\n}\n\nexport function meridiemForDateTime(dt) {\n  return meridiems[dt.hour < 12 ? 0 : 1];\n}\n\nexport function weekdayForDateTime(dt, length) {\n  return weekdays(length)[dt.weekday - 1];\n}\n\nexport function monthForDateTime(dt, length) {\n  return months(length)[dt.month - 1];\n}\n\nexport function eraForDateTime(dt, length) {\n  return eras(length)[dt.year < 0 ? 0 : 1];\n}\n\nexport function formatRelativeTime(unit, count, numeric = \"always\", narrow = false) {\n  const units = {\n    years: [\"year\", \"yr.\"],\n    quarters: [\"quarter\", \"qtr.\"],\n    months: [\"month\", \"mo.\"],\n    weeks: [\"week\", \"wk.\"],\n    days: [\"day\", \"day\", \"days\"],\n    hours: [\"hour\", \"hr.\"],\n    minutes: [\"minute\", \"min.\"],\n    seconds: [\"second\", \"sec.\"],\n  };\n\n  const lastable = [\"hours\", \"minutes\", \"seconds\"].indexOf(unit) === -1;\n\n  if (numeric === \"auto\" && lastable) {\n    const isDay = unit === \"days\";\n    switch (count) {\n      case 1:\n        return isDay ? \"tomorrow\" : `next ${units[unit][0]}`;\n      case -1:\n        return isDay ? \"yesterday\" : `last ${units[unit][0]}`;\n      case 0:\n        return isDay ? \"today\" : `this ${units[unit][0]}`;\n      default: // fall through\n    }\n  }\n\n  const isInPast = Object.is(count, -0) || count < 0,\n    fmtValue = Math.abs(count),\n    singular = fmtValue === 1,\n    lilUnits = units[unit],\n    fmtUnit = narrow\n      ? singular\n        ? lilUnits[1]\n        : lilUnits[2] || lilUnits[1]\n      : singular\n      ? units[unit][0]\n      : unit;\n  return isInPast ? `${fmtValue} ${fmtUnit} ago` : `in ${fmtValue} ${fmtUnit}`;\n}\n\nexport function formatString(knownFormat) {\n  // these all have the offsets removed because we don't have access to them\n  // without all the intl stuff this is backfilling\n  const filtered = pick(knownFormat, [\n      \"weekday\",\n      \"era\",\n      \"year\",\n      \"month\",\n      \"day\",\n      \"hour\",\n      \"minute\",\n      \"second\",\n      \"timeZoneName\",\n      \"hourCycle\",\n    ]),\n    key = stringify(filtered),\n    dateTimeHuge = \"EEEE, LLLL d, yyyy, h:mm a\";\n  switch (key) {\n    case stringify(Formats.DATE_SHORT):\n      return \"M/d/yyyy\";\n    case stringify(Formats.DATE_MED):\n      return \"LLL d, yyyy\";\n    case stringify(Formats.DATE_MED_WITH_WEEKDAY):\n      return \"EEE, LLL d, yyyy\";\n    case stringify(Formats.DATE_FULL):\n      return \"LLLL d, yyyy\";\n    case stringify(Formats.DATE_HUGE):\n      return \"EEEE, LLLL d, yyyy\";\n    case stringify(Formats.TIME_SIMPLE):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_WITH_SECONDS):\n      return \"h:mm:ss a\";\n    case stringify(Formats.TIME_WITH_SHORT_OFFSET):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_WITH_LONG_OFFSET):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_24_SIMPLE):\n      return \"HH:mm\";\n    case stringify(Formats.TIME_24_WITH_SECONDS):\n      return \"HH:mm:ss\";\n    case stringify(Formats.TIME_24_WITH_SHORT_OFFSET):\n      return \"HH:mm\";\n    case stringify(Formats.TIME_24_WITH_LONG_OFFSET):\n      return \"HH:mm\";\n    case stringify(Formats.DATETIME_SHORT):\n      return \"M/d/yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_MED):\n      return \"LLL d, yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_FULL):\n      return \"LLLL d, yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_HUGE):\n      return dateTimeHuge;\n    case stringify(Formats.DATETIME_SHORT_WITH_SECONDS):\n      return \"M/d/yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_MED_WITH_SECONDS):\n      return \"LLL d, yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_MED_WITH_WEEKDAY):\n      return \"EEE, d LLL yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_FULL_WITH_SECONDS):\n      return \"LLLL d, yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_HUGE_WITH_SECONDS):\n      return \"EEEE, LLLL d, yyyy, h:mm:ss a\";\n    default:\n      return dateTimeHuge;\n  }\n}\n","import * as English from \"./english.js\";\nimport * as Formats from \"./formats.js\";\nimport { padStart } from \"./util.js\";\n\nfunction stringifyTokens(splits, tokenToString) {\n  let s = \"\";\n  for (const token of splits) {\n    if (token.literal) {\n      s += token.val;\n    } else {\n      s += tokenToString(token.val);\n    }\n  }\n  return s;\n}\n\nconst macroTokenToFormatOpts = {\n  D: Formats.DATE_SHORT,\n  DD: Formats.DATE_MED,\n  DDD: Formats.DATE_FULL,\n  DDDD: Formats.DATE_HUGE,\n  t: Formats.TIME_SIMPLE,\n  tt: Formats.TIME_WITH_SECONDS,\n  ttt: Formats.TIME_WITH_SHORT_OFFSET,\n  tttt: Formats.TIME_WITH_LONG_OFFSET,\n  T: Formats.TIME_24_SIMPLE,\n  TT: Formats.TIME_24_WITH_SECONDS,\n  TTT: Formats.TIME_24_WITH_SHORT_OFFSET,\n  TTTT: Formats.TIME_24_WITH_LONG_OFFSET,\n  f: Formats.DATETIME_SHORT,\n  ff: Formats.DATETIME_MED,\n  fff: Formats.DATETIME_FULL,\n  ffff: Formats.DATETIME_HUGE,\n  F: Formats.DATETIME_SHORT_WITH_SECONDS,\n  FF: Formats.DATETIME_MED_WITH_SECONDS,\n  FFF: Formats.DATETIME_FULL_WITH_SECONDS,\n  FFFF: Formats.DATETIME_HUGE_WITH_SECONDS,\n};\n\n/**\n * @private\n */\n\nexport default class Formatter {\n  static create(locale, opts = {}) {\n    return new Formatter(locale, opts);\n  }\n\n  static parseFormat(fmt) {\n    // white-space is always considered a literal in user-provided formats\n    // the \" \" token has a special meaning (see unitForToken)\n\n    let current = null,\n      currentFull = \"\",\n      bracketed = false;\n    const splits = [];\n    for (let i = 0; i < fmt.length; i++) {\n      const c = fmt.charAt(i);\n      if (c === \"'\") {\n        if (currentFull.length > 0) {\n          splits.push({ literal: bracketed || /^\\s+$/.test(currentFull), val: currentFull });\n        }\n        current = null;\n        currentFull = \"\";\n        bracketed = !bracketed;\n      } else if (bracketed) {\n        currentFull += c;\n      } else if (c === current) {\n        currentFull += c;\n      } else {\n        if (currentFull.length > 0) {\n          splits.push({ literal: /^\\s+$/.test(currentFull), val: currentFull });\n        }\n        currentFull = c;\n        current = c;\n      }\n    }\n\n    if (currentFull.length > 0) {\n      splits.push({ literal: bracketed || /^\\s+$/.test(currentFull), val: currentFull });\n    }\n\n    return splits;\n  }\n\n  static macroTokenToFormatOpts(token) {\n    return macroTokenToFormatOpts[token];\n  }\n\n  constructor(locale, formatOpts) {\n    this.opts = formatOpts;\n    this.loc = locale;\n    this.systemLoc = null;\n  }\n\n  formatWithSystemDefault(dt, opts) {\n    if (this.systemLoc === null) {\n      this.systemLoc = this.loc.redefaultToSystem();\n    }\n    const df = this.systemLoc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.format();\n  }\n\n  dtFormatter(dt, opts = {}) {\n    return this.loc.dtFormatter(dt, { ...this.opts, ...opts });\n  }\n\n  formatDateTime(dt, opts) {\n    return this.dtFormatter(dt, opts).format();\n  }\n\n  formatDateTimeParts(dt, opts) {\n    return this.dtFormatter(dt, opts).formatToParts();\n  }\n\n  formatInterval(interval, opts) {\n    const df = this.dtFormatter(interval.start, opts);\n    return df.dtf.formatRange(interval.start.toJSDate(), interval.end.toJSDate());\n  }\n\n  resolvedOptions(dt, opts) {\n    return this.dtFormatter(dt, opts).resolvedOptions();\n  }\n\n  num(n, p = 0) {\n    // we get some perf out of doing this here, annoyingly\n    if (this.opts.forceSimple) {\n      return padStart(n, p);\n    }\n\n    const opts = { ...this.opts };\n\n    if (p > 0) {\n      opts.padTo = p;\n    }\n\n    return this.loc.numberFormatter(opts).format(n);\n  }\n\n  formatDateTimeFromString(dt, fmt) {\n    const knownEnglish = this.loc.listingMode() === \"en\",\n      useDateTimeFormatter = this.loc.outputCalendar && this.loc.outputCalendar !== \"gregory\",\n      string = (opts, extract) => this.loc.extract(dt, opts, extract),\n      formatOffset = (opts) => {\n        if (dt.isOffsetFixed && dt.offset === 0 && opts.allowZ) {\n          return \"Z\";\n        }\n\n        return dt.isValid ? dt.zone.formatOffset(dt.ts, opts.format) : \"\";\n      },\n      meridiem = () =>\n        knownEnglish\n          ? English.meridiemForDateTime(dt)\n          : string({ hour: \"numeric\", hourCycle: \"h12\" }, \"dayperiod\"),\n      month = (length, standalone) =>\n        knownEnglish\n          ? English.monthForDateTime(dt, length)\n          : string(standalone ? { month: length } : { month: length, day: \"numeric\" }, \"month\"),\n      weekday = (length, standalone) =>\n        knownEnglish\n          ? English.weekdayForDateTime(dt, length)\n          : string(\n              standalone ? { weekday: length } : { weekday: length, month: \"long\", day: \"numeric\" },\n              \"weekday\"\n            ),\n      maybeMacro = (token) => {\n        const formatOpts = Formatter.macroTokenToFormatOpts(token);\n        if (formatOpts) {\n          return this.formatWithSystemDefault(dt, formatOpts);\n        } else {\n          return token;\n        }\n      },\n      era = (length) =>\n        knownEnglish ? English.eraForDateTime(dt, length) : string({ era: length }, \"era\"),\n      tokenToString = (token) => {\n        // Where possible: https://cldr.unicode.org/translation/date-time/date-time-symbols\n        switch (token) {\n          // ms\n          case \"S\":\n            return this.num(dt.millisecond);\n          case \"u\":\n          // falls through\n          case \"SSS\":\n            return this.num(dt.millisecond, 3);\n          // seconds\n          case \"s\":\n            return this.num(dt.second);\n          case \"ss\":\n            return this.num(dt.second, 2);\n          // fractional seconds\n          case \"uu\":\n            return this.num(Math.floor(dt.millisecond / 10), 2);\n          case \"uuu\":\n            return this.num(Math.floor(dt.millisecond / 100));\n          // minutes\n          case \"m\":\n            return this.num(dt.minute);\n          case \"mm\":\n            return this.num(dt.minute, 2);\n          // hours\n          case \"h\":\n            return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12);\n          case \"hh\":\n            return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12, 2);\n          case \"H\":\n            return this.num(dt.hour);\n          case \"HH\":\n            return this.num(dt.hour, 2);\n          // offset\n          case \"Z\":\n            // like +6\n            return formatOffset({ format: \"narrow\", allowZ: this.opts.allowZ });\n          case \"ZZ\":\n            // like +06:00\n            return formatOffset({ format: \"short\", allowZ: this.opts.allowZ });\n          case \"ZZZ\":\n            // like +0600\n            return formatOffset({ format: \"techie\", allowZ: this.opts.allowZ });\n          case \"ZZZZ\":\n            // like EST\n            return dt.zone.offsetName(dt.ts, { format: \"short\", locale: this.loc.locale });\n          case \"ZZZZZ\":\n            // like Eastern Standard Time\n            return dt.zone.offsetName(dt.ts, { format: \"long\", locale: this.loc.locale });\n          // zone\n          case \"z\":\n            // like America/New_York\n            return dt.zoneName;\n          // meridiems\n          case \"a\":\n            return meridiem();\n          // dates\n          case \"d\":\n            return useDateTimeFormatter ? string({ day: \"numeric\" }, \"day\") : this.num(dt.day);\n          case \"dd\":\n            return useDateTimeFormatter ? string({ day: \"2-digit\" }, \"day\") : this.num(dt.day, 2);\n          // weekdays - standalone\n          case \"c\":\n            // like 1\n            return this.num(dt.weekday);\n          case \"ccc\":\n            // like 'Tues'\n            return weekday(\"short\", true);\n          case \"cccc\":\n            // like 'Tuesday'\n            return weekday(\"long\", true);\n          case \"ccccc\":\n            // like 'T'\n            return weekday(\"narrow\", true);\n          // weekdays - format\n          case \"E\":\n            // like 1\n            return this.num(dt.weekday);\n          case \"EEE\":\n            // like 'Tues'\n            return weekday(\"short\", false);\n          case \"EEEE\":\n            // like 'Tuesday'\n            return weekday(\"long\", false);\n          case \"EEEEE\":\n            // like 'T'\n            return weekday(\"narrow\", false);\n          // months - standalone\n          case \"L\":\n            // like 1\n            return useDateTimeFormatter\n              ? string({ month: \"numeric\", day: \"numeric\" }, \"month\")\n              : this.num(dt.month);\n          case \"LL\":\n            // like 01, doesn't seem to work\n            return useDateTimeFormatter\n              ? string({ month: \"2-digit\", day: \"numeric\" }, \"month\")\n              : this.num(dt.month, 2);\n          case \"LLL\":\n            // like Jan\n            return month(\"short\", true);\n          case \"LLLL\":\n            // like January\n            return month(\"long\", true);\n          case \"LLLLL\":\n            // like J\n            return month(\"narrow\", true);\n          // months - format\n          case \"M\":\n            // like 1\n            return useDateTimeFormatter\n              ? string({ month: \"numeric\" }, \"month\")\n              : this.num(dt.month);\n          case \"MM\":\n            // like 01\n            return useDateTimeFormatter\n              ? string({ month: \"2-digit\" }, \"month\")\n              : this.num(dt.month, 2);\n          case \"MMM\":\n            // like Jan\n            return month(\"short\", false);\n          case \"MMMM\":\n            // like January\n            return month(\"long\", false);\n          case \"MMMMM\":\n            // like J\n            return month(\"narrow\", false);\n          // years\n          case \"y\":\n            // like 2014\n            return useDateTimeFormatter ? string({ year: \"numeric\" }, \"year\") : this.num(dt.year);\n          case \"yy\":\n            // like 14\n            return useDateTimeFormatter\n              ? string({ year: \"2-digit\" }, \"year\")\n              : this.num(dt.year.toString().slice(-2), 2);\n          case \"yyyy\":\n            // like 0012\n            return useDateTimeFormatter\n              ? string({ year: \"numeric\" }, \"year\")\n              : this.num(dt.year, 4);\n          case \"yyyyyy\":\n            // like 000012\n            return useDateTimeFormatter\n              ? string({ year: \"numeric\" }, \"year\")\n              : this.num(dt.year, 6);\n          // eras\n          case \"G\":\n            // like AD\n            return era(\"short\");\n          case \"GG\":\n            // like Anno Domini\n            return era(\"long\");\n          case \"GGGGG\":\n            return era(\"narrow\");\n          case \"kk\":\n            return this.num(dt.weekYear.toString().slice(-2), 2);\n          case \"kkkk\":\n            return this.num(dt.weekYear, 4);\n          case \"W\":\n            return this.num(dt.weekNumber);\n          case \"WW\":\n            return this.num(dt.weekNumber, 2);\n          case \"o\":\n            return this.num(dt.ordinal);\n          case \"ooo\":\n            return this.num(dt.ordinal, 3);\n          case \"q\":\n            // like 1\n            return this.num(dt.quarter);\n          case \"qq\":\n            // like 01\n            return this.num(dt.quarter, 2);\n          case \"X\":\n            return this.num(Math.floor(dt.ts / 1000));\n          case \"x\":\n            return this.num(dt.ts);\n          default:\n            return maybeMacro(token);\n        }\n      };\n\n    return stringifyTokens(Formatter.parseFormat(fmt), tokenToString);\n  }\n\n  formatDurationFromString(dur, fmt) {\n    const tokenToField = (token) => {\n        switch (token[0]) {\n          case \"S\":\n            return \"millisecond\";\n          case \"s\":\n            return \"second\";\n          case \"m\":\n            return \"minute\";\n          case \"h\":\n            return \"hour\";\n          case \"d\":\n            return \"day\";\n          case \"w\":\n            return \"week\";\n          case \"M\":\n            return \"month\";\n          case \"y\":\n            return \"year\";\n          default:\n            return null;\n        }\n      },\n      tokenToString = (lildur) => (token) => {\n        const mapped = tokenToField(token);\n        if (mapped) {\n          return this.num(lildur.get(mapped), token.length);\n        } else {\n          return token;\n        }\n      },\n      tokens = Formatter.parseFormat(fmt),\n      realTokens = tokens.reduce(\n        (found, { literal, val }) => (literal ? found : found.concat(val)),\n        []\n      ),\n      collapsed = dur.shiftTo(...realTokens.map(tokenToField).filter((t) => t));\n    return stringifyTokens(tokens, tokenToString(collapsed));\n  }\n}\n","export default class Invalid {\n  constructor(reason, explanation) {\n    this.reason = reason;\n    this.explanation = explanation;\n  }\n\n  toMessage() {\n    if (this.explanation) {\n      return `${this.reason}: ${this.explanation}`;\n    } else {\n      return this.reason;\n    }\n  }\n}\n","import {\n  untruncateYear,\n  signedOffset,\n  parseInteger,\n  parseMillis,\n  isUndefined,\n  parseFloating,\n} from \"./util.js\";\nimport * as English from \"./english.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\n\n/*\n * This file handles parsing for well-specified formats. Here's how it works:\n * Two things go into parsing: a regex to match with and an extractor to take apart the groups in the match.\n * An extractor is just a function that takes a regex match array and returns a { year: ..., month: ... } object\n * parse() does the work of executing the regex and applying the extractor. It takes multiple regex/extractor pairs to try in sequence.\n * Extractors can take a \"cursor\" representing the offset in the match to look at. This makes it easy to combine extractors.\n * combineExtractors() does the work of combining them, keeping track of the cursor through multiple extractions.\n * Some extractions are super dumb and simpleParse and fromStrings help DRY them.\n */\n\nconst ianaRegex = /[A-Za-z_+-]{1,256}(?::?\\/[A-Za-z0-9_+-]{1,256}(?:\\/[A-Za-z0-9_+-]{1,256})?)?/;\n\nfunction combineRegexes(...regexes) {\n  const full = regexes.reduce((f, r) => f + r.source, \"\");\n  return RegExp(`^${full}$`);\n}\n\nfunction combineExtractors(...extractors) {\n  return (m) =>\n    extractors\n      .reduce(\n        ([mergedVals, mergedZone, cursor], ex) => {\n          const [val, zone, next] = ex(m, cursor);\n          return [{ ...mergedVals, ...val }, zone || mergedZone, next];\n        },\n        [{}, null, 1]\n      )\n      .slice(0, 2);\n}\n\nfunction parse(s, ...patterns) {\n  if (s == null) {\n    return [null, null];\n  }\n\n  for (const [regex, extractor] of patterns) {\n    const m = regex.exec(s);\n    if (m) {\n      return extractor(m);\n    }\n  }\n  return [null, null];\n}\n\nfunction simpleParse(...keys) {\n  return (match, cursor) => {\n    const ret = {};\n    let i;\n\n    for (i = 0; i < keys.length; i++) {\n      ret[keys[i]] = parseInteger(match[cursor + i]);\n    }\n    return [ret, null, cursor + i];\n  };\n}\n\n// ISO and SQL parsing\nconst offsetRegex = /(?:(Z)|([+-]\\d\\d)(?::?(\\d\\d))?)/;\nconst isoExtendedZone = `(?:${offsetRegex.source}?(?:\\\\[(${ianaRegex.source})\\\\])?)?`;\nconst isoTimeBaseRegex = /(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:[.,](\\d{1,30}))?)?)?/;\nconst isoTimeRegex = RegExp(`${isoTimeBaseRegex.source}${isoExtendedZone}`);\nconst isoTimeExtensionRegex = RegExp(`(?:T${isoTimeRegex.source})?`);\nconst isoYmdRegex = /([+-]\\d{6}|\\d{4})(?:-?(\\d\\d)(?:-?(\\d\\d))?)?/;\nconst isoWeekRegex = /(\\d{4})-?W(\\d\\d)(?:-?(\\d))?/;\nconst isoOrdinalRegex = /(\\d{4})-?(\\d{3})/;\nconst extractISOWeekData = simpleParse(\"weekYear\", \"weekNumber\", \"weekDay\");\nconst extractISOOrdinalData = simpleParse(\"year\", \"ordinal\");\nconst sqlYmdRegex = /(\\d{4})-(\\d\\d)-(\\d\\d)/; // dumbed-down version of the ISO one\nconst sqlTimeRegex = RegExp(\n  `${isoTimeBaseRegex.source} ?(?:${offsetRegex.source}|(${ianaRegex.source}))?`\n);\nconst sqlTimeExtensionRegex = RegExp(`(?: ${sqlTimeRegex.source})?`);\n\nfunction int(match, pos, fallback) {\n  const m = match[pos];\n  return isUndefined(m) ? fallback : parseInteger(m);\n}\n\nfunction extractISOYmd(match, cursor) {\n  const item = {\n    year: int(match, cursor),\n    month: int(match, cursor + 1, 1),\n    day: int(match, cursor + 2, 1),\n  };\n\n  return [item, null, cursor + 3];\n}\n\nfunction extractISOTime(match, cursor) {\n  const item = {\n    hours: int(match, cursor, 0),\n    minutes: int(match, cursor + 1, 0),\n    seconds: int(match, cursor + 2, 0),\n    milliseconds: parseMillis(match[cursor + 3]),\n  };\n\n  return [item, null, cursor + 4];\n}\n\nfunction extractISOOffset(match, cursor) {\n  const local = !match[cursor] && !match[cursor + 1],\n    fullOffset = signedOffset(match[cursor + 1], match[cursor + 2]),\n    zone = local ? null : FixedOffsetZone.instance(fullOffset);\n  return [{}, zone, cursor + 3];\n}\n\nfunction extractIANAZone(match, cursor) {\n  const zone = match[cursor] ? IANAZone.create(match[cursor]) : null;\n  return [{}, zone, cursor + 1];\n}\n\n// ISO time parsing\n\nconst isoTimeOnly = RegExp(`^T?${isoTimeBaseRegex.source}$`);\n\n// ISO duration parsing\n\nconst isoDuration =\n  /^-?P(?:(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)Y)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)M)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)W)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)D)?(?:T(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)H)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)M)?(?:(-?\\d{1,20})(?:[.,](-?\\d{1,20}))?S)?)?)$/;\n\nfunction extractISODuration(match) {\n  const [s, yearStr, monthStr, weekStr, dayStr, hourStr, minuteStr, secondStr, millisecondsStr] =\n    match;\n\n  const hasNegativePrefix = s[0] === \"-\";\n  const negativeSeconds = secondStr && secondStr[0] === \"-\";\n\n  const maybeNegate = (num, force = false) =>\n    num !== undefined && (force || (num && hasNegativePrefix)) ? -num : num;\n\n  return [\n    {\n      years: maybeNegate(parseFloating(yearStr)),\n      months: maybeNegate(parseFloating(monthStr)),\n      weeks: maybeNegate(parseFloating(weekStr)),\n      days: maybeNegate(parseFloating(dayStr)),\n      hours: maybeNegate(parseFloating(hourStr)),\n      minutes: maybeNegate(parseFloating(minuteStr)),\n      seconds: maybeNegate(parseFloating(secondStr), secondStr === \"-0\"),\n      milliseconds: maybeNegate(parseMillis(millisecondsStr), negativeSeconds),\n    },\n  ];\n}\n\n// These are a little braindead. EDT *should* tell us that we're in, say, America/New_York\n// and not just that we're in -240 *right now*. But since I don't think these are used that often\n// I'm just going to ignore that\nconst obsOffsets = {\n  GMT: 0,\n  EDT: -4 * 60,\n  EST: -5 * 60,\n  CDT: -5 * 60,\n  CST: -6 * 60,\n  MDT: -6 * 60,\n  MST: -7 * 60,\n  PDT: -7 * 60,\n  PST: -8 * 60,\n};\n\nfunction fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n  const result = {\n    year: yearStr.length === 2 ? untruncateYear(parseInteger(yearStr)) : parseInteger(yearStr),\n    month: English.monthsShort.indexOf(monthStr) + 1,\n    day: parseInteger(dayStr),\n    hour: parseInteger(hourStr),\n    minute: parseInteger(minuteStr),\n  };\n\n  if (secondStr) result.second = parseInteger(secondStr);\n  if (weekdayStr) {\n    result.weekday =\n      weekdayStr.length > 3\n        ? English.weekdaysLong.indexOf(weekdayStr) + 1\n        : English.weekdaysShort.indexOf(weekdayStr) + 1;\n  }\n\n  return result;\n}\n\n// RFC 2822/5322\nconst rfc2822 =\n  /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\\d\\d)(\\d\\d)))$/;\n\nfunction extractRFC2822(match) {\n  const [\n      ,\n      weekdayStr,\n      dayStr,\n      monthStr,\n      yearStr,\n      hourStr,\n      minuteStr,\n      secondStr,\n      obsOffset,\n      milOffset,\n      offHourStr,\n      offMinuteStr,\n    ] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n\n  let offset;\n  if (obsOffset) {\n    offset = obsOffsets[obsOffset];\n  } else if (milOffset) {\n    offset = 0;\n  } else {\n    offset = signedOffset(offHourStr, offMinuteStr);\n  }\n\n  return [result, new FixedOffsetZone(offset)];\n}\n\nfunction preprocessRFC2822(s) {\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\n  return s\n    .replace(/\\([^()]*\\)|[\\n\\t]/g, \" \")\n    .replace(/(\\s\\s+)/g, \" \")\n    .trim();\n}\n\n// http date\n\nconst rfc1123 =\n    /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d\\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,\n  rfc850 =\n    /^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d\\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,\n  ascii =\n    /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \\d|\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) (\\d{4})$/;\n\nfunction extractRFC1123Or850(match) {\n  const [, weekdayStr, dayStr, monthStr, yearStr, hourStr, minuteStr, secondStr] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n  return [result, FixedOffsetZone.utcInstance];\n}\n\nfunction extractASCII(match) {\n  const [, weekdayStr, monthStr, dayStr, hourStr, minuteStr, secondStr, yearStr] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n  return [result, FixedOffsetZone.utcInstance];\n}\n\nconst isoYmdWithTimeExtensionRegex = combineRegexes(isoYmdRegex, isoTimeExtensionRegex);\nconst isoWeekWithTimeExtensionRegex = combineRegexes(isoWeekRegex, isoTimeExtensionRegex);\nconst isoOrdinalWithTimeExtensionRegex = combineRegexes(isoOrdinalRegex, isoTimeExtensionRegex);\nconst isoTimeCombinedRegex = combineRegexes(isoTimeRegex);\n\nconst extractISOYmdTimeAndOffset = combineExtractors(\n  extractISOYmd,\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\nconst extractISOWeekTimeAndOffset = combineExtractors(\n  extractISOWeekData,\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\nconst extractISOOrdinalDateAndTime = combineExtractors(\n  extractISOOrdinalData,\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\nconst extractISOTimeAndOffset = combineExtractors(\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\n\n/*\n * @private\n */\n\nexport function parseISODate(s) {\n  return parse(\n    s,\n    [isoYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset],\n    [isoWeekWithTimeExtensionRegex, extractISOWeekTimeAndOffset],\n    [isoOrdinalWithTimeExtensionRegex, extractISOOrdinalDateAndTime],\n    [isoTimeCombinedRegex, extractISOTimeAndOffset]\n  );\n}\n\nexport function parseRFC2822Date(s) {\n  return parse(preprocessRFC2822(s), [rfc2822, extractRFC2822]);\n}\n\nexport function parseHTTPDate(s) {\n  return parse(\n    s,\n    [rfc1123, extractRFC1123Or850],\n    [rfc850, extractRFC1123Or850],\n    [ascii, extractASCII]\n  );\n}\n\nexport function parseISODuration(s) {\n  return parse(s, [isoDuration, extractISODuration]);\n}\n\nconst extractISOTimeOnly = combineExtractors(extractISOTime);\n\nexport function parseISOTimeOnly(s) {\n  return parse(s, [isoTimeOnly, extractISOTimeOnly]);\n}\n\nconst sqlYmdWithTimeExtensionRegex = combineRegexes(sqlYmdRegex, sqlTimeExtensionRegex);\nconst sqlTimeCombinedRegex = combineRegexes(sqlTimeRegex);\n\nconst extractISOTimeOffsetAndIANAZone = combineExtractors(\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\n\nexport function parseSQL(s) {\n  return parse(\n    s,\n    [sqlYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset],\n    [sqlTimeCombinedRegex, extractISOTimeOffsetAndIANAZone]\n  );\n}\n","import { InvalidArgumentError, InvalidDurationError, InvalidUnitError } from \"./errors.js\";\nimport Formatter from \"./impl/formatter.js\";\nimport Invalid from \"./impl/invalid.js\";\nimport Locale from \"./impl/locale.js\";\nimport { parseISODuration, parseISOTimeOnly } from \"./impl/regexParser.js\";\nimport {\n  asNumber,\n  hasOwnProperty,\n  isNumber,\n  isUndefined,\n  normalizeObject,\n  roundTo,\n} from \"./impl/util.js\";\nimport Settings from \"./settings.js\";\nimport DateTime from \"./datetime.js\";\n\nconst INVALID = \"Invalid Duration\";\n\n// unit conversion constants\nexport const lowOrderMatrix = {\n    weeks: {\n      days: 7,\n      hours: 7 * 24,\n      minutes: 7 * 24 * 60,\n      seconds: 7 * 24 * 60 * 60,\n      milliseconds: 7 * 24 * 60 * 60 * 1000,\n    },\n    days: {\n      hours: 24,\n      minutes: 24 * 60,\n      seconds: 24 * 60 * 60,\n      milliseconds: 24 * 60 * 60 * 1000,\n    },\n    hours: { minutes: 60, seconds: 60 * 60, milliseconds: 60 * 60 * 1000 },\n    minutes: { seconds: 60, milliseconds: 60 * 1000 },\n    seconds: { milliseconds: 1000 },\n  },\n  casualMatrix = {\n    years: {\n      quarters: 4,\n      months: 12,\n      weeks: 52,\n      days: 365,\n      hours: 365 * 24,\n      minutes: 365 * 24 * 60,\n      seconds: 365 * 24 * 60 * 60,\n      milliseconds: 365 * 24 * 60 * 60 * 1000,\n    },\n    quarters: {\n      months: 3,\n      weeks: 13,\n      days: 91,\n      hours: 91 * 24,\n      minutes: 91 * 24 * 60,\n      seconds: 91 * 24 * 60 * 60,\n      milliseconds: 91 * 24 * 60 * 60 * 1000,\n    },\n    months: {\n      weeks: 4,\n      days: 30,\n      hours: 30 * 24,\n      minutes: 30 * 24 * 60,\n      seconds: 30 * 24 * 60 * 60,\n      milliseconds: 30 * 24 * 60 * 60 * 1000,\n    },\n\n    ...lowOrderMatrix,\n  },\n  daysInYearAccurate = 146097.0 / 400,\n  daysInMonthAccurate = 146097.0 / 4800,\n  accurateMatrix = {\n    years: {\n      quarters: 4,\n      months: 12,\n      weeks: daysInYearAccurate / 7,\n      days: daysInYearAccurate,\n      hours: daysInYearAccurate * 24,\n      minutes: daysInYearAccurate * 24 * 60,\n      seconds: daysInYearAccurate * 24 * 60 * 60,\n      milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000,\n    },\n    quarters: {\n      months: 3,\n      weeks: daysInYearAccurate / 28,\n      days: daysInYearAccurate / 4,\n      hours: (daysInYearAccurate * 24) / 4,\n      minutes: (daysInYearAccurate * 24 * 60) / 4,\n      seconds: (daysInYearAccurate * 24 * 60 * 60) / 4,\n      milliseconds: (daysInYearAccurate * 24 * 60 * 60 * 1000) / 4,\n    },\n    months: {\n      weeks: daysInMonthAccurate / 7,\n      days: daysInMonthAccurate,\n      hours: daysInMonthAccurate * 24,\n      minutes: daysInMonthAccurate * 24 * 60,\n      seconds: daysInMonthAccurate * 24 * 60 * 60,\n      milliseconds: daysInMonthAccurate * 24 * 60 * 60 * 1000,\n    },\n    ...lowOrderMatrix,\n  };\n\n// units ordered by size\nconst orderedUnits = [\n  \"years\",\n  \"quarters\",\n  \"months\",\n  \"weeks\",\n  \"days\",\n  \"hours\",\n  \"minutes\",\n  \"seconds\",\n  \"milliseconds\",\n];\n\nconst reverseUnits = orderedUnits.slice(0).reverse();\n\n// clone really means \"create another instance just like this one, but with these changes\"\nfunction clone(dur, alts, clear = false) {\n  // deep merge for vals\n  const conf = {\n    values: clear ? alts.values : { ...dur.values, ...(alts.values || {}) },\n    loc: dur.loc.clone(alts.loc),\n    conversionAccuracy: alts.conversionAccuracy || dur.conversionAccuracy,\n    matrix: alts.matrix || dur.matrix,\n  };\n  return new Duration(conf);\n}\n\nfunction durationToMillis(matrix, vals) {\n  let sum = vals.milliseconds ?? 0;\n  for (const unit of reverseUnits.slice(1)) {\n    if (vals[unit]) {\n      sum += vals[unit] * matrix[unit][\"milliseconds\"];\n    }\n  }\n  return sum;\n}\n\n// NB: mutates parameters\nfunction normalizeValues(matrix, vals) {\n  // the logic below assumes the overall value of the duration is positive\n  // if this is not the case, factor is used to make it so\n  const factor = durationToMillis(matrix, vals) < 0 ? -1 : 1;\n\n  orderedUnits.reduceRight((previous, current) => {\n    if (!isUndefined(vals[current])) {\n      if (previous) {\n        const previousVal = vals[previous] * factor;\n        const conv = matrix[current][previous];\n\n        // if (previousVal < 0):\n        // lower order unit is negative (e.g. { years: 2, days: -2 })\n        // normalize this by reducing the higher order unit by the appropriate amount\n        // and increasing the lower order unit\n        // this can never make the higher order unit negative, because this function only operates\n        // on positive durations, so the amount of time represented by the lower order unit cannot\n        // be larger than the higher order unit\n        // else:\n        // lower order unit is positive (e.g. { years: 2, days: 450 } or { years: -2, days: 450 })\n        // in this case we attempt to convert as much as possible from the lower order unit into\n        // the higher order one\n        //\n        // Math.floor takes care of both of these cases, rounding away from 0\n        // if previousVal < 0 it makes the absolute value larger\n        // if previousVal >= it makes the absolute value smaller\n        const rollUp = Math.floor(previousVal / conv);\n        vals[current] += rollUp * factor;\n        vals[previous] -= rollUp * conv * factor;\n      }\n      return current;\n    } else {\n      return previous;\n    }\n  }, null);\n\n  // try to convert any decimals into smaller units if possible\n  // for example for { years: 2.5, days: 0, seconds: 0 } we want to get { years: 2, days: 182, hours: 12 }\n  orderedUnits.reduce((previous, current) => {\n    if (!isUndefined(vals[current])) {\n      if (previous) {\n        const fraction = vals[previous] % 1;\n        vals[previous] -= fraction;\n        vals[current] += fraction * matrix[previous][current];\n      }\n      return current;\n    } else {\n      return previous;\n    }\n  }, null);\n}\n\n// Remove all properties with a value of 0 from an object\nfunction removeZeroes(vals) {\n  const newVals = {};\n  for (const [key, value] of Object.entries(vals)) {\n    if (value !== 0) {\n      newVals[key] = value;\n    }\n  }\n  return newVals;\n}\n\n/**\n * A Duration object represents a period of time, like \"2 months\" or \"1 day, 1 hour\". Conceptually, it's just a map of units to their quantities, accompanied by some additional configuration and methods for creating, parsing, interrogating, transforming, and formatting them. They can be used on their own or in conjunction with other Luxon types; for example, you can use {@link DateTime#plus} to add a Duration object to a DateTime, producing another DateTime.\n *\n * Here is a brief overview of commonly used methods and getters in Duration:\n *\n * * **Creation** To create a Duration, use {@link Duration.fromMillis}, {@link Duration.fromObject}, or {@link Duration.fromISO}.\n * * **Unit values** See the {@link Duration#years}, {@link Duration#months}, {@link Duration#weeks}, {@link Duration#days}, {@link Duration#hours}, {@link Duration#minutes}, {@link Duration#seconds}, {@link Duration#milliseconds} accessors.\n * * **Configuration** See  {@link Duration#locale} and {@link Duration#numberingSystem} accessors.\n * * **Transformation** To create new Durations out of old ones use {@link Duration#plus}, {@link Duration#minus}, {@link Duration#normalize}, {@link Duration#set}, {@link Duration#reconfigure}, {@link Duration#shiftTo}, and {@link Duration#negate}.\n * * **Output** To convert the Duration into other representations, see {@link Duration#as}, {@link Duration#toISO}, {@link Duration#toFormat}, and {@link Duration#toJSON}\n *\n * There's are more methods documented below. In addition, for more information on subtler topics like internationalization and validity, see the external documentation.\n */\nexport default class Duration {\n  /**\n   * @private\n   */\n  constructor(config) {\n    const accurate = config.conversionAccuracy === \"longterm\" || false;\n    let matrix = accurate ? accurateMatrix : casualMatrix;\n\n    if (config.matrix) {\n      matrix = config.matrix;\n    }\n\n    /**\n     * @access private\n     */\n    this.values = config.values;\n    /**\n     * @access private\n     */\n    this.loc = config.loc || Locale.create();\n    /**\n     * @access private\n     */\n    this.conversionAccuracy = accurate ? \"longterm\" : \"casual\";\n    /**\n     * @access private\n     */\n    this.invalid = config.invalid || null;\n    /**\n     * @access private\n     */\n    this.matrix = matrix;\n    /**\n     * @access private\n     */\n    this.isLuxonDuration = true;\n  }\n\n  /**\n   * Create Duration from a number of milliseconds.\n   * @param {number} count of milliseconds\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @return {Duration}\n   */\n  static fromMillis(count, opts) {\n    return Duration.fromObject({ milliseconds: count }, opts);\n  }\n\n  /**\n   * Create a Duration from a JavaScript object with keys like 'years' and 'hours'.\n   * If this object is empty then a zero milliseconds duration is returned.\n   * @param {Object} obj - the object to create the DateTime from\n   * @param {number} obj.years\n   * @param {number} obj.quarters\n   * @param {number} obj.months\n   * @param {number} obj.weeks\n   * @param {number} obj.days\n   * @param {number} obj.hours\n   * @param {number} obj.minutes\n   * @param {number} obj.seconds\n   * @param {number} obj.milliseconds\n   * @param {Object} [opts=[]] - options for creating this Duration\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use\n   * @param {string} [opts.matrix=Object] - the custom conversion system to use\n   * @return {Duration}\n   */\n  static fromObject(obj, opts = {}) {\n    if (obj == null || typeof obj !== \"object\") {\n      throw new InvalidArgumentError(\n        `Duration.fromObject: argument expected to be an object, got ${\n          obj === null ? \"null\" : typeof obj\n        }`\n      );\n    }\n\n    return new Duration({\n      values: normalizeObject(obj, Duration.normalizeUnit),\n      loc: Locale.fromObject(opts),\n      conversionAccuracy: opts.conversionAccuracy,\n      matrix: opts.matrix,\n    });\n  }\n\n  /**\n   * Create a Duration from DurationLike.\n   *\n   * @param {Object | number | Duration} durationLike\n   * One of:\n   * - object with keys like 'years' and 'hours'.\n   * - number representing milliseconds\n   * - Duration instance\n   * @return {Duration}\n   */\n  static fromDurationLike(durationLike) {\n    if (isNumber(durationLike)) {\n      return Duration.fromMillis(durationLike);\n    } else if (Duration.isDuration(durationLike)) {\n      return durationLike;\n    } else if (typeof durationLike === \"object\") {\n      return Duration.fromObject(durationLike);\n    } else {\n      throw new InvalidArgumentError(\n        `Unknown duration argument ${durationLike} of type ${typeof durationLike}`\n      );\n    }\n  }\n\n  /**\n   * Create a Duration from an ISO 8601 duration string.\n   * @param {string} text - text to parse\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use\n   * @param {string} [opts.matrix=Object] - the preset conversion system to use\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations\n   * @example Duration.fromISO('P3Y6M1W4DT12H30M5S').toObject() //=> { years: 3, months: 6, weeks: 1, days: 4, hours: 12, minutes: 30, seconds: 5 }\n   * @example Duration.fromISO('PT23H').toObject() //=> { hours: 23 }\n   * @example Duration.fromISO('P5Y3M').toObject() //=> { years: 5, months: 3 }\n   * @return {Duration}\n   */\n  static fromISO(text, opts) {\n    const [parsed] = parseISODuration(text);\n    if (parsed) {\n      return Duration.fromObject(parsed, opts);\n    } else {\n      return Duration.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n    }\n  }\n\n  /**\n   * Create a Duration from an ISO 8601 time string.\n   * @param {string} text - text to parse\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use\n   * @param {string} [opts.matrix=Object] - the conversion system to use\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Times\n   * @example Duration.fromISOTime('11:22:33.444').toObject() //=> { hours: 11, minutes: 22, seconds: 33, milliseconds: 444 }\n   * @example Duration.fromISOTime('11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('T11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('T1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @return {Duration}\n   */\n  static fromISOTime(text, opts) {\n    const [parsed] = parseISOTimeOnly(text);\n    if (parsed) {\n      return Duration.fromObject(parsed, opts);\n    } else {\n      return Duration.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n    }\n  }\n\n  /**\n   * Create an invalid Duration.\n   * @param {string} reason - simple string of why this datetime is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {Duration}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the Duration is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidDurationError(invalid);\n    } else {\n      return new Duration({ invalid });\n    }\n  }\n\n  /**\n   * @private\n   */\n  static normalizeUnit(unit) {\n    const normalized = {\n      year: \"years\",\n      years: \"years\",\n      quarter: \"quarters\",\n      quarters: \"quarters\",\n      month: \"months\",\n      months: \"months\",\n      week: \"weeks\",\n      weeks: \"weeks\",\n      day: \"days\",\n      days: \"days\",\n      hour: \"hours\",\n      hours: \"hours\",\n      minute: \"minutes\",\n      minutes: \"minutes\",\n      second: \"seconds\",\n      seconds: \"seconds\",\n      millisecond: \"milliseconds\",\n      milliseconds: \"milliseconds\",\n    }[unit ? unit.toLowerCase() : unit];\n\n    if (!normalized) throw new InvalidUnitError(unit);\n\n    return normalized;\n  }\n\n  /**\n   * Check if an object is a Duration. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isDuration(o) {\n    return (o && o.isLuxonDuration) || false;\n  }\n\n  /**\n   * Get  the locale of a Duration, such 'en-GB'\n   * @type {string}\n   */\n  get locale() {\n    return this.isValid ? this.loc.locale : null;\n  }\n\n  /**\n   * Get the numbering system of a Duration, such 'beng'. The numbering system is used when formatting the Duration\n   *\n   * @type {string}\n   */\n  get numberingSystem() {\n    return this.isValid ? this.loc.numberingSystem : null;\n  }\n\n  /**\n   * Returns a string representation of this Duration formatted according to the specified format string. You may use these tokens:\n   * * `S` for milliseconds\n   * * `s` for seconds\n   * * `m` for minutes\n   * * `h` for hours\n   * * `d` for days\n   * * `w` for weeks\n   * * `M` for months\n   * * `y` for years\n   * Notes:\n   * * Add padding by repeating the token, e.g. \"yy\" pads the years to two digits, \"hhhh\" pads the hours out to four digits\n   * * Tokens can be escaped by wrapping with single quotes.\n   * * The duration will be converted to the set of units in the format string using {@link Duration#shiftTo} and the Durations's conversion accuracy setting.\n   * @param {string} fmt - the format string\n   * @param {Object} opts - options\n   * @param {boolean} [opts.floor=true] - floor numerical values\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"y d s\") //=> \"1 6 2\"\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"yy dd sss\") //=> \"01 06 002\"\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"M S\") //=> \"12 518402000\"\n   * @return {string}\n   */\n  toFormat(fmt, opts = {}) {\n    // reverse-compat since 1.2; we always round down now, never up, and we do it by default\n    const fmtOpts = {\n      ...opts,\n      floor: opts.round !== false && opts.floor !== false,\n    };\n    return this.isValid\n      ? Formatter.create(this.loc, fmtOpts).formatDurationFromString(this, fmt)\n      : INVALID;\n  }\n\n  /**\n   * Returns a string representation of a Duration with all units included.\n   * To modify its behavior use the `listStyle` and any Intl.NumberFormat option, though `unitDisplay` is especially relevant.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\n   * @param opts - On option object to override the formatting. Accepts the same keys as the options parameter of the native `Int.NumberFormat` constructor, as well as `listStyle`.\n   * @example\n   * ```js\n   * var dur = Duration.fromObject({ days: 1, hours: 5, minutes: 6 })\n   * dur.toHuman() //=> '1 day, 5 hours, 6 minutes'\n   * dur.toHuman({ listStyle: \"long\" }) //=> '1 day, 5 hours, and 6 minutes'\n   * dur.toHuman({ unitDisplay: \"short\" }) //=> '1 day, 5 hr, 6 min'\n   * ```\n   */\n  toHuman(opts = {}) {\n    if (!this.isValid) return INVALID;\n\n    const l = orderedUnits\n      .map((unit) => {\n        const val = this.values[unit];\n        if (isUndefined(val)) {\n          return null;\n        }\n        return this.loc\n          .numberFormatter({ style: \"unit\", unitDisplay: \"long\", ...opts, unit: unit.slice(0, -1) })\n          .format(val);\n      })\n      .filter((n) => n);\n\n    return this.loc\n      .listFormatter({ type: \"conjunction\", style: opts.listStyle || \"narrow\", ...opts })\n      .format(l);\n  }\n\n  /**\n   * Returns a JavaScript object with this Duration's values.\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toObject() //=> { years: 1, days: 6, seconds: 2 }\n   * @return {Object}\n   */\n  toObject() {\n    if (!this.isValid) return {};\n    return { ...this.values };\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Duration.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations\n   * @example Duration.fromObject({ years: 3, seconds: 45 }).toISO() //=> 'P3YT45S'\n   * @example Duration.fromObject({ months: 4, seconds: 45 }).toISO() //=> 'P4MT45S'\n   * @example Duration.fromObject({ months: 5 }).toISO() //=> 'P5M'\n   * @example Duration.fromObject({ minutes: 5 }).toISO() //=> 'PT5M'\n   * @example Duration.fromObject({ milliseconds: 6 }).toISO() //=> 'PT0.006S'\n   * @return {string}\n   */\n  toISO() {\n    // we could use the formatter, but this is an easier way to get the minimum string\n    if (!this.isValid) return null;\n\n    let s = \"P\";\n    if (this.years !== 0) s += this.years + \"Y\";\n    if (this.months !== 0 || this.quarters !== 0) s += this.months + this.quarters * 3 + \"M\";\n    if (this.weeks !== 0) s += this.weeks + \"W\";\n    if (this.days !== 0) s += this.days + \"D\";\n    if (this.hours !== 0 || this.minutes !== 0 || this.seconds !== 0 || this.milliseconds !== 0)\n      s += \"T\";\n    if (this.hours !== 0) s += this.hours + \"H\";\n    if (this.minutes !== 0) s += this.minutes + \"M\";\n    if (this.seconds !== 0 || this.milliseconds !== 0)\n      // this will handle \"floating point madness\" by removing extra decimal places\n      // https://stackoverflow.com/questions/588004/is-floating-point-math-broken\n      s += roundTo(this.seconds + this.milliseconds / 1000, 3) + \"S\";\n    if (s === \"P\") s += \"T0S\";\n    return s;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Duration, formatted as a time of day.\n   * Note that this will return null if the duration is invalid, negative, or equal to or greater than 24 hours.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Times\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example Duration.fromObject({ hours: 11 }).toISOTime() //=> '11:00:00.000'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressMilliseconds: true }) //=> '11:00:00'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressSeconds: true }) //=> '11:00'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ includePrefix: true }) //=> 'T11:00:00.000'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ format: 'basic' }) //=> '110000.000'\n   * @return {string}\n   */\n  toISOTime(opts = {}) {\n    if (!this.isValid) return null;\n\n    const millis = this.toMillis();\n    if (millis < 0 || millis >= 86400000) return null;\n\n    opts = {\n      suppressMilliseconds: false,\n      suppressSeconds: false,\n      includePrefix: false,\n      format: \"extended\",\n      ...opts,\n      includeOffset: false,\n    };\n\n    const dateTime = DateTime.fromMillis(millis, { zone: \"UTC\" });\n    return dateTime.toISOTime(opts);\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this Duration appropriate for use in JSON.\n   * @return {string}\n   */\n  toJSON() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this Duration appropriate for use in debugging.\n   * @return {string}\n   */\n  toString() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns an milliseconds value of this Duration.\n   * @return {number}\n   */\n  toMillis() {\n    if (!this.isValid) return NaN;\n\n    return durationToMillis(this.matrix, this.values);\n  }\n\n  /**\n   * Returns an milliseconds value of this Duration. Alias of {@link toMillis}\n   * @return {number}\n   */\n  valueOf() {\n    return this.toMillis();\n  }\n\n  /**\n   * Make this Duration longer by the specified amount. Return a newly-constructed Duration.\n   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @return {Duration}\n   */\n  plus(duration) {\n    if (!this.isValid) return this;\n\n    const dur = Duration.fromDurationLike(duration),\n      result = {};\n\n    for (const k of orderedUnits) {\n      if (hasOwnProperty(dur.values, k) || hasOwnProperty(this.values, k)) {\n        result[k] = dur.get(k) + this.get(k);\n      }\n    }\n\n    return clone(this, { values: result }, true);\n  }\n\n  /**\n   * Make this Duration shorter by the specified amount. Return a newly-constructed Duration.\n   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @return {Duration}\n   */\n  minus(duration) {\n    if (!this.isValid) return this;\n\n    const dur = Duration.fromDurationLike(duration);\n    return this.plus(dur.negate());\n  }\n\n  /**\n   * Scale this Duration by the specified amount. Return a newly-constructed Duration.\n   * @param {function} fn - The function to apply to each unit. Arity is 1 or 2: the value of the unit and, optionally, the unit name. Must return a number.\n   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits(x => x * 2) //=> { hours: 2, minutes: 60 }\n   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits((x, u) => u === \"hours\" ? x * 2 : x) //=> { hours: 2, minutes: 30 }\n   * @return {Duration}\n   */\n  mapUnits(fn) {\n    if (!this.isValid) return this;\n    const result = {};\n    for (const k of Object.keys(this.values)) {\n      result[k] = asNumber(fn(this.values[k], k));\n    }\n    return clone(this, { values: result }, true);\n  }\n\n  /**\n   * Get the value of unit.\n   * @param {string} unit - a unit such as 'minute' or 'day'\n   * @example Duration.fromObject({years: 2, days: 3}).get('years') //=> 2\n   * @example Duration.fromObject({years: 2, days: 3}).get('months') //=> 0\n   * @example Duration.fromObject({years: 2, days: 3}).get('days') //=> 3\n   * @return {number}\n   */\n  get(unit) {\n    return this[Duration.normalizeUnit(unit)];\n  }\n\n  /**\n   * \"Set\" the values of specified units. Return a newly-constructed Duration.\n   * @param {Object} values - a mapping of units to numbers\n   * @example dur.set({ years: 2017 })\n   * @example dur.set({ hours: 8, minutes: 30 })\n   * @return {Duration}\n   */\n  set(values) {\n    if (!this.isValid) return this;\n\n    const mixed = { ...this.values, ...normalizeObject(values, Duration.normalizeUnit) };\n    return clone(this, { values: mixed });\n  }\n\n  /**\n   * \"Set\" the locale and/or numberingSystem.  Returns a newly-constructed Duration.\n   * @example dur.reconfigure({ locale: 'en-GB' })\n   * @return {Duration}\n   */\n  reconfigure({ locale, numberingSystem, conversionAccuracy, matrix } = {}) {\n    const loc = this.loc.clone({ locale, numberingSystem });\n    const opts = { loc, matrix, conversionAccuracy };\n    return clone(this, opts);\n  }\n\n  /**\n   * Return the length of the duration in the specified unit.\n   * @param {string} unit - a unit such as 'minutes' or 'days'\n   * @example Duration.fromObject({years: 1}).as('days') //=> 365\n   * @example Duration.fromObject({years: 1}).as('months') //=> 12\n   * @example Duration.fromObject({hours: 60}).as('days') //=> 2.5\n   * @return {number}\n   */\n  as(unit) {\n    return this.isValid ? this.shiftTo(unit).get(unit) : NaN;\n  }\n\n  /**\n   * Reduce this Duration to its canonical representation in its current units.\n   * Assuming the overall value of the Duration is positive, this means:\n   * - excessive values for lower-order units are converted to higher-order units (if possible, see first and second example)\n   * - negative lower-order units are converted to higher order units (there must be such a higher order unit, otherwise\n   *   the overall value would be negative, see second example)\n   * - fractional values for higher-order units are converted to lower-order units (if possible, see fourth example)\n   *\n   * If the overall value is negative, the result of this method is equivalent to `this.negate().normalize().negate()`.\n   * @example Duration.fromObject({ years: 2, days: 5000 }).normalize().toObject() //=> { years: 15, days: 255 }\n   * @example Duration.fromObject({ days: 5000 }).normalize().toObject() //=> { days: 5000 }\n   * @example Duration.fromObject({ hours: 12, minutes: -45 }).normalize().toObject() //=> { hours: 11, minutes: 15 }\n   * @example Duration.fromObject({ years: 2.5, days: 0, hours: 0 }).normalize().toObject() //=> { years: 2, days: 182, hours: 12 }\n   * @return {Duration}\n   */\n  normalize() {\n    if (!this.isValid) return this;\n    const vals = this.toObject();\n    normalizeValues(this.matrix, vals);\n    return clone(this, { values: vals }, true);\n  }\n\n  /**\n   * Rescale units to its largest representation\n   * @example Duration.fromObject({ milliseconds: 90000 }).rescale().toObject() //=> { minutes: 1, seconds: 30 }\n   * @return {Duration}\n   */\n  rescale() {\n    if (!this.isValid) return this;\n    const vals = removeZeroes(this.normalize().shiftToAll().toObject());\n    return clone(this, { values: vals }, true);\n  }\n\n  /**\n   * Convert this Duration into its representation in a different set of units.\n   * @example Duration.fromObject({ hours: 1, seconds: 30 }).shiftTo('minutes', 'milliseconds').toObject() //=> { minutes: 60, milliseconds: 30000 }\n   * @return {Duration}\n   */\n  shiftTo(...units) {\n    if (!this.isValid) return this;\n\n    if (units.length === 0) {\n      return this;\n    }\n\n    units = units.map((u) => Duration.normalizeUnit(u));\n\n    const built = {},\n      accumulated = {},\n      vals = this.toObject();\n    let lastUnit;\n\n    for (const k of orderedUnits) {\n      if (units.indexOf(k) >= 0) {\n        lastUnit = k;\n\n        let own = 0;\n\n        // anything we haven't boiled down yet should get boiled to this unit\n        for (const ak in accumulated) {\n          own += this.matrix[ak][k] * accumulated[ak];\n          accumulated[ak] = 0;\n        }\n\n        // plus anything that's already in this unit\n        if (isNumber(vals[k])) {\n          own += vals[k];\n        }\n\n        // only keep the integer part for now in the hopes of putting any decimal part\n        // into a smaller unit later\n        const i = Math.trunc(own);\n        built[k] = i;\n        accumulated[k] = (own * 1000 - i * 1000) / 1000;\n\n        // otherwise, keep it in the wings to boil it later\n      } else if (isNumber(vals[k])) {\n        accumulated[k] = vals[k];\n      }\n    }\n\n    // anything leftover becomes the decimal for the last unit\n    // lastUnit must be defined since units is not empty\n    for (const key in accumulated) {\n      if (accumulated[key] !== 0) {\n        built[lastUnit] +=\n          key === lastUnit ? accumulated[key] : accumulated[key] / this.matrix[lastUnit][key];\n      }\n    }\n\n    normalizeValues(this.matrix, built);\n    return clone(this, { values: built }, true);\n  }\n\n  /**\n   * Shift this Duration to all available units.\n   * Same as shiftTo(\"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\", \"milliseconds\")\n   * @return {Duration}\n   */\n  shiftToAll() {\n    if (!this.isValid) return this;\n    return this.shiftTo(\n      \"years\",\n      \"months\",\n      \"weeks\",\n      \"days\",\n      \"hours\",\n      \"minutes\",\n      \"seconds\",\n      \"milliseconds\"\n    );\n  }\n\n  /**\n   * Return the negative of this Duration.\n   * @example Duration.fromObject({ hours: 1, seconds: 30 }).negate().toObject() //=> { hours: -1, seconds: -30 }\n   * @return {Duration}\n   */\n  negate() {\n    if (!this.isValid) return this;\n    const negated = {};\n    for (const k of Object.keys(this.values)) {\n      negated[k] = this.values[k] === 0 ? 0 : -this.values[k];\n    }\n    return clone(this, { values: negated }, true);\n  }\n\n  /**\n   * Get the years.\n   * @type {number}\n   */\n  get years() {\n    return this.isValid ? this.values.years || 0 : NaN;\n  }\n\n  /**\n   * Get the quarters.\n   * @type {number}\n   */\n  get quarters() {\n    return this.isValid ? this.values.quarters || 0 : NaN;\n  }\n\n  /**\n   * Get the months.\n   * @type {number}\n   */\n  get months() {\n    return this.isValid ? this.values.months || 0 : NaN;\n  }\n\n  /**\n   * Get the weeks\n   * @type {number}\n   */\n  get weeks() {\n    return this.isValid ? this.values.weeks || 0 : NaN;\n  }\n\n  /**\n   * Get the days.\n   * @type {number}\n   */\n  get days() {\n    return this.isValid ? this.values.days || 0 : NaN;\n  }\n\n  /**\n   * Get the hours.\n   * @type {number}\n   */\n  get hours() {\n    return this.isValid ? this.values.hours || 0 : NaN;\n  }\n\n  /**\n   * Get the minutes.\n   * @type {number}\n   */\n  get minutes() {\n    return this.isValid ? this.values.minutes || 0 : NaN;\n  }\n\n  /**\n   * Get the seconds.\n   * @return {number}\n   */\n  get seconds() {\n    return this.isValid ? this.values.seconds || 0 : NaN;\n  }\n\n  /**\n   * Get the milliseconds.\n   * @return {number}\n   */\n  get milliseconds() {\n    return this.isValid ? this.values.milliseconds || 0 : NaN;\n  }\n\n  /**\n   * Returns whether the Duration is invalid. Invalid durations are returned by diff operations\n   * on invalid DateTimes or Intervals.\n   * @return {boolean}\n   */\n  get isValid() {\n    return this.invalid === null;\n  }\n\n  /**\n   * Returns an error code if this Duration became invalid, or null if the Duration is valid\n   * @return {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this Duration became invalid, or null if the Duration is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Equality check\n   * Two Durations are equal iff they have the same units and the same values for each unit.\n   * @param {Duration} other\n   * @return {boolean}\n   */\n  equals(other) {\n    if (!this.isValid || !other.isValid) {\n      return false;\n    }\n\n    if (!this.loc.equals(other.loc)) {\n      return false;\n    }\n\n    function eq(v1, v2) {\n      // Consider 0 and undefined as equal\n      if (v1 === undefined || v1 === 0) return v2 === undefined || v2 === 0;\n      return v1 === v2;\n    }\n\n    for (const u of orderedUnits) {\n      if (!eq(this.values[u], other.values[u])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import DateTime, { friendlyDateTime } from \"./datetime.js\";\nimport Duration from \"./duration.js\";\nimport Settings from \"./settings.js\";\nimport { InvalidArgumentError, InvalidIntervalError } from \"./errors.js\";\nimport Invalid from \"./impl/invalid.js\";\nimport Formatter from \"./impl/formatter.js\";\nimport * as Formats from \"./impl/formats.js\";\n\nconst INVALID = \"Invalid Interval\";\n\n// checks if the start is equal to or before the end\nfunction validateStartEnd(start, end) {\n  if (!start || !start.isValid) {\n    return Interval.invalid(\"missing or invalid start\");\n  } else if (!end || !end.isValid) {\n    return Interval.invalid(\"missing or invalid end\");\n  } else if (end < start) {\n    return Interval.invalid(\n      \"end before start\",\n      `The end of an interval must be after its start, but you had start=${start.toISO()} and end=${end.toISO()}`\n    );\n  } else {\n    return null;\n  }\n}\n\n/**\n * An Interval object represents a half-open interval of time, where each endpoint is a {@link DateTime}. Conceptually, it's a container for those two endpoints, accompanied by methods for creating, parsing, interrogating, comparing, transforming, and formatting them.\n *\n * Here is a brief overview of the most commonly used methods and getters in Interval:\n *\n * * **Creation** To create an Interval, use {@link Interval.fromDateTimes}, {@link Interval.after}, {@link Interval.before}, or {@link Interval.fromISO}.\n * * **Accessors** Use {@link Interval#start} and {@link Interval#end} to get the start and end.\n * * **Interrogation** To analyze the Interval, use {@link Interval#count}, {@link Interval#length}, {@link Interval#hasSame}, {@link Interval#contains}, {@link Interval#isAfter}, or {@link Interval#isBefore}.\n * * **Transformation** To create other Intervals out of this one, use {@link Interval#set}, {@link Interval#splitAt}, {@link Interval#splitBy}, {@link Interval#divideEqually}, {@link Interval.merge}, {@link Interval.xor}, {@link Interval#union}, {@link Interval#intersection}, or {@link Interval#difference}.\n * * **Comparison** To compare this Interval to another one, use {@link Interval#equals}, {@link Interval#overlaps}, {@link Interval#abutsStart}, {@link Interval#abutsEnd}, {@link Interval#engulfs}\n * * **Output** To convert the Interval into other representations, see {@link Interval#toString}, {@link Interval#toLocaleString}, {@link Interval#toISO}, {@link Interval#toISODate}, {@link Interval#toISOTime}, {@link Interval#toFormat}, and {@link Interval#toDuration}.\n */\nexport default class Interval {\n  /**\n   * @private\n   */\n  constructor(config) {\n    /**\n     * @access private\n     */\n    this.s = config.start;\n    /**\n     * @access private\n     */\n    this.e = config.end;\n    /**\n     * @access private\n     */\n    this.invalid = config.invalid || null;\n    /**\n     * @access private\n     */\n    this.isLuxonInterval = true;\n  }\n\n  /**\n   * Create an invalid Interval.\n   * @param {string} reason - simple string of why this Interval is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {Interval}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the Interval is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidIntervalError(invalid);\n    } else {\n      return new Interval({ invalid });\n    }\n  }\n\n  /**\n   * Create an Interval from a start DateTime and an end DateTime. Inclusive of the start but not the end.\n   * @param {DateTime|Date|Object} start\n   * @param {DateTime|Date|Object} end\n   * @return {Interval}\n   */\n  static fromDateTimes(start, end) {\n    const builtStart = friendlyDateTime(start),\n      builtEnd = friendlyDateTime(end);\n\n    const validateError = validateStartEnd(builtStart, builtEnd);\n\n    if (validateError == null) {\n      return new Interval({\n        start: builtStart,\n        end: builtEnd,\n      });\n    } else {\n      return validateError;\n    }\n  }\n\n  /**\n   * Create an Interval from a start DateTime and a Duration to extend to.\n   * @param {DateTime|Date|Object} start\n   * @param {Duration|Object|number} duration - the length of the Interval.\n   * @return {Interval}\n   */\n  static after(start, duration) {\n    const dur = Duration.fromDurationLike(duration),\n      dt = friendlyDateTime(start);\n    return Interval.fromDateTimes(dt, dt.plus(dur));\n  }\n\n  /**\n   * Create an Interval from an end DateTime and a Duration to extend backwards to.\n   * @param {DateTime|Date|Object} end\n   * @param {Duration|Object|number} duration - the length of the Interval.\n   * @return {Interval}\n   */\n  static before(end, duration) {\n    const dur = Duration.fromDurationLike(duration),\n      dt = friendlyDateTime(end);\n    return Interval.fromDateTimes(dt.minus(dur), dt);\n  }\n\n  /**\n   * Create an Interval from an ISO 8601 string.\n   * Accepts `<start>/<end>`, `<start>/<duration>`, and `<duration>/<end>` formats.\n   * @param {string} text - the ISO string to parse\n   * @param {Object} [opts] - options to pass {@link DateTime#fromISO} and optionally {@link Duration#fromISO}\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @return {Interval}\n   */\n  static fromISO(text, opts) {\n    const [s, e] = (text || \"\").split(\"/\", 2);\n    if (s && e) {\n      let start, startIsValid;\n      try {\n        start = DateTime.fromISO(s, opts);\n        startIsValid = start.isValid;\n      } catch (e) {\n        startIsValid = false;\n      }\n\n      let end, endIsValid;\n      try {\n        end = DateTime.fromISO(e, opts);\n        endIsValid = end.isValid;\n      } catch (e) {\n        endIsValid = false;\n      }\n\n      if (startIsValid && endIsValid) {\n        return Interval.fromDateTimes(start, end);\n      }\n\n      if (startIsValid) {\n        const dur = Duration.fromISO(e, opts);\n        if (dur.isValid) {\n          return Interval.after(start, dur);\n        }\n      } else if (endIsValid) {\n        const dur = Duration.fromISO(s, opts);\n        if (dur.isValid) {\n          return Interval.before(end, dur);\n        }\n      }\n    }\n    return Interval.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n  }\n\n  /**\n   * Check if an object is an Interval. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isInterval(o) {\n    return (o && o.isLuxonInterval) || false;\n  }\n\n  /**\n   * Returns the start of the Interval\n   * @type {DateTime}\n   */\n  get start() {\n    return this.isValid ? this.s : null;\n  }\n\n  /**\n   * Returns the end of the Interval\n   * @type {DateTime}\n   */\n  get end() {\n    return this.isValid ? this.e : null;\n  }\n\n  /**\n   * Returns whether this Interval's end is at least its start, meaning that the Interval isn't 'backwards'.\n   * @type {boolean}\n   */\n  get isValid() {\n    return this.invalidReason === null;\n  }\n\n  /**\n   * Returns an error code if this Interval is invalid, or null if the Interval is valid\n   * @type {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this Interval became invalid, or null if the Interval is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Returns the length of the Interval in the specified unit.\n   * @param {string} unit - the unit (such as 'hours' or 'days') to return the length in.\n   * @return {number}\n   */\n  length(unit = \"milliseconds\") {\n    return this.isValid ? this.toDuration(...[unit]).get(unit) : NaN;\n  }\n\n  /**\n   * Returns the count of minutes, hours, days, months, or years included in the Interval, even in part.\n   * Unlike {@link Interval#length} this counts sections of the calendar, not periods of time, e.g. specifying 'day'\n   * asks 'what dates are included in this interval?', not 'how many days long is this interval?'\n   * @param {string} [unit='milliseconds'] - the unit of time to count.\n   * @return {number}\n   */\n  count(unit = \"milliseconds\") {\n    if (!this.isValid) return NaN;\n    const start = this.start.startOf(unit),\n      end = this.end.startOf(unit);\n    return Math.floor(end.diff(start, unit).get(unit)) + (end.valueOf() !== this.end.valueOf());\n  }\n\n  /**\n   * Returns whether this Interval's start and end are both in the same unit of time\n   * @param {string} unit - the unit of time to check sameness on\n   * @return {boolean}\n   */\n  hasSame(unit) {\n    return this.isValid ? this.isEmpty() || this.e.minus(1).hasSame(this.s, unit) : false;\n  }\n\n  /**\n   * Return whether this Interval has the same start and end DateTimes.\n   * @return {boolean}\n   */\n  isEmpty() {\n    return this.s.valueOf() === this.e.valueOf();\n  }\n\n  /**\n   * Return whether this Interval's start is after the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  isAfter(dateTime) {\n    if (!this.isValid) return false;\n    return this.s > dateTime;\n  }\n\n  /**\n   * Return whether this Interval's end is before the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  isBefore(dateTime) {\n    if (!this.isValid) return false;\n    return this.e <= dateTime;\n  }\n\n  /**\n   * Return whether this Interval contains the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  contains(dateTime) {\n    if (!this.isValid) return false;\n    return this.s <= dateTime && this.e > dateTime;\n  }\n\n  /**\n   * \"Sets\" the start and/or end dates. Returns a newly-constructed Interval.\n   * @param {Object} values - the values to set\n   * @param {DateTime} values.start - the starting DateTime\n   * @param {DateTime} values.end - the ending DateTime\n   * @return {Interval}\n   */\n  set({ start, end } = {}) {\n    if (!this.isValid) return this;\n    return Interval.fromDateTimes(start || this.s, end || this.e);\n  }\n\n  /**\n   * Split this Interval at each of the specified DateTimes\n   * @param {...DateTime} dateTimes - the unit of time to count.\n   * @return {Array}\n   */\n  splitAt(...dateTimes) {\n    if (!this.isValid) return [];\n    const sorted = dateTimes\n        .map(friendlyDateTime)\n        .filter((d) => this.contains(d))\n        .sort(),\n      results = [];\n    let { s } = this,\n      i = 0;\n\n    while (s < this.e) {\n      const added = sorted[i] || this.e,\n        next = +added > +this.e ? this.e : added;\n      results.push(Interval.fromDateTimes(s, next));\n      s = next;\n      i += 1;\n    }\n\n    return results;\n  }\n\n  /**\n   * Split this Interval into smaller Intervals, each of the specified length.\n   * Left over time is grouped into a smaller interval\n   * @param {Duration|Object|number} duration - The length of each resulting interval.\n   * @return {Array}\n   */\n  splitBy(duration) {\n    const dur = Duration.fromDurationLike(duration);\n\n    if (!this.isValid || !dur.isValid || dur.as(\"milliseconds\") === 0) {\n      return [];\n    }\n\n    let { s } = this,\n      idx = 1,\n      next;\n\n    const results = [];\n    while (s < this.e) {\n      const added = this.start.plus(dur.mapUnits((x) => x * idx));\n      next = +added > +this.e ? this.e : added;\n      results.push(Interval.fromDateTimes(s, next));\n      s = next;\n      idx += 1;\n    }\n\n    return results;\n  }\n\n  /**\n   * Split this Interval into the specified number of smaller intervals.\n   * @param {number} numberOfParts - The number of Intervals to divide the Interval into.\n   * @return {Array}\n   */\n  divideEqually(numberOfParts) {\n    if (!this.isValid) return [];\n    return this.splitBy(this.length() / numberOfParts).slice(0, numberOfParts);\n  }\n\n  /**\n   * Return whether this Interval overlaps with the specified Interval\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  overlaps(other) {\n    return this.e > other.s && this.s < other.e;\n  }\n\n  /**\n   * Return whether this Interval's end is adjacent to the specified Interval's start.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  abutsStart(other) {\n    if (!this.isValid) return false;\n    return +this.e === +other.s;\n  }\n\n  /**\n   * Return whether this Interval's start is adjacent to the specified Interval's end.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  abutsEnd(other) {\n    if (!this.isValid) return false;\n    return +other.e === +this.s;\n  }\n\n  /**\n   * Return whether this Interval engulfs the start and end of the specified Interval.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  engulfs(other) {\n    if (!this.isValid) return false;\n    return this.s <= other.s && this.e >= other.e;\n  }\n\n  /**\n   * Return whether this Interval has the same start and end as the specified Interval.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  equals(other) {\n    if (!this.isValid || !other.isValid) {\n      return false;\n    }\n\n    return this.s.equals(other.s) && this.e.equals(other.e);\n  }\n\n  /**\n   * Return an Interval representing the intersection of this Interval and the specified Interval.\n   * Specifically, the resulting Interval has the maximum start time and the minimum end time of the two Intervals.\n   * Returns null if the intersection is empty, meaning, the intervals don't intersect.\n   * @param {Interval} other\n   * @return {Interval}\n   */\n  intersection(other) {\n    if (!this.isValid) return this;\n    const s = this.s > other.s ? this.s : other.s,\n      e = this.e < other.e ? this.e : other.e;\n\n    if (s >= e) {\n      return null;\n    } else {\n      return Interval.fromDateTimes(s, e);\n    }\n  }\n\n  /**\n   * Return an Interval representing the union of this Interval and the specified Interval.\n   * Specifically, the resulting Interval has the minimum start time and the maximum end time of the two Intervals.\n   * @param {Interval} other\n   * @return {Interval}\n   */\n  union(other) {\n    if (!this.isValid) return this;\n    const s = this.s < other.s ? this.s : other.s,\n      e = this.e > other.e ? this.e : other.e;\n    return Interval.fromDateTimes(s, e);\n  }\n\n  /**\n   * Merge an array of Intervals into a equivalent minimal set of Intervals.\n   * Combines overlapping and adjacent Intervals.\n   * @param {Array} intervals\n   * @return {Array}\n   */\n  static merge(intervals) {\n    const [found, final] = intervals\n      .sort((a, b) => a.s - b.s)\n      .reduce(\n        ([sofar, current], item) => {\n          if (!current) {\n            return [sofar, item];\n          } else if (current.overlaps(item) || current.abutsStart(item)) {\n            return [sofar, current.union(item)];\n          } else {\n            return [sofar.concat([current]), item];\n          }\n        },\n        [[], null]\n      );\n    if (final) {\n      found.push(final);\n    }\n    return found;\n  }\n\n  /**\n   * Return an array of Intervals representing the spans of time that only appear in one of the specified Intervals.\n   * @param {Array} intervals\n   * @return {Array}\n   */\n  static xor(intervals) {\n    let start = null,\n      currentCount = 0;\n    const results = [],\n      ends = intervals.map((i) => [\n        { time: i.s, type: \"s\" },\n        { time: i.e, type: \"e\" },\n      ]),\n      flattened = Array.prototype.concat(...ends),\n      arr = flattened.sort((a, b) => a.time - b.time);\n\n    for (const i of arr) {\n      currentCount += i.type === \"s\" ? 1 : -1;\n\n      if (currentCount === 1) {\n        start = i.time;\n      } else {\n        if (start && +start !== +i.time) {\n          results.push(Interval.fromDateTimes(start, i.time));\n        }\n\n        start = null;\n      }\n    }\n\n    return Interval.merge(results);\n  }\n\n  /**\n   * Return an Interval representing the span of time in this Interval that doesn't overlap with any of the specified Intervals.\n   * @param {...Interval} intervals\n   * @return {Array}\n   */\n  difference(...intervals) {\n    return Interval.xor([this].concat(intervals))\n      .map((i) => this.intersection(i))\n      .filter((i) => i && !i.isEmpty());\n  }\n\n  /**\n   * Returns a string representation of this Interval appropriate for debugging.\n   * @return {string}\n   */\n  toString() {\n    if (!this.isValid) return INVALID;\n    return `[${this.s.toISO()} – ${this.e.toISO()})`;\n  }\n\n  /**\n   * Returns a localized string representing this Interval. Accepts the same options as the\n   * Intl.DateTimeFormat constructor and any presets defined by Luxon, such as\n   * {@link DateTime.DATE_FULL} or {@link DateTime.TIME_SIMPLE}. The exact behavior of this method\n   * is browser-specific, but in general it will return an appropriate representation of the\n   * Interval in the assigned locale. Defaults to the system's locale if no locale has been\n   * specified.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {Object} [formatOpts=DateTime.DATE_SHORT] - Either a DateTime preset or\n   * Intl.DateTimeFormat constructor options.\n   * @param {Object} opts - Options to override the configuration of the start DateTime.\n   * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(); //=> 11/7/2022 – 11/8/2022\n   * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(DateTime.DATE_FULL); //=> November 7 – 8, 2022\n   * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(DateTime.DATE_FULL, { locale: 'fr-FR' }); //=> 7–8 novembre 2022\n   * @example Interval.fromISO('2022-11-07T17:00Z/2022-11-07T19:00Z').toLocaleString(DateTime.TIME_SIMPLE); //=> 6:00 – 8:00 PM\n   * @example Interval.fromISO('2022-11-07T17:00Z/2022-11-07T19:00Z').toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> Mon, Nov 07, 6:00 – 8:00 p\n   * @return {string}\n   */\n  toLocaleString(formatOpts = Formats.DATE_SHORT, opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.s.loc.clone(opts), formatOpts).formatInterval(this)\n      : INVALID;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Interval.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @param {Object} opts - The same options as {@link DateTime#toISO}\n   * @return {string}\n   */\n  toISO(opts) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISO(opts)}/${this.e.toISO(opts)}`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of date of this Interval.\n   * The time components are ignored.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @return {string}\n   */\n  toISODate() {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISODate()}/${this.e.toISODate()}`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of time of this Interval.\n   * The date components are ignored.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @param {Object} opts - The same options as {@link DateTime#toISO}\n   * @return {string}\n   */\n  toISOTime(opts) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISOTime(opts)}/${this.e.toISOTime(opts)}`;\n  }\n\n  /**\n   * Returns a string representation of this Interval formatted according to the specified format\n   * string. **You may not want this.** See {@link Interval#toLocaleString} for a more flexible\n   * formatting tool.\n   * @param {string} dateFormat - The format string. This string formats the start and end time.\n   * See {@link DateTime#toFormat} for details.\n   * @param {Object} opts - Options.\n   * @param {string} [opts.separator =  ' – '] - A separator to place between the start and end\n   * representations.\n   * @return {string}\n   */\n  toFormat(dateFormat, { separator = \" – \" } = {}) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toFormat(dateFormat)}${separator}${this.e.toFormat(dateFormat)}`;\n  }\n\n  /**\n   * Return a Duration representing the time spanned by this interval.\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or units (such as 'hours' or 'days') to include in the duration.\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration().toObject() //=> { milliseconds: 88489257 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration('days').toObject() //=> { days: 1.0241812152777778 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes']).toObject() //=> { hours: 24, minutes: 34.82095 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes', 'seconds']).toObject() //=> { hours: 24, minutes: 34, seconds: 49.257 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration('seconds').toObject() //=> { seconds: 88489.257 }\n   * @return {Duration}\n   */\n  toDuration(unit, opts) {\n    if (!this.isValid) {\n      return Duration.invalid(this.invalidReason);\n    }\n    return this.e.diff(this.s, unit, opts);\n  }\n\n  /**\n   * Run mapFn on the interval start and end, returning a new Interval from the resulting DateTimes\n   * @param {function} mapFn\n   * @return {Interval}\n   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.toUTC())\n   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.plus({ hours: 2 }))\n   */\n  mapEndpoints(mapFn) {\n    return Interval.fromDateTimes(mapFn(this.s), mapFn(this.e));\n  }\n}\n","import DateTime from \"./datetime.js\";\nimport Settings from \"./settings.js\";\nimport Locale from \"./impl/locale.js\";\nimport IANAZone from \"./zones/IANAZone.js\";\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\n\nimport { hasRelative } from \"./impl/util.js\";\n\n/**\n * The Info class contains static methods for retrieving general time and date related data. For example, it has methods for finding out if a time zone has a DST, for listing the months in any supported locale, and for discovering which of Luxon features are available in the current environment.\n */\nexport default class Info {\n  /**\n   * Return whether the specified zone contains a DST.\n   * @param {string|Zone} [zone='local'] - Zone to check. Defaults to the environment's local zone.\n   * @return {boolean}\n   */\n  static hasDST(zone = Settings.defaultZone) {\n    const proto = DateTime.now().setZone(zone).set({ month: 12 });\n\n    return !zone.isUniversal && proto.offset !== proto.set({ month: 6 }).offset;\n  }\n\n  /**\n   * Return whether the specified zone is a valid IANA specifier.\n   * @param {string} zone - Zone to check\n   * @return {boolean}\n   */\n  static isValidIANAZone(zone) {\n    return IANAZone.isValidZone(zone);\n  }\n\n  /**\n   * Converts the input into a {@link Zone} instance.\n   *\n   * * If `input` is already a Zone instance, it is returned unchanged.\n   * * If `input` is a string containing a valid time zone name, a Zone instance\n   *   with that name is returned.\n   * * If `input` is a string that doesn't refer to a known time zone, a Zone\n   *   instance with {@link Zone#isValid} == false is returned.\n   * * If `input is a number, a Zone instance with the specified fixed offset\n   *   in minutes is returned.\n   * * If `input` is `null` or `undefined`, the default zone is returned.\n   * @param {string|Zone|number} [input] - the value to be converted\n   * @return {Zone}\n   */\n  static normalizeZone(input) {\n    return normalizeZone(input, Settings.defaultZone);\n  }\n\n  /**\n   * Return an array of standalone month names.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {string} [length='long'] - the length of the month representation, such as \"numeric\", \"2-digit\", \"narrow\", \"short\", \"long\"\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @param {string} [opts.outputCalendar='gregory'] - the calendar\n   * @example Info.months()[0] //=> 'January'\n   * @example Info.months('short')[0] //=> 'Jan'\n   * @example Info.months('numeric')[0] //=> '1'\n   * @example Info.months('short', { locale: 'fr-CA' } )[0] //=> 'janv.'\n   * @example Info.months('numeric', { locale: 'ar' })[0] //=> '١'\n   * @example Info.months('long', { outputCalendar: 'islamic' })[0] //=> 'Rabiʻ I'\n   * @return {Array}\n   */\n  static months(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null, outputCalendar = \"gregory\" } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length);\n  }\n\n  /**\n   * Return an array of format month names.\n   * Format months differ from standalone months in that they're meant to appear next to the day of the month. In some languages, that\n   * changes the string.\n   * See {@link Info#months}\n   * @param {string} [length='long'] - the length of the month representation, such as \"numeric\", \"2-digit\", \"narrow\", \"short\", \"long\"\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @param {string} [opts.outputCalendar='gregory'] - the calendar\n   * @return {Array}\n   */\n  static monthsFormat(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null, outputCalendar = \"gregory\" } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length, true);\n  }\n\n  /**\n   * Return an array of standalone week names.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {string} [length='long'] - the length of the weekday representation, such as \"narrow\", \"short\", \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @example Info.weekdays()[0] //=> 'Monday'\n   * @example Info.weekdays('short')[0] //=> 'Mon'\n   * @example Info.weekdays('short', { locale: 'fr-CA' })[0] //=> 'lun.'\n   * @example Info.weekdays('short', { locale: 'ar' })[0] //=> 'الاثنين'\n   * @return {Array}\n   */\n  static weekdays(length = \"long\", { locale = null, numberingSystem = null, locObj = null } = {}) {\n    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length);\n  }\n\n  /**\n   * Return an array of format week names.\n   * Format weekdays differ from standalone weekdays in that they're meant to appear next to more date information. In some languages, that\n   * changes the string.\n   * See {@link Info#weekdays}\n   * @param {string} [length='long'] - the length of the month representation, such as \"narrow\", \"short\", \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale=null] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @return {Array}\n   */\n  static weekdaysFormat(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length, true);\n  }\n\n  /**\n   * Return an array of meridiems.\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @example Info.meridiems() //=> [ 'AM', 'PM' ]\n   * @example Info.meridiems({ locale: 'my' }) //=> [ 'နံနက်', 'ညနေ' ]\n   * @return {Array}\n   */\n  static meridiems({ locale = null } = {}) {\n    return Locale.create(locale).meridiems();\n  }\n\n  /**\n   * Return an array of eras, such as ['BC', 'AD']. The locale can be specified, but the calendar system is always Gregorian.\n   * @param {string} [length='short'] - the length of the era representation, such as \"short\" or \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @example Info.eras() //=> [ 'BC', 'AD' ]\n   * @example Info.eras('long') //=> [ 'Before Christ', 'Anno Domini' ]\n   * @example Info.eras('long', { locale: 'fr' }) //=> [ 'avant Jésus-Christ', 'après Jésus-Christ' ]\n   * @return {Array}\n   */\n  static eras(length = \"short\", { locale = null } = {}) {\n    return Locale.create(locale, null, \"gregory\").eras(length);\n  }\n\n  /**\n   * Return the set of available features in this environment.\n   * Some features of Luxon are not available in all environments. For example, on older browsers, relative time formatting support is not available. Use this function to figure out if that's the case.\n   * Keys:\n   * * `relative`: whether this environment supports relative time formatting\n   * @example Info.features() //=> { relative: false }\n   * @return {Object}\n   */\n  static features() {\n    return { relative: hasRelative() };\n  }\n}\n","import Duration from \"../duration.js\";\n\nfunction dayDiff(earlier, later) {\n  const utcDayStart = (dt) => dt.toUTC(0, { keepLocalTime: true }).startOf(\"day\").valueOf(),\n    ms = utcDayStart(later) - utcDayStart(earlier);\n  return Math.floor(Duration.fromMillis(ms).as(\"days\"));\n}\n\nfunction highOrderDiffs(cursor, later, units) {\n  const differs = [\n    [\"years\", (a, b) => b.year - a.year],\n    [\"quarters\", (a, b) => b.quarter - a.quarter + (b.year - a.year) * 4],\n    [\"months\", (a, b) => b.month - a.month + (b.year - a.year) * 12],\n    [\n      \"weeks\",\n      (a, b) => {\n        const days = dayDiff(a, b);\n        return (days - (days % 7)) / 7;\n      },\n    ],\n    [\"days\", dayDiff],\n  ];\n\n  const results = {};\n  const earlier = cursor;\n  let lowestOrder, highWater;\n\n  /* This loop tries to diff using larger units first.\n     If we overshoot, we backtrack and try the next smaller unit.\n     \"cursor\" starts out at the earlier timestamp and moves closer and closer to \"later\"\n     as we use smaller and smaller units.\n     highWater keeps track of where we would be if we added one more of the smallest unit,\n     this is used later to potentially convert any difference smaller than the smallest higher order unit\n     into a fraction of that smallest higher order unit\n  */\n  for (const [unit, differ] of differs) {\n    if (units.indexOf(unit) >= 0) {\n      lowestOrder = unit;\n\n      results[unit] = differ(cursor, later);\n      highWater = earlier.plus(results);\n\n      if (highWater > later) {\n        // we overshot the end point, backtrack cursor by 1\n        results[unit]--;\n        cursor = earlier.plus(results);\n\n        // if we are still overshooting now, we need to backtrack again\n        // this happens in certain situations when diffing times in different zones,\n        // because this calculation ignores time zones\n        if (cursor > later) {\n          // keep the \"overshot by 1\" around as highWater\n          highWater = cursor;\n          // backtrack cursor by 1\n          results[unit]--;\n          cursor = earlier.plus(results);\n        }\n      } else {\n        cursor = highWater;\n      }\n    }\n  }\n\n  return [cursor, results, highWater, lowestOrder];\n}\n\nexport default function (earlier, later, units, opts) {\n  let [cursor, results, highWater, lowestOrder] = highOrderDiffs(earlier, later, units);\n\n  const remainingMillis = later - cursor;\n\n  const lowerOrderUnits = units.filter(\n    (u) => [\"hours\", \"minutes\", \"seconds\", \"milliseconds\"].indexOf(u) >= 0\n  );\n\n  if (lowerOrderUnits.length === 0) {\n    if (highWater < later) {\n      highWater = cursor.plus({ [lowestOrder]: 1 });\n    }\n\n    if (highWater !== cursor) {\n      results[lowestOrder] = (results[lowestOrder] || 0) + remainingMillis / (highWater - cursor);\n    }\n  }\n\n  const duration = Duration.fromObject(results, opts);\n\n  if (lowerOrderUnits.length > 0) {\n    return Duration.fromMillis(remainingMillis, opts)\n      .shiftTo(...lowerOrderUnits)\n      .plus(duration);\n  } else {\n    return duration;\n  }\n}\n","const numberingSystems = {\n  arab: \"[\\u0660-\\u0669]\",\n  arabext: \"[\\u06F0-\\u06F9]\",\n  bali: \"[\\u1B50-\\u1B59]\",\n  beng: \"[\\u09E6-\\u09EF]\",\n  deva: \"[\\u0966-\\u096F]\",\n  fullwide: \"[\\uFF10-\\uFF19]\",\n  gujr: \"[\\u0AE6-\\u0AEF]\",\n  hanidec: \"[〇|一|二|三|四|五|六|七|八|九]\",\n  khmr: \"[\\u17E0-\\u17E9]\",\n  knda: \"[\\u0CE6-\\u0CEF]\",\n  laoo: \"[\\u0ED0-\\u0ED9]\",\n  limb: \"[\\u1946-\\u194F]\",\n  mlym: \"[\\u0D66-\\u0D6F]\",\n  mong: \"[\\u1810-\\u1819]\",\n  mymr: \"[\\u1040-\\u1049]\",\n  orya: \"[\\u0B66-\\u0B6F]\",\n  tamldec: \"[\\u0BE6-\\u0BEF]\",\n  telu: \"[\\u0C66-\\u0C6F]\",\n  thai: \"[\\u0E50-\\u0E59]\",\n  tibt: \"[\\u0F20-\\u0F29]\",\n  latn: \"\\\\d\",\n};\n\nconst numberingSystemsUTF16 = {\n  arab: [1632, 1641],\n  arabext: [1776, 1785],\n  bali: [6992, 7001],\n  beng: [2534, 2543],\n  deva: [2406, 2415],\n  fullwide: [65296, 65303],\n  gujr: [2790, 2799],\n  khmr: [6112, 6121],\n  knda: [3302, 3311],\n  laoo: [3792, 3801],\n  limb: [6470, 6479],\n  mlym: [3430, 3439],\n  mong: [6160, 6169],\n  mymr: [4160, 4169],\n  orya: [2918, 2927],\n  tamldec: [3046, 3055],\n  telu: [3174, 3183],\n  thai: [3664, 3673],\n  tibt: [3872, 3881],\n};\n\nconst hanidecChars = numberingSystems.hanidec.replace(/[\\[|\\]]/g, \"\").split(\"\");\n\nexport function parseDigits(str) {\n  let value = parseInt(str, 10);\n  if (isNaN(value)) {\n    value = \"\";\n    for (let i = 0; i < str.length; i++) {\n      const code = str.charCodeAt(i);\n\n      if (str[i].search(numberingSystems.hanidec) !== -1) {\n        value += hanidecChars.indexOf(str[i]);\n      } else {\n        for (const key in numberingSystemsUTF16) {\n          const [min, max] = numberingSystemsUTF16[key];\n          if (code >= min && code <= max) {\n            value += code - min;\n          }\n        }\n      }\n    }\n    return parseInt(value, 10);\n  } else {\n    return value;\n  }\n}\n\nexport function digitRegex({ numberingSystem }, append = \"\") {\n  return new RegExp(`${numberingSystems[numberingSystem || \"latn\"]}${append}`);\n}\n","import { parseMillis, isUndefined, untruncateYear, signedOffset, hasOwnProperty } from \"./util.js\";\nimport Formatter from \"./formatter.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport DateTime from \"../datetime.js\";\nimport { digitRegex, parseDigits } from \"./digits.js\";\nimport { ConflictingSpecificationError } from \"../errors.js\";\n\nconst MISSING_FTP = \"missing Intl.DateTimeFormat.formatToParts support\";\n\nfunction intUnit(regex, post = (i) => i) {\n  return { regex, deser: ([s]) => post(parseDigits(s)) };\n}\n\nconst NBSP = String.fromCharCode(160);\nconst spaceOrNBSP = `[ ${NBSP}]`;\nconst spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, \"g\");\n\nfunction fixListRegex(s) {\n  // make dots optional and also make them literal\n  // make space and non breakable space characters interchangeable\n  return s.replace(/\\./g, \"\\\\.?\").replace(spaceOrNBSPRegExp, spaceOrNBSP);\n}\n\nfunction stripInsensitivities(s) {\n  return s\n    .replace(/\\./g, \"\") // ignore dots that were made optional\n    .replace(spaceOrNBSPRegExp, \" \") // interchange space and nbsp\n    .toLowerCase();\n}\n\nfunction oneOf(strings, startIndex) {\n  if (strings === null) {\n    return null;\n  } else {\n    return {\n      regex: RegExp(strings.map(fixListRegex).join(\"|\")),\n      deser: ([s]) =>\n        strings.findIndex((i) => stripInsensitivities(s) === stripInsensitivities(i)) + startIndex,\n    };\n  }\n}\n\nfunction offset(regex, groups) {\n  return { regex, deser: ([, h, m]) => signedOffset(h, m), groups };\n}\n\nfunction simple(regex) {\n  return { regex, deser: ([s]) => s };\n}\n\nfunction escapeToken(value) {\n  return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\n/**\n * @param token\n * @param {Locale} loc\n */\nfunction unitForToken(token, loc) {\n  const one = digitRegex(loc),\n    two = digitRegex(loc, \"{2}\"),\n    three = digitRegex(loc, \"{3}\"),\n    four = digitRegex(loc, \"{4}\"),\n    six = digitRegex(loc, \"{6}\"),\n    oneOrTwo = digitRegex(loc, \"{1,2}\"),\n    oneToThree = digitRegex(loc, \"{1,3}\"),\n    oneToSix = digitRegex(loc, \"{1,6}\"),\n    oneToNine = digitRegex(loc, \"{1,9}\"),\n    twoToFour = digitRegex(loc, \"{2,4}\"),\n    fourToSix = digitRegex(loc, \"{4,6}\"),\n    literal = (t) => ({ regex: RegExp(escapeToken(t.val)), deser: ([s]) => s, literal: true }),\n    unitate = (t) => {\n      if (token.literal) {\n        return literal(t);\n      }\n      switch (t.val) {\n        // era\n        case \"G\":\n          return oneOf(loc.eras(\"short\"), 0);\n        case \"GG\":\n          return oneOf(loc.eras(\"long\"), 0);\n        // years\n        case \"y\":\n          return intUnit(oneToSix);\n        case \"yy\":\n          return intUnit(twoToFour, untruncateYear);\n        case \"yyyy\":\n          return intUnit(four);\n        case \"yyyyy\":\n          return intUnit(fourToSix);\n        case \"yyyyyy\":\n          return intUnit(six);\n        // months\n        case \"M\":\n          return intUnit(oneOrTwo);\n        case \"MM\":\n          return intUnit(two);\n        case \"MMM\":\n          return oneOf(loc.months(\"short\", true), 1);\n        case \"MMMM\":\n          return oneOf(loc.months(\"long\", true), 1);\n        case \"L\":\n          return intUnit(oneOrTwo);\n        case \"LL\":\n          return intUnit(two);\n        case \"LLL\":\n          return oneOf(loc.months(\"short\", false), 1);\n        case \"LLLL\":\n          return oneOf(loc.months(\"long\", false), 1);\n        // dates\n        case \"d\":\n          return intUnit(oneOrTwo);\n        case \"dd\":\n          return intUnit(two);\n        // ordinals\n        case \"o\":\n          return intUnit(oneToThree);\n        case \"ooo\":\n          return intUnit(three);\n        // time\n        case \"HH\":\n          return intUnit(two);\n        case \"H\":\n          return intUnit(oneOrTwo);\n        case \"hh\":\n          return intUnit(two);\n        case \"h\":\n          return intUnit(oneOrTwo);\n        case \"mm\":\n          return intUnit(two);\n        case \"m\":\n          return intUnit(oneOrTwo);\n        case \"q\":\n          return intUnit(oneOrTwo);\n        case \"qq\":\n          return intUnit(two);\n        case \"s\":\n          return intUnit(oneOrTwo);\n        case \"ss\":\n          return intUnit(two);\n        case \"S\":\n          return intUnit(oneToThree);\n        case \"SSS\":\n          return intUnit(three);\n        case \"u\":\n          return simple(oneToNine);\n        case \"uu\":\n          return simple(oneOrTwo);\n        case \"uuu\":\n          return intUnit(one);\n        // meridiem\n        case \"a\":\n          return oneOf(loc.meridiems(), 0);\n        // weekYear (k)\n        case \"kkkk\":\n          return intUnit(four);\n        case \"kk\":\n          return intUnit(twoToFour, untruncateYear);\n        // weekNumber (W)\n        case \"W\":\n          return intUnit(oneOrTwo);\n        case \"WW\":\n          return intUnit(two);\n        // weekdays\n        case \"E\":\n        case \"c\":\n          return intUnit(one);\n        case \"EEE\":\n          return oneOf(loc.weekdays(\"short\", false), 1);\n        case \"EEEE\":\n          return oneOf(loc.weekdays(\"long\", false), 1);\n        case \"ccc\":\n          return oneOf(loc.weekdays(\"short\", true), 1);\n        case \"cccc\":\n          return oneOf(loc.weekdays(\"long\", true), 1);\n        // offset/zone\n        case \"Z\":\n        case \"ZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`), 2);\n        case \"ZZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`), 2);\n        // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing\n        // because we don't have any way to figure out what they are\n        case \"z\":\n          return simple(/[a-z_+-/]{1,256}?/i);\n        // this special-case \"token\" represents a place where a macro-token expanded into a white-space literal\n        // in this case we accept any non-newline white-space\n        case \" \":\n          return simple(/[^\\S\\n\\r]/);\n        default:\n          return literal(t);\n      }\n    };\n\n  const unit = unitate(token) || {\n    invalidReason: MISSING_FTP,\n  };\n\n  unit.token = token;\n\n  return unit;\n}\n\nconst partTypeStyleToTokenVal = {\n  year: {\n    \"2-digit\": \"yy\",\n    numeric: \"yyyyy\",\n  },\n  month: {\n    numeric: \"M\",\n    \"2-digit\": \"MM\",\n    short: \"MMM\",\n    long: \"MMMM\",\n  },\n  day: {\n    numeric: \"d\",\n    \"2-digit\": \"dd\",\n  },\n  weekday: {\n    short: \"EEE\",\n    long: \"EEEE\",\n  },\n  dayperiod: \"a\",\n  dayPeriod: \"a\",\n  hour12: {\n    numeric: \"h\",\n    \"2-digit\": \"hh\",\n  },\n  hour24: {\n    numeric: \"H\",\n    \"2-digit\": \"HH\",\n  },\n  minute: {\n    numeric: \"m\",\n    \"2-digit\": \"mm\",\n  },\n  second: {\n    numeric: \"s\",\n    \"2-digit\": \"ss\",\n  },\n  timeZoneName: {\n    long: \"ZZZZZ\",\n    short: \"ZZZ\",\n  },\n};\n\nfunction tokenForPart(part, formatOpts, resolvedOpts) {\n  const { type, value } = part;\n\n  if (type === \"literal\") {\n    const isSpace = /^\\s+$/.test(value);\n    return {\n      literal: !isSpace,\n      val: isSpace ? \" \" : value,\n    };\n  }\n\n  const style = formatOpts[type];\n\n  // The user might have explicitly specified hour12 or hourCycle\n  // if so, respect their decision\n  // if not, refer back to the resolvedOpts, which are based on the locale\n  let actualType = type;\n  if (type === \"hour\") {\n    if (formatOpts.hour12 != null) {\n      actualType = formatOpts.hour12 ? \"hour12\" : \"hour24\";\n    } else if (formatOpts.hourCycle != null) {\n      if (formatOpts.hourCycle === \"h11\" || formatOpts.hourCycle === \"h12\") {\n        actualType = \"hour12\";\n      } else {\n        actualType = \"hour24\";\n      }\n    } else {\n      // tokens only differentiate between 24 hours or not,\n      // so we do not need to check hourCycle here, which is less supported anyways\n      actualType = resolvedOpts.hour12 ? \"hour12\" : \"hour24\";\n    }\n  }\n  let val = partTypeStyleToTokenVal[actualType];\n  if (typeof val === \"object\") {\n    val = val[style];\n  }\n\n  if (val) {\n    return {\n      literal: false,\n      val,\n    };\n  }\n\n  return undefined;\n}\n\nfunction buildRegex(units) {\n  const re = units.map((u) => u.regex).reduce((f, r) => `${f}(${r.source})`, \"\");\n  return [`^${re}$`, units];\n}\n\nfunction match(input, regex, handlers) {\n  const matches = input.match(regex);\n\n  if (matches) {\n    const all = {};\n    let matchIndex = 1;\n    for (const i in handlers) {\n      if (hasOwnProperty(handlers, i)) {\n        const h = handlers[i],\n          groups = h.groups ? h.groups + 1 : 1;\n        if (!h.literal && h.token) {\n          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));\n        }\n        matchIndex += groups;\n      }\n    }\n    return [matches, all];\n  } else {\n    return [matches, {}];\n  }\n}\n\nfunction dateTimeFromMatches(matches) {\n  const toField = (token) => {\n    switch (token) {\n      case \"S\":\n        return \"millisecond\";\n      case \"s\":\n        return \"second\";\n      case \"m\":\n        return \"minute\";\n      case \"h\":\n      case \"H\":\n        return \"hour\";\n      case \"d\":\n        return \"day\";\n      case \"o\":\n        return \"ordinal\";\n      case \"L\":\n      case \"M\":\n        return \"month\";\n      case \"y\":\n        return \"year\";\n      case \"E\":\n      case \"c\":\n        return \"weekday\";\n      case \"W\":\n        return \"weekNumber\";\n      case \"k\":\n        return \"weekYear\";\n      case \"q\":\n        return \"quarter\";\n      default:\n        return null;\n    }\n  };\n\n  let zone = null;\n  let specificOffset;\n  if (!isUndefined(matches.z)) {\n    zone = IANAZone.create(matches.z);\n  }\n\n  if (!isUndefined(matches.Z)) {\n    if (!zone) {\n      zone = new FixedOffsetZone(matches.Z);\n    }\n    specificOffset = matches.Z;\n  }\n\n  if (!isUndefined(matches.q)) {\n    matches.M = (matches.q - 1) * 3 + 1;\n  }\n\n  if (!isUndefined(matches.h)) {\n    if (matches.h < 12 && matches.a === 1) {\n      matches.h += 12;\n    } else if (matches.h === 12 && matches.a === 0) {\n      matches.h = 0;\n    }\n  }\n\n  if (matches.G === 0 && matches.y) {\n    matches.y = -matches.y;\n  }\n\n  if (!isUndefined(matches.u)) {\n    matches.S = parseMillis(matches.u);\n  }\n\n  const vals = Object.keys(matches).reduce((r, k) => {\n    const f = toField(k);\n    if (f) {\n      r[f] = matches[k];\n    }\n\n    return r;\n  }, {});\n\n  return [vals, zone, specificOffset];\n}\n\nlet dummyDateTimeCache = null;\n\nfunction getDummyDateTime() {\n  if (!dummyDateTimeCache) {\n    dummyDateTimeCache = DateTime.fromMillis(1555555555555);\n  }\n\n  return dummyDateTimeCache;\n}\n\nfunction maybeExpandMacroToken(token, locale) {\n  if (token.literal) {\n    return token;\n  }\n\n  const formatOpts = Formatter.macroTokenToFormatOpts(token.val);\n  const tokens = formatOptsToTokens(formatOpts, locale);\n\n  if (tokens == null || tokens.includes(undefined)) {\n    return token;\n  }\n\n  return tokens;\n}\n\nexport function expandMacroTokens(tokens, locale) {\n  return Array.prototype.concat(...tokens.map((t) => maybeExpandMacroToken(t, locale)));\n}\n\n/**\n * @private\n */\n\nexport function explainFromTokens(locale, input, format) {\n  const tokens = expandMacroTokens(Formatter.parseFormat(format), locale),\n    units = tokens.map((t) => unitForToken(t, locale)),\n    disqualifyingUnit = units.find((t) => t.invalidReason);\n\n  if (disqualifyingUnit) {\n    return { input, tokens, invalidReason: disqualifyingUnit.invalidReason };\n  } else {\n    const [regexString, handlers] = buildRegex(units),\n      regex = RegExp(regexString, \"i\"),\n      [rawMatches, matches] = match(input, regex, handlers),\n      [result, zone, specificOffset] = matches\n        ? dateTimeFromMatches(matches)\n        : [null, null, undefined];\n    if (hasOwnProperty(matches, \"a\") && hasOwnProperty(matches, \"H\")) {\n      throw new ConflictingSpecificationError(\n        \"Can't include meridiem when specifying 24-hour format\"\n      );\n    }\n    return { input, tokens, regex, rawMatches, matches, result, zone, specificOffset };\n  }\n}\n\nexport function parseFromTokens(locale, input, format) {\n  const { result, zone, specificOffset, invalidReason } = explainFromTokens(locale, input, format);\n  return [result, zone, specificOffset, invalidReason];\n}\n\nexport function formatOptsToTokens(formatOpts, locale) {\n  if (!formatOpts) {\n    return null;\n  }\n\n  const formatter = Formatter.create(locale, formatOpts);\n  const df = formatter.dtFormatter(getDummyDateTime());\n  const parts = df.formatToParts();\n  const resolvedOpts = df.resolvedOptions();\n  return parts.map((p) => tokenForPart(p, formatOpts, resolvedOpts));\n}\n","import {\n  integerBetween,\n  isLeapYear,\n  timeObject,\n  daysInYear,\n  daysInMonth,\n  weeksInWeekYear,\n  isInteger,\n} from \"./util.js\";\nimport Invalid from \"./invalid.js\";\n\nconst nonLeapLadder = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],\n  leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];\n\nfunction unitOutOfRange(unit, value) {\n  return new Invalid(\n    \"unit out of range\",\n    `you specified ${value} (of type ${typeof value}) as a ${unit}, which is invalid`\n  );\n}\n\nfunction dayOfWeek(year, month, day) {\n  const d = new Date(Date.UTC(year, month - 1, day));\n\n  if (year < 100 && year >= 0) {\n    d.setUTCFullYear(d.getUTCFullYear() - 1900);\n  }\n\n  const js = d.getUTCDay();\n\n  return js === 0 ? 7 : js;\n}\n\nfunction computeOrdinal(year, month, day) {\n  return day + (isLeapYear(year) ? leapLadder : nonLeapLadder)[month - 1];\n}\n\nfunction uncomputeOrdinal(year, ordinal) {\n  const table = isLeapYear(year) ? leapLadder : nonLeapLadder,\n    month0 = table.findIndex((i) => i < ordinal),\n    day = ordinal - table[month0];\n  return { month: month0 + 1, day };\n}\n\n/**\n * @private\n */\n\nexport function gregorianToWeek(gregObj) {\n  const { year, month, day } = gregObj,\n    ordinal = computeOrdinal(year, month, day),\n    weekday = dayOfWeek(year, month, day);\n\n  let weekNumber = Math.floor((ordinal - weekday + 10) / 7),\n    weekYear;\n\n  if (weekNumber < 1) {\n    weekYear = year - 1;\n    weekNumber = weeksInWeekYear(weekYear);\n  } else if (weekNumber > weeksInWeekYear(year)) {\n    weekYear = year + 1;\n    weekNumber = 1;\n  } else {\n    weekYear = year;\n  }\n\n  return { weekYear, weekNumber, weekday, ...timeObject(gregObj) };\n}\n\nexport function weekToGregorian(weekData) {\n  const { weekYear, weekNumber, weekday } = weekData,\n    weekdayOfJan4 = dayOfWeek(weekYear, 1, 4),\n    yearInDays = daysInYear(weekYear);\n\n  let ordinal = weekNumber * 7 + weekday - weekdayOfJan4 - 3,\n    year;\n\n  if (ordinal < 1) {\n    year = weekYear - 1;\n    ordinal += daysInYear(year);\n  } else if (ordinal > yearInDays) {\n    year = weekYear + 1;\n    ordinal -= daysInYear(weekYear);\n  } else {\n    year = weekYear;\n  }\n\n  const { month, day } = uncomputeOrdinal(year, ordinal);\n  return { year, month, day, ...timeObject(weekData) };\n}\n\nexport function gregorianToOrdinal(gregData) {\n  const { year, month, day } = gregData;\n  const ordinal = computeOrdinal(year, month, day);\n  return { year, ordinal, ...timeObject(gregData) };\n}\n\nexport function ordinalToGregorian(ordinalData) {\n  const { year, ordinal } = ordinalData;\n  const { month, day } = uncomputeOrdinal(year, ordinal);\n  return { year, month, day, ...timeObject(ordinalData) };\n}\n\nexport function hasInvalidWeekData(obj) {\n  const validYear = isInteger(obj.weekYear),\n    validWeek = integerBetween(obj.weekNumber, 1, weeksInWeekYear(obj.weekYear)),\n    validWeekday = integerBetween(obj.weekday, 1, 7);\n\n  if (!validYear) {\n    return unitOutOfRange(\"weekYear\", obj.weekYear);\n  } else if (!validWeek) {\n    return unitOutOfRange(\"week\", obj.week);\n  } else if (!validWeekday) {\n    return unitOutOfRange(\"weekday\", obj.weekday);\n  } else return false;\n}\n\nexport function hasInvalidOrdinalData(obj) {\n  const validYear = isInteger(obj.year),\n    validOrdinal = integerBetween(obj.ordinal, 1, daysInYear(obj.year));\n\n  if (!validYear) {\n    return unitOutOfRange(\"year\", obj.year);\n  } else if (!validOrdinal) {\n    return unitOutOfRange(\"ordinal\", obj.ordinal);\n  } else return false;\n}\n\nexport function hasInvalidGregorianData(obj) {\n  const validYear = isInteger(obj.year),\n    validMonth = integerBetween(obj.month, 1, 12),\n    validDay = integerBetween(obj.day, 1, daysInMonth(obj.year, obj.month));\n\n  if (!validYear) {\n    return unitOutOfRange(\"year\", obj.year);\n  } else if (!validMonth) {\n    return unitOutOfRange(\"month\", obj.month);\n  } else if (!validDay) {\n    return unitOutOfRange(\"day\", obj.day);\n  } else return false;\n}\n\nexport function hasInvalidTimeData(obj) {\n  const { hour, minute, second, millisecond } = obj;\n  const validHour =\n      integerBetween(hour, 0, 23) ||\n      (hour === 24 && minute === 0 && second === 0 && millisecond === 0),\n    validMinute = integerBetween(minute, 0, 59),\n    validSecond = integerBetween(second, 0, 59),\n    validMillisecond = integerBetween(millisecond, 0, 999);\n\n  if (!validHour) {\n    return unitOutOfRange(\"hour\", hour);\n  } else if (!validMinute) {\n    return unitOutOfRange(\"minute\", minute);\n  } else if (!validSecond) {\n    return unitOutOfRange(\"second\", second);\n  } else if (!validMillisecond) {\n    return unitOutOfRange(\"millisecond\", millisecond);\n  } else return false;\n}\n","import Duration from \"./duration.js\";\nimport Interval from \"./interval.js\";\nimport Settings from \"./settings.js\";\nimport Info from \"./info.js\";\nimport Formatter from \"./impl/formatter.js\";\nimport FixedOffsetZone from \"./zones/fixedOffsetZone.js\";\nimport Locale from \"./impl/locale.js\";\nimport {\n  isUndefined,\n  maybeArray,\n  isDate,\n  isNumber,\n  bestBy,\n  daysInMonth,\n  daysInYear,\n  isLeapYear,\n  weeksInWeekYear,\n  normalizeObject,\n  roundTo,\n  objToLocalTS,\n  padStart,\n} from \"./impl/util.js\";\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\nimport diff from \"./impl/diff.js\";\nimport { parseRFC2822Date, parseISODate, parseHTTPDate, parseSQL } from \"./impl/regexParser.js\";\nimport {\n  parseFromTokens,\n  explainFromTokens,\n  formatOptsToTokens,\n  expandMacroTokens,\n} from \"./impl/tokenParser.js\";\nimport {\n  gregorianToWeek,\n  weekToGregorian,\n  gregorianToOrdinal,\n  ordinalToGregorian,\n  hasInvalidGregorianData,\n  hasInvalidWeekData,\n  hasInvalidOrdinalData,\n  hasInvalidTimeData,\n} from \"./impl/conversions.js\";\nimport * as Formats from \"./impl/formats.js\";\nimport {\n  InvalidArgumentError,\n  ConflictingSpecificationError,\n  InvalidUnitError,\n  InvalidDateTimeError,\n} from \"./errors.js\";\nimport Invalid from \"./impl/invalid.js\";\n\nconst INVALID = \"Invalid DateTime\";\nconst MAX_DATE = 8.64e15;\n\nfunction unsupportedZone(zone) {\n  return new Invalid(\"unsupported zone\", `the zone \"${zone.name}\" is not supported`);\n}\n\n// we cache week data on the DT object and this intermediates the cache\nfunction possiblyCachedWeekData(dt) {\n  if (dt.weekData === null) {\n    dt.weekData = gregorianToWeek(dt.c);\n  }\n  return dt.weekData;\n}\n\n// clone really means, \"make a new object with these modifications\". all \"setters\" really use this\n// to create a new object while only changing some of the properties\nfunction clone(inst, alts) {\n  const current = {\n    ts: inst.ts,\n    zone: inst.zone,\n    c: inst.c,\n    o: inst.o,\n    loc: inst.loc,\n    invalid: inst.invalid,\n  };\n  return new DateTime({ ...current, ...alts, old: current });\n}\n\n// find the right offset a given local time. The o input is our guess, which determines which\n// offset we'll pick in ambiguous cases (e.g. there are two 3 AMs b/c Fallback DST)\nfunction fixOffset(localTS, o, tz) {\n  // Our UTC time is just a guess because our offset is just a guess\n  let utcGuess = localTS - o * 60 * 1000;\n\n  // Test whether the zone matches the offset for this ts\n  const o2 = tz.offset(utcGuess);\n\n  // If so, offset didn't change and we're done\n  if (o === o2) {\n    return [utcGuess, o];\n  }\n\n  // If not, change the ts by the difference in the offset\n  utcGuess -= (o2 - o) * 60 * 1000;\n\n  // If that gives us the local time we want, we're done\n  const o3 = tz.offset(utcGuess);\n  if (o2 === o3) {\n    return [utcGuess, o2];\n  }\n\n  // If it's different, we're in a hole time. The offset has changed, but the we don't adjust the time\n  return [localTS - Math.min(o2, o3) * 60 * 1000, Math.max(o2, o3)];\n}\n\n// convert an epoch timestamp into a calendar object with the given offset\nfunction tsToObj(ts, offset) {\n  ts += offset * 60 * 1000;\n\n  const d = new Date(ts);\n\n  return {\n    year: d.getUTCFullYear(),\n    month: d.getUTCMonth() + 1,\n    day: d.getUTCDate(),\n    hour: d.getUTCHours(),\n    minute: d.getUTCMinutes(),\n    second: d.getUTCSeconds(),\n    millisecond: d.getUTCMilliseconds(),\n  };\n}\n\n// convert a calendar object to a epoch timestamp\nfunction objToTS(obj, offset, zone) {\n  return fixOffset(objToLocalTS(obj), offset, zone);\n}\n\n// create a new DT instance by adding a duration, adjusting for DSTs\nfunction adjustTime(inst, dur) {\n  const oPre = inst.o,\n    year = inst.c.year + Math.trunc(dur.years),\n    month = inst.c.month + Math.trunc(dur.months) + Math.trunc(dur.quarters) * 3,\n    c = {\n      ...inst.c,\n      year,\n      month,\n      day:\n        Math.min(inst.c.day, daysInMonth(year, month)) +\n        Math.trunc(dur.days) +\n        Math.trunc(dur.weeks) * 7,\n    },\n    millisToAdd = Duration.fromObject({\n      years: dur.years - Math.trunc(dur.years),\n      quarters: dur.quarters - Math.trunc(dur.quarters),\n      months: dur.months - Math.trunc(dur.months),\n      weeks: dur.weeks - Math.trunc(dur.weeks),\n      days: dur.days - Math.trunc(dur.days),\n      hours: dur.hours,\n      minutes: dur.minutes,\n      seconds: dur.seconds,\n      milliseconds: dur.milliseconds,\n    }).as(\"milliseconds\"),\n    localTS = objToLocalTS(c);\n\n  let [ts, o] = fixOffset(localTS, oPre, inst.zone);\n\n  if (millisToAdd !== 0) {\n    ts += millisToAdd;\n    // that could have changed the offset by going over a DST, but we want to keep the ts the same\n    o = inst.zone.offset(ts);\n  }\n\n  return { ts, o };\n}\n\n// helper useful in turning the results of parsing into real dates\n// by handling the zone options\nfunction parseDataToDateTime(parsed, parsedZone, opts, format, text, specificOffset) {\n  const { setZone, zone } = opts;\n  if ((parsed && Object.keys(parsed).length !== 0) || parsedZone) {\n    const interpretationZone = parsedZone || zone,\n      inst = DateTime.fromObject(parsed, {\n        ...opts,\n        zone: interpretationZone,\n        specificOffset,\n      });\n    return setZone ? inst : inst.setZone(zone);\n  } else {\n    return DateTime.invalid(\n      new Invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ${format}`)\n    );\n  }\n}\n\n// if you want to output a technical format (e.g. RFC 2822), this helper\n// helps handle the details\nfunction toTechFormat(dt, format, allowZ = true) {\n  return dt.isValid\n    ? Formatter.create(Locale.create(\"en-US\"), {\n        allowZ,\n        forceSimple: true,\n      }).formatDateTimeFromString(dt, format)\n    : null;\n}\n\nfunction toISODate(o, extended) {\n  const longFormat = o.c.year > 9999 || o.c.year < 0;\n  let c = \"\";\n  if (longFormat && o.c.year >= 0) c += \"+\";\n  c += padStart(o.c.year, longFormat ? 6 : 4);\n\n  if (extended) {\n    c += \"-\";\n    c += padStart(o.c.month);\n    c += \"-\";\n    c += padStart(o.c.day);\n  } else {\n    c += padStart(o.c.month);\n    c += padStart(o.c.day);\n  }\n  return c;\n}\n\nfunction toISOTime(\n  o,\n  extended,\n  suppressSeconds,\n  suppressMilliseconds,\n  includeOffset,\n  extendedZone\n) {\n  let c = padStart(o.c.hour);\n  if (extended) {\n    c += \":\";\n    c += padStart(o.c.minute);\n    if (o.c.millisecond !== 0 || o.c.second !== 0 || !suppressSeconds) {\n      c += \":\";\n    }\n  } else {\n    c += padStart(o.c.minute);\n  }\n\n  if (o.c.millisecond !== 0 || o.c.second !== 0 || !suppressSeconds) {\n    c += padStart(o.c.second);\n\n    if (o.c.millisecond !== 0 || !suppressMilliseconds) {\n      c += \".\";\n      c += padStart(o.c.millisecond, 3);\n    }\n  }\n\n  if (includeOffset) {\n    if (o.isOffsetFixed && o.offset === 0 && !extendedZone) {\n      c += \"Z\";\n    } else if (o.o < 0) {\n      c += \"-\";\n      c += padStart(Math.trunc(-o.o / 60));\n      c += \":\";\n      c += padStart(Math.trunc(-o.o % 60));\n    } else {\n      c += \"+\";\n      c += padStart(Math.trunc(o.o / 60));\n      c += \":\";\n      c += padStart(Math.trunc(o.o % 60));\n    }\n  }\n\n  if (extendedZone) {\n    c += \"[\" + o.zone.ianaName + \"]\";\n  }\n  return c;\n}\n\n// defaults for unspecified units in the supported calendars\nconst defaultUnitValues = {\n    month: 1,\n    day: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0,\n  },\n  defaultWeekUnitValues = {\n    weekNumber: 1,\n    weekday: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0,\n  },\n  defaultOrdinalUnitValues = {\n    ordinal: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0,\n  };\n\n// Units in the supported calendars, sorted by bigness\nconst orderedUnits = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\", \"millisecond\"],\n  orderedWeekUnits = [\n    \"weekYear\",\n    \"weekNumber\",\n    \"weekday\",\n    \"hour\",\n    \"minute\",\n    \"second\",\n    \"millisecond\",\n  ],\n  orderedOrdinalUnits = [\"year\", \"ordinal\", \"hour\", \"minute\", \"second\", \"millisecond\"];\n\n// standardize case and plurality in units\nfunction normalizeUnit(unit) {\n  const normalized = {\n    year: \"year\",\n    years: \"year\",\n    month: \"month\",\n    months: \"month\",\n    day: \"day\",\n    days: \"day\",\n    hour: \"hour\",\n    hours: \"hour\",\n    minute: \"minute\",\n    minutes: \"minute\",\n    quarter: \"quarter\",\n    quarters: \"quarter\",\n    second: \"second\",\n    seconds: \"second\",\n    millisecond: \"millisecond\",\n    milliseconds: \"millisecond\",\n    weekday: \"weekday\",\n    weekdays: \"weekday\",\n    weeknumber: \"weekNumber\",\n    weeksnumber: \"weekNumber\",\n    weeknumbers: \"weekNumber\",\n    weekyear: \"weekYear\",\n    weekyears: \"weekYear\",\n    ordinal: \"ordinal\",\n  }[unit.toLowerCase()];\n\n  if (!normalized) throw new InvalidUnitError(unit);\n\n  return normalized;\n}\n\n// this is a dumbed down version of fromObject() that runs about 60% faster\n// but doesn't do any validation, makes a bunch of assumptions about what units\n// are present, and so on.\nfunction quickDT(obj, opts) {\n  const zone = normalizeZone(opts.zone, Settings.defaultZone),\n    loc = Locale.fromObject(opts),\n    tsNow = Settings.now();\n\n  let ts, o;\n\n  // assume we have the higher-order units\n  if (!isUndefined(obj.year)) {\n    for (const u of orderedUnits) {\n      if (isUndefined(obj[u])) {\n        obj[u] = defaultUnitValues[u];\n      }\n    }\n\n    const invalid = hasInvalidGregorianData(obj) || hasInvalidTimeData(obj);\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    }\n\n    const offsetProvis = zone.offset(tsNow);\n    [ts, o] = objToTS(obj, offsetProvis, zone);\n  } else {\n    ts = tsNow;\n  }\n\n  return new DateTime({ ts, zone, loc, o });\n}\n\nfunction diffRelative(start, end, opts) {\n  const round = isUndefined(opts.round) ? true : opts.round,\n    format = (c, unit) => {\n      c = roundTo(c, round || opts.calendary ? 0 : 2, true);\n      const formatter = end.loc.clone(opts).relFormatter(opts);\n      return formatter.format(c, unit);\n    },\n    differ = (unit) => {\n      if (opts.calendary) {\n        if (!end.hasSame(start, unit)) {\n          return end.startOf(unit).diff(start.startOf(unit), unit).get(unit);\n        } else return 0;\n      } else {\n        return end.diff(start, unit).get(unit);\n      }\n    };\n\n  if (opts.unit) {\n    return format(differ(opts.unit), opts.unit);\n  }\n\n  for (const unit of opts.units) {\n    const count = differ(unit);\n    if (Math.abs(count) >= 1) {\n      return format(count, unit);\n    }\n  }\n  return format(start > end ? -0 : 0, opts.units[opts.units.length - 1]);\n}\n\nfunction lastOpts(argList) {\n  let opts = {},\n    args;\n  if (argList.length > 0 && typeof argList[argList.length - 1] === \"object\") {\n    opts = argList[argList.length - 1];\n    args = Array.from(argList).slice(0, argList.length - 1);\n  } else {\n    args = Array.from(argList);\n  }\n  return [opts, args];\n}\n\n/**\n * A DateTime is an immutable data structure representing a specific date and time and accompanying methods. It contains class and instance methods for creating, parsing, interrogating, transforming, and formatting them.\n *\n * A DateTime comprises of:\n * * A timestamp. Each DateTime instance refers to a specific millisecond of the Unix epoch.\n * * A time zone. Each instance is considered in the context of a specific zone (by default the local system's zone).\n * * Configuration properties that effect how output strings are formatted, such as `locale`, `numberingSystem`, and `outputCalendar`.\n *\n * Here is a brief overview of the most commonly used functionality it provides:\n *\n * * **Creation**: To create a DateTime from its components, use one of its factory class methods: {@link DateTime.local}, {@link DateTime.utc}, and (most flexibly) {@link DateTime.fromObject}. To create one from a standard string format, use {@link DateTime.fromISO}, {@link DateTime.fromHTTP}, and {@link DateTime.fromRFC2822}. To create one from a custom string format, use {@link DateTime.fromFormat}. To create one from a native JS date, use {@link DateTime.fromJSDate}.\n * * **Gregorian calendar and time**: To examine the Gregorian properties of a DateTime individually (i.e as opposed to collectively through {@link DateTime#toObject}), use the {@link DateTime#year}, {@link DateTime#month},\n * {@link DateTime#day}, {@link DateTime#hour}, {@link DateTime#minute}, {@link DateTime#second}, {@link DateTime#millisecond} accessors.\n * * **Week calendar**: For ISO week calendar attributes, see the {@link DateTime#weekYear}, {@link DateTime#weekNumber}, and {@link DateTime#weekday} accessors.\n * * **Configuration** See the {@link DateTime#locale} and {@link DateTime#numberingSystem} accessors.\n * * **Transformation**: To transform the DateTime into other DateTimes, use {@link DateTime#set}, {@link DateTime#reconfigure}, {@link DateTime#setZone}, {@link DateTime#setLocale}, {@link DateTime.plus}, {@link DateTime#minus}, {@link DateTime#endOf}, {@link DateTime#startOf}, {@link DateTime#toUTC}, and {@link DateTime#toLocal}.\n * * **Output**: To convert the DateTime to other representations, use the {@link DateTime#toRelative}, {@link DateTime#toRelativeCalendar}, {@link DateTime#toJSON}, {@link DateTime#toISO}, {@link DateTime#toHTTP}, {@link DateTime#toObject}, {@link DateTime#toRFC2822}, {@link DateTime#toString}, {@link DateTime#toLocaleString}, {@link DateTime#toFormat}, {@link DateTime#toMillis} and {@link DateTime#toJSDate}.\n *\n * There's plenty others documented below. In addition, for more information on subtler topics like internationalization, time zones, alternative calendars, validity, and so on, see the external documentation.\n */\nexport default class DateTime {\n  /**\n   * @access private\n   */\n  constructor(config) {\n    const zone = config.zone || Settings.defaultZone;\n\n    let invalid =\n      config.invalid ||\n      (Number.isNaN(config.ts) ? new Invalid(\"invalid input\") : null) ||\n      (!zone.isValid ? unsupportedZone(zone) : null);\n    /**\n     * @access private\n     */\n    this.ts = isUndefined(config.ts) ? Settings.now() : config.ts;\n\n    let c = null,\n      o = null;\n    if (!invalid) {\n      const unchanged = config.old && config.old.ts === this.ts && config.old.zone.equals(zone);\n\n      if (unchanged) {\n        [c, o] = [config.old.c, config.old.o];\n      } else {\n        const ot = zone.offset(this.ts);\n        c = tsToObj(this.ts, ot);\n        invalid = Number.isNaN(c.year) ? new Invalid(\"invalid input\") : null;\n        c = invalid ? null : c;\n        o = invalid ? null : ot;\n      }\n    }\n\n    /**\n     * @access private\n     */\n    this._zone = zone;\n    /**\n     * @access private\n     */\n    this.loc = config.loc || Locale.create();\n    /**\n     * @access private\n     */\n    this.invalid = invalid;\n    /**\n     * @access private\n     */\n    this.weekData = null;\n    /**\n     * @access private\n     */\n    this.c = c;\n    /**\n     * @access private\n     */\n    this.o = o;\n    /**\n     * @access private\n     */\n    this.isLuxonDateTime = true;\n  }\n\n  // CONSTRUCT\n\n  /**\n   * Create a DateTime for the current instant, in the system's time zone.\n   *\n   * Use Settings to override these default values if needed.\n   * @example DateTime.now().toISO() //~> now in the ISO format\n   * @return {DateTime}\n   */\n  static now() {\n    return new DateTime({});\n  }\n\n  /**\n   * Create a local DateTime\n   * @param {number} [year] - The calendar year. If omitted (as in, call `local()` with no arguments), the current time will be used\n   * @param {number} [month=1] - The month, 1-indexed\n   * @param {number} [day=1] - The day of the month, 1-indexed\n   * @param {number} [hour=0] - The hour of the day, in 24-hour time\n   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59\n   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59\n   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999\n   * @example DateTime.local()                                  //~> now\n   * @example DateTime.local({ zone: \"America/New_York\" })      //~> now, in US east coast time\n   * @example DateTime.local(2017)                              //~> 2017-01-01T00:00:00\n   * @example DateTime.local(2017, 3)                           //~> 2017-03-01T00:00:00\n   * @example DateTime.local(2017, 3, 12, { locale: \"fr\" })     //~> 2017-03-12T00:00:00, with a French locale\n   * @example DateTime.local(2017, 3, 12, 5)                    //~> 2017-03-12T05:00:00\n   * @example DateTime.local(2017, 3, 12, 5, { zone: \"utc\" })   //~> 2017-03-12T05:00:00, in UTC\n   * @example DateTime.local(2017, 3, 12, 5, 45)                //~> 2017-03-12T05:45:00\n   * @example DateTime.local(2017, 3, 12, 5, 45, 10)            //~> 2017-03-12T05:45:10\n   * @example DateTime.local(2017, 3, 12, 5, 45, 10, 765)       //~> 2017-03-12T05:45:10.765\n   * @return {DateTime}\n   */\n  static local() {\n    const [opts, args] = lastOpts(arguments),\n      [year, month, day, hour, minute, second, millisecond] = args;\n    return quickDT({ year, month, day, hour, minute, second, millisecond }, opts);\n  }\n\n  /**\n   * Create a DateTime in UTC\n   * @param {number} [year] - The calendar year. If omitted (as in, call `utc()` with no arguments), the current time will be used\n   * @param {number} [month=1] - The month, 1-indexed\n   * @param {number} [day=1] - The day of the month\n   * @param {number} [hour=0] - The hour of the day, in 24-hour time\n   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59\n   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59\n   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} [options.outputCalendar] - the output calendar to set on the resulting DateTime instance\n   * @param {string} [options.numberingSystem] - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.utc()                                              //~> now\n   * @example DateTime.utc(2017)                                          //~> 2017-01-01T00:00:00Z\n   * @example DateTime.utc(2017, 3)                                       //~> 2017-03-01T00:00:00Z\n   * @example DateTime.utc(2017, 3, 12)                                   //~> 2017-03-12T00:00:00Z\n   * @example DateTime.utc(2017, 3, 12, 5)                                //~> 2017-03-12T05:00:00Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45)                            //~> 2017-03-12T05:45:00Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45, { locale: \"fr\" })          //~> 2017-03-12T05:45:00Z with a French locale\n   * @example DateTime.utc(2017, 3, 12, 5, 45, 10)                        //~> 2017-03-12T05:45:10Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45, 10, 765, { locale: \"fr\" }) //~> 2017-03-12T05:45:10.765Z with a French locale\n   * @return {DateTime}\n   */\n  static utc() {\n    const [opts, args] = lastOpts(arguments),\n      [year, month, day, hour, minute, second, millisecond] = args;\n\n    opts.zone = FixedOffsetZone.utcInstance;\n    return quickDT({ year, month, day, hour, minute, second, millisecond }, opts);\n  }\n\n  /**\n   * Create a DateTime from a JavaScript Date object. Uses the default zone.\n   * @param {Date} date - a JavaScript Date object\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @return {DateTime}\n   */\n  static fromJSDate(date, options = {}) {\n    const ts = isDate(date) ? date.valueOf() : NaN;\n    if (Number.isNaN(ts)) {\n      return DateTime.invalid(\"invalid input\");\n    }\n\n    const zoneToUse = normalizeZone(options.zone, Settings.defaultZone);\n    if (!zoneToUse.isValid) {\n      return DateTime.invalid(unsupportedZone(zoneToUse));\n    }\n\n    return new DateTime({\n      ts: ts,\n      zone: zoneToUse,\n      loc: Locale.fromObject(options),\n    });\n  }\n\n  /**\n   * Create a DateTime from a number of milliseconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.\n   * @param {number} milliseconds - a number of milliseconds since 1970 UTC\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromMillis(milliseconds, options = {}) {\n    if (!isNumber(milliseconds)) {\n      throw new InvalidArgumentError(\n        `fromMillis requires a numerical input, but received a ${typeof milliseconds} with value ${milliseconds}`\n      );\n    } else if (milliseconds < -MAX_DATE || milliseconds > MAX_DATE) {\n      // this isn't perfect because because we can still end up out of range because of additional shifting, but it's a start\n      return DateTime.invalid(\"Timestamp out of range\");\n    } else {\n      return new DateTime({\n        ts: milliseconds,\n        zone: normalizeZone(options.zone, Settings.defaultZone),\n        loc: Locale.fromObject(options),\n      });\n    }\n  }\n\n  /**\n   * Create a DateTime from a number of seconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.\n   * @param {number} seconds - a number of seconds since 1970 UTC\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromSeconds(seconds, options = {}) {\n    if (!isNumber(seconds)) {\n      throw new InvalidArgumentError(\"fromSeconds requires a numerical input\");\n    } else {\n      return new DateTime({\n        ts: seconds * 1000,\n        zone: normalizeZone(options.zone, Settings.defaultZone),\n        loc: Locale.fromObject(options),\n      });\n    }\n  }\n\n  /**\n   * Create a DateTime from a JavaScript object with keys like 'year' and 'hour' with reasonable defaults.\n   * @param {Object} obj - the object to create the DateTime from\n   * @param {number} obj.year - a year, such as 1987\n   * @param {number} obj.month - a month, 1-12\n   * @param {number} obj.day - a day of the month, 1-31, depending on the month\n   * @param {number} obj.ordinal - day of the year, 1-365 or 366\n   * @param {number} obj.weekYear - an ISO week year\n   * @param {number} obj.weekNumber - an ISO week number, between 1 and 52 or 53, depending on the year\n   * @param {number} obj.weekday - an ISO weekday, 1-7, where 1 is Monday and 7 is Sunday\n   * @param {number} obj.hour - hour of the day, 0-23\n   * @param {number} obj.minute - minute of the hour, 0-59\n   * @param {number} obj.second - second of the minute, 0-59\n   * @param {number} obj.millisecond - millisecond of the second, 0-999\n   * @param {Object} opts - options for creating this DateTime\n   * @param {string|Zone} [opts.zone='local'] - interpret the numbers in the context of a particular zone. Can take any value taken as the first argument to setZone()\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromObject({ year: 1982, month: 5, day: 25}).toISODate() //=> '1982-05-25'\n   * @example DateTime.fromObject({ year: 1982 }).toISODate() //=> '1982-01-01'\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }) //~> today at 10:26:06\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'utc' }),\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'local' })\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'America/New_York' })\n   * @example DateTime.fromObject({ weekYear: 2016, weekNumber: 2, weekday: 3 }).toISODate() //=> '2016-01-13'\n   * @return {DateTime}\n   */\n  static fromObject(obj, opts = {}) {\n    obj = obj || {};\n    const zoneToUse = normalizeZone(opts.zone, Settings.defaultZone);\n    if (!zoneToUse.isValid) {\n      return DateTime.invalid(unsupportedZone(zoneToUse));\n    }\n\n    const tsNow = Settings.now(),\n      offsetProvis = !isUndefined(opts.specificOffset)\n        ? opts.specificOffset\n        : zoneToUse.offset(tsNow),\n      normalized = normalizeObject(obj, normalizeUnit),\n      containsOrdinal = !isUndefined(normalized.ordinal),\n      containsGregorYear = !isUndefined(normalized.year),\n      containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),\n      containsGregor = containsGregorYear || containsGregorMD,\n      definiteWeekDef = normalized.weekYear || normalized.weekNumber,\n      loc = Locale.fromObject(opts);\n\n    // cases:\n    // just a weekday -> this week's instance of that weekday, no worries\n    // (gregorian data or ordinal) + (weekYear or weekNumber) -> error\n    // (gregorian month or day) + ordinal -> error\n    // otherwise just use weeks or ordinals or gregorian, depending on what's specified\n\n    if ((containsGregor || containsOrdinal) && definiteWeekDef) {\n      throw new ConflictingSpecificationError(\n        \"Can't mix weekYear/weekNumber units with year/month/day or ordinals\"\n      );\n    }\n\n    if (containsGregorMD && containsOrdinal) {\n      throw new ConflictingSpecificationError(\"Can't mix ordinal dates with month/day\");\n    }\n\n    const useWeekData = definiteWeekDef || (normalized.weekday && !containsGregor);\n\n    // configure ourselves to deal with gregorian dates or week stuff\n    let units,\n      defaultValues,\n      objNow = tsToObj(tsNow, offsetProvis);\n    if (useWeekData) {\n      units = orderedWeekUnits;\n      defaultValues = defaultWeekUnitValues;\n      objNow = gregorianToWeek(objNow);\n    } else if (containsOrdinal) {\n      units = orderedOrdinalUnits;\n      defaultValues = defaultOrdinalUnitValues;\n      objNow = gregorianToOrdinal(objNow);\n    } else {\n      units = orderedUnits;\n      defaultValues = defaultUnitValues;\n    }\n\n    // set default values for missing stuff\n    let foundFirst = false;\n    for (const u of units) {\n      const v = normalized[u];\n      if (!isUndefined(v)) {\n        foundFirst = true;\n      } else if (foundFirst) {\n        normalized[u] = defaultValues[u];\n      } else {\n        normalized[u] = objNow[u];\n      }\n    }\n\n    // make sure the values we have are in range\n    const higherOrderInvalid = useWeekData\n        ? hasInvalidWeekData(normalized)\n        : containsOrdinal\n        ? hasInvalidOrdinalData(normalized)\n        : hasInvalidGregorianData(normalized),\n      invalid = higherOrderInvalid || hasInvalidTimeData(normalized);\n\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    }\n\n    // compute the actual time\n    const gregorian = useWeekData\n        ? weekToGregorian(normalized)\n        : containsOrdinal\n        ? ordinalToGregorian(normalized)\n        : normalized,\n      [tsFinal, offsetFinal] = objToTS(gregorian, offsetProvis, zoneToUse),\n      inst = new DateTime({\n        ts: tsFinal,\n        zone: zoneToUse,\n        o: offsetFinal,\n        loc,\n      });\n\n    // gregorian data + weekday serves only to validate\n    if (normalized.weekday && containsGregor && obj.weekday !== inst.weekday) {\n      return DateTime.invalid(\n        \"mismatched weekday\",\n        `you can't specify both a weekday of ${normalized.weekday} and a date of ${inst.toISO()}`\n      );\n    }\n\n    return inst;\n  }\n\n  /**\n   * Create a DateTime from an ISO 8601 string\n   * @param {string} text - the ISO string\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the time to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} [opts.outputCalendar] - the output calendar to set on the resulting DateTime instance\n   * @param {string} [opts.numberingSystem] - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123')\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00')\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00', {setZone: true})\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123', {zone: 'utc'})\n   * @example DateTime.fromISO('2016-W05-4')\n   * @return {DateTime}\n   */\n  static fromISO(text, opts = {}) {\n    const [vals, parsedZone] = parseISODate(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"ISO 8601\", text);\n  }\n\n  /**\n   * Create a DateTime from an RFC 2822 string\n   * @param {string} text - the RFC 2822 string\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since the offset is always specified in the string itself, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.\n   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromRFC2822('25 Nov 2016 13:23:12 GMT')\n   * @example DateTime.fromRFC2822('Fri, 25 Nov 2016 13:23:12 +0600')\n   * @example DateTime.fromRFC2822('25 Nov 2016 13:23 Z')\n   * @return {DateTime}\n   */\n  static fromRFC2822(text, opts = {}) {\n    const [vals, parsedZone] = parseRFC2822Date(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"RFC 2822\", text);\n  }\n\n  /**\n   * Create a DateTime from an HTTP header date\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1\n   * @param {string} text - the HTTP header date\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since HTTP dates are always in UTC, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.\n   * @param {boolean} [opts.setZone=false] - override the zone with the fixed-offset zone specified in the string. For HTTP dates, this is always UTC, so this option is equivalent to setting the `zone` option to 'utc', but this option is included for consistency with similar methods.\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromHTTP('Sun, 06 Nov 1994 08:49:37 GMT')\n   * @example DateTime.fromHTTP('Sunday, 06-Nov-94 08:49:37 GMT')\n   * @example DateTime.fromHTTP('Sun Nov  6 08:49:37 1994')\n   * @return {DateTime}\n   */\n  static fromHTTP(text, opts = {}) {\n    const [vals, parsedZone] = parseHTTPDate(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"HTTP\", opts);\n  }\n\n  /**\n   * Create a DateTime from an input string and format string.\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/parsing?id=table-of-tokens).\n   * @param {string} text - the string to parse\n   * @param {string} fmt - the format the string is expected to be in (see the link below for the formats)\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale\n   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromFormat(text, fmt, opts = {}) {\n    if (isUndefined(text) || isUndefined(fmt)) {\n      throw new InvalidArgumentError(\"fromFormat requires an input string and a format\");\n    }\n\n    const { locale = null, numberingSystem = null } = opts,\n      localeToUse = Locale.fromOpts({\n        locale,\n        numberingSystem,\n        defaultToEN: true,\n      }),\n      [vals, parsedZone, specificOffset, invalid] = parseFromTokens(localeToUse, text, fmt);\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    } else {\n      return parseDataToDateTime(vals, parsedZone, opts, `format ${fmt}`, text, specificOffset);\n    }\n  }\n\n  /**\n   * @deprecated use fromFormat instead\n   */\n  static fromString(text, fmt, opts = {}) {\n    return DateTime.fromFormat(text, fmt, opts);\n  }\n\n  /**\n   * Create a DateTime from a SQL date, time, or datetime\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale\n   * @param {string} text - the string to parse\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale\n   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @example DateTime.fromSQL('2017-05-15')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342+06:00')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles', { setZone: true })\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342', { zone: 'America/Los_Angeles' })\n   * @example DateTime.fromSQL('09:12:34.342')\n   * @return {DateTime}\n   */\n  static fromSQL(text, opts = {}) {\n    const [vals, parsedZone] = parseSQL(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"SQL\", text);\n  }\n\n  /**\n   * Create an invalid DateTime.\n   * @param {string} reason - simple string of why this DateTime is invalid. Should not contain parameters or anything else data-dependent.\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {DateTime}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the DateTime is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidDateTimeError(invalid);\n    } else {\n      return new DateTime({ invalid });\n    }\n  }\n\n  /**\n   * Check if an object is an instance of DateTime. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isDateTime(o) {\n    return (o && o.isLuxonDateTime) || false;\n  }\n\n  /**\n   * Produce the format string for a set of options\n   * @param formatOpts\n   * @param localeOpts\n   * @returns {string}\n   */\n  static parseFormatForOpts(formatOpts, localeOpts = {}) {\n    const tokenList = formatOptsToTokens(formatOpts, Locale.fromObject(localeOpts));\n    return !tokenList ? null : tokenList.map((t) => (t ? t.val : null)).join(\"\");\n  }\n\n  /**\n   * Produce the the fully expanded format token for the locale\n   * Does NOT quote characters, so quoted tokens will not round trip correctly\n   * @param fmt\n   * @param localeOpts\n   * @returns {string}\n   */\n  static expandFormat(fmt, localeOpts = {}) {\n    const expanded = expandMacroTokens(Formatter.parseFormat(fmt), Locale.fromObject(localeOpts));\n    return expanded.map((t) => t.val).join(\"\");\n  }\n\n  // INFO\n\n  /**\n   * Get the value of unit.\n   * @param {string} unit - a unit such as 'minute' or 'day'\n   * @example DateTime.local(2017, 7, 4).get('month'); //=> 7\n   * @example DateTime.local(2017, 7, 4).get('day'); //=> 4\n   * @return {number}\n   */\n  get(unit) {\n    return this[unit];\n  }\n\n  /**\n   * Returns whether the DateTime is valid. Invalid DateTimes occur when:\n   * * The DateTime was created from invalid calendar information, such as the 13th month or February 30\n   * * The DateTime was created by an operation on another invalid date\n   * @type {boolean}\n   */\n  get isValid() {\n    return this.invalid === null;\n  }\n\n  /**\n   * Returns an error code if this DateTime is invalid, or null if the DateTime is valid\n   * @type {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this DateTime became invalid, or null if the DateTime is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Get the locale of a DateTime, such 'en-GB'. The locale is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get locale() {\n    return this.isValid ? this.loc.locale : null;\n  }\n\n  /**\n   * Get the numbering system of a DateTime, such 'beng'. The numbering system is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get numberingSystem() {\n    return this.isValid ? this.loc.numberingSystem : null;\n  }\n\n  /**\n   * Get the output calendar of a DateTime, such 'islamic'. The output calendar is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get outputCalendar() {\n    return this.isValid ? this.loc.outputCalendar : null;\n  }\n\n  /**\n   * Get the time zone associated with this DateTime.\n   * @type {Zone}\n   */\n  get zone() {\n    return this._zone;\n  }\n\n  /**\n   * Get the name of the time zone.\n   * @type {string}\n   */\n  get zoneName() {\n    return this.isValid ? this.zone.name : null;\n  }\n\n  /**\n   * Get the year\n   * @example DateTime.local(2017, 5, 25).year //=> 2017\n   * @type {number}\n   */\n  get year() {\n    return this.isValid ? this.c.year : NaN;\n  }\n\n  /**\n   * Get the quarter\n   * @example DateTime.local(2017, 5, 25).quarter //=> 2\n   * @type {number}\n   */\n  get quarter() {\n    return this.isValid ? Math.ceil(this.c.month / 3) : NaN;\n  }\n\n  /**\n   * Get the month (1-12).\n   * @example DateTime.local(2017, 5, 25).month //=> 5\n   * @type {number}\n   */\n  get month() {\n    return this.isValid ? this.c.month : NaN;\n  }\n\n  /**\n   * Get the day of the month (1-30ish).\n   * @example DateTime.local(2017, 5, 25).day //=> 25\n   * @type {number}\n   */\n  get day() {\n    return this.isValid ? this.c.day : NaN;\n  }\n\n  /**\n   * Get the hour of the day (0-23).\n   * @example DateTime.local(2017, 5, 25, 9).hour //=> 9\n   * @type {number}\n   */\n  get hour() {\n    return this.isValid ? this.c.hour : NaN;\n  }\n\n  /**\n   * Get the minute of the hour (0-59).\n   * @example DateTime.local(2017, 5, 25, 9, 30).minute //=> 30\n   * @type {number}\n   */\n  get minute() {\n    return this.isValid ? this.c.minute : NaN;\n  }\n\n  /**\n   * Get the second of the minute (0-59).\n   * @example DateTime.local(2017, 5, 25, 9, 30, 52).second //=> 52\n   * @type {number}\n   */\n  get second() {\n    return this.isValid ? this.c.second : NaN;\n  }\n\n  /**\n   * Get the millisecond of the second (0-999).\n   * @example DateTime.local(2017, 5, 25, 9, 30, 52, 654).millisecond //=> 654\n   * @type {number}\n   */\n  get millisecond() {\n    return this.isValid ? this.c.millisecond : NaN;\n  }\n\n  /**\n   * Get the week year\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2014, 12, 31).weekYear //=> 2015\n   * @type {number}\n   */\n  get weekYear() {\n    return this.isValid ? possiblyCachedWeekData(this).weekYear : NaN;\n  }\n\n  /**\n   * Get the week number of the week year (1-52ish).\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2017, 5, 25).weekNumber //=> 21\n   * @type {number}\n   */\n  get weekNumber() {\n    return this.isValid ? possiblyCachedWeekData(this).weekNumber : NaN;\n  }\n\n  /**\n   * Get the day of the week.\n   * 1 is Monday and 7 is Sunday\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2014, 11, 31).weekday //=> 4\n   * @type {number}\n   */\n  get weekday() {\n    return this.isValid ? possiblyCachedWeekData(this).weekday : NaN;\n  }\n\n  /**\n   * Get the ordinal (meaning the day of the year)\n   * @example DateTime.local(2017, 5, 25).ordinal //=> 145\n   * @type {number|DateTime}\n   */\n  get ordinal() {\n    return this.isValid ? gregorianToOrdinal(this.c).ordinal : NaN;\n  }\n\n  /**\n   * Get the human readable short month name, such as 'Oct'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).monthShort //=> Oct\n   * @type {string}\n   */\n  get monthShort() {\n    return this.isValid ? Info.months(\"short\", { locObj: this.loc })[this.month - 1] : null;\n  }\n\n  /**\n   * Get the human readable long month name, such as 'October'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).monthLong //=> October\n   * @type {string}\n   */\n  get monthLong() {\n    return this.isValid ? Info.months(\"long\", { locObj: this.loc })[this.month - 1] : null;\n  }\n\n  /**\n   * Get the human readable short weekday, such as 'Mon'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).weekdayShort //=> Mon\n   * @type {string}\n   */\n  get weekdayShort() {\n    return this.isValid ? Info.weekdays(\"short\", { locObj: this.loc })[this.weekday - 1] : null;\n  }\n\n  /**\n   * Get the human readable long weekday, such as 'Monday'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).weekdayLong //=> Monday\n   * @type {string}\n   */\n  get weekdayLong() {\n    return this.isValid ? Info.weekdays(\"long\", { locObj: this.loc })[this.weekday - 1] : null;\n  }\n\n  /**\n   * Get the UTC offset of this DateTime in minutes\n   * @example DateTime.now().offset //=> -240\n   * @example DateTime.utc().offset //=> 0\n   * @type {number}\n   */\n  get offset() {\n    return this.isValid ? +this.o : NaN;\n  }\n\n  /**\n   * Get the short human name for the zone's current offset, for example \"EST\" or \"EDT\".\n   * Defaults to the system's locale if no locale has been specified\n   * @type {string}\n   */\n  get offsetNameShort() {\n    if (this.isValid) {\n      return this.zone.offsetName(this.ts, {\n        format: \"short\",\n        locale: this.locale,\n      });\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the long human name for the zone's current offset, for example \"Eastern Standard Time\" or \"Eastern Daylight Time\".\n   * Defaults to the system's locale if no locale has been specified\n   * @type {string}\n   */\n  get offsetNameLong() {\n    if (this.isValid) {\n      return this.zone.offsetName(this.ts, {\n        format: \"long\",\n        locale: this.locale,\n      });\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get whether this zone's offset ever changes, as in a DST.\n   * @type {boolean}\n   */\n  get isOffsetFixed() {\n    return this.isValid ? this.zone.isUniversal : null;\n  }\n\n  /**\n   * Get whether the DateTime is in a DST.\n   * @type {boolean}\n   */\n  get isInDST() {\n    if (this.isOffsetFixed) {\n      return false;\n    } else {\n      return (\n        this.offset > this.set({ month: 1, day: 1 }).offset ||\n        this.offset > this.set({ month: 5 }).offset\n      );\n    }\n  }\n\n  /**\n   * Get those DateTimes which have the same local time as this DateTime, but a different offset from UTC\n   * in this DateTime's zone. During DST changes local time can be ambiguous, for example\n   * `2023-10-29T02:30:00` in `Europe/Berlin` can have offset `+01:00` or `+02:00`.\n   * This method will return both possible DateTimes if this DateTime's local time is ambiguous.\n   * @returns {DateTime[]}\n   */\n  getPossibleOffsets() {\n    if (!this.isValid || this.isOffsetFixed) {\n      return [this];\n    }\n    const dayMs = 86400000;\n    const minuteMs = 60000;\n    const localTS = objToLocalTS(this.c);\n    const oEarlier = this.zone.offset(localTS - dayMs);\n    const oLater = this.zone.offset(localTS + dayMs);\n\n    const o1 = this.zone.offset(localTS - oEarlier * minuteMs);\n    const o2 = this.zone.offset(localTS - oLater * minuteMs);\n    if (o1 === o2) {\n      return [this];\n    }\n    const ts1 = localTS - o1 * minuteMs;\n    const ts2 = localTS - o2 * minuteMs;\n    const c1 = tsToObj(ts1, o1);\n    const c2 = tsToObj(ts2, o2);\n    if (\n      c1.hour === c2.hour &&\n      c1.minute === c2.minute &&\n      c1.second === c2.second &&\n      c1.millisecond === c2.millisecond\n    ) {\n      return [clone(this, { ts: ts1 }), clone(this, { ts: ts2 })];\n    }\n    return [this];\n  }\n\n  /**\n   * Returns true if this DateTime is in a leap year, false otherwise\n   * @example DateTime.local(2016).isInLeapYear //=> true\n   * @example DateTime.local(2013).isInLeapYear //=> false\n   * @type {boolean}\n   */\n  get isInLeapYear() {\n    return isLeapYear(this.year);\n  }\n\n  /**\n   * Returns the number of days in this DateTime's month\n   * @example DateTime.local(2016, 2).daysInMonth //=> 29\n   * @example DateTime.local(2016, 3).daysInMonth //=> 31\n   * @type {number}\n   */\n  get daysInMonth() {\n    return daysInMonth(this.year, this.month);\n  }\n\n  /**\n   * Returns the number of days in this DateTime's year\n   * @example DateTime.local(2016).daysInYear //=> 366\n   * @example DateTime.local(2013).daysInYear //=> 365\n   * @type {number}\n   */\n  get daysInYear() {\n    return this.isValid ? daysInYear(this.year) : NaN;\n  }\n\n  /**\n   * Returns the number of weeks in this DateTime's year\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2004).weeksInWeekYear //=> 53\n   * @example DateTime.local(2013).weeksInWeekYear //=> 52\n   * @type {number}\n   */\n  get weeksInWeekYear() {\n    return this.isValid ? weeksInWeekYear(this.weekYear) : NaN;\n  }\n\n  /**\n   * Returns the resolved Intl options for this DateTime.\n   * This is useful in understanding the behavior of formatting methods\n   * @param {Object} opts - the same options as toLocaleString\n   * @return {Object}\n   */\n  resolvedLocaleOptions(opts = {}) {\n    const { locale, numberingSystem, calendar } = Formatter.create(\n      this.loc.clone(opts),\n      opts\n    ).resolvedOptions(this);\n    return { locale, numberingSystem, outputCalendar: calendar };\n  }\n\n  // TRANSFORM\n\n  /**\n   * \"Set\" the DateTime's zone to UTC. Returns a newly-constructed DateTime.\n   *\n   * Equivalent to {@link DateTime#setZone}('utc')\n   * @param {number} [offset=0] - optionally, an offset from UTC in minutes\n   * @param {Object} [opts={}] - options to pass to `setZone()`\n   * @return {DateTime}\n   */\n  toUTC(offset = 0, opts = {}) {\n    return this.setZone(FixedOffsetZone.instance(offset), opts);\n  }\n\n  /**\n   * \"Set\" the DateTime's zone to the host's local zone. Returns a newly-constructed DateTime.\n   *\n   * Equivalent to `setZone('local')`\n   * @return {DateTime}\n   */\n  toLocal() {\n    return this.setZone(Settings.defaultZone);\n  }\n\n  /**\n   * \"Set\" the DateTime's zone to specified zone. Returns a newly-constructed DateTime.\n   *\n   * By default, the setter keeps the underlying time the same (as in, the same timestamp), but the new instance will report different local times and consider DSTs when making computations, as with {@link DateTime#plus}. You may wish to use {@link DateTime#toLocal} and {@link DateTime#toUTC} which provide simple convenience wrappers for commonly used zones.\n   * @param {string|Zone} [zone='local'] - a zone identifier. As a string, that can be any IANA zone supported by the host environment, or a fixed-offset name of the form 'UTC+3', or the strings 'local' or 'utc'. You may also supply an instance of a {@link DateTime#Zone} class.\n   * @param {Object} opts - options\n   * @param {boolean} [opts.keepLocalTime=false] - If true, adjust the underlying time so that the local time stays the same, but in the target zone. You should rarely need this.\n   * @return {DateTime}\n   */\n  setZone(zone, { keepLocalTime = false, keepCalendarTime = false } = {}) {\n    zone = normalizeZone(zone, Settings.defaultZone);\n    if (zone.equals(this.zone)) {\n      return this;\n    } else if (!zone.isValid) {\n      return DateTime.invalid(unsupportedZone(zone));\n    } else {\n      let newTS = this.ts;\n      if (keepLocalTime || keepCalendarTime) {\n        const offsetGuess = zone.offset(this.ts);\n        const asObj = this.toObject();\n        [newTS] = objToTS(asObj, offsetGuess, zone);\n      }\n      return clone(this, { ts: newTS, zone });\n    }\n  }\n\n  /**\n   * \"Set\" the locale, numberingSystem, or outputCalendar. Returns a newly-constructed DateTime.\n   * @param {Object} properties - the properties to set\n   * @example DateTime.local(2017, 5, 25).reconfigure({ locale: 'en-GB' })\n   * @return {DateTime}\n   */\n  reconfigure({ locale, numberingSystem, outputCalendar } = {}) {\n    const loc = this.loc.clone({ locale, numberingSystem, outputCalendar });\n    return clone(this, { loc });\n  }\n\n  /**\n   * \"Set\" the locale. Returns a newly-constructed DateTime.\n   * Just a convenient alias for reconfigure({ locale })\n   * @example DateTime.local(2017, 5, 25).setLocale('en-GB')\n   * @return {DateTime}\n   */\n  setLocale(locale) {\n    return this.reconfigure({ locale });\n  }\n\n  /**\n   * \"Set\" the values of specified units. Returns a newly-constructed DateTime.\n   * You can only set units with this method; for \"setting\" metadata, see {@link DateTime#reconfigure} and {@link DateTime#setZone}.\n   * @param {Object} values - a mapping of units to numbers\n   * @example dt.set({ year: 2017 })\n   * @example dt.set({ hour: 8, minute: 30 })\n   * @example dt.set({ weekday: 5 })\n   * @example dt.set({ year: 2005, ordinal: 234 })\n   * @return {DateTime}\n   */\n  set(values) {\n    if (!this.isValid) return this;\n\n    const normalized = normalizeObject(values, normalizeUnit),\n      settingWeekStuff =\n        !isUndefined(normalized.weekYear) ||\n        !isUndefined(normalized.weekNumber) ||\n        !isUndefined(normalized.weekday),\n      containsOrdinal = !isUndefined(normalized.ordinal),\n      containsGregorYear = !isUndefined(normalized.year),\n      containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),\n      containsGregor = containsGregorYear || containsGregorMD,\n      definiteWeekDef = normalized.weekYear || normalized.weekNumber;\n\n    if ((containsGregor || containsOrdinal) && definiteWeekDef) {\n      throw new ConflictingSpecificationError(\n        \"Can't mix weekYear/weekNumber units with year/month/day or ordinals\"\n      );\n    }\n\n    if (containsGregorMD && containsOrdinal) {\n      throw new ConflictingSpecificationError(\"Can't mix ordinal dates with month/day\");\n    }\n\n    let mixed;\n    if (settingWeekStuff) {\n      mixed = weekToGregorian({ ...gregorianToWeek(this.c), ...normalized });\n    } else if (!isUndefined(normalized.ordinal)) {\n      mixed = ordinalToGregorian({ ...gregorianToOrdinal(this.c), ...normalized });\n    } else {\n      mixed = { ...this.toObject(), ...normalized };\n\n      // if we didn't set the day but we ended up on an overflow date,\n      // use the last day of the right month\n      if (isUndefined(normalized.day)) {\n        mixed.day = Math.min(daysInMonth(mixed.year, mixed.month), mixed.day);\n      }\n    }\n\n    const [ts, o] = objToTS(mixed, this.o, this.zone);\n    return clone(this, { ts, o });\n  }\n\n  /**\n   * Add a period of time to this DateTime and return the resulting DateTime\n   *\n   * Adding hours, minutes, seconds, or milliseconds increases the timestamp by the right number of milliseconds. Adding days, months, or years shifts the calendar, accounting for DSTs and leap years along the way. Thus, `dt.plus({ hours: 24 })` may result in a different time than `dt.plus({ days: 1 })` if there's a DST shift in between.\n   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @example DateTime.now().plus(123) //~> in 123 milliseconds\n   * @example DateTime.now().plus({ minutes: 15 }) //~> in 15 minutes\n   * @example DateTime.now().plus({ days: 1 }) //~> this time tomorrow\n   * @example DateTime.now().plus({ days: -1 }) //~> this time yesterday\n   * @example DateTime.now().plus({ hours: 3, minutes: 13 }) //~> in 3 hr, 13 min\n   * @example DateTime.now().plus(Duration.fromObject({ hours: 3, minutes: 13 })) //~> in 3 hr, 13 min\n   * @return {DateTime}\n   */\n  plus(duration) {\n    if (!this.isValid) return this;\n    const dur = Duration.fromDurationLike(duration);\n    return clone(this, adjustTime(this, dur));\n  }\n\n  /**\n   * Subtract a period of time to this DateTime and return the resulting DateTime\n   * See {@link DateTime#plus}\n   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   @return {DateTime}\n   */\n  minus(duration) {\n    if (!this.isValid) return this;\n    const dur = Duration.fromDurationLike(duration).negate();\n    return clone(this, adjustTime(this, dur));\n  }\n\n  /**\n   * \"Set\" this DateTime to the beginning of a unit of time.\n   * @param {string} unit - The unit to go to the beginning of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.\n   * @example DateTime.local(2014, 3, 3).startOf('month').toISODate(); //=> '2014-03-01'\n   * @example DateTime.local(2014, 3, 3).startOf('year').toISODate(); //=> '2014-01-01'\n   * @example DateTime.local(2014, 3, 3).startOf('week').toISODate(); //=> '2014-03-03', weeks always start on Mondays\n   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('day').toISOTime(); //=> '00:00.000-05:00'\n   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('hour').toISOTime(); //=> '05:00:00.000-05:00'\n   * @return {DateTime}\n   */\n  startOf(unit) {\n    if (!this.isValid) return this;\n    const o = {},\n      normalizedUnit = Duration.normalizeUnit(unit);\n    switch (normalizedUnit) {\n      case \"years\":\n        o.month = 1;\n      // falls through\n      case \"quarters\":\n      case \"months\":\n        o.day = 1;\n      // falls through\n      case \"weeks\":\n      case \"days\":\n        o.hour = 0;\n      // falls through\n      case \"hours\":\n        o.minute = 0;\n      // falls through\n      case \"minutes\":\n        o.second = 0;\n      // falls through\n      case \"seconds\":\n        o.millisecond = 0;\n        break;\n      case \"milliseconds\":\n        break;\n      // no default, invalid units throw in normalizeUnit()\n    }\n\n    if (normalizedUnit === \"weeks\") {\n      o.weekday = 1;\n    }\n\n    if (normalizedUnit === \"quarters\") {\n      const q = Math.ceil(this.month / 3);\n      o.month = (q - 1) * 3 + 1;\n    }\n\n    return this.set(o);\n  }\n\n  /**\n   * \"Set\" this DateTime to the end (meaning the last millisecond) of a unit of time\n   * @param {string} unit - The unit to go to the end of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.\n   * @example DateTime.local(2014, 3, 3).endOf('month').toISO(); //=> '2014-03-31T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3).endOf('year').toISO(); //=> '2014-12-31T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3).endOf('week').toISO(); // => '2014-03-09T23:59:59.999-05:00', weeks start on Mondays\n   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('day').toISO(); //=> '2014-03-03T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('hour').toISO(); //=> '2014-03-03T05:59:59.999-05:00'\n   * @return {DateTime}\n   */\n  endOf(unit) {\n    return this.isValid\n      ? this.plus({ [unit]: 1 })\n          .startOf(unit)\n          .minus(1)\n      : this;\n  }\n\n  // OUTPUT\n\n  /**\n   * Returns a string representation of this DateTime formatted according to the specified format string.\n   * **You may not want this.** See {@link DateTime#toLocaleString} for a more flexible formatting tool. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/formatting?id=table-of-tokens).\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale.\n   * @param {string} fmt - the format string\n   * @param {Object} opts - opts to override the configuration options on this DateTime\n   * @example DateTime.now().toFormat('yyyy LLL dd') //=> '2017 Apr 22'\n   * @example DateTime.now().setLocale('fr').toFormat('yyyy LLL dd') //=> '2017 avr. 22'\n   * @example DateTime.now().toFormat('yyyy LLL dd', { locale: \"fr\" }) //=> '2017 avr. 22'\n   * @example DateTime.now().toFormat(\"HH 'hours and' mm 'minutes'\") //=> '20 hours and 55 minutes'\n   * @return {string}\n   */\n  toFormat(fmt, opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this, fmt)\n      : INVALID;\n  }\n\n  /**\n   * Returns a localized string representing this date. Accepts the same options as the Intl.DateTimeFormat constructor and any presets defined by Luxon, such as `DateTime.DATE_FULL` or `DateTime.TIME_SIMPLE`.\n   * The exact behavior of this method is browser-specific, but in general it will return an appropriate representation\n   * of the DateTime in the assigned locale.\n   * Defaults to the system's locale if no locale has been specified\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param formatOpts {Object} - Intl.DateTimeFormat constructor options and configuration options\n   * @param {Object} opts - opts to override the configuration options on this DateTime\n   * @example DateTime.now().toLocaleString(); //=> 4/20/2017\n   * @example DateTime.now().setLocale('en-gb').toLocaleString(); //=> '20/04/2017'\n   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL); //=> 'April 20, 2017'\n   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL, { locale: 'fr' }); //=> '28 août 2022'\n   * @example DateTime.now().toLocaleString(DateTime.TIME_SIMPLE); //=> '11:32 AM'\n   * @example DateTime.now().toLocaleString(DateTime.DATETIME_SHORT); //=> '4/20/2017, 11:32 AM'\n   * @example DateTime.now().toLocaleString({ weekday: 'long', month: 'long', day: '2-digit' }); //=> 'Thursday, April 20'\n   * @example DateTime.now().toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> 'Thu, Apr 20, 11:27 AM'\n   * @example DateTime.now().toLocaleString({ hour: '2-digit', minute: '2-digit', hourCycle: 'h23' }); //=> '11:32'\n   * @return {string}\n   */\n  toLocaleString(formatOpts = Formats.DATE_SHORT, opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.loc.clone(opts), formatOpts).formatDateTime(this)\n      : INVALID;\n  }\n\n  /**\n   * Returns an array of format \"parts\", meaning individual tokens along with metadata. This is allows callers to post-process individual sections of the formatted output.\n   * Defaults to the system's locale if no locale has been specified\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/formatToParts\n   * @param opts {Object} - Intl.DateTimeFormat constructor options, same as `toLocaleString`.\n   * @example DateTime.now().toLocaleParts(); //=> [\n   *                                   //=>   { type: 'day', value: '25' },\n   *                                   //=>   { type: 'literal', value: '/' },\n   *                                   //=>   { type: 'month', value: '05' },\n   *                                   //=>   { type: 'literal', value: '/' },\n   *                                   //=>   { type: 'year', value: '1982' }\n   *                                   //=> ]\n   */\n  toLocaleParts(opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.loc.clone(opts), opts).formatDateTimeParts(this)\n      : [];\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.extendedZone=false] - add the time zone format extension\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc(1983, 5, 25).toISO() //=> '1982-05-25T00:00:00.000Z'\n   * @example DateTime.now().toISO() //=> '2017-04-22T20:47:05.335-04:00'\n   * @example DateTime.now().toISO({ includeOffset: false }) //=> '2017-04-22T20:47:05.335'\n   * @example DateTime.now().toISO({ format: 'basic' }) //=> '20170422T204705.335-0400'\n   * @return {string}\n   */\n  toISO({\n    format = \"extended\",\n    suppressSeconds = false,\n    suppressMilliseconds = false,\n    includeOffset = true,\n    extendedZone = false,\n  } = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    const ext = format === \"extended\";\n\n    let c = toISODate(this, ext);\n    c += \"T\";\n    c += toISOTime(this, ext, suppressSeconds, suppressMilliseconds, includeOffset, extendedZone);\n    return c;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's date component\n   * @param {Object} opts - options\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc(1982, 5, 25).toISODate() //=> '1982-05-25'\n   * @example DateTime.utc(1982, 5, 25).toISODate({ format: 'basic' }) //=> '19820525'\n   * @return {string}\n   */\n  toISODate({ format = \"extended\" } = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    return toISODate(this, format === \"extended\");\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's week date\n   * @example DateTime.utc(1982, 5, 25).toISOWeekDate() //=> '1982-W21-2'\n   * @return {string}\n   */\n  toISOWeekDate() {\n    return toTechFormat(this, \"kkkk-'W'WW-c\");\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's time component\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.extendedZone=true] - add the time zone format extension\n   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime() //=> '07:34:19.361Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34, seconds: 0, milliseconds: 0 }).toISOTime({ suppressSeconds: true }) //=> '07:34Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ format: 'basic' }) //=> '073419.361Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ includePrefix: true }) //=> 'T07:34:19.361Z'\n   * @return {string}\n   */\n  toISOTime({\n    suppressMilliseconds = false,\n    suppressSeconds = false,\n    includeOffset = true,\n    includePrefix = false,\n    extendedZone = false,\n    format = \"extended\",\n  } = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    let c = includePrefix ? \"T\" : \"\";\n    return (\n      c +\n      toISOTime(\n        this,\n        format === \"extended\",\n        suppressSeconds,\n        suppressMilliseconds,\n        includeOffset,\n        extendedZone\n      )\n    );\n  }\n\n  /**\n   * Returns an RFC 2822-compatible string representation of this DateTime\n   * @example DateTime.utc(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 +0000'\n   * @example DateTime.local(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 -0400'\n   * @return {string}\n   */\n  toRFC2822() {\n    return toTechFormat(this, \"EEE, dd LLL yyyy HH:mm:ss ZZZ\", false);\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in HTTP headers. The output is always expressed in GMT.\n   * Specifically, the string conforms to RFC 1123.\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1\n   * @example DateTime.utc(2014, 7, 13).toHTTP() //=> 'Sun, 13 Jul 2014 00:00:00 GMT'\n   * @example DateTime.utc(2014, 7, 13, 19).toHTTP() //=> 'Sun, 13 Jul 2014 19:00:00 GMT'\n   * @return {string}\n   */\n  toHTTP() {\n    return toTechFormat(this.toUTC(), \"EEE, dd LLL yyyy HH:mm:ss 'GMT'\");\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL Date\n   * @example DateTime.utc(2014, 7, 13).toSQLDate() //=> '2014-07-13'\n   * @return {string}\n   */\n  toSQLDate() {\n    if (!this.isValid) {\n      return null;\n    }\n    return toISODate(this, true);\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL Time\n   * @param {Object} opts - options\n   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.includeOffsetSpace=true] - include the space between the time and the offset, such as '05:15:16.345 -04:00'\n   * @example DateTime.utc().toSQL() //=> '05:15:16.345'\n   * @example DateTime.now().toSQL() //=> '05:15:16.345 -04:00'\n   * @example DateTime.now().toSQL({ includeOffset: false }) //=> '05:15:16.345'\n   * @example DateTime.now().toSQL({ includeZone: false }) //=> '05:15:16.345 America/New_York'\n   * @return {string}\n   */\n  toSQLTime({ includeOffset = true, includeZone = false, includeOffsetSpace = true } = {}) {\n    let fmt = \"HH:mm:ss.SSS\";\n\n    if (includeZone || includeOffset) {\n      if (includeOffsetSpace) {\n        fmt += \" \";\n      }\n      if (includeZone) {\n        fmt += \"z\";\n      } else if (includeOffset) {\n        fmt += \"ZZ\";\n      }\n    }\n\n    return toTechFormat(this, fmt, true);\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL DateTime\n   * @param {Object} opts - options\n   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.includeOffsetSpace=true] - include the space between the time and the offset, such as '05:15:16.345 -04:00'\n   * @example DateTime.utc(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 Z'\n   * @example DateTime.local(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 -04:00'\n   * @example DateTime.local(2014, 7, 13).toSQL({ includeOffset: false }) //=> '2014-07-13 00:00:00.000'\n   * @example DateTime.local(2014, 7, 13).toSQL({ includeZone: true }) //=> '2014-07-13 00:00:00.000 America/New_York'\n   * @return {string}\n   */\n  toSQL(opts = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    return `${this.toSQLDate()} ${this.toSQLTime(opts)}`;\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for debugging\n   * @return {string}\n   */\n  toString() {\n    return this.isValid ? this.toISO() : INVALID;\n  }\n\n  /**\n   * Returns the epoch milliseconds of this DateTime. Alias of {@link DateTime#toMillis}\n   * @return {number}\n   */\n  valueOf() {\n    return this.toMillis();\n  }\n\n  /**\n   * Returns the epoch milliseconds of this DateTime.\n   * @return {number}\n   */\n  toMillis() {\n    return this.isValid ? this.ts : NaN;\n  }\n\n  /**\n   * Returns the epoch seconds of this DateTime.\n   * @return {number}\n   */\n  toSeconds() {\n    return this.isValid ? this.ts / 1000 : NaN;\n  }\n\n  /**\n   * Returns the epoch seconds (as a whole number) of this DateTime.\n   * @return {number}\n   */\n  toUnixInteger() {\n    return this.isValid ? Math.floor(this.ts / 1000) : NaN;\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this DateTime appropriate for use in JSON.\n   * @return {string}\n   */\n  toJSON() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns a BSON serializable equivalent to this DateTime.\n   * @return {Date}\n   */\n  toBSON() {\n    return this.toJSDate();\n  }\n\n  /**\n   * Returns a JavaScript object with this DateTime's year, month, day, and so on.\n   * @param opts - options for generating the object\n   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output\n   * @example DateTime.now().toObject() //=> { year: 2017, month: 4, day: 22, hour: 20, minute: 49, second: 42, millisecond: 268 }\n   * @return {Object}\n   */\n  toObject(opts = {}) {\n    if (!this.isValid) return {};\n\n    const base = { ...this.c };\n\n    if (opts.includeConfig) {\n      base.outputCalendar = this.outputCalendar;\n      base.numberingSystem = this.loc.numberingSystem;\n      base.locale = this.loc.locale;\n    }\n    return base;\n  }\n\n  /**\n   * Returns a JavaScript Date equivalent to this DateTime.\n   * @return {Date}\n   */\n  toJSDate() {\n    return new Date(this.isValid ? this.ts : NaN);\n  }\n\n  // COMPARE\n\n  /**\n   * Return the difference between two DateTimes as a Duration.\n   * @param {DateTime} otherDateTime - the DateTime to compare this one to\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or array of units (such as 'hours' or 'days') to include in the duration.\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @example\n   * var i1 = DateTime.fromISO('1982-05-25T09:45'),\n   *     i2 = DateTime.fromISO('1983-10-14T10:30');\n   * i2.diff(i1).toObject() //=> { milliseconds: 43807500000 }\n   * i2.diff(i1, 'hours').toObject() //=> { hours: 12168.75 }\n   * i2.diff(i1, ['months', 'days']).toObject() //=> { months: 16, days: 19.03125 }\n   * i2.diff(i1, ['months', 'days', 'hours']).toObject() //=> { months: 16, days: 19, hours: 0.75 }\n   * @return {Duration}\n   */\n  diff(otherDateTime, unit = \"milliseconds\", opts = {}) {\n    if (!this.isValid || !otherDateTime.isValid) {\n      return Duration.invalid(\"created by diffing an invalid DateTime\");\n    }\n\n    const durOpts = { locale: this.locale, numberingSystem: this.numberingSystem, ...opts };\n\n    const units = maybeArray(unit).map(Duration.normalizeUnit),\n      otherIsLater = otherDateTime.valueOf() > this.valueOf(),\n      earlier = otherIsLater ? this : otherDateTime,\n      later = otherIsLater ? otherDateTime : this,\n      diffed = diff(earlier, later, units, durOpts);\n\n    return otherIsLater ? diffed.negate() : diffed;\n  }\n\n  /**\n   * Return the difference between this DateTime and right now.\n   * See {@link DateTime#diff}\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or units units (such as 'hours' or 'days') to include in the duration\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @return {Duration}\n   */\n  diffNow(unit = \"milliseconds\", opts = {}) {\n    return this.diff(DateTime.now(), unit, opts);\n  }\n\n  /**\n   * Return an Interval spanning between this DateTime and another DateTime\n   * @param {DateTime} otherDateTime - the other end point of the Interval\n   * @return {Interval}\n   */\n  until(otherDateTime) {\n    return this.isValid ? Interval.fromDateTimes(this, otherDateTime) : this;\n  }\n\n  /**\n   * Return whether this DateTime is in the same unit of time as another DateTime.\n   * Higher-order units must also be identical for this function to return `true`.\n   * Note that time zones are **ignored** in this comparison, which compares the **local** calendar time. Use {@link DateTime#setZone} to convert one of the dates if needed.\n   * @param {DateTime} otherDateTime - the other DateTime\n   * @param {string} unit - the unit of time to check sameness on\n   * @example DateTime.now().hasSame(otherDT, 'day'); //~> true if otherDT is in the same current calendar day\n   * @return {boolean}\n   */\n  hasSame(otherDateTime, unit) {\n    if (!this.isValid) return false;\n\n    const inputMs = otherDateTime.valueOf();\n    const adjustedToZone = this.setZone(otherDateTime.zone, { keepLocalTime: true });\n    return adjustedToZone.startOf(unit) <= inputMs && inputMs <= adjustedToZone.endOf(unit);\n  }\n\n  /**\n   * Equality check\n   * Two DateTimes are equal if and only if they represent the same millisecond, have the same zone and location, and are both valid.\n   * To compare just the millisecond values, use `+dt1 === +dt2`.\n   * @param {DateTime} other - the other DateTime\n   * @return {boolean}\n   */\n  equals(other) {\n    return (\n      this.isValid &&\n      other.isValid &&\n      this.valueOf() === other.valueOf() &&\n      this.zone.equals(other.zone) &&\n      this.loc.equals(other.loc)\n    );\n  }\n\n  /**\n   * Returns a string representation of a this time relative to now, such as \"in two days\". Can only internationalize if your\n   * platform supports Intl.RelativeTimeFormat. Rounds down by default.\n   * @param {Object} options - options that affect the output\n   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.\n   * @param {string} [options.style=\"long\"] - the style of units, must be \"long\", \"short\", or \"narrow\"\n   * @param {string|string[]} options.unit - use a specific unit or array of units; if omitted, or an array, the method will pick the best unit. Use an array or one of \"years\", \"quarters\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", or \"seconds\"\n   * @param {boolean} [options.round=true] - whether to round the numbers in the output.\n   * @param {number} [options.padding=0] - padding in milliseconds. This allows you to round up the result if it fits inside the threshold. Don't use in combination with {round: false} because the decimal output will include the padding.\n   * @param {string} options.locale - override the locale of this DateTime\n   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this\n   * @example DateTime.now().plus({ days: 1 }).toRelative() //=> \"in 1 day\"\n   * @example DateTime.now().setLocale(\"es\").toRelative({ days: 1 }) //=> \"dentro de 1 día\"\n   * @example DateTime.now().plus({ days: 1 }).toRelative({ locale: \"fr\" }) //=> \"dans 23 heures\"\n   * @example DateTime.now().minus({ days: 2 }).toRelative() //=> \"2 days ago\"\n   * @example DateTime.now().minus({ days: 2 }).toRelative({ unit: \"hours\" }) //=> \"48 hours ago\"\n   * @example DateTime.now().minus({ hours: 36 }).toRelative({ round: false }) //=> \"1.5 days ago\"\n   */\n  toRelative(options = {}) {\n    if (!this.isValid) return null;\n    const base = options.base || DateTime.fromObject({}, { zone: this.zone }),\n      padding = options.padding ? (this < base ? -options.padding : options.padding) : 0;\n    let units = [\"years\", \"months\", \"days\", \"hours\", \"minutes\", \"seconds\"];\n    let unit = options.unit;\n    if (Array.isArray(options.unit)) {\n      units = options.unit;\n      unit = undefined;\n    }\n    return diffRelative(base, this.plus(padding), {\n      ...options,\n      numeric: \"always\",\n      units,\n      unit,\n    });\n  }\n\n  /**\n   * Returns a string representation of this date relative to today, such as \"yesterday\" or \"next month\".\n   * Only internationalizes on platforms that supports Intl.RelativeTimeFormat.\n   * @param {Object} options - options that affect the output\n   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.\n   * @param {string} options.locale - override the locale of this DateTime\n   * @param {string} options.unit - use a specific unit; if omitted, the method will pick the unit. Use one of \"years\", \"quarters\", \"months\", \"weeks\", or \"days\"\n   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this\n   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar() //=> \"tomorrow\"\n   * @example DateTime.now().setLocale(\"es\").plus({ days: 1 }).toRelative() //=> \"\"mañana\"\n   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar({ locale: \"fr\" }) //=> \"demain\"\n   * @example DateTime.now().minus({ days: 2 }).toRelativeCalendar() //=> \"2 days ago\"\n   */\n  toRelativeCalendar(options = {}) {\n    if (!this.isValid) return null;\n\n    return diffRelative(options.base || DateTime.fromObject({}, { zone: this.zone }), this, {\n      ...options,\n      numeric: \"auto\",\n      units: [\"years\", \"months\", \"days\"],\n      calendary: true,\n    });\n  }\n\n  /**\n   * Return the min of several date times\n   * @param {...DateTime} dateTimes - the DateTimes from which to choose the minimum\n   * @return {DateTime} the min DateTime, or undefined if called with no argument\n   */\n  static min(...dateTimes) {\n    if (!dateTimes.every(DateTime.isDateTime)) {\n      throw new InvalidArgumentError(\"min requires all arguments be DateTimes\");\n    }\n    return bestBy(dateTimes, (i) => i.valueOf(), Math.min);\n  }\n\n  /**\n   * Return the max of several date times\n   * @param {...DateTime} dateTimes - the DateTimes from which to choose the maximum\n   * @return {DateTime} the max DateTime, or undefined if called with no argument\n   */\n  static max(...dateTimes) {\n    if (!dateTimes.every(DateTime.isDateTime)) {\n      throw new InvalidArgumentError(\"max requires all arguments be DateTimes\");\n    }\n    return bestBy(dateTimes, (i) => i.valueOf(), Math.max);\n  }\n\n  // MISC\n\n  /**\n   * Explain how a string would be parsed by fromFormat()\n   * @param {string} text - the string to parse\n   * @param {string} fmt - the format the string is expected to be in (see description)\n   * @param {Object} options - options taken by fromFormat()\n   * @return {Object}\n   */\n  static fromFormatExplain(text, fmt, options = {}) {\n    const { locale = null, numberingSystem = null } = options,\n      localeToUse = Locale.fromOpts({\n        locale,\n        numberingSystem,\n        defaultToEN: true,\n      });\n    return explainFromTokens(localeToUse, text, fmt);\n  }\n\n  /**\n   * @deprecated use fromFormatExplain instead\n   */\n  static fromStringExplain(text, fmt, options = {}) {\n    return DateTime.fromFormatExplain(text, fmt, options);\n  }\n\n  // FORMAT PRESETS\n\n  /**\n   * {@link DateTime#toLocaleString} format like 10/14/1983\n   * @type {Object}\n   */\n  static get DATE_SHORT() {\n    return Formats.DATE_SHORT;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_MED() {\n    return Formats.DATE_MED;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Fri, Oct 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_MED_WITH_WEEKDAY() {\n    return Formats.DATE_MED_WITH_WEEKDAY;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_FULL() {\n    return Formats.DATE_FULL;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Tuesday, October 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_HUGE() {\n    return Formats.DATE_HUGE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_SIMPLE() {\n    return Formats.TIME_SIMPLE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_SECONDS() {\n    return Formats.TIME_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_SHORT_OFFSET() {\n    return Formats.TIME_WITH_SHORT_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_LONG_OFFSET() {\n    return Formats.TIME_WITH_LONG_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_SIMPLE() {\n    return Formats.TIME_24_SIMPLE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_SECONDS() {\n    return Formats.TIME_24_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 EDT', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_SHORT_OFFSET() {\n    return Formats.TIME_24_WITH_SHORT_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 Eastern Daylight Time', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_LONG_OFFSET() {\n    return Formats.TIME_24_WITH_LONG_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_SHORT() {\n    return Formats.DATETIME_SHORT;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_SHORT_WITH_SECONDS() {\n    return Formats.DATETIME_SHORT_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED() {\n    return Formats.DATETIME_MED;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30:33 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED_WITH_SECONDS() {\n    return Formats.DATETIME_MED_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Fri, 14 Oct 1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED_WITH_WEEKDAY() {\n    return Formats.DATETIME_MED_WITH_WEEKDAY;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_FULL() {\n    return Formats.DATETIME_FULL;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30:33 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_FULL_WITH_SECONDS() {\n    return Formats.DATETIME_FULL_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_HUGE() {\n    return Formats.DATETIME_HUGE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30:33 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_HUGE_WITH_SECONDS() {\n    return Formats.DATETIME_HUGE_WITH_SECONDS;\n  }\n}\n\n/**\n * @private\n */\nexport function friendlyDateTime(dateTimeish) {\n  if (DateTime.isDateTime(dateTimeish)) {\n    return dateTimeish;\n  } else if (dateTimeish && dateTimeish.valueOf && isNumber(dateTimeish.valueOf())) {\n    return DateTime.fromJSDate(dateTimeish);\n  } else if (dateTimeish && typeof dateTimeish === \"object\") {\n    return DateTime.fromObject(dateTimeish);\n  } else {\n    throw new InvalidArgumentError(\n      `Unknown datetime argument: ${dateTimeish}, of type ${typeof dateTimeish}`\n    );\n  }\n}\n","export function buildEventQueryParams({ start, end }) {\n    return `&${ new URLSearchParams({\n        start,\n        end,\n        permalink: ed_permalink // note: von Backend übergeben\n    }).toString() }`;\n}\n\nexport function getQuery(key) {\n    return (new URL(document.URL)).searchParams.get(key);\n}\n\nexport function pushQuery(key, value) {\n    let currentUrl = new URL(document.URL);\n    if (currentUrl.searchParams.get(key) === value) return;\n    currentUrl.searchParams.set(key, value);\n    window.history.pushState({}, '', currentUrl);\n}","var n,l,u,i,t,r,o,f,e,c={},s=[],a=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function h(n,l){for(var u in l)n[u]=l[u];return n}function v(n){var l=n.parentNode;l&&l.removeChild(n)}function y(l,u,i){var t,r,o,f={};for(o in u)\"key\"==o?t=u[o]:\"ref\"==o?r=u[o]:f[o]=u[o];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),\"function\"==typeof l&&null!=l.defaultProps)for(o in l.defaultProps)void 0===f[o]&&(f[o]=l.defaultProps[o]);return p(l,f,t,r,null)}function p(n,i,t,r,o){var f={type:n,props:i,key:t,ref:r,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==o?++u:o};return null==o&&null!=l.vnode&&l.vnode(f),f}function d(){return{current:null}}function _(n){return n.children}function k(n,l,u,i,t){var r;for(r in u)\"children\"===r||\"key\"===r||r in l||g(n,r,null,u[r],i);for(r in l)t&&\"function\"!=typeof l[r]||\"children\"===r||\"key\"===r||\"value\"===r||\"checked\"===r||u[r]===l[r]||g(n,r,l[r],u[r],i)}function b(n,l,u){\"-\"===l[0]?n.setProperty(l,null==u?\"\":u):n[l]=null==u?\"\":\"number\"!=typeof u||a.test(l)?u:u+\"px\"}function g(n,l,u,i,t){var r;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof i&&(n.style.cssText=i=\"\"),i)for(l in i)u&&l in u||b(n.style,l,\"\");if(u)for(l in u)i&&u[l]===i[l]||b(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])r=l!==(l=l.replace(/Capture$/,\"\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+r]=u,u?i||n.addEventListener(l,r?w:m,r):n.removeEventListener(l,r?w:m,r);else if(\"dangerouslySetInnerHTML\"!==l){if(t)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"width\"!==l&&\"height\"!==l&&\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null==u||!1===u&&-1==l.indexOf(\"-\")?n.removeAttribute(l):n.setAttribute(l,u))}}function m(n){t=!0;try{return this.l[n.type+!1](l.event?l.event(n):n)}finally{t=!1}}function w(n){t=!0;try{return this.l[n.type+!0](l.event?l.event(n):n)}finally{t=!1}}function x(n,l){this.props=n,this.context=l}function A(n,l){if(null==l)return n.__?A(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?A(n):null}function P(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return P(n)}}function C(n){t?setTimeout(n):f(n)}function T(n){(!n.__d&&(n.__d=!0)&&r.push(n)&&!$.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||C)($)}function $(){var n,l,u,i,t,o,f,e;for(r.sort(function(n,l){return n.__v.__b-l.__v.__b});n=r.shift();)n.__d&&(l=r.length,i=void 0,t=void 0,f=(o=(u=n).__v).__e,(e=u.__P)&&(i=[],(t=h({},o)).__v=o.__v+1,M(e,o,t,u.__n,void 0!==e.ownerSVGElement,null!=o.__h?[f]:null,i,null==f?A(o):f,o.__h),N(i,o),o.__e!=f&&P(o)),r.length>l&&r.sort(function(n,l){return n.__v.__b-l.__v.__b}));$.__r=0}function H(n,l,u,i,t,r,o,f,e,a){var h,v,y,d,k,b,g,m=i&&i.__k||s,w=m.length;for(u.__k=[],h=0;h<l.length;h++)if(null!=(d=u.__k[h]=null==(d=l[h])||\"boolean\"==typeof d?null:\"string\"==typeof d||\"number\"==typeof d||\"bigint\"==typeof d?p(null,d,null,null,d):Array.isArray(d)?p(_,{children:d},null,null,null):d.__b>0?p(d.type,d.props,d.key,d.ref?d.ref:null,d.__v):d)){if(d.__=u,d.__b=u.__b+1,null===(y=m[h])||y&&d.key==y.key&&d.type===y.type)m[h]=void 0;else for(v=0;v<w;v++){if((y=m[v])&&d.key==y.key&&d.type===y.type){m[v]=void 0;break}y=null}M(n,d,y=y||c,t,r,o,f,e,a),k=d.__e,(v=d.ref)&&y.ref!=v&&(g||(g=[]),y.ref&&g.push(y.ref,null,d),g.push(v,d.__c||k,d)),null!=k?(null==b&&(b=k),\"function\"==typeof d.type&&d.__k===y.__k?d.__d=e=I(d,e,n):e=z(n,d,y,m,k,e),\"function\"==typeof u.type&&(u.__d=e)):e&&y.__e==e&&e.parentNode!=n&&(e=A(y))}for(u.__e=b,h=w;h--;)null!=m[h]&&(\"function\"==typeof u.type&&null!=m[h].__e&&m[h].__e==u.__d&&(u.__d=L(i).nextSibling),q(m[h],m[h]));if(g)for(h=0;h<g.length;h++)S(g[h],g[++h],g[++h])}function I(n,l,u){for(var i,t=n.__k,r=0;t&&r<t.length;r++)(i=t[r])&&(i.__=n,l=\"function\"==typeof i.type?I(i,l,u):z(u,i,i,t,i.__e,l));return l}function j(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(Array.isArray(n)?n.some(function(n){j(n,l)}):l.push(n)),l}function z(n,l,u,i,t,r){var o,f,e;if(void 0!==l.__d)o=l.__d,l.__d=void 0;else if(null==u||t!=r||null==t.parentNode)n:if(null==r||r.parentNode!==n)n.appendChild(t),o=null;else{for(f=r,e=0;(f=f.nextSibling)&&e<i.length;e+=1)if(f==t)break n;n.insertBefore(t,r),o=r}return void 0!==o?o:t.nextSibling}function L(n){var l,u,i;if(null==n.type||\"string\"==typeof n.type)return n.__e;if(n.__k)for(l=n.__k.length-1;l>=0;l--)if((u=n.__k[l])&&(i=L(u)))return i;return null}function M(n,u,i,t,r,o,f,e,c){var s,a,v,y,p,d,k,b,g,m,w,A,P,C,T,$=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(c=i.__h,e=u.__e=i.__e,u.__h=null,o=[e]),(s=l.__b)&&s(u);try{n:if(\"function\"==typeof $){if(b=u.props,g=(s=$.contextType)&&t[s.__c],m=s?g?g.props.value:s.__:t,i.__c?k=(a=u.__c=i.__c).__=a.__E:(\"prototype\"in $&&$.prototype.render?u.__c=a=new $(b,m):(u.__c=a=new x(b,m),a.constructor=$,a.render=B),g&&g.sub(a),a.props=b,a.state||(a.state={}),a.context=m,a.__n=t,v=a.__d=!0,a.__h=[],a._sb=[]),null==a.__s&&(a.__s=a.state),null!=$.getDerivedStateFromProps&&(a.__s==a.state&&(a.__s=h({},a.__s)),h(a.__s,$.getDerivedStateFromProps(b,a.__s))),y=a.props,p=a.state,a.__v=u,v)null==$.getDerivedStateFromProps&&null!=a.componentWillMount&&a.componentWillMount(),null!=a.componentDidMount&&a.__h.push(a.componentDidMount);else{if(null==$.getDerivedStateFromProps&&b!==y&&null!=a.componentWillReceiveProps&&a.componentWillReceiveProps(b,m),!a.__e&&null!=a.shouldComponentUpdate&&!1===a.shouldComponentUpdate(b,a.__s,m)||u.__v===i.__v){for(u.__v!==i.__v&&(a.props=b,a.state=a.__s,a.__d=!1),u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u)}),w=0;w<a._sb.length;w++)a.__h.push(a._sb[w]);a._sb=[],a.__h.length&&f.push(a);break n}null!=a.componentWillUpdate&&a.componentWillUpdate(b,a.__s,m),null!=a.componentDidUpdate&&a.__h.push(function(){a.componentDidUpdate(y,p,d)})}if(a.context=m,a.props=b,a.__P=n,A=l.__r,P=0,\"prototype\"in $&&$.prototype.render){for(a.state=a.__s,a.__d=!1,A&&A(u),s=a.render(a.props,a.state,a.context),C=0;C<a._sb.length;C++)a.__h.push(a._sb[C]);a._sb=[]}else do{a.__d=!1,A&&A(u),s=a.render(a.props,a.state,a.context),a.state=a.__s}while(a.__d&&++P<25);a.state=a.__s,null!=a.getChildContext&&(t=h(h({},t),a.getChildContext())),v||null==a.getSnapshotBeforeUpdate||(d=a.getSnapshotBeforeUpdate(y,p)),T=null!=s&&s.type===_&&null==s.key?s.props.children:s,H(n,Array.isArray(T)?T:[T],u,i,t,r,o,f,e,c),a.base=u.__e,u.__h=null,a.__h.length&&f.push(a),k&&(a.__E=a.__=null),a.__e=!1}else null==o&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=O(i.__e,u,i,t,r,o,f,c);(s=l.diffed)&&s(u)}catch(n){u.__v=null,(c||null!=o)&&(u.__e=e,u.__h=!!c,o[o.indexOf(e)]=null),l.__e(n,u,i)}}function N(n,u){l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function O(l,u,i,t,r,o,f,e){var s,a,h,y=i.props,p=u.props,d=u.type,_=0;if(\"svg\"===d&&(r=!0),null!=o)for(;_<o.length;_++)if((s=o[_])&&\"setAttribute\"in s==!!d&&(d?s.localName===d:3===s.nodeType)){l=s,o[_]=null;break}if(null==l){if(null===d)return document.createTextNode(p);l=r?document.createElementNS(\"http://www.w3.org/2000/svg\",d):document.createElement(d,p.is&&p),o=null,e=!1}if(null===d)y===p||e&&l.data===p||(l.data=p);else{if(o=o&&n.call(l.childNodes),a=(y=i.props||c).dangerouslySetInnerHTML,h=p.dangerouslySetInnerHTML,!e){if(null!=o)for(y={},_=0;_<l.attributes.length;_++)y[l.attributes[_].name]=l.attributes[_].value;(h||a)&&(h&&(a&&h.__html==a.__html||h.__html===l.innerHTML)||(l.innerHTML=h&&h.__html||\"\"))}if(k(l,p,y,r,e),h)u.__k=[];else if(_=u.props.children,H(l,Array.isArray(_)?_:[_],u,i,t,r&&\"foreignObject\"!==d,o,f,o?o[0]:i.__k&&A(i,0),e),null!=o)for(_=o.length;_--;)null!=o[_]&&v(o[_]);e||(\"value\"in p&&void 0!==(_=p.value)&&(_!==l.value||\"progress\"===d&&!_||\"option\"===d&&_!==y.value)&&g(l,\"value\",_,y.value,!1),\"checked\"in p&&void 0!==(_=p.checked)&&_!==l.checked&&g(l,\"checked\",_,y.checked,!1))}return l}function S(n,u,i){try{\"function\"==typeof n?n(u):n.current=u}catch(n){l.__e(n,i)}}function q(n,u,i){var t,r;if(l.unmount&&l.unmount(n),(t=n.ref)&&(t.current&&t.current!==n.__e||S(t,null,u)),null!=(t=n.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(n){l.__e(n,u)}t.base=t.__P=null,n.__c=void 0}if(t=n.__k)for(r=0;r<t.length;r++)t[r]&&q(t[r],u,i||\"function\"!=typeof n.type);i||null==n.__e||v(n.__e),n.__=n.__e=n.__d=void 0}function B(n,l,u){return this.constructor(n,u)}function D(u,i,t){var r,o,f;l.__&&l.__(u,i),o=(r=\"function\"==typeof t)?null:t&&t.__k||i.__k,f=[],M(i,u=(!r&&t||i).__k=y(_,null,[u]),o||c,c,void 0!==i.ownerSVGElement,!r&&t?[t]:o?null:i.firstChild?n.call(i.childNodes):null,f,!r&&t?t:o?o.__e:i.firstChild,r),N(f,u)}function E(n,l){D(n,l,E)}function F(l,u,i){var t,r,o,f=h({},l.props);for(o in u)\"key\"==o?t=u[o]:\"ref\"==o?r=u[o]:f[o]=u[o];return arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),p(l.type,f,t||l.key,r||l.ref,null)}function G(n,l){var u={__c:l=\"__cC\"+e++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(function(n){n.__e=!0,T(n)})},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=s.slice,l={__e:function(n,l,u,i){for(var t,r,o;l=l.__;)if((t=l.__c)&&!t.__)try{if((r=t.constructor)&&null!=r.getDerivedStateFromError&&(t.setState(r.getDerivedStateFromError(n)),o=t.__d),null!=t.componentDidCatch&&(t.componentDidCatch(n,i||{}),o=t.__d),o)return t.__E=t}catch(l){n=l}throw n}},u=0,i=function(n){return null!=n&&void 0===n.constructor},t=!1,x.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=h({},this.state),\"function\"==typeof n&&(n=n(h({},u),this.props)),n&&h(u,n),null!=n&&this.__v&&(l&&this._sb.push(l),T(this))},x.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),T(this))},x.prototype.render=_,r=[],f=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,$.__r=0,e=0;export{x as Component,_ as Fragment,F as cloneElement,G as createContext,y as createElement,d as createRef,y as h,E as hydrate,i as isValidElement,l as options,D as render,j as toChildArray};\n//# sourceMappingURL=preact.module.js.map\n","import{options as n}from\"preact\";var t,r,u,i,o=0,f=[],c=[],e=n.__b,a=n.__r,v=n.diffed,l=n.__c,m=n.unmount;function d(t,u){n.__h&&n.__h(r,t,o||u),o=0;var i=r.__H||(r.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({__V:c}),i.__[t]}function p(n){return o=1,y(B,n)}function y(n,u,i){var o=d(t++,2);if(o.t=n,!o.__c&&(o.__=[i?i(u):B(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=r,!r.u)){r.u=!0;var f=r.shouldComponentUpdate;r.shouldComponentUpdate=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return n.__c});if(u.every(function(n){return!n.__N}))return!f||f.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0)}}),!(!i&&o.__c.props===n)&&(!f||f.call(this,n,t,r))}}return o.__N||o.__}function h(u,i){var o=d(t++,3);!n.__s&&z(o.__H,i)&&(o.__=u,o.i=i,r.__H.__h.push(o))}function s(u,i){var o=d(t++,4);!n.__s&&z(o.__H,i)&&(o.__=u,o.i=i,r.__h.push(o))}function _(n){return o=5,F(function(){return{current:n}},[])}function A(n,t,r){o=6,s(function(){return\"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function F(n,r){var u=d(t++,7);return z(u.__H,r)?(u.__V=n(),u.i=r,u.__h=n,u.__V):u.__}function T(n,t){return o=8,F(function(){return n},t)}function q(n){var u=r.context[n.__c],i=d(t++,9);return i.c=n,u?(null==i.__&&(i.__=!0,u.sub(r)),u.props.value):n.__}function x(t,r){n.useDebugValue&&n.useDebugValue(r?r(t):t)}function P(n){var u=d(t++,10),i=p();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n,t){u.__&&u.__(n,t),i[1](n)}),[i[0],function(){i[1](void 0)}]}function V(){var n=d(t++,11);if(!n.__){for(var u=r.__v;null!==u&&!u.__m&&null!==u.__;)u=u.__;var i=u.__m||(u.__m=[0,0]);n.__=\"P\"+i[0]+\"-\"+i[1]++}return n.__}function b(){for(var t;t=f.shift();)if(t.__P&&t.__H)try{t.__H.__h.forEach(k),t.__H.__h.forEach(w),t.__H.__h=[]}catch(r){t.__H.__h=[],n.__e(r,t.__v)}}n.__b=function(n){r=null,e&&e(n)},n.__r=function(n){a&&a(n),t=0;var i=(r=n.__c).__H;i&&(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&&(n.__=n.__N),n.__V=c,n.__N=n.i=void 0})):(i.__h.forEach(k),i.__h.forEach(w),i.__h=[])),u=r},n.diffed=function(t){v&&v(t);var o=t.__c;o&&o.__H&&(o.__H.__h.length&&(1!==f.push(o)&&i===n.requestAnimationFrame||((i=n.requestAnimationFrame)||j)(b)),o.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.__V!==c&&(n.__=n.__V),n.i=void 0,n.__V=c})),u=r=null},n.__c=function(t,r){r.some(function(t){try{t.__h.forEach(k),t.__h=t.__h.filter(function(n){return!n.__||w(n)})}catch(u){r.some(function(n){n.__h&&(n.__h=[])}),r=[],n.__e(u,t.__v)}}),l&&l(t,r)},n.unmount=function(t){m&&m(t);var r,u=t.__c;u&&u.__H&&(u.__H.__.forEach(function(n){try{k(n)}catch(n){r=n}}),u.__H=void 0,r&&n.__e(r,u.__v))};var g=\"function\"==typeof requestAnimationFrame;function j(n){var t,r=function(){clearTimeout(u),g&&cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);g&&(t=requestAnimationFrame(r))}function k(n){var t=r,u=n.__c;\"function\"==typeof u&&(n.__c=void 0,u()),r=t}function w(n){var t=r;n.__c=n.__(),r=t}function z(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function B(n,t){return\"function\"==typeof t?t(n):t}export{T as useCallback,q as useContext,x as useDebugValue,h as useEffect,P as useErrorBoundary,V as useId,A as useImperativeHandle,s as useLayoutEffect,F as useMemo,y as useReducer,_ as useRef,p as useState};\n//# sourceMappingURL=hooks.module.js.map\n","import{Component as n,createElement as t,options as e,toChildArray as r,Fragment as u,render as o,hydrate as i,createContext as l,createRef as c,cloneElement as f}from\"preact\";export{Component,Fragment,createContext,createElement,createRef}from\"preact\";import{useState as a,useId as s,useReducer as h,useEffect as v,useLayoutEffect as d,useRef as p,useImperativeHandle as m,useMemo as y,useCallback as _,useContext as b,useDebugValue as S}from\"preact/hooks\";export*from\"preact/hooks\";function g(n,t){for(var e in t)n[e]=t[e];return n}function C(n,t){for(var e in n)if(\"__source\"!==e&&!(e in t))return!0;for(var r in t)if(\"__source\"!==r&&n[r]!==t[r])return!0;return!1}function E(n,t){return n===t&&(0!==n||1/n==1/t)||n!=n&&t!=t}function w(n){this.props=n}function R(n,e){function r(n){var t=this.props.ref,r=t==n.ref;return!r&&t&&(t.call?t(null):t.current=null),e?!e(this.props,n)||!r:C(this.props,n)}function u(e){return this.shouldComponentUpdate=r,t(n,e)}return u.displayName=\"Memo(\"+(n.displayName||n.name)+\")\",u.prototype.isReactComponent=!0,u.__f=!0,u}(w.prototype=new n).isPureReactComponent=!0,w.prototype.shouldComponentUpdate=function(n,t){return C(this.props,n)||C(this.state,t)};var x=e.__b;e.__b=function(n){n.type&&n.type.__f&&n.ref&&(n.props.ref=n.ref,n.ref=null),x&&x(n)};var N=\"undefined\"!=typeof Symbol&&Symbol.for&&Symbol.for(\"react.forward_ref\")||3911;function k(n){function t(t){var e=g({},t);return delete e.ref,n(e,t.ref||null)}return t.$$typeof=N,t.render=t,t.prototype.isReactComponent=t.__f=!0,t.displayName=\"ForwardRef(\"+(n.displayName||n.name)+\")\",t}var A=function(n,t){return null==n?null:r(r(n).map(t))},O={map:A,forEach:A,count:function(n){return n?r(n).length:0},only:function(n){var t=r(n);if(1!==t.length)throw\"Children.only\";return t[0]},toArray:r},T=e.__e;e.__e=function(n,t,e,r){if(n.then)for(var u,o=t;o=o.__;)if((u=o.__c)&&u.__c)return null==t.__e&&(t.__e=e.__e,t.__k=e.__k),u.__c(n,t);T(n,t,e,r)};var I=e.unmount;function L(n,t,e){return n&&(n.__c&&n.__c.__H&&(n.__c.__H.__.forEach(function(n){\"function\"==typeof n.__c&&n.__c()}),n.__c.__H=null),null!=(n=g({},n)).__c&&(n.__c.__P===e&&(n.__c.__P=t),n.__c=null),n.__k=n.__k&&n.__k.map(function(n){return L(n,t,e)})),n}function U(n,t,e){return n&&(n.__v=null,n.__k=n.__k&&n.__k.map(function(n){return U(n,t,e)}),n.__c&&n.__c.__P===t&&(n.__e&&e.insertBefore(n.__e,n.__d),n.__c.__e=!0,n.__c.__P=e)),n}function D(){this.__u=0,this.t=null,this.__b=null}function F(n){var t=n.__.__c;return t&&t.__a&&t.__a(n)}function M(n){var e,r,u;function o(o){if(e||(e=n()).then(function(n){r=n.default||n},function(n){u=n}),u)throw u;if(!r)throw e;return t(r,o)}return o.displayName=\"Lazy\",o.__f=!0,o}function V(){this.u=null,this.o=null}e.unmount=function(n){var t=n.__c;t&&t.__R&&t.__R(),t&&!0===n.__h&&(n.type=null),I&&I(n)},(D.prototype=new n).__c=function(n,t){var e=t.__c,r=this;null==r.t&&(r.t=[]),r.t.push(e);var u=F(r.__v),o=!1,i=function(){o||(o=!0,e.__R=null,u?u(l):l())};e.__R=i;var l=function(){if(!--r.__u){if(r.state.__a){var n=r.state.__a;r.__v.__k[0]=U(n,n.__c.__P,n.__c.__O)}var t;for(r.setState({__a:r.__b=null});t=r.t.pop();)t.forceUpdate()}},c=!0===t.__h;r.__u++||c||r.setState({__a:r.__b=r.__v.__k[0]}),n.then(i,i)},D.prototype.componentWillUnmount=function(){this.t=[]},D.prototype.render=function(n,e){if(this.__b){if(this.__v.__k){var r=document.createElement(\"div\"),o=this.__v.__k[0].__c;this.__v.__k[0]=L(this.__b,r,o.__O=o.__P)}this.__b=null}var i=e.__a&&t(u,null,n.fallback);return i&&(i.__h=null),[t(u,null,e.__a?null:n.children),i]};var W=function(n,t,e){if(++e[1]===e[0]&&n.o.delete(t),n.props.revealOrder&&(\"t\"!==n.props.revealOrder[0]||!n.o.size))for(e=n.u;e;){for(;e.length>3;)e.pop()();if(e[1]<e[0])break;n.u=e=e[2]}};function P(n){return this.getChildContext=function(){return n.context},n.children}function $(n){var e=this,r=n.i;e.componentWillUnmount=function(){o(null,e.l),e.l=null,e.i=null},e.i&&e.i!==r&&e.componentWillUnmount(),n.__v?(e.l||(e.i=r,e.l={nodeType:1,parentNode:r,childNodes:[],appendChild:function(n){this.childNodes.push(n),e.i.appendChild(n)},insertBefore:function(n,t){this.childNodes.push(n),e.i.appendChild(n)},removeChild:function(n){this.childNodes.splice(this.childNodes.indexOf(n)>>>1,1),e.i.removeChild(n)}}),o(t(P,{context:e.context},n.__v),e.l)):e.l&&e.componentWillUnmount()}function j(n,e){var r=t($,{__v:n,i:e});return r.containerInfo=e,r}(V.prototype=new n).__a=function(n){var t=this,e=F(t.__v),r=t.o.get(n);return r[0]++,function(u){var o=function(){t.props.revealOrder?(r.push(u),W(t,n,r)):u()};e?e(o):o()}},V.prototype.render=function(n){this.u=null,this.o=new Map;var t=r(n.children);n.revealOrder&&\"b\"===n.revealOrder[0]&&t.reverse();for(var e=t.length;e--;)this.o.set(t[e],this.u=[1,0,this.u]);return n.children},V.prototype.componentDidUpdate=V.prototype.componentDidMount=function(){var n=this;this.o.forEach(function(t,e){W(n,e,t)})};var z=\"undefined\"!=typeof Symbol&&Symbol.for&&Symbol.for(\"react.element\")||60103,B=/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,H=\"undefined\"!=typeof document,Z=function(n){return(\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol()?/fil|che|rad/i:/fil|che|ra/i).test(n)};function Y(n,t,e){return null==t.__k&&(t.textContent=\"\"),o(n,t),\"function\"==typeof e&&e(),n?n.__c:null}function q(n,t,e){return i(n,t),\"function\"==typeof e&&e(),n?n.__c:null}n.prototype.isReactComponent={},[\"componentWillMount\",\"componentWillReceiveProps\",\"componentWillUpdate\"].forEach(function(t){Object.defineProperty(n.prototype,t,{configurable:!0,get:function(){return this[\"UNSAFE_\"+t]},set:function(n){Object.defineProperty(this,t,{configurable:!0,writable:!0,value:n})}})});var G=e.event;function J(){}function K(){return this.cancelBubble}function Q(){return this.defaultPrevented}e.event=function(n){return G&&(n=G(n)),n.persist=J,n.isPropagationStopped=K,n.isDefaultPrevented=Q,n.nativeEvent=n};var X,nn={configurable:!0,get:function(){return this.class}},tn=e.vnode;e.vnode=function(n){var t=n.type,e=n.props,u=e;if(\"string\"==typeof t){var o=-1===t.indexOf(\"-\");for(var i in u={},e){var l=e[i];H&&\"children\"===i&&\"noscript\"===t||\"value\"===i&&\"defaultValue\"in e&&null==l||(\"defaultValue\"===i&&\"value\"in e&&null==e.value?i=\"value\":\"download\"===i&&!0===l?l=\"\":/ondoubleclick/i.test(i)?i=\"ondblclick\":/^onchange(textarea|input)/i.test(i+t)&&!Z(e.type)?i=\"oninput\":/^onfocus$/i.test(i)?i=\"onfocusin\":/^onblur$/i.test(i)?i=\"onfocusout\":/^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(i)?i=i.toLowerCase():o&&B.test(i)?i=i.replace(/[A-Z0-9]/g,\"-$&\").toLowerCase():null===l&&(l=void 0),/^oninput$/i.test(i)&&(i=i.toLowerCase(),u[i]&&(i=\"oninputCapture\")),u[i]=l)}\"select\"==t&&u.multiple&&Array.isArray(u.value)&&(u.value=r(e.children).forEach(function(n){n.props.selected=-1!=u.value.indexOf(n.props.value)})),\"select\"==t&&null!=u.defaultValue&&(u.value=r(e.children).forEach(function(n){n.props.selected=u.multiple?-1!=u.defaultValue.indexOf(n.props.value):u.defaultValue==n.props.value})),n.props=u,e.class!=e.className&&(nn.enumerable=\"className\"in e,null!=e.className&&(u.class=e.className),Object.defineProperty(u,\"className\",nn))}n.$$typeof=z,tn&&tn(n)};var en=e.__r;e.__r=function(n){en&&en(n),X=n.__c};var rn={ReactCurrentDispatcher:{current:{readContext:function(n){return X.__n[n.__c].props.value}}}},un=\"17.0.2\";function on(n){return t.bind(null,n)}function ln(n){return!!n&&n.$$typeof===z}function cn(n){return ln(n)?f.apply(null,arguments):n}function fn(n){return!!n.__k&&(o(null,n),!0)}function an(n){return n&&(n.base||1===n.nodeType&&n)||null}var sn=function(n,t){return n(t)},hn=function(n,t){return n(t)},vn=u;function dn(n){n()}function pn(n){return n}function mn(){return[!1,dn]}var yn=d;function _n(n,t){var e=t(),r=a({h:{__:e,v:t}}),u=r[0].h,o=r[1];return d(function(){u.__=e,u.v=t,E(u.__,t())||o({h:u})},[n,e,t]),v(function(){return E(u.__,u.v())||o({h:u}),n(function(){E(u.__,u.v())||o({h:u})})},[n]),e}var bn={useState:a,useId:s,useReducer:h,useEffect:v,useLayoutEffect:d,useInsertionEffect:yn,useTransition:mn,useDeferredValue:pn,useSyncExternalStore:_n,startTransition:dn,useRef:p,useImperativeHandle:m,useMemo:y,useCallback:_,useContext:b,useDebugValue:S,version:\"17.0.2\",Children:O,render:Y,hydrate:q,unmountComponentAtNode:fn,createPortal:j,createElement:t,createContext:l,createFactory:on,cloneElement:cn,createRef:c,Fragment:u,isValidElement:ln,findDOMNode:an,Component:n,PureComponent:w,memo:R,forwardRef:k,flushSync:hn,unstable_batchedUpdates:sn,StrictMode:vn,Suspense:D,SuspenseList:V,lazy:M,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:rn};export{O as Children,w as PureComponent,vn as StrictMode,D as Suspense,V as SuspenseList,rn as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,cn as cloneElement,on as createFactory,j as createPortal,bn as default,an as findDOMNode,hn as flushSync,k as forwardRef,q as hydrate,ln as isValidElement,M as lazy,R as memo,Y as render,dn as startTransition,fn as unmountComponentAtNode,sn as unstable_batchedUpdates,pn as useDeferredValue,yn as useInsertionEffect,_n as useSyncExternalStore,mn as useTransition,un as version};\n//# sourceMappingURL=compat.module.js.map\n","import * as preact from 'preact';\nimport { Component, createElement, isValidElement, Fragment } from 'preact';\nimport { createPortal } from 'preact/compat';\n\nconst styleTexts = [];\nconst styleEls = new Map();\nfunction injectStyles(styleText) {\n    styleTexts.push(styleText);\n    styleEls.forEach((styleEl) => {\n        appendStylesTo(styleEl, styleText);\n    });\n}\nfunction ensureElHasStyles(el) {\n    if (el.isConnected) {\n        registerStylesRoot(el.getRootNode());\n    }\n}\nfunction registerStylesRoot(rootNode) {\n    let styleEl = styleEls.get(rootNode);\n    if (!styleEl || !styleEl.isConnected) {\n        styleEl = rootNode.querySelector('style[data-fullcalendar]');\n        if (!styleEl) {\n            styleEl = document.createElement('style');\n            styleEl.setAttribute('data-fullcalendar', '');\n            const nonce = getNonceValue();\n            if (nonce) {\n                styleEl.nonce = nonce;\n            }\n            const parentEl = rootNode === document ? document.head : rootNode;\n            const insertBefore = rootNode === document\n                ? parentEl.querySelector('script,link[rel=stylesheet],link[as=style],style')\n                : parentEl.firstChild;\n            parentEl.insertBefore(styleEl, insertBefore);\n        }\n        styleEls.set(rootNode, styleEl);\n        hydrateStylesRoot(styleEl);\n    }\n}\nfunction hydrateStylesRoot(styleEl) {\n    for (const styleText of styleTexts) {\n        appendStylesTo(styleEl, styleText);\n    }\n}\nfunction appendStylesTo(styleEl, styleText) {\n    const { sheet } = styleEl;\n    const ruleCnt = sheet.cssRules.length;\n    styleText.split('}').forEach((styleStr, i) => {\n        styleStr = styleStr.trim();\n        if (styleStr) {\n            sheet.insertRule(styleStr + '}', ruleCnt + i);\n        }\n    });\n}\n// nonce\n// -------------------------------------------------------------------------------------------------\nlet queriedNonceValue;\nfunction getNonceValue() {\n    if (queriedNonceValue === undefined) {\n        queriedNonceValue = queryNonceValue();\n    }\n    return queriedNonceValue;\n}\n/*\nTODO: discourage meta tag and instead put nonce attribute on placeholder <style> tag\n*/\nfunction queryNonceValue() {\n    const metaWithNonce = document.querySelector('meta[name=\"csp-nonce\"]');\n    if (metaWithNonce && metaWithNonce.hasAttribute('content')) {\n        return metaWithNonce.getAttribute('content');\n    }\n    const elWithNonce = document.querySelector('script[nonce]');\n    if (elWithNonce) {\n        return elWithNonce.nonce || '';\n    }\n    return '';\n}\n// main\n// -------------------------------------------------------------------------------------------------\nif (typeof document !== 'undefined') {\n    registerStylesRoot(document);\n}\n\nvar css_248z = \":root{--fc-small-font-size:.85em;--fc-page-bg-color:#fff;--fc-neutral-bg-color:hsla(0,0%,82%,.3);--fc-neutral-text-color:grey;--fc-border-color:#ddd;--fc-button-text-color:#fff;--fc-button-bg-color:#2c3e50;--fc-button-border-color:#2c3e50;--fc-button-hover-bg-color:#1e2b37;--fc-button-hover-border-color:#1a252f;--fc-button-active-bg-color:#1a252f;--fc-button-active-border-color:#151e27;--fc-event-bg-color:#3788d8;--fc-event-border-color:#3788d8;--fc-event-text-color:#fff;--fc-event-selected-overlay-color:rgba(0,0,0,.25);--fc-more-link-bg-color:#d0d0d0;--fc-more-link-text-color:inherit;--fc-event-resizer-thickness:8px;--fc-event-resizer-dot-total-width:8px;--fc-event-resizer-dot-border-width:1px;--fc-non-business-color:hsla(0,0%,84%,.3);--fc-bg-event-color:#8fdf82;--fc-bg-event-opacity:0.3;--fc-highlight-color:rgba(188,232,241,.3);--fc-today-bg-color:rgba(255,220,40,.15);--fc-now-indicator-color:red}.fc-not-allowed,.fc-not-allowed .fc-event{cursor:not-allowed}.fc{display:flex;flex-direction:column;font-size:1em}.fc,.fc *,.fc :after,.fc :before{box-sizing:border-box}.fc table{border-collapse:collapse;border-spacing:0;font-size:1em}.fc th{text-align:center}.fc td,.fc th{padding:0;vertical-align:top}.fc a[data-navlink]{cursor:pointer}.fc a[data-navlink]:hover{text-decoration:underline}.fc-direction-ltr{direction:ltr;text-align:left}.fc-direction-rtl{direction:rtl;text-align:right}.fc-theme-standard td,.fc-theme-standard th{border:1px solid var(--fc-border-color)}.fc-liquid-hack td,.fc-liquid-hack th{position:relative}@font-face{font-family:fcicons;font-style:normal;font-weight:400;src:url(\\\"data:application/x-font-ttf;charset=utf-8;base64,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\\\") format(\\\"truetype\\\")}.fc-icon{speak:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:inline-block;font-family:fcicons!important;font-style:normal;font-variant:normal;font-weight:400;height:1em;line-height:1;text-align:center;text-transform:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;width:1em}.fc-icon-chevron-left:before{content:\\\"\\\\e900\\\"}.fc-icon-chevron-right:before{content:\\\"\\\\e901\\\"}.fc-icon-chevrons-left:before{content:\\\"\\\\e902\\\"}.fc-icon-chevrons-right:before{content:\\\"\\\\e903\\\"}.fc-icon-minus-square:before{content:\\\"\\\\e904\\\"}.fc-icon-plus-square:before{content:\\\"\\\\e905\\\"}.fc-icon-x:before{content:\\\"\\\\e906\\\"}.fc .fc-button{border-radius:0;font-family:inherit;font-size:inherit;line-height:inherit;margin:0;overflow:visible;text-transform:none}.fc .fc-button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}.fc .fc-button{-webkit-appearance:button}.fc .fc-button:not(:disabled){cursor:pointer}.fc .fc-button{background-color:transparent;border:1px solid transparent;border-radius:.25em;display:inline-block;font-size:1em;font-weight:400;line-height:1.5;padding:.4em .65em;text-align:center;-webkit-user-select:none;-moz-user-select:none;user-select:none;vertical-align:middle}.fc .fc-button:hover{text-decoration:none}.fc .fc-button:focus{box-shadow:0 0 0 .2rem rgba(44,62,80,.25);outline:0}.fc .fc-button:disabled{opacity:.65}.fc .fc-button-primary{background-color:var(--fc-button-bg-color);border-color:var(--fc-button-border-color);color:var(--fc-button-text-color)}.fc .fc-button-primary:hover{background-color:var(--fc-button-hover-bg-color);border-color:var(--fc-button-hover-border-color);color:var(--fc-button-text-color)}.fc .fc-button-primary:disabled{background-color:var(--fc-button-bg-color);border-color:var(--fc-button-border-color);color:var(--fc-button-text-color)}.fc .fc-button-primary:focus{box-shadow:0 0 0 .2rem rgba(76,91,106,.5)}.fc .fc-button-primary:not(:disabled).fc-button-active,.fc .fc-button-primary:not(:disabled):active{background-color:var(--fc-button-active-bg-color);border-color:var(--fc-button-active-border-color);color:var(--fc-button-text-color)}.fc .fc-button-primary:not(:disabled).fc-button-active:focus,.fc .fc-button-primary:not(:disabled):active:focus{box-shadow:0 0 0 .2rem rgba(76,91,106,.5)}.fc .fc-button .fc-icon{font-size:1.5em;vertical-align:middle}.fc .fc-button-group{display:inline-flex;position:relative;vertical-align:middle}.fc .fc-button-group>.fc-button{flex:1 1 auto;position:relative}.fc .fc-button-group>.fc-button.fc-button-active,.fc .fc-button-group>.fc-button:active,.fc .fc-button-group>.fc-button:focus,.fc .fc-button-group>.fc-button:hover{z-index:1}.fc-direction-ltr .fc-button-group>.fc-button:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0;margin-left:-1px}.fc-direction-ltr .fc-button-group>.fc-button:not(:last-child){border-bottom-right-radius:0;border-top-right-radius:0}.fc-direction-rtl .fc-button-group>.fc-button:not(:first-child){border-bottom-right-radius:0;border-top-right-radius:0;margin-right:-1px}.fc-direction-rtl .fc-button-group>.fc-button:not(:last-child){border-bottom-left-radius:0;border-top-left-radius:0}.fc .fc-toolbar{align-items:center;display:flex;justify-content:space-between}.fc .fc-toolbar.fc-header-toolbar{margin-bottom:1.5em}.fc .fc-toolbar.fc-footer-toolbar{margin-top:1.5em}.fc .fc-toolbar-title{font-size:1.75em;margin:0}.fc-direction-ltr .fc-toolbar>*>:not(:first-child){margin-left:.75em}.fc-direction-rtl .fc-toolbar>*>:not(:first-child){margin-right:.75em}.fc-direction-rtl .fc-toolbar-ltr{flex-direction:row-reverse}.fc .fc-scroller{-webkit-overflow-scrolling:touch;position:relative}.fc .fc-scroller-liquid{height:100%}.fc .fc-scroller-liquid-absolute{bottom:0;left:0;position:absolute;right:0;top:0}.fc .fc-scroller-harness{direction:ltr;overflow:hidden;position:relative}.fc .fc-scroller-harness-liquid{height:100%}.fc-direction-rtl .fc-scroller-harness>.fc-scroller{direction:rtl}.fc-theme-standard .fc-scrollgrid{border:1px solid var(--fc-border-color)}.fc .fc-scrollgrid,.fc .fc-scrollgrid table{table-layout:fixed;width:100%}.fc .fc-scrollgrid table{border-left-style:hidden;border-right-style:hidden;border-top-style:hidden}.fc .fc-scrollgrid{border-bottom-width:0;border-collapse:separate;border-right-width:0}.fc .fc-scrollgrid-liquid{height:100%}.fc .fc-scrollgrid-section,.fc .fc-scrollgrid-section table,.fc .fc-scrollgrid-section>td{height:1px}.fc .fc-scrollgrid-section-liquid>td{height:100%}.fc .fc-scrollgrid-section>*{border-left-width:0;border-top-width:0}.fc .fc-scrollgrid-section-footer>*,.fc .fc-scrollgrid-section-header>*{border-bottom-width:0}.fc .fc-scrollgrid-section-body table,.fc .fc-scrollgrid-section-footer table{border-bottom-style:hidden}.fc .fc-scrollgrid-section-sticky>*{background:var(--fc-page-bg-color);position:sticky;z-index:3}.fc .fc-scrollgrid-section-header.fc-scrollgrid-section-sticky>*{top:0}.fc .fc-scrollgrid-section-footer.fc-scrollgrid-section-sticky>*{bottom:0}.fc .fc-scrollgrid-sticky-shim{height:1px;margin-bottom:-1px}.fc-sticky{position:sticky}.fc .fc-view-harness{flex-grow:1;position:relative}.fc .fc-view-harness-active>.fc-view{bottom:0;left:0;position:absolute;right:0;top:0}.fc .fc-col-header-cell-cushion{display:inline-block;padding:2px 4px}.fc .fc-bg-event,.fc .fc-highlight,.fc .fc-non-business{bottom:0;left:0;position:absolute;right:0;top:0}.fc .fc-non-business{background:var(--fc-non-business-color)}.fc .fc-bg-event{background:var(--fc-bg-event-color);opacity:var(--fc-bg-event-opacity)}.fc .fc-bg-event .fc-event-title{font-size:var(--fc-small-font-size);font-style:italic;margin:.5em}.fc .fc-highlight{background:var(--fc-highlight-color)}.fc .fc-cell-shaded,.fc .fc-day-disabled{background:var(--fc-neutral-bg-color)}a.fc-event,a.fc-event:hover{text-decoration:none}.fc-event.fc-event-draggable,.fc-event[href]{cursor:pointer}.fc-event .fc-event-main{position:relative;z-index:2}.fc-event-dragging:not(.fc-event-selected){opacity:.75}.fc-event-dragging.fc-event-selected{box-shadow:0 2px 7px rgba(0,0,0,.3)}.fc-event .fc-event-resizer{display:none;position:absolute;z-index:4}.fc-event-selected .fc-event-resizer,.fc-event:hover .fc-event-resizer{display:block}.fc-event-selected .fc-event-resizer{background:var(--fc-page-bg-color);border-color:inherit;border-radius:calc(var(--fc-event-resizer-dot-total-width)/2);border-style:solid;border-width:var(--fc-event-resizer-dot-border-width);height:var(--fc-event-resizer-dot-total-width);width:var(--fc-event-resizer-dot-total-width)}.fc-event-selected .fc-event-resizer:before{bottom:-20px;content:\\\"\\\";left:-20px;position:absolute;right:-20px;top:-20px}.fc-event-selected,.fc-event:focus{box-shadow:0 2px 5px rgba(0,0,0,.2)}.fc-event-selected:before,.fc-event:focus:before{bottom:0;content:\\\"\\\";left:0;position:absolute;right:0;top:0;z-index:3}.fc-event-selected:after,.fc-event:focus:after{background:var(--fc-event-selected-overlay-color);bottom:-1px;content:\\\"\\\";left:-1px;position:absolute;right:-1px;top:-1px;z-index:1}.fc-h-event{background-color:var(--fc-event-bg-color);border:1px solid var(--fc-event-border-color);display:block}.fc-h-event .fc-event-main{color:var(--fc-event-text-color)}.fc-h-event .fc-event-main-frame{display:flex}.fc-h-event .fc-event-time{max-width:100%;overflow:hidden}.fc-h-event .fc-event-title-container{flex-grow:1;flex-shrink:1;min-width:0}.fc-h-event .fc-event-title{display:inline-block;left:0;max-width:100%;overflow:hidden;right:0;vertical-align:top}.fc-h-event.fc-event-selected:before{bottom:-10px;top:-10px}.fc-direction-ltr .fc-daygrid-block-event:not(.fc-event-start),.fc-direction-rtl .fc-daygrid-block-event:not(.fc-event-end){border-bottom-left-radius:0;border-left-width:0;border-top-left-radius:0}.fc-direction-ltr .fc-daygrid-block-event:not(.fc-event-end),.fc-direction-rtl .fc-daygrid-block-event:not(.fc-event-start){border-bottom-right-radius:0;border-right-width:0;border-top-right-radius:0}.fc-h-event:not(.fc-event-selected) .fc-event-resizer{bottom:0;top:0;width:var(--fc-event-resizer-thickness)}.fc-direction-ltr .fc-h-event:not(.fc-event-selected) .fc-event-resizer-start,.fc-direction-rtl .fc-h-event:not(.fc-event-selected) .fc-event-resizer-end{cursor:w-resize;left:calc(var(--fc-event-resizer-thickness)*-.5)}.fc-direction-ltr .fc-h-event:not(.fc-event-selected) .fc-event-resizer-end,.fc-direction-rtl .fc-h-event:not(.fc-event-selected) .fc-event-resizer-start{cursor:e-resize;right:calc(var(--fc-event-resizer-thickness)*-.5)}.fc-h-event.fc-event-selected .fc-event-resizer{margin-top:calc(var(--fc-event-resizer-dot-total-width)*-.5);top:50%}.fc-direction-ltr .fc-h-event.fc-event-selected .fc-event-resizer-start,.fc-direction-rtl .fc-h-event.fc-event-selected .fc-event-resizer-end{left:calc(var(--fc-event-resizer-dot-total-width)*-.5)}.fc-direction-ltr .fc-h-event.fc-event-selected .fc-event-resizer-end,.fc-direction-rtl .fc-h-event.fc-event-selected .fc-event-resizer-start{right:calc(var(--fc-event-resizer-dot-total-width)*-.5)}.fc .fc-popover{box-shadow:0 2px 6px rgba(0,0,0,.15);position:absolute;z-index:9999}.fc .fc-popover-header{align-items:center;display:flex;flex-direction:row;justify-content:space-between;padding:3px 4px}.fc .fc-popover-title{margin:0 2px}.fc .fc-popover-close{cursor:pointer;font-size:1.1em;opacity:.65}.fc-theme-standard .fc-popover{background:var(--fc-page-bg-color);border:1px solid var(--fc-border-color)}.fc-theme-standard .fc-popover-header{background:var(--fc-neutral-bg-color)}\";\ninjectStyles(css_248z);\n\nclass DelayedRunner {\n    constructor(drainedOption) {\n        this.drainedOption = drainedOption;\n        this.isRunning = false;\n        this.isDirty = false;\n        this.pauseDepths = {};\n        this.timeoutId = 0;\n    }\n    request(delay) {\n        this.isDirty = true;\n        if (!this.isPaused()) {\n            this.clearTimeout();\n            if (delay == null) {\n                this.tryDrain();\n            }\n            else {\n                this.timeoutId = setTimeout(// NOT OPTIMAL! TODO: look at debounce\n                this.tryDrain.bind(this), delay);\n            }\n        }\n    }\n    pause(scope = '') {\n        let { pauseDepths } = this;\n        pauseDepths[scope] = (pauseDepths[scope] || 0) + 1;\n        this.clearTimeout();\n    }\n    resume(scope = '', force) {\n        let { pauseDepths } = this;\n        if (scope in pauseDepths) {\n            if (force) {\n                delete pauseDepths[scope];\n            }\n            else {\n                pauseDepths[scope] -= 1;\n                let depth = pauseDepths[scope];\n                if (depth <= 0) {\n                    delete pauseDepths[scope];\n                }\n            }\n            this.tryDrain();\n        }\n    }\n    isPaused() {\n        return Object.keys(this.pauseDepths).length;\n    }\n    tryDrain() {\n        if (!this.isRunning && !this.isPaused()) {\n            this.isRunning = true;\n            while (this.isDirty) {\n                this.isDirty = false;\n                this.drained(); // might set isDirty to true again\n            }\n            this.isRunning = false;\n        }\n    }\n    clear() {\n        this.clearTimeout();\n        this.isDirty = false;\n        this.pauseDepths = {};\n    }\n    clearTimeout() {\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = 0;\n        }\n    }\n    drained() {\n        if (this.drainedOption) {\n            this.drainedOption();\n        }\n    }\n}\n\nfunction removeElement(el) {\n    if (el.parentNode) {\n        el.parentNode.removeChild(el);\n    }\n}\n// Querying\n// ----------------------------------------------------------------------------------------------------------------\nfunction elementClosest(el, selector) {\n    if (el.closest) {\n        return el.closest(selector);\n        // really bad fallback for IE\n        // from https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n    }\n    if (!document.documentElement.contains(el)) {\n        return null;\n    }\n    do {\n        if (elementMatches(el, selector)) {\n            return el;\n        }\n        el = (el.parentElement || el.parentNode);\n    } while (el !== null && el.nodeType === 1);\n    return null;\n}\nfunction elementMatches(el, selector) {\n    let method = el.matches || el.matchesSelector || el.msMatchesSelector;\n    return method.call(el, selector);\n}\n// accepts multiple subject els\n// returns a real array. good for methods like forEach\n// TODO: accept the document\nfunction findElements(container, selector) {\n    let containers = container instanceof HTMLElement ? [container] : container;\n    let allMatches = [];\n    for (let i = 0; i < containers.length; i += 1) {\n        let matches = containers[i].querySelectorAll(selector);\n        for (let j = 0; j < matches.length; j += 1) {\n            allMatches.push(matches[j]);\n        }\n    }\n    return allMatches;\n}\n// accepts multiple subject els\n// only queries direct child elements // TODO: rename to findDirectChildren!\nfunction findDirectChildren(parent, selector) {\n    let parents = parent instanceof HTMLElement ? [parent] : parent;\n    let allMatches = [];\n    for (let i = 0; i < parents.length; i += 1) {\n        let childNodes = parents[i].children; // only ever elements\n        for (let j = 0; j < childNodes.length; j += 1) {\n            let childNode = childNodes[j];\n            if (!selector || elementMatches(childNode, selector)) {\n                allMatches.push(childNode);\n            }\n        }\n    }\n    return allMatches;\n}\n// Style\n// ----------------------------------------------------------------------------------------------------------------\nconst PIXEL_PROP_RE = /(top|left|right|bottom|width|height)$/i;\nfunction applyStyle(el, props) {\n    for (let propName in props) {\n        applyStyleProp(el, propName, props[propName]);\n    }\n}\nfunction applyStyleProp(el, name, val) {\n    if (val == null) {\n        el.style[name] = '';\n    }\n    else if (typeof val === 'number' && PIXEL_PROP_RE.test(name)) {\n        el.style[name] = `${val}px`;\n    }\n    else {\n        el.style[name] = val;\n    }\n}\n// Event Handling\n// ----------------------------------------------------------------------------------------------------------------\n// if intercepting bubbled events at the document/window/body level,\n// and want to see originating element (the 'target'), use this util instead\n// of `ev.target` because it goes within web-component boundaries.\nfunction getEventTargetViaRoot(ev) {\n    var _a, _b;\n    return (_b = (_a = ev.composedPath) === null || _a === void 0 ? void 0 : _a.call(ev)[0]) !== null && _b !== void 0 ? _b : ev.target;\n}\n// Unique ID for DOM attribute\nlet guid$1 = 0;\nfunction getUniqueDomId() {\n    guid$1 += 1;\n    return 'fc-dom-' + guid$1;\n}\n\n// Stops a mouse/touch event from doing it's native browser action\nfunction preventDefault(ev) {\n    ev.preventDefault();\n}\n// Event Delegation\n// ----------------------------------------------------------------------------------------------------------------\nfunction buildDelegationHandler(selector, handler) {\n    return (ev) => {\n        let matchedChild = elementClosest(ev.target, selector);\n        if (matchedChild) {\n            handler.call(matchedChild, ev, matchedChild);\n        }\n    };\n}\nfunction listenBySelector(container, eventType, selector, handler) {\n    let attachedHandler = buildDelegationHandler(selector, handler);\n    container.addEventListener(eventType, attachedHandler);\n    return () => {\n        container.removeEventListener(eventType, attachedHandler);\n    };\n}\nfunction listenToHoverBySelector(container, selector, onMouseEnter, onMouseLeave) {\n    let currentMatchedChild;\n    return listenBySelector(container, 'mouseover', selector, (mouseOverEv, matchedChild) => {\n        if (matchedChild !== currentMatchedChild) {\n            currentMatchedChild = matchedChild;\n            onMouseEnter(mouseOverEv, matchedChild);\n            let realOnMouseLeave = (mouseLeaveEv) => {\n                currentMatchedChild = null;\n                onMouseLeave(mouseLeaveEv, matchedChild);\n                matchedChild.removeEventListener('mouseleave', realOnMouseLeave);\n            };\n            // listen to the next mouseleave, and then unattach\n            matchedChild.addEventListener('mouseleave', realOnMouseLeave);\n        }\n    });\n}\n// Animation\n// ----------------------------------------------------------------------------------------------------------------\nconst transitionEventNames = [\n    'webkitTransitionEnd',\n    'otransitionend',\n    'oTransitionEnd',\n    'msTransitionEnd',\n    'transitionend',\n];\n// triggered only when the next single subsequent transition finishes\nfunction whenTransitionDone(el, callback) {\n    let realCallback = (ev) => {\n        callback(ev);\n        transitionEventNames.forEach((eventName) => {\n            el.removeEventListener(eventName, realCallback);\n        });\n    };\n    transitionEventNames.forEach((eventName) => {\n        el.addEventListener(eventName, realCallback); // cross-browser way to determine when the transition finishes\n    });\n}\n// ARIA workarounds\n// ----------------------------------------------------------------------------------------------------------------\nfunction createAriaClickAttrs(handler) {\n    return Object.assign({ onClick: handler }, createAriaKeyboardAttrs(handler));\n}\nfunction createAriaKeyboardAttrs(handler) {\n    return {\n        tabIndex: 0,\n        onKeyDown(ev) {\n            if (ev.key === 'Enter' || ev.key === ' ') {\n                handler(ev);\n                ev.preventDefault(); // if space, don't scroll down page\n            }\n        },\n    };\n}\n\nlet guidNumber = 0;\nfunction guid() {\n    guidNumber += 1;\n    return String(guidNumber);\n}\n/* FullCalendar-specific DOM Utilities\n----------------------------------------------------------------------------------------------------------------------*/\n// Make the mouse cursor express that an event is not allowed in the current area\nfunction disableCursor() {\n    document.body.classList.add('fc-not-allowed');\n}\n// Returns the mouse cursor to its original look\nfunction enableCursor() {\n    document.body.classList.remove('fc-not-allowed');\n}\n/* Selection\n----------------------------------------------------------------------------------------------------------------------*/\nfunction preventSelection(el) {\n    el.style.userSelect = 'none';\n    el.style.webkitUserSelect = 'none';\n    el.addEventListener('selectstart', preventDefault);\n}\nfunction allowSelection(el) {\n    el.style.userSelect = '';\n    el.style.webkitUserSelect = '';\n    el.removeEventListener('selectstart', preventDefault);\n}\n/* Context Menu\n----------------------------------------------------------------------------------------------------------------------*/\nfunction preventContextMenu(el) {\n    el.addEventListener('contextmenu', preventDefault);\n}\nfunction allowContextMenu(el) {\n    el.removeEventListener('contextmenu', preventDefault);\n}\nfunction parseFieldSpecs(input) {\n    let specs = [];\n    let tokens = [];\n    let i;\n    let token;\n    if (typeof input === 'string') {\n        tokens = input.split(/\\s*,\\s*/);\n    }\n    else if (typeof input === 'function') {\n        tokens = [input];\n    }\n    else if (Array.isArray(input)) {\n        tokens = input;\n    }\n    for (i = 0; i < tokens.length; i += 1) {\n        token = tokens[i];\n        if (typeof token === 'string') {\n            specs.push(token.charAt(0) === '-' ?\n                { field: token.substring(1), order: -1 } :\n                { field: token, order: 1 });\n        }\n        else if (typeof token === 'function') {\n            specs.push({ func: token });\n        }\n    }\n    return specs;\n}\nfunction compareByFieldSpecs(obj0, obj1, fieldSpecs) {\n    let i;\n    let cmp;\n    for (i = 0; i < fieldSpecs.length; i += 1) {\n        cmp = compareByFieldSpec(obj0, obj1, fieldSpecs[i]);\n        if (cmp) {\n            return cmp;\n        }\n    }\n    return 0;\n}\nfunction compareByFieldSpec(obj0, obj1, fieldSpec) {\n    if (fieldSpec.func) {\n        return fieldSpec.func(obj0, obj1);\n    }\n    return flexibleCompare(obj0[fieldSpec.field], obj1[fieldSpec.field])\n        * (fieldSpec.order || 1);\n}\nfunction flexibleCompare(a, b) {\n    if (!a && !b) {\n        return 0;\n    }\n    if (b == null) {\n        return -1;\n    }\n    if (a == null) {\n        return 1;\n    }\n    if (typeof a === 'string' || typeof b === 'string') {\n        return String(a).localeCompare(String(b));\n    }\n    return a - b;\n}\n/* String Utilities\n----------------------------------------------------------------------------------------------------------------------*/\nfunction padStart(val, len) {\n    let s = String(val);\n    return '000'.substr(0, len - s.length) + s;\n}\nfunction formatWithOrdinals(formatter, args, fallbackText) {\n    if (typeof formatter === 'function') {\n        return formatter(...args);\n    }\n    if (typeof formatter === 'string') { // non-blank string\n        return args.reduce((str, arg, index) => (str.replace('$' + index, arg || '')), formatter);\n    }\n    return fallbackText;\n}\n/* Number Utilities\n----------------------------------------------------------------------------------------------------------------------*/\nfunction compareNumbers(a, b) {\n    return a - b;\n}\nfunction isInt(n) {\n    return n % 1 === 0;\n}\n/* FC-specific DOM dimension stuff\n----------------------------------------------------------------------------------------------------------------------*/\nfunction computeSmallestCellWidth(cellEl) {\n    let allWidthEl = cellEl.querySelector('.fc-scrollgrid-shrink-frame');\n    let contentWidthEl = cellEl.querySelector('.fc-scrollgrid-shrink-cushion');\n    if (!allWidthEl) {\n        throw new Error('needs fc-scrollgrid-shrink-frame className'); // TODO: use const\n    }\n    if (!contentWidthEl) {\n        throw new Error('needs fc-scrollgrid-shrink-cushion className');\n    }\n    return cellEl.getBoundingClientRect().width - allWidthEl.getBoundingClientRect().width + // the cell padding+border\n        contentWidthEl.getBoundingClientRect().width;\n}\n\nconst INTERNAL_UNITS = ['years', 'months', 'days', 'milliseconds'];\nconst PARSE_RE = /^(-?)(?:(\\d+)\\.)?(\\d+):(\\d\\d)(?::(\\d\\d)(?:\\.(\\d\\d\\d))?)?/;\n// Parsing and Creation\nfunction createDuration(input, unit) {\n    if (typeof input === 'string') {\n        return parseString(input);\n    }\n    if (typeof input === 'object' && input) { // non-null object\n        return parseObject(input);\n    }\n    if (typeof input === 'number') {\n        return parseObject({ [unit || 'milliseconds']: input });\n    }\n    return null;\n}\nfunction parseString(s) {\n    let m = PARSE_RE.exec(s);\n    if (m) {\n        let sign = m[1] ? -1 : 1;\n        return {\n            years: 0,\n            months: 0,\n            days: sign * (m[2] ? parseInt(m[2], 10) : 0),\n            milliseconds: sign * ((m[3] ? parseInt(m[3], 10) : 0) * 60 * 60 * 1000 + // hours\n                (m[4] ? parseInt(m[4], 10) : 0) * 60 * 1000 + // minutes\n                (m[5] ? parseInt(m[5], 10) : 0) * 1000 + // seconds\n                (m[6] ? parseInt(m[6], 10) : 0) // ms\n            ),\n        };\n    }\n    return null;\n}\nfunction parseObject(obj) {\n    let duration = {\n        years: obj.years || obj.year || 0,\n        months: obj.months || obj.month || 0,\n        days: obj.days || obj.day || 0,\n        milliseconds: (obj.hours || obj.hour || 0) * 60 * 60 * 1000 + // hours\n            (obj.minutes || obj.minute || 0) * 60 * 1000 + // minutes\n            (obj.seconds || obj.second || 0) * 1000 + // seconds\n            (obj.milliseconds || obj.millisecond || obj.ms || 0), // ms\n    };\n    let weeks = obj.weeks || obj.week;\n    if (weeks) {\n        duration.days += weeks * 7;\n        duration.specifiedWeeks = true;\n    }\n    return duration;\n}\n// Equality\nfunction durationsEqual(d0, d1) {\n    return d0.years === d1.years &&\n        d0.months === d1.months &&\n        d0.days === d1.days &&\n        d0.milliseconds === d1.milliseconds;\n}\nfunction asCleanDays(dur) {\n    if (!dur.years && !dur.months && !dur.milliseconds) {\n        return dur.days;\n    }\n    return 0;\n}\n// Simple Math\nfunction addDurations(d0, d1) {\n    return {\n        years: d0.years + d1.years,\n        months: d0.months + d1.months,\n        days: d0.days + d1.days,\n        milliseconds: d0.milliseconds + d1.milliseconds,\n    };\n}\nfunction subtractDurations(d1, d0) {\n    return {\n        years: d1.years - d0.years,\n        months: d1.months - d0.months,\n        days: d1.days - d0.days,\n        milliseconds: d1.milliseconds - d0.milliseconds,\n    };\n}\nfunction multiplyDuration(d, n) {\n    return {\n        years: d.years * n,\n        months: d.months * n,\n        days: d.days * n,\n        milliseconds: d.milliseconds * n,\n    };\n}\n// Conversions\n// \"Rough\" because they are based on average-case Gregorian months/years\nfunction asRoughYears(dur) {\n    return asRoughDays(dur) / 365;\n}\nfunction asRoughMonths(dur) {\n    return asRoughDays(dur) / 30;\n}\nfunction asRoughDays(dur) {\n    return asRoughMs(dur) / 864e5;\n}\nfunction asRoughMinutes(dur) {\n    return asRoughMs(dur) / (1000 * 60);\n}\nfunction asRoughSeconds(dur) {\n    return asRoughMs(dur) / 1000;\n}\nfunction asRoughMs(dur) {\n    return dur.years * (365 * 864e5) +\n        dur.months * (30 * 864e5) +\n        dur.days * 864e5 +\n        dur.milliseconds;\n}\n// Advanced Math\nfunction wholeDivideDurations(numerator, denominator) {\n    let res = null;\n    for (let i = 0; i < INTERNAL_UNITS.length; i += 1) {\n        let unit = INTERNAL_UNITS[i];\n        if (denominator[unit]) {\n            let localRes = numerator[unit] / denominator[unit];\n            if (!isInt(localRes) || (res !== null && res !== localRes)) {\n                return null;\n            }\n            res = localRes;\n        }\n        else if (numerator[unit]) {\n            // needs to divide by something but can't!\n            return null;\n        }\n    }\n    return res;\n}\nfunction greatestDurationDenominator(dur) {\n    let ms = dur.milliseconds;\n    if (ms) {\n        if (ms % 1000 !== 0) {\n            return { unit: 'millisecond', value: ms };\n        }\n        if (ms % (1000 * 60) !== 0) {\n            return { unit: 'second', value: ms / 1000 };\n        }\n        if (ms % (1000 * 60 * 60) !== 0) {\n            return { unit: 'minute', value: ms / (1000 * 60) };\n        }\n        if (ms) {\n            return { unit: 'hour', value: ms / (1000 * 60 * 60) };\n        }\n    }\n    if (dur.days) {\n        if (dur.specifiedWeeks && dur.days % 7 === 0) {\n            return { unit: 'week', value: dur.days / 7 };\n        }\n        return { unit: 'day', value: dur.days };\n    }\n    if (dur.months) {\n        return { unit: 'month', value: dur.months };\n    }\n    if (dur.years) {\n        return { unit: 'year', value: dur.years };\n    }\n    return { unit: 'millisecond', value: 0 };\n}\n\n// TODO: new util arrayify?\nfunction removeExact(array, exactVal) {\n    let removeCnt = 0;\n    let i = 0;\n    while (i < array.length) {\n        if (array[i] === exactVal) {\n            array.splice(i, 1);\n            removeCnt += 1;\n        }\n        else {\n            i += 1;\n        }\n    }\n    return removeCnt;\n}\nfunction isArraysEqual(a0, a1, equalityFunc) {\n    if (a0 === a1) {\n        return true;\n    }\n    let len = a0.length;\n    let i;\n    if (len !== a1.length) { // not array? or not same length?\n        return false;\n    }\n    for (i = 0; i < len; i += 1) {\n        if (!(equalityFunc ? equalityFunc(a0[i], a1[i]) : a0[i] === a1[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconst DAY_IDS = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n// Adding\nfunction addWeeks(m, n) {\n    let a = dateToUtcArray(m);\n    a[2] += n * 7;\n    return arrayToUtcDate(a);\n}\nfunction addDays(m, n) {\n    let a = dateToUtcArray(m);\n    a[2] += n;\n    return arrayToUtcDate(a);\n}\nfunction addMs(m, n) {\n    let a = dateToUtcArray(m);\n    a[6] += n;\n    return arrayToUtcDate(a);\n}\n// Diffing (all return floats)\n// TODO: why not use ranges?\nfunction diffWeeks(m0, m1) {\n    return diffDays(m0, m1) / 7;\n}\nfunction diffDays(m0, m1) {\n    return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60 * 24);\n}\nfunction diffHours(m0, m1) {\n    return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60);\n}\nfunction diffMinutes(m0, m1) {\n    return (m1.valueOf() - m0.valueOf()) / (1000 * 60);\n}\nfunction diffSeconds(m0, m1) {\n    return (m1.valueOf() - m0.valueOf()) / 1000;\n}\nfunction diffDayAndTime(m0, m1) {\n    let m0day = startOfDay(m0);\n    let m1day = startOfDay(m1);\n    return {\n        years: 0,\n        months: 0,\n        days: Math.round(diffDays(m0day, m1day)),\n        milliseconds: (m1.valueOf() - m1day.valueOf()) - (m0.valueOf() - m0day.valueOf()),\n    };\n}\n// Diffing Whole Units\nfunction diffWholeWeeks(m0, m1) {\n    let d = diffWholeDays(m0, m1);\n    if (d !== null && d % 7 === 0) {\n        return d / 7;\n    }\n    return null;\n}\nfunction diffWholeDays(m0, m1) {\n    if (timeAsMs(m0) === timeAsMs(m1)) {\n        return Math.round(diffDays(m0, m1));\n    }\n    return null;\n}\n// Start-Of\nfunction startOfDay(m) {\n    return arrayToUtcDate([\n        m.getUTCFullYear(),\n        m.getUTCMonth(),\n        m.getUTCDate(),\n    ]);\n}\nfunction startOfHour(m) {\n    return arrayToUtcDate([\n        m.getUTCFullYear(),\n        m.getUTCMonth(),\n        m.getUTCDate(),\n        m.getUTCHours(),\n    ]);\n}\nfunction startOfMinute(m) {\n    return arrayToUtcDate([\n        m.getUTCFullYear(),\n        m.getUTCMonth(),\n        m.getUTCDate(),\n        m.getUTCHours(),\n        m.getUTCMinutes(),\n    ]);\n}\nfunction startOfSecond(m) {\n    return arrayToUtcDate([\n        m.getUTCFullYear(),\n        m.getUTCMonth(),\n        m.getUTCDate(),\n        m.getUTCHours(),\n        m.getUTCMinutes(),\n        m.getUTCSeconds(),\n    ]);\n}\n// Week Computation\nfunction weekOfYear(marker, dow, doy) {\n    let y = marker.getUTCFullYear();\n    let w = weekOfGivenYear(marker, y, dow, doy);\n    if (w < 1) {\n        return weekOfGivenYear(marker, y - 1, dow, doy);\n    }\n    let nextW = weekOfGivenYear(marker, y + 1, dow, doy);\n    if (nextW >= 1) {\n        return Math.min(w, nextW);\n    }\n    return w;\n}\nfunction weekOfGivenYear(marker, year, dow, doy) {\n    let firstWeekStart = arrayToUtcDate([year, 0, 1 + firstWeekOffset(year, dow, doy)]);\n    let dayStart = startOfDay(marker);\n    let days = Math.round(diffDays(firstWeekStart, dayStart));\n    return Math.floor(days / 7) + 1; // zero-indexed\n}\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    let fwd = 7 + dow - doy;\n    // first-week day local weekday -- which local weekday is fwd\n    let fwdlw = (7 + arrayToUtcDate([year, 0, fwd]).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n}\n// Array Conversion\nfunction dateToLocalArray(date) {\n    return [\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate(),\n        date.getHours(),\n        date.getMinutes(),\n        date.getSeconds(),\n        date.getMilliseconds(),\n    ];\n}\nfunction arrayToLocalDate(a) {\n    return new Date(a[0], a[1] || 0, a[2] == null ? 1 : a[2], // day of month\n    a[3] || 0, a[4] || 0, a[5] || 0);\n}\nfunction dateToUtcArray(date) {\n    return [\n        date.getUTCFullYear(),\n        date.getUTCMonth(),\n        date.getUTCDate(),\n        date.getUTCHours(),\n        date.getUTCMinutes(),\n        date.getUTCSeconds(),\n        date.getUTCMilliseconds(),\n    ];\n}\nfunction arrayToUtcDate(a) {\n    // according to web standards (and Safari), a month index is required.\n    // massage if only given a year.\n    if (a.length === 1) {\n        a = a.concat([0]);\n    }\n    return new Date(Date.UTC(...a));\n}\n// Other Utils\nfunction isValidDate(m) {\n    return !isNaN(m.valueOf());\n}\nfunction timeAsMs(m) {\n    return m.getUTCHours() * 1000 * 60 * 60 +\n        m.getUTCMinutes() * 1000 * 60 +\n        m.getUTCSeconds() * 1000 +\n        m.getUTCMilliseconds();\n}\n\n// timeZoneOffset is in minutes\nfunction buildIsoString(marker, timeZoneOffset, stripZeroTime = false) {\n    let s = marker.toISOString();\n    s = s.replace('.000', '');\n    if (stripZeroTime) {\n        s = s.replace('T00:00:00Z', '');\n    }\n    if (s.length > 10) { // time part wasn't stripped, can add timezone info\n        if (timeZoneOffset == null) {\n            s = s.replace('Z', '');\n        }\n        else if (timeZoneOffset !== 0) {\n            s = s.replace('Z', formatTimeZoneOffset(timeZoneOffset, true));\n        }\n        // otherwise, its UTC-0 and we want to keep the Z\n    }\n    return s;\n}\n// formats the date, but with no time part\n// TODO: somehow merge with buildIsoString and stripZeroTime\n// TODO: rename. omit \"string\"\nfunction formatDayString(marker) {\n    return marker.toISOString().replace(/T.*$/, '');\n}\nfunction formatIsoMonthStr(marker) {\n    return marker.toISOString().match(/^\\d{4}-\\d{2}/)[0];\n}\n// TODO: use Date::toISOString and use everything after the T?\nfunction formatIsoTimeString(marker) {\n    return padStart(marker.getUTCHours(), 2) + ':' +\n        padStart(marker.getUTCMinutes(), 2) + ':' +\n        padStart(marker.getUTCSeconds(), 2);\n}\nfunction formatTimeZoneOffset(minutes, doIso = false) {\n    let sign = minutes < 0 ? '-' : '+';\n    let abs = Math.abs(minutes);\n    let hours = Math.floor(abs / 60);\n    let mins = Math.round(abs % 60);\n    if (doIso) {\n        return `${sign + padStart(hours, 2)}:${padStart(mins, 2)}`;\n    }\n    return `GMT${sign}${hours}${mins ? `:${padStart(mins, 2)}` : ''}`;\n}\n\nfunction memoize(workerFunc, resEquality, teardownFunc) {\n    let currentArgs;\n    let currentRes;\n    return function (...newArgs) {\n        if (!currentArgs) {\n            currentRes = workerFunc.apply(this, newArgs);\n        }\n        else if (!isArraysEqual(currentArgs, newArgs)) {\n            if (teardownFunc) {\n                teardownFunc(currentRes);\n            }\n            let res = workerFunc.apply(this, newArgs);\n            if (!resEquality || !resEquality(res, currentRes)) {\n                currentRes = res;\n            }\n        }\n        currentArgs = newArgs;\n        return currentRes;\n    };\n}\nfunction memoizeObjArg(workerFunc, resEquality, teardownFunc) {\n    let currentArg;\n    let currentRes;\n    return (newArg) => {\n        if (!currentArg) {\n            currentRes = workerFunc.call(this, newArg);\n        }\n        else if (!isPropsEqual(currentArg, newArg)) {\n            if (teardownFunc) {\n                teardownFunc(currentRes);\n            }\n            let res = workerFunc.call(this, newArg);\n            if (!resEquality || !resEquality(res, currentRes)) {\n                currentRes = res;\n            }\n        }\n        currentArg = newArg;\n        return currentRes;\n    };\n}\nfunction memoizeArraylike(// used at all?\nworkerFunc, resEquality, teardownFunc) {\n    let currentArgSets = [];\n    let currentResults = [];\n    return (newArgSets) => {\n        let currentLen = currentArgSets.length;\n        let newLen = newArgSets.length;\n        let i = 0;\n        for (; i < currentLen; i += 1) {\n            if (!newArgSets[i]) { // one of the old sets no longer exists\n                if (teardownFunc) {\n                    teardownFunc(currentResults[i]);\n                }\n            }\n            else if (!isArraysEqual(currentArgSets[i], newArgSets[i])) {\n                if (teardownFunc) {\n                    teardownFunc(currentResults[i]);\n                }\n                let res = workerFunc.apply(this, newArgSets[i]);\n                if (!resEquality || !resEquality(res, currentResults[i])) {\n                    currentResults[i] = res;\n                }\n            }\n        }\n        for (; i < newLen; i += 1) {\n            currentResults[i] = workerFunc.apply(this, newArgSets[i]);\n        }\n        currentArgSets = newArgSets;\n        currentResults.splice(newLen); // remove excess\n        return currentResults;\n    };\n}\nfunction memoizeHashlike(workerFunc, resEquality, teardownFunc) {\n    let currentArgHash = {};\n    let currentResHash = {};\n    return (newArgHash) => {\n        let newResHash = {};\n        for (let key in newArgHash) {\n            if (!currentResHash[key]) {\n                newResHash[key] = workerFunc.apply(this, newArgHash[key]);\n            }\n            else if (!isArraysEqual(currentArgHash[key], newArgHash[key])) {\n                if (teardownFunc) {\n                    teardownFunc(currentResHash[key]);\n                }\n                let res = workerFunc.apply(this, newArgHash[key]);\n                newResHash[key] = (resEquality && resEquality(res, currentResHash[key]))\n                    ? currentResHash[key]\n                    : res;\n            }\n            else {\n                newResHash[key] = currentResHash[key];\n            }\n        }\n        currentArgHash = newArgHash;\n        currentResHash = newResHash;\n        return newResHash;\n    };\n}\n\nconst EXTENDED_SETTINGS_AND_SEVERITIES = {\n    week: 3,\n    separator: 0,\n    omitZeroMinute: 0,\n    meridiem: 0,\n    omitCommas: 0,\n};\nconst STANDARD_DATE_PROP_SEVERITIES = {\n    timeZoneName: 7,\n    era: 6,\n    year: 5,\n    month: 4,\n    day: 2,\n    weekday: 2,\n    hour: 1,\n    minute: 1,\n    second: 1,\n};\nconst MERIDIEM_RE = /\\s*([ap])\\.?m\\.?/i; // eats up leading spaces too\nconst COMMA_RE = /,/g; // we need re for globalness\nconst MULTI_SPACE_RE = /\\s+/g;\nconst LTR_RE = /\\u200e/g; // control character\nconst UTC_RE = /UTC|GMT/;\nclass NativeFormatter {\n    constructor(formatSettings) {\n        let standardDateProps = {};\n        let extendedSettings = {};\n        let severity = 0;\n        for (let name in formatSettings) {\n            if (name in EXTENDED_SETTINGS_AND_SEVERITIES) {\n                extendedSettings[name] = formatSettings[name];\n                severity = Math.max(EXTENDED_SETTINGS_AND_SEVERITIES[name], severity);\n            }\n            else {\n                standardDateProps[name] = formatSettings[name];\n                if (name in STANDARD_DATE_PROP_SEVERITIES) { // TODO: what about hour12? no severity\n                    severity = Math.max(STANDARD_DATE_PROP_SEVERITIES[name], severity);\n                }\n            }\n        }\n        this.standardDateProps = standardDateProps;\n        this.extendedSettings = extendedSettings;\n        this.severity = severity;\n        this.buildFormattingFunc = memoize(buildFormattingFunc);\n    }\n    format(date, context) {\n        return this.buildFormattingFunc(this.standardDateProps, this.extendedSettings, context)(date);\n    }\n    formatRange(start, end, context, betterDefaultSeparator) {\n        let { standardDateProps, extendedSettings } = this;\n        let diffSeverity = computeMarkerDiffSeverity(start.marker, end.marker, context.calendarSystem);\n        if (!diffSeverity) {\n            return this.format(start, context);\n        }\n        let biggestUnitForPartial = diffSeverity;\n        if (biggestUnitForPartial > 1 && // the two dates are different in a way that's larger scale than time\n            (standardDateProps.year === 'numeric' || standardDateProps.year === '2-digit') &&\n            (standardDateProps.month === 'numeric' || standardDateProps.month === '2-digit') &&\n            (standardDateProps.day === 'numeric' || standardDateProps.day === '2-digit')) {\n            biggestUnitForPartial = 1; // make it look like the dates are only different in terms of time\n        }\n        let full0 = this.format(start, context);\n        let full1 = this.format(end, context);\n        if (full0 === full1) {\n            return full0;\n        }\n        let partialDateProps = computePartialFormattingOptions(standardDateProps, biggestUnitForPartial);\n        let partialFormattingFunc = buildFormattingFunc(partialDateProps, extendedSettings, context);\n        let partial0 = partialFormattingFunc(start);\n        let partial1 = partialFormattingFunc(end);\n        let insertion = findCommonInsertion(full0, partial0, full1, partial1);\n        let separator = extendedSettings.separator || betterDefaultSeparator || context.defaultSeparator || '';\n        if (insertion) {\n            return insertion.before + partial0 + separator + partial1 + insertion.after;\n        }\n        return full0 + separator + full1;\n    }\n    getLargestUnit() {\n        switch (this.severity) {\n            case 7:\n            case 6:\n            case 5:\n                return 'year';\n            case 4:\n                return 'month';\n            case 3:\n                return 'week';\n            case 2:\n                return 'day';\n            default:\n                return 'time'; // really?\n        }\n    }\n}\nfunction buildFormattingFunc(standardDateProps, extendedSettings, context) {\n    let standardDatePropCnt = Object.keys(standardDateProps).length;\n    if (standardDatePropCnt === 1 && standardDateProps.timeZoneName === 'short') {\n        return (date) => (formatTimeZoneOffset(date.timeZoneOffset));\n    }\n    if (standardDatePropCnt === 0 && extendedSettings.week) {\n        return (date) => (formatWeekNumber(context.computeWeekNumber(date.marker), context.weekText, context.weekTextLong, context.locale, extendedSettings.week));\n    }\n    return buildNativeFormattingFunc(standardDateProps, extendedSettings, context);\n}\nfunction buildNativeFormattingFunc(standardDateProps, extendedSettings, context) {\n    standardDateProps = Object.assign({}, standardDateProps); // copy\n    extendedSettings = Object.assign({}, extendedSettings); // copy\n    sanitizeSettings(standardDateProps, extendedSettings);\n    standardDateProps.timeZone = 'UTC'; // we leverage the only guaranteed timeZone for our UTC markers\n    let normalFormat = new Intl.DateTimeFormat(context.locale.codes, standardDateProps);\n    let zeroFormat; // needed?\n    if (extendedSettings.omitZeroMinute) {\n        let zeroProps = Object.assign({}, standardDateProps);\n        delete zeroProps.minute; // seconds and ms were already considered in sanitizeSettings\n        zeroFormat = new Intl.DateTimeFormat(context.locale.codes, zeroProps);\n    }\n    return (date) => {\n        let { marker } = date;\n        let format;\n        if (zeroFormat && !marker.getUTCMinutes()) {\n            format = zeroFormat;\n        }\n        else {\n            format = normalFormat;\n        }\n        let s = format.format(marker);\n        return postProcess(s, date, standardDateProps, extendedSettings, context);\n    };\n}\nfunction sanitizeSettings(standardDateProps, extendedSettings) {\n    // deal with a browser inconsistency where formatting the timezone\n    // requires that the hour/minute be present.\n    if (standardDateProps.timeZoneName) {\n        if (!standardDateProps.hour) {\n            standardDateProps.hour = '2-digit';\n        }\n        if (!standardDateProps.minute) {\n            standardDateProps.minute = '2-digit';\n        }\n    }\n    // only support short timezone names\n    if (standardDateProps.timeZoneName === 'long') {\n        standardDateProps.timeZoneName = 'short';\n    }\n    // if requesting to display seconds, MUST display minutes\n    if (extendedSettings.omitZeroMinute && (standardDateProps.second || standardDateProps.millisecond)) {\n        delete extendedSettings.omitZeroMinute;\n    }\n}\nfunction postProcess(s, date, standardDateProps, extendedSettings, context) {\n    s = s.replace(LTR_RE, ''); // remove left-to-right control chars. do first. good for other regexes\n    if (standardDateProps.timeZoneName === 'short') {\n        s = injectTzoStr(s, (context.timeZone === 'UTC' || date.timeZoneOffset == null) ?\n            'UTC' : // important to normalize for IE, which does \"GMT\"\n            formatTimeZoneOffset(date.timeZoneOffset));\n    }\n    if (extendedSettings.omitCommas) {\n        s = s.replace(COMMA_RE, '').trim();\n    }\n    if (extendedSettings.omitZeroMinute) {\n        s = s.replace(':00', ''); // zeroFormat doesn't always achieve this\n    }\n    // ^ do anything that might create adjacent spaces before this point,\n    // because MERIDIEM_RE likes to eat up loading spaces\n    if (extendedSettings.meridiem === false) {\n        s = s.replace(MERIDIEM_RE, '').trim();\n    }\n    else if (extendedSettings.meridiem === 'narrow') { // a/p\n        s = s.replace(MERIDIEM_RE, (m0, m1) => m1.toLocaleLowerCase());\n    }\n    else if (extendedSettings.meridiem === 'short') { // am/pm\n        s = s.replace(MERIDIEM_RE, (m0, m1) => `${m1.toLocaleLowerCase()}m`);\n    }\n    else if (extendedSettings.meridiem === 'lowercase') { // other meridiem transformers already converted to lowercase\n        s = s.replace(MERIDIEM_RE, (m0) => m0.toLocaleLowerCase());\n    }\n    s = s.replace(MULTI_SPACE_RE, ' ');\n    s = s.trim();\n    return s;\n}\nfunction injectTzoStr(s, tzoStr) {\n    let replaced = false;\n    s = s.replace(UTC_RE, () => {\n        replaced = true;\n        return tzoStr;\n    });\n    // IE11 doesn't include UTC/GMT in the original string, so append to end\n    if (!replaced) {\n        s += ` ${tzoStr}`;\n    }\n    return s;\n}\nfunction formatWeekNumber(num, weekText, weekTextLong, locale, display) {\n    let parts = [];\n    if (display === 'long') {\n        parts.push(weekTextLong);\n    }\n    else if (display === 'short' || display === 'narrow') {\n        parts.push(weekText);\n    }\n    if (display === 'long' || display === 'short') {\n        parts.push(' ');\n    }\n    parts.push(locale.simpleNumberFormat.format(num));\n    if (locale.options.direction === 'rtl') { // TODO: use control characters instead?\n        parts.reverse();\n    }\n    return parts.join('');\n}\n// Range Formatting Utils\n// 0 = exactly the same\n// 1 = different by time\n// and bigger\nfunction computeMarkerDiffSeverity(d0, d1, ca) {\n    if (ca.getMarkerYear(d0) !== ca.getMarkerYear(d1)) {\n        return 5;\n    }\n    if (ca.getMarkerMonth(d0) !== ca.getMarkerMonth(d1)) {\n        return 4;\n    }\n    if (ca.getMarkerDay(d0) !== ca.getMarkerDay(d1)) {\n        return 2;\n    }\n    if (timeAsMs(d0) !== timeAsMs(d1)) {\n        return 1;\n    }\n    return 0;\n}\nfunction computePartialFormattingOptions(options, biggestUnit) {\n    let partialOptions = {};\n    for (let name in options) {\n        if (!(name in STANDARD_DATE_PROP_SEVERITIES) || // not a date part prop (like timeZone)\n            STANDARD_DATE_PROP_SEVERITIES[name] <= biggestUnit) {\n            partialOptions[name] = options[name];\n        }\n    }\n    return partialOptions;\n}\nfunction findCommonInsertion(full0, partial0, full1, partial1) {\n    let i0 = 0;\n    while (i0 < full0.length) {\n        let found0 = full0.indexOf(partial0, i0);\n        if (found0 === -1) {\n            break;\n        }\n        let before0 = full0.substr(0, found0);\n        i0 = found0 + partial0.length;\n        let after0 = full0.substr(i0);\n        let i1 = 0;\n        while (i1 < full1.length) {\n            let found1 = full1.indexOf(partial1, i1);\n            if (found1 === -1) {\n                break;\n            }\n            let before1 = full1.substr(0, found1);\n            i1 = found1 + partial1.length;\n            let after1 = full1.substr(i1);\n            if (before0 === before1 && after0 === after1) {\n                return {\n                    before: before0,\n                    after: after0,\n                };\n            }\n        }\n    }\n    return null;\n}\n\nfunction expandZonedMarker(dateInfo, calendarSystem) {\n    let a = calendarSystem.markerToArray(dateInfo.marker);\n    return {\n        marker: dateInfo.marker,\n        timeZoneOffset: dateInfo.timeZoneOffset,\n        array: a,\n        year: a[0],\n        month: a[1],\n        day: a[2],\n        hour: a[3],\n        minute: a[4],\n        second: a[5],\n        millisecond: a[6],\n    };\n}\n\nfunction createVerboseFormattingArg(start, end, context, betterDefaultSeparator) {\n    let startInfo = expandZonedMarker(start, context.calendarSystem);\n    let endInfo = end ? expandZonedMarker(end, context.calendarSystem) : null;\n    return {\n        date: startInfo,\n        start: startInfo,\n        end: endInfo,\n        timeZone: context.timeZone,\n        localeCodes: context.locale.codes,\n        defaultSeparator: betterDefaultSeparator || context.defaultSeparator,\n    };\n}\n\n/*\nTODO: fix the terminology of \"formatter\" vs \"formatting func\"\n*/\n/*\nAt the time of instantiation, this object does not know which cmd-formatting system it will use.\nIt receives this at the time of formatting, as a setting.\n*/\nclass CmdFormatter {\n    constructor(cmdStr) {\n        this.cmdStr = cmdStr;\n    }\n    format(date, context, betterDefaultSeparator) {\n        return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(date, null, context, betterDefaultSeparator));\n    }\n    formatRange(start, end, context, betterDefaultSeparator) {\n        return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(start, end, context, betterDefaultSeparator));\n    }\n}\n\nclass FuncFormatter {\n    constructor(func) {\n        this.func = func;\n    }\n    format(date, context, betterDefaultSeparator) {\n        return this.func(createVerboseFormattingArg(date, null, context, betterDefaultSeparator));\n    }\n    formatRange(start, end, context, betterDefaultSeparator) {\n        return this.func(createVerboseFormattingArg(start, end, context, betterDefaultSeparator));\n    }\n}\n\nfunction createFormatter(input) {\n    if (typeof input === 'object' && input) { // non-null object\n        return new NativeFormatter(input);\n    }\n    if (typeof input === 'string') {\n        return new CmdFormatter(input);\n    }\n    if (typeof input === 'function') {\n        return new FuncFormatter(input);\n    }\n    return null;\n}\n\n// base options\n// ------------\nconst BASE_OPTION_REFINERS = {\n    navLinkDayClick: identity,\n    navLinkWeekClick: identity,\n    duration: createDuration,\n    bootstrapFontAwesome: identity,\n    buttonIcons: identity,\n    customButtons: identity,\n    defaultAllDayEventDuration: createDuration,\n    defaultTimedEventDuration: createDuration,\n    nextDayThreshold: createDuration,\n    scrollTime: createDuration,\n    scrollTimeReset: Boolean,\n    slotMinTime: createDuration,\n    slotMaxTime: createDuration,\n    dayPopoverFormat: createFormatter,\n    slotDuration: createDuration,\n    snapDuration: createDuration,\n    headerToolbar: identity,\n    footerToolbar: identity,\n    defaultRangeSeparator: String,\n    titleRangeSeparator: String,\n    forceEventDuration: Boolean,\n    dayHeaders: Boolean,\n    dayHeaderFormat: createFormatter,\n    dayHeaderClassNames: identity,\n    dayHeaderContent: identity,\n    dayHeaderDidMount: identity,\n    dayHeaderWillUnmount: identity,\n    dayCellClassNames: identity,\n    dayCellContent: identity,\n    dayCellDidMount: identity,\n    dayCellWillUnmount: identity,\n    initialView: String,\n    aspectRatio: Number,\n    weekends: Boolean,\n    weekNumberCalculation: identity,\n    weekNumbers: Boolean,\n    weekNumberClassNames: identity,\n    weekNumberContent: identity,\n    weekNumberDidMount: identity,\n    weekNumberWillUnmount: identity,\n    editable: Boolean,\n    viewClassNames: identity,\n    viewDidMount: identity,\n    viewWillUnmount: identity,\n    nowIndicator: Boolean,\n    nowIndicatorClassNames: identity,\n    nowIndicatorContent: identity,\n    nowIndicatorDidMount: identity,\n    nowIndicatorWillUnmount: identity,\n    showNonCurrentDates: Boolean,\n    lazyFetching: Boolean,\n    startParam: String,\n    endParam: String,\n    timeZoneParam: String,\n    timeZone: String,\n    locales: identity,\n    locale: identity,\n    themeSystem: String,\n    dragRevertDuration: Number,\n    dragScroll: Boolean,\n    allDayMaintainDuration: Boolean,\n    unselectAuto: Boolean,\n    dropAccept: identity,\n    eventOrder: parseFieldSpecs,\n    eventOrderStrict: Boolean,\n    handleWindowResize: Boolean,\n    windowResizeDelay: Number,\n    longPressDelay: Number,\n    eventDragMinDistance: Number,\n    expandRows: Boolean,\n    height: identity,\n    contentHeight: identity,\n    direction: String,\n    weekNumberFormat: createFormatter,\n    eventResizableFromStart: Boolean,\n    displayEventTime: Boolean,\n    displayEventEnd: Boolean,\n    weekText: String,\n    weekTextLong: String,\n    progressiveEventRendering: Boolean,\n    businessHours: identity,\n    initialDate: identity,\n    now: identity,\n    eventDataTransform: identity,\n    stickyHeaderDates: identity,\n    stickyFooterScrollbar: identity,\n    viewHeight: identity,\n    defaultAllDay: Boolean,\n    eventSourceFailure: identity,\n    eventSourceSuccess: identity,\n    eventDisplay: String,\n    eventStartEditable: Boolean,\n    eventDurationEditable: Boolean,\n    eventOverlap: identity,\n    eventConstraint: identity,\n    eventAllow: identity,\n    eventBackgroundColor: String,\n    eventBorderColor: String,\n    eventTextColor: String,\n    eventColor: String,\n    eventClassNames: identity,\n    eventContent: identity,\n    eventDidMount: identity,\n    eventWillUnmount: identity,\n    selectConstraint: identity,\n    selectOverlap: identity,\n    selectAllow: identity,\n    droppable: Boolean,\n    unselectCancel: String,\n    slotLabelFormat: identity,\n    slotLaneClassNames: identity,\n    slotLaneContent: identity,\n    slotLaneDidMount: identity,\n    slotLaneWillUnmount: identity,\n    slotLabelClassNames: identity,\n    slotLabelContent: identity,\n    slotLabelDidMount: identity,\n    slotLabelWillUnmount: identity,\n    dayMaxEvents: identity,\n    dayMaxEventRows: identity,\n    dayMinWidth: Number,\n    slotLabelInterval: createDuration,\n    allDayText: String,\n    allDayClassNames: identity,\n    allDayContent: identity,\n    allDayDidMount: identity,\n    allDayWillUnmount: identity,\n    slotMinWidth: Number,\n    navLinks: Boolean,\n    eventTimeFormat: createFormatter,\n    rerenderDelay: Number,\n    moreLinkText: identity,\n    moreLinkHint: identity,\n    selectMinDistance: Number,\n    selectable: Boolean,\n    selectLongPressDelay: Number,\n    eventLongPressDelay: Number,\n    selectMirror: Boolean,\n    eventMaxStack: Number,\n    eventMinHeight: Number,\n    eventMinWidth: Number,\n    eventShortHeight: Number,\n    slotEventOverlap: Boolean,\n    plugins: identity,\n    firstDay: Number,\n    dayCount: Number,\n    dateAlignment: String,\n    dateIncrement: createDuration,\n    hiddenDays: identity,\n    fixedWeekCount: Boolean,\n    validRange: identity,\n    visibleRange: identity,\n    titleFormat: identity,\n    eventInteractive: Boolean,\n    // only used by list-view, but languages define the value, so we need it in base options\n    noEventsText: String,\n    viewHint: identity,\n    navLinkHint: identity,\n    closeHint: String,\n    timeHint: String,\n    eventHint: String,\n    moreLinkClick: identity,\n    moreLinkClassNames: identity,\n    moreLinkContent: identity,\n    moreLinkDidMount: identity,\n    moreLinkWillUnmount: identity,\n    monthStartFormat: createFormatter,\n    // for connectors\n    // (can't be part of plugin system b/c must be provided at runtime)\n    handleCustomRendering: identity,\n    customRenderingMetaMap: identity,\n};\n// do NOT give a type here. need `typeof BASE_OPTION_DEFAULTS` to give real results.\n// raw values.\nconst BASE_OPTION_DEFAULTS = {\n    eventDisplay: 'auto',\n    defaultRangeSeparator: ' - ',\n    titleRangeSeparator: ' \\u2013 ',\n    defaultTimedEventDuration: '01:00:00',\n    defaultAllDayEventDuration: { day: 1 },\n    forceEventDuration: false,\n    nextDayThreshold: '00:00:00',\n    dayHeaders: true,\n    initialView: '',\n    aspectRatio: 1.35,\n    headerToolbar: {\n        start: 'title',\n        center: '',\n        end: 'today prev,next',\n    },\n    weekends: true,\n    weekNumbers: false,\n    weekNumberCalculation: 'local',\n    editable: false,\n    nowIndicator: false,\n    scrollTime: '06:00:00',\n    scrollTimeReset: true,\n    slotMinTime: '00:00:00',\n    slotMaxTime: '24:00:00',\n    showNonCurrentDates: true,\n    lazyFetching: true,\n    startParam: 'start',\n    endParam: 'end',\n    timeZoneParam: 'timeZone',\n    timeZone: 'local',\n    locales: [],\n    locale: '',\n    themeSystem: 'standard',\n    dragRevertDuration: 500,\n    dragScroll: true,\n    allDayMaintainDuration: false,\n    unselectAuto: true,\n    dropAccept: '*',\n    eventOrder: 'start,-duration,allDay,title',\n    dayPopoverFormat: { month: 'long', day: 'numeric', year: 'numeric' },\n    handleWindowResize: true,\n    windowResizeDelay: 100,\n    longPressDelay: 1000,\n    eventDragMinDistance: 5,\n    expandRows: false,\n    navLinks: false,\n    selectable: false,\n    eventMinHeight: 15,\n    eventMinWidth: 30,\n    eventShortHeight: 30,\n    monthStartFormat: { month: 'long', day: 'numeric' },\n};\n// calendar listeners\n// ------------------\nconst CALENDAR_LISTENER_REFINERS = {\n    datesSet: identity,\n    eventsSet: identity,\n    eventAdd: identity,\n    eventChange: identity,\n    eventRemove: identity,\n    windowResize: identity,\n    eventClick: identity,\n    eventMouseEnter: identity,\n    eventMouseLeave: identity,\n    select: identity,\n    unselect: identity,\n    loading: identity,\n    // internal\n    _unmount: identity,\n    _beforeprint: identity,\n    _afterprint: identity,\n    _noEventDrop: identity,\n    _noEventResize: identity,\n    _resize: identity,\n    _scrollRequest: identity,\n};\n// calendar-specific options\n// -------------------------\nconst CALENDAR_OPTION_REFINERS = {\n    buttonText: identity,\n    buttonHints: identity,\n    views: identity,\n    plugins: identity,\n    initialEvents: identity,\n    events: identity,\n    eventSources: identity,\n};\nconst COMPLEX_OPTION_COMPARATORS = {\n    headerToolbar: isMaybeObjectsEqual,\n    footerToolbar: isMaybeObjectsEqual,\n    buttonText: isMaybeObjectsEqual,\n    buttonHints: isMaybeObjectsEqual,\n    buttonIcons: isMaybeObjectsEqual,\n    dateIncrement: isMaybeObjectsEqual,\n    plugins: isMaybeArraysEqual,\n    events: isMaybeArraysEqual,\n    eventSources: isMaybeArraysEqual,\n    ['resources']: isMaybeArraysEqual,\n};\nfunction isMaybeObjectsEqual(a, b) {\n    if (typeof a === 'object' && typeof b === 'object' && a && b) { // both non-null objects\n        return isPropsEqual(a, b);\n    }\n    return a === b;\n}\nfunction isMaybeArraysEqual(a, b) {\n    if (Array.isArray(a) && Array.isArray(b)) {\n        return isArraysEqual(a, b);\n    }\n    return a === b;\n}\n// view-specific options\n// ---------------------\nconst VIEW_OPTION_REFINERS = {\n    type: String,\n    component: identity,\n    buttonText: String,\n    buttonTextKey: String,\n    dateProfileGeneratorClass: identity,\n    usesMinMaxTime: Boolean,\n    classNames: identity,\n    content: identity,\n    didMount: identity,\n    willUnmount: identity,\n};\n// util funcs\n// ----------------------------------------------------------------------------------------------------\nfunction mergeRawOptions(optionSets) {\n    return mergeProps(optionSets, COMPLEX_OPTION_COMPARATORS);\n}\nfunction refineProps(input, refiners) {\n    let refined = {};\n    let extra = {};\n    for (let propName in refiners) {\n        if (propName in input) {\n            refined[propName] = refiners[propName](input[propName]);\n        }\n    }\n    for (let propName in input) {\n        if (!(propName in refiners)) {\n            extra[propName] = input[propName];\n        }\n    }\n    return { refined, extra };\n}\nfunction identity(raw) {\n    return raw;\n}\n\nconst { hasOwnProperty } = Object.prototype;\n// Merges an array of objects into a single object.\n// The second argument allows for an array of property names who's object values will be merged together.\nfunction mergeProps(propObjs, complexPropsMap) {\n    let dest = {};\n    if (complexPropsMap) {\n        for (let name in complexPropsMap) {\n            if (complexPropsMap[name] === isMaybeObjectsEqual) { // implies that it's object-mergeable\n                let complexObjs = [];\n                // collect the trailing object values, stopping when a non-object is discovered\n                for (let i = propObjs.length - 1; i >= 0; i -= 1) {\n                    let val = propObjs[i][name];\n                    if (typeof val === 'object' && val) { // non-null object\n                        complexObjs.unshift(val);\n                    }\n                    else if (val !== undefined) {\n                        dest[name] = val; // if there were no objects, this value will be used\n                        break;\n                    }\n                }\n                // if the trailing values were objects, use the merged value\n                if (complexObjs.length) {\n                    dest[name] = mergeProps(complexObjs);\n                }\n            }\n        }\n    }\n    // copy values into the destination, going from last to first\n    for (let i = propObjs.length - 1; i >= 0; i -= 1) {\n        let props = propObjs[i];\n        for (let name in props) {\n            if (!(name in dest)) { // if already assigned by previous props or complex props, don't reassign\n                dest[name] = props[name];\n            }\n        }\n    }\n    return dest;\n}\nfunction filterHash(hash, func) {\n    let filtered = {};\n    for (let key in hash) {\n        if (func(hash[key], key)) {\n            filtered[key] = hash[key];\n        }\n    }\n    return filtered;\n}\nfunction mapHash(hash, func) {\n    let newHash = {};\n    for (let key in hash) {\n        newHash[key] = func(hash[key], key);\n    }\n    return newHash;\n}\nfunction arrayToHash(a) {\n    let hash = {};\n    for (let item of a) {\n        hash[item] = true;\n    }\n    return hash;\n}\n// TODO: reassess browser support\n// https://caniuse.com/?search=object.values\nfunction hashValuesToArray(obj) {\n    let a = [];\n    for (let key in obj) {\n        a.push(obj[key]);\n    }\n    return a;\n}\nfunction isPropsEqual(obj0, obj1) {\n    if (obj0 === obj1) {\n        return true;\n    }\n    for (let key in obj0) {\n        if (hasOwnProperty.call(obj0, key)) {\n            if (!(key in obj1)) {\n                return false;\n            }\n        }\n    }\n    for (let key in obj1) {\n        if (hasOwnProperty.call(obj1, key)) {\n            if (obj0[key] !== obj1[key]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nconst HANDLER_RE = /^on[A-Z]/;\nfunction isNonHandlerPropsEqual(obj0, obj1) {\n    const keys = getUnequalProps(obj0, obj1);\n    for (let key of keys) {\n        if (!HANDLER_RE.test(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction getUnequalProps(obj0, obj1) {\n    let keys = [];\n    for (let key in obj0) {\n        if (hasOwnProperty.call(obj0, key)) {\n            if (!(key in obj1)) {\n                keys.push(key);\n            }\n        }\n    }\n    for (let key in obj1) {\n        if (hasOwnProperty.call(obj1, key)) {\n            if (obj0[key] !== obj1[key]) {\n                keys.push(key);\n            }\n        }\n    }\n    return keys;\n}\nfunction compareObjs(oldProps, newProps, equalityFuncs = {}) {\n    if (oldProps === newProps) {\n        return true;\n    }\n    for (let key in newProps) {\n        if (key in oldProps && isObjValsEqual(oldProps[key], newProps[key], equalityFuncs[key])) ;\n        else {\n            return false;\n        }\n    }\n    // check for props that were omitted in the new\n    for (let key in oldProps) {\n        if (!(key in newProps)) {\n            return false;\n        }\n    }\n    return true;\n}\n/*\nassumed \"true\" equality for handler names like \"onReceiveSomething\"\n*/\nfunction isObjValsEqual(val0, val1, comparator) {\n    if (val0 === val1 || comparator === true) {\n        return true;\n    }\n    if (comparator) {\n        return comparator(val0, val1);\n    }\n    return false;\n}\nfunction collectFromHash(hash, startIndex = 0, endIndex, step = 1) {\n    let res = [];\n    if (endIndex == null) {\n        endIndex = Object.keys(hash).length;\n    }\n    for (let i = startIndex; i < endIndex; i += step) {\n        let val = hash[i];\n        if (val !== undefined) { // will disregard undefined for sparse arrays\n            res.push(val);\n        }\n    }\n    return res;\n}\n\nlet calendarSystemClassMap = {};\nfunction registerCalendarSystem(name, theClass) {\n    calendarSystemClassMap[name] = theClass;\n}\nfunction createCalendarSystem(name) {\n    return new calendarSystemClassMap[name]();\n}\nclass GregorianCalendarSystem {\n    getMarkerYear(d) {\n        return d.getUTCFullYear();\n    }\n    getMarkerMonth(d) {\n        return d.getUTCMonth();\n    }\n    getMarkerDay(d) {\n        return d.getUTCDate();\n    }\n    arrayToMarker(arr) {\n        return arrayToUtcDate(arr);\n    }\n    markerToArray(marker) {\n        return dateToUtcArray(marker);\n    }\n}\nregisterCalendarSystem('gregory', GregorianCalendarSystem);\n\nconst ISO_RE = /^\\s*(\\d{4})(-?(\\d{2})(-?(\\d{2})([T ](\\d{2}):?(\\d{2})(:?(\\d{2})(\\.(\\d+))?)?(Z|(([-+])(\\d{2})(:?(\\d{2}))?))?)?)?)?$/;\nfunction parse(str) {\n    let m = ISO_RE.exec(str);\n    if (m) {\n        let marker = new Date(Date.UTC(Number(m[1]), m[3] ? Number(m[3]) - 1 : 0, Number(m[5] || 1), Number(m[7] || 0), Number(m[8] || 0), Number(m[10] || 0), m[12] ? Number(`0.${m[12]}`) * 1000 : 0));\n        if (isValidDate(marker)) {\n            let timeZoneOffset = null;\n            if (m[13]) {\n                timeZoneOffset = (m[15] === '-' ? -1 : 1) * (Number(m[16] || 0) * 60 +\n                    Number(m[18] || 0));\n            }\n            return {\n                marker,\n                isTimeUnspecified: !m[6],\n                timeZoneOffset,\n            };\n        }\n    }\n    return null;\n}\n\nclass DateEnv {\n    constructor(settings) {\n        let timeZone = this.timeZone = settings.timeZone;\n        let isNamedTimeZone = timeZone !== 'local' && timeZone !== 'UTC';\n        if (settings.namedTimeZoneImpl && isNamedTimeZone) {\n            this.namedTimeZoneImpl = new settings.namedTimeZoneImpl(timeZone);\n        }\n        this.canComputeOffset = Boolean(!isNamedTimeZone || this.namedTimeZoneImpl);\n        this.calendarSystem = createCalendarSystem(settings.calendarSystem);\n        this.locale = settings.locale;\n        this.weekDow = settings.locale.week.dow;\n        this.weekDoy = settings.locale.week.doy;\n        if (settings.weekNumberCalculation === 'ISO') {\n            this.weekDow = 1;\n            this.weekDoy = 4;\n        }\n        if (typeof settings.firstDay === 'number') {\n            this.weekDow = settings.firstDay;\n        }\n        if (typeof settings.weekNumberCalculation === 'function') {\n            this.weekNumberFunc = settings.weekNumberCalculation;\n        }\n        this.weekText = settings.weekText != null ? settings.weekText : settings.locale.options.weekText;\n        this.weekTextLong = (settings.weekTextLong != null ? settings.weekTextLong : settings.locale.options.weekTextLong) || this.weekText;\n        this.cmdFormatter = settings.cmdFormatter;\n        this.defaultSeparator = settings.defaultSeparator;\n    }\n    // Creating / Parsing\n    createMarker(input) {\n        let meta = this.createMarkerMeta(input);\n        if (meta === null) {\n            return null;\n        }\n        return meta.marker;\n    }\n    createNowMarker() {\n        if (this.canComputeOffset) {\n            return this.timestampToMarker(new Date().valueOf());\n        }\n        // if we can't compute the current date val for a timezone,\n        // better to give the current local date vals than UTC\n        return arrayToUtcDate(dateToLocalArray(new Date()));\n    }\n    createMarkerMeta(input) {\n        if (typeof input === 'string') {\n            return this.parse(input);\n        }\n        let marker = null;\n        if (typeof input === 'number') {\n            marker = this.timestampToMarker(input);\n        }\n        else if (input instanceof Date) {\n            input = input.valueOf();\n            if (!isNaN(input)) {\n                marker = this.timestampToMarker(input);\n            }\n        }\n        else if (Array.isArray(input)) {\n            marker = arrayToUtcDate(input);\n        }\n        if (marker === null || !isValidDate(marker)) {\n            return null;\n        }\n        return { marker, isTimeUnspecified: false, forcedTzo: null };\n    }\n    parse(s) {\n        let parts = parse(s);\n        if (parts === null) {\n            return null;\n        }\n        let { marker } = parts;\n        let forcedTzo = null;\n        if (parts.timeZoneOffset !== null) {\n            if (this.canComputeOffset) {\n                marker = this.timestampToMarker(marker.valueOf() - parts.timeZoneOffset * 60 * 1000);\n            }\n            else {\n                forcedTzo = parts.timeZoneOffset;\n            }\n        }\n        return { marker, isTimeUnspecified: parts.isTimeUnspecified, forcedTzo };\n    }\n    // Accessors\n    getYear(marker) {\n        return this.calendarSystem.getMarkerYear(marker);\n    }\n    getMonth(marker) {\n        return this.calendarSystem.getMarkerMonth(marker);\n    }\n    getDay(marker) {\n        return this.calendarSystem.getMarkerDay(marker);\n    }\n    // Adding / Subtracting\n    add(marker, dur) {\n        let a = this.calendarSystem.markerToArray(marker);\n        a[0] += dur.years;\n        a[1] += dur.months;\n        a[2] += dur.days;\n        a[6] += dur.milliseconds;\n        return this.calendarSystem.arrayToMarker(a);\n    }\n    subtract(marker, dur) {\n        let a = this.calendarSystem.markerToArray(marker);\n        a[0] -= dur.years;\n        a[1] -= dur.months;\n        a[2] -= dur.days;\n        a[6] -= dur.milliseconds;\n        return this.calendarSystem.arrayToMarker(a);\n    }\n    addYears(marker, n) {\n        let a = this.calendarSystem.markerToArray(marker);\n        a[0] += n;\n        return this.calendarSystem.arrayToMarker(a);\n    }\n    addMonths(marker, n) {\n        let a = this.calendarSystem.markerToArray(marker);\n        a[1] += n;\n        return this.calendarSystem.arrayToMarker(a);\n    }\n    // Diffing Whole Units\n    diffWholeYears(m0, m1) {\n        let { calendarSystem } = this;\n        if (timeAsMs(m0) === timeAsMs(m1) &&\n            calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1) &&\n            calendarSystem.getMarkerMonth(m0) === calendarSystem.getMarkerMonth(m1)) {\n            return calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0);\n        }\n        return null;\n    }\n    diffWholeMonths(m0, m1) {\n        let { calendarSystem } = this;\n        if (timeAsMs(m0) === timeAsMs(m1) &&\n            calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1)) {\n            return (calendarSystem.getMarkerMonth(m1) - calendarSystem.getMarkerMonth(m0)) +\n                (calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0)) * 12;\n        }\n        return null;\n    }\n    // Range / Duration\n    greatestWholeUnit(m0, m1) {\n        let n = this.diffWholeYears(m0, m1);\n        if (n !== null) {\n            return { unit: 'year', value: n };\n        }\n        n = this.diffWholeMonths(m0, m1);\n        if (n !== null) {\n            return { unit: 'month', value: n };\n        }\n        n = diffWholeWeeks(m0, m1);\n        if (n !== null) {\n            return { unit: 'week', value: n };\n        }\n        n = diffWholeDays(m0, m1);\n        if (n !== null) {\n            return { unit: 'day', value: n };\n        }\n        n = diffHours(m0, m1);\n        if (isInt(n)) {\n            return { unit: 'hour', value: n };\n        }\n        n = diffMinutes(m0, m1);\n        if (isInt(n)) {\n            return { unit: 'minute', value: n };\n        }\n        n = diffSeconds(m0, m1);\n        if (isInt(n)) {\n            return { unit: 'second', value: n };\n        }\n        return { unit: 'millisecond', value: m1.valueOf() - m0.valueOf() };\n    }\n    countDurationsBetween(m0, m1, d) {\n        // TODO: can use greatestWholeUnit\n        let diff;\n        if (d.years) {\n            diff = this.diffWholeYears(m0, m1);\n            if (diff !== null) {\n                return diff / asRoughYears(d);\n            }\n        }\n        if (d.months) {\n            diff = this.diffWholeMonths(m0, m1);\n            if (diff !== null) {\n                return diff / asRoughMonths(d);\n            }\n        }\n        if (d.days) {\n            diff = diffWholeDays(m0, m1);\n            if (diff !== null) {\n                return diff / asRoughDays(d);\n            }\n        }\n        return (m1.valueOf() - m0.valueOf()) / asRoughMs(d);\n    }\n    // Start-Of\n    // these DON'T return zoned-dates. only UTC start-of dates\n    startOf(m, unit) {\n        if (unit === 'year') {\n            return this.startOfYear(m);\n        }\n        if (unit === 'month') {\n            return this.startOfMonth(m);\n        }\n        if (unit === 'week') {\n            return this.startOfWeek(m);\n        }\n        if (unit === 'day') {\n            return startOfDay(m);\n        }\n        if (unit === 'hour') {\n            return startOfHour(m);\n        }\n        if (unit === 'minute') {\n            return startOfMinute(m);\n        }\n        if (unit === 'second') {\n            return startOfSecond(m);\n        }\n        return null;\n    }\n    startOfYear(m) {\n        return this.calendarSystem.arrayToMarker([\n            this.calendarSystem.getMarkerYear(m),\n        ]);\n    }\n    startOfMonth(m) {\n        return this.calendarSystem.arrayToMarker([\n            this.calendarSystem.getMarkerYear(m),\n            this.calendarSystem.getMarkerMonth(m),\n        ]);\n    }\n    startOfWeek(m) {\n        return this.calendarSystem.arrayToMarker([\n            this.calendarSystem.getMarkerYear(m),\n            this.calendarSystem.getMarkerMonth(m),\n            m.getUTCDate() - ((m.getUTCDay() - this.weekDow + 7) % 7),\n        ]);\n    }\n    // Week Number\n    computeWeekNumber(marker) {\n        if (this.weekNumberFunc) {\n            return this.weekNumberFunc(this.toDate(marker));\n        }\n        return weekOfYear(marker, this.weekDow, this.weekDoy);\n    }\n    // TODO: choke on timeZoneName: long\n    format(marker, formatter, dateOptions = {}) {\n        return formatter.format({\n            marker,\n            timeZoneOffset: dateOptions.forcedTzo != null ?\n                dateOptions.forcedTzo :\n                this.offsetForMarker(marker),\n        }, this);\n    }\n    formatRange(start, end, formatter, dateOptions = {}) {\n        if (dateOptions.isEndExclusive) {\n            end = addMs(end, -1);\n        }\n        return formatter.formatRange({\n            marker: start,\n            timeZoneOffset: dateOptions.forcedStartTzo != null ?\n                dateOptions.forcedStartTzo :\n                this.offsetForMarker(start),\n        }, {\n            marker: end,\n            timeZoneOffset: dateOptions.forcedEndTzo != null ?\n                dateOptions.forcedEndTzo :\n                this.offsetForMarker(end),\n        }, this, dateOptions.defaultSeparator);\n    }\n    /*\n    DUMB: the omitTime arg is dumb. if we omit the time, we want to omit the timezone offset. and if we do that,\n    might as well use buildIsoString or some other util directly\n    */\n    formatIso(marker, extraOptions = {}) {\n        let timeZoneOffset = null;\n        if (!extraOptions.omitTimeZoneOffset) {\n            if (extraOptions.forcedTzo != null) {\n                timeZoneOffset = extraOptions.forcedTzo;\n            }\n            else {\n                timeZoneOffset = this.offsetForMarker(marker);\n            }\n        }\n        return buildIsoString(marker, timeZoneOffset, extraOptions.omitTime);\n    }\n    // TimeZone\n    timestampToMarker(ms) {\n        if (this.timeZone === 'local') {\n            return arrayToUtcDate(dateToLocalArray(new Date(ms)));\n        }\n        if (this.timeZone === 'UTC' || !this.namedTimeZoneImpl) {\n            return new Date(ms);\n        }\n        return arrayToUtcDate(this.namedTimeZoneImpl.timestampToArray(ms));\n    }\n    offsetForMarker(m) {\n        if (this.timeZone === 'local') {\n            return -arrayToLocalDate(dateToUtcArray(m)).getTimezoneOffset(); // convert \"inverse\" offset to \"normal\" offset\n        }\n        if (this.timeZone === 'UTC') {\n            return 0;\n        }\n        if (this.namedTimeZoneImpl) {\n            return this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m));\n        }\n        return null;\n    }\n    // Conversion\n    toDate(m, forcedTzo) {\n        if (this.timeZone === 'local') {\n            return arrayToLocalDate(dateToUtcArray(m));\n        }\n        if (this.timeZone === 'UTC') {\n            return new Date(m.valueOf()); // make sure it's a copy\n        }\n        if (!this.namedTimeZoneImpl) {\n            return new Date(m.valueOf() - (forcedTzo || 0));\n        }\n        return new Date(m.valueOf() -\n            this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m)) * 1000 * 60);\n    }\n}\n\nclass Theme {\n    constructor(calendarOptions) {\n        if (this.iconOverrideOption) {\n            this.setIconOverride(calendarOptions[this.iconOverrideOption]);\n        }\n    }\n    setIconOverride(iconOverrideHash) {\n        let iconClassesCopy;\n        let buttonName;\n        if (typeof iconOverrideHash === 'object' && iconOverrideHash) { // non-null object\n            iconClassesCopy = Object.assign({}, this.iconClasses);\n            for (buttonName in iconOverrideHash) {\n                iconClassesCopy[buttonName] = this.applyIconOverridePrefix(iconOverrideHash[buttonName]);\n            }\n            this.iconClasses = iconClassesCopy;\n        }\n        else if (iconOverrideHash === false) {\n            this.iconClasses = {};\n        }\n    }\n    applyIconOverridePrefix(className) {\n        let prefix = this.iconOverridePrefix;\n        if (prefix && className.indexOf(prefix) !== 0) { // if not already present\n            className = prefix + className;\n        }\n        return className;\n    }\n    getClass(key) {\n        return this.classes[key] || '';\n    }\n    getIconClass(buttonName, isRtl) {\n        let className;\n        if (isRtl && this.rtlIconClasses) {\n            className = this.rtlIconClasses[buttonName] || this.iconClasses[buttonName];\n        }\n        else {\n            className = this.iconClasses[buttonName];\n        }\n        if (className) {\n            return `${this.baseIconClass} ${className}`;\n        }\n        return '';\n    }\n    getCustomButtonIconClass(customButtonProps) {\n        let className;\n        if (this.iconOverrideCustomButtonOption) {\n            className = customButtonProps[this.iconOverrideCustomButtonOption];\n            if (className) {\n                return `${this.baseIconClass} ${this.applyIconOverridePrefix(className)}`;\n            }\n        }\n        return '';\n    }\n}\nTheme.prototype.classes = {};\nTheme.prototype.iconClasses = {};\nTheme.prototype.baseIconClass = '';\nTheme.prototype.iconOverridePrefix = '';\n\n/*\nNOTE: this can be a public API, especially createElement for hooks.\nSee examples/typescript-scheduler/src/index.ts\n*/\nfunction flushSync(runBeforeFlush) {\n    runBeforeFlush();\n    let oldDebounceRendering = preact.options.debounceRendering; // orig\n    let callbackQ = [];\n    function execCallbackSync(callback) {\n        callbackQ.push(callback);\n    }\n    preact.options.debounceRendering = execCallbackSync;\n    preact.render(preact.createElement(FakeComponent, {}), document.createElement('div'));\n    while (callbackQ.length) {\n        callbackQ.shift()();\n    }\n    preact.options.debounceRendering = oldDebounceRendering;\n}\nclass FakeComponent extends preact.Component {\n    render() { return preact.createElement('div', {}); }\n    componentDidMount() { this.setState({}); }\n}\n// TODO: use preact/compat instead?\nfunction createContext(defaultValue) {\n    let ContextType = preact.createContext(defaultValue);\n    let origProvider = ContextType.Provider;\n    ContextType.Provider = function () {\n        let isNew = !this.getChildContext;\n        let children = origProvider.apply(this, arguments); // eslint-disable-line prefer-rest-params\n        if (isNew) {\n            let subs = [];\n            this.shouldComponentUpdate = (_props) => {\n                if (this.props.value !== _props.value) {\n                    subs.forEach((c) => {\n                        c.context = _props.value;\n                        c.forceUpdate();\n                    });\n                }\n            };\n            this.sub = (c) => {\n                subs.push(c);\n                let old = c.componentWillUnmount;\n                c.componentWillUnmount = () => {\n                    subs.splice(subs.indexOf(c), 1);\n                    old && old.call(c);\n                };\n            };\n        }\n        return children;\n    };\n    return ContextType;\n}\n\nclass ScrollResponder {\n    constructor(execFunc, emitter, scrollTime, scrollTimeReset) {\n        this.execFunc = execFunc;\n        this.emitter = emitter;\n        this.scrollTime = scrollTime;\n        this.scrollTimeReset = scrollTimeReset;\n        this.handleScrollRequest = (request) => {\n            this.queuedRequest = Object.assign({}, this.queuedRequest || {}, request);\n            this.drain();\n        };\n        emitter.on('_scrollRequest', this.handleScrollRequest);\n        this.fireInitialScroll();\n    }\n    detach() {\n        this.emitter.off('_scrollRequest', this.handleScrollRequest);\n    }\n    update(isDatesNew) {\n        if (isDatesNew && this.scrollTimeReset) {\n            this.fireInitialScroll(); // will drain\n        }\n        else {\n            this.drain();\n        }\n    }\n    fireInitialScroll() {\n        this.handleScrollRequest({\n            time: this.scrollTime,\n        });\n    }\n    drain() {\n        if (this.queuedRequest && this.execFunc(this.queuedRequest)) {\n            this.queuedRequest = null;\n        }\n    }\n}\n\nconst ViewContextType = createContext({}); // for Components\nfunction buildViewContext(viewSpec, viewApi, viewOptions, dateProfileGenerator, dateEnv, theme, pluginHooks, dispatch, getCurrentData, emitter, calendarApi, registerInteractiveComponent, unregisterInteractiveComponent) {\n    return {\n        dateEnv,\n        options: viewOptions,\n        pluginHooks,\n        emitter,\n        dispatch,\n        getCurrentData,\n        calendarApi,\n        viewSpec,\n        viewApi,\n        dateProfileGenerator,\n        theme,\n        isRtl: viewOptions.direction === 'rtl',\n        addResizeHandler(handler) {\n            emitter.on('_resize', handler);\n        },\n        removeResizeHandler(handler) {\n            emitter.off('_resize', handler);\n        },\n        createScrollResponder(execFunc) {\n            return new ScrollResponder(execFunc, emitter, createDuration(viewOptions.scrollTime), viewOptions.scrollTimeReset);\n        },\n        registerInteractiveComponent,\n        unregisterInteractiveComponent,\n    };\n}\n\n/* eslint max-classes-per-file: off */\nclass PureComponent extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.debug) {\n            // eslint-disable-next-line no-console\n            console.log(getUnequalProps(nextProps, this.props), getUnequalProps(nextState, this.state));\n        }\n        return !compareObjs(this.props, nextProps, this.propEquality) ||\n            !compareObjs(this.state, nextState, this.stateEquality);\n    }\n    // HACK for freakin' React StrictMode\n    safeSetState(newState) {\n        if (!compareObjs(this.state, Object.assign(Object.assign({}, this.state), newState), this.stateEquality)) {\n            this.setState(newState);\n        }\n    }\n}\nPureComponent.addPropsEquality = addPropsEquality;\nPureComponent.addStateEquality = addStateEquality;\nPureComponent.contextType = ViewContextType;\nPureComponent.prototype.propEquality = {};\nPureComponent.prototype.stateEquality = {};\nclass BaseComponent extends PureComponent {\n}\nBaseComponent.contextType = ViewContextType;\nfunction addPropsEquality(propEquality) {\n    let hash = Object.create(this.prototype.propEquality);\n    Object.assign(hash, propEquality);\n    this.prototype.propEquality = hash;\n}\nfunction addStateEquality(stateEquality) {\n    let hash = Object.create(this.prototype.stateEquality);\n    Object.assign(hash, stateEquality);\n    this.prototype.stateEquality = hash;\n}\n// use other one\nfunction setRef(ref, current) {\n    if (typeof ref === 'function') {\n        ref(current);\n    }\n    else if (ref) {\n        // see https://github.com/facebook/react/issues/13029\n        ref.current = current;\n    }\n}\n\nclass ContentInjector extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.id = guid();\n        this.queuedDomNodes = [];\n        this.currentDomNodes = [];\n        this.handleEl = (el) => {\n            if (!hasCustomRenderingHandler(this.props.generatorName, this.context.options)) {\n                this.updateElRef(el);\n            }\n        };\n        this.updateElRef = (el) => {\n            if (this.props.elRef) {\n                setRef(this.props.elRef, el);\n            }\n        };\n    }\n    render() {\n        const { props, context } = this;\n        const { options } = context;\n        const { customGenerator, defaultGenerator, renderProps } = props;\n        const attrs = buildElAttrs(props, [], this.handleEl);\n        let useDefault = false;\n        let innerContent;\n        let queuedDomNodes = [];\n        let currentGeneratorMeta;\n        if (customGenerator != null) {\n            const customGeneratorRes = typeof customGenerator === 'function' ?\n                customGenerator(renderProps, createElement) :\n                customGenerator;\n            if (customGeneratorRes === true) {\n                useDefault = true;\n            }\n            else {\n                const isObject = customGeneratorRes && typeof customGeneratorRes === 'object'; // non-null\n                if (isObject && ('html' in customGeneratorRes)) {\n                    attrs.dangerouslySetInnerHTML = { __html: customGeneratorRes.html };\n                }\n                else if (isObject && ('domNodes' in customGeneratorRes)) {\n                    queuedDomNodes = Array.prototype.slice.call(customGeneratorRes.domNodes);\n                }\n                else if (isObject\n                    ? isValidElement(customGeneratorRes) // vdom node\n                    : typeof customGeneratorRes !== 'function' // primitive value (like string or number)\n                ) {\n                    // use in vdom\n                    innerContent = customGeneratorRes;\n                }\n                else {\n                    // an exotic object for handleCustomRendering\n                    currentGeneratorMeta = customGeneratorRes;\n                }\n            }\n        }\n        else {\n            useDefault = !hasCustomRenderingHandler(props.generatorName, options);\n        }\n        if (useDefault && defaultGenerator) {\n            innerContent = defaultGenerator(renderProps);\n        }\n        this.queuedDomNodes = queuedDomNodes;\n        this.currentGeneratorMeta = currentGeneratorMeta;\n        return createElement(props.elTag, attrs, innerContent);\n    }\n    componentDidMount() {\n        this.applyQueueudDomNodes();\n        this.triggerCustomRendering(true);\n    }\n    componentDidUpdate() {\n        this.applyQueueudDomNodes();\n        this.triggerCustomRendering(true);\n    }\n    componentWillUnmount() {\n        this.triggerCustomRendering(false); // TODO: different API for removal?\n    }\n    triggerCustomRendering(isActive) {\n        var _a;\n        const { props, context } = this;\n        const { handleCustomRendering, customRenderingMetaMap } = context.options;\n        if (handleCustomRendering) {\n            const generatorMeta = (_a = this.currentGeneratorMeta) !== null && _a !== void 0 ? _a : customRenderingMetaMap === null || customRenderingMetaMap === void 0 ? void 0 : customRenderingMetaMap[props.generatorName];\n            if (generatorMeta) {\n                handleCustomRendering(Object.assign(Object.assign({ id: this.id, isActive, containerEl: this.base, reportNewContainerEl: this.updateElRef, // front-end framework tells us about new container els\n                    generatorMeta }, props), { elClasses: (props.elClasses || []).filter(isTruthy) }));\n            }\n        }\n    }\n    applyQueueudDomNodes() {\n        const { queuedDomNodes, currentDomNodes } = this;\n        const el = this.base;\n        if (!isArraysEqual(queuedDomNodes, currentDomNodes)) {\n            currentDomNodes.forEach(removeElement);\n            for (let newNode of queuedDomNodes) {\n                el.appendChild(newNode);\n            }\n            this.currentDomNodes = queuedDomNodes;\n        }\n    }\n}\nContentInjector.addPropsEquality({\n    elClasses: isArraysEqual,\n    elStyle: isPropsEqual,\n    elAttrs: isNonHandlerPropsEqual,\n    renderProps: isPropsEqual,\n});\n// Util\n/*\nDoes UI-framework provide custom way of rendering?\n*/\nfunction hasCustomRenderingHandler(generatorName, options) {\n    var _a;\n    return Boolean(options.handleCustomRendering &&\n        generatorName &&\n        ((_a = options.customRenderingMetaMap) === null || _a === void 0 ? void 0 : _a[generatorName]));\n}\nfunction buildElAttrs(props, extraClassNames, elRef) {\n    const attrs = Object.assign(Object.assign({}, props.elAttrs), { ref: elRef });\n    if (props.elClasses || extraClassNames) {\n        attrs.className = (props.elClasses || [])\n            .concat(extraClassNames || [])\n            .concat(attrs.className || [])\n            .filter(Boolean)\n            .join(' ');\n    }\n    if (props.elStyle) {\n        attrs.style = props.elStyle;\n    }\n    return attrs;\n}\nfunction isTruthy(val) {\n    return Boolean(val);\n}\n\nconst RenderId = createContext(0);\n\nclass ContentContainer extends Component {\n    constructor() {\n        super(...arguments);\n        this.InnerContent = InnerContentInjector.bind(undefined, this);\n        this.handleEl = (el) => {\n            this.el = el;\n            if (this.props.elRef) {\n                setRef(this.props.elRef, el);\n            }\n        };\n    }\n    render() {\n        const { props } = this;\n        const generatedClassNames = generateClassNames(props.classNameGenerator, props.renderProps);\n        if (props.children) {\n            const elAttrs = buildElAttrs(props, generatedClassNames, this.handleEl);\n            const children = props.children(this.InnerContent, props.renderProps, elAttrs);\n            if (props.elTag) {\n                return createElement(props.elTag, elAttrs, children);\n            }\n            else {\n                return children;\n            }\n        }\n        else {\n            return createElement((ContentInjector), Object.assign(Object.assign({}, props), { elRef: this.handleEl, elTag: props.elTag || 'div', elClasses: (props.elClasses || []).concat(generatedClassNames), renderId: this.context }));\n        }\n    }\n    componentDidMount() {\n        var _a, _b;\n        (_b = (_a = this.props).didMount) === null || _b === void 0 ? void 0 : _b.call(_a, Object.assign(Object.assign({}, this.props.renderProps), { el: this.el }));\n    }\n    componentWillUnmount() {\n        var _a, _b;\n        (_b = (_a = this.props).willUnmount) === null || _b === void 0 ? void 0 : _b.call(_a, Object.assign(Object.assign({}, this.props.renderProps), { el: this.el }));\n    }\n}\nContentContainer.contextType = RenderId;\nfunction InnerContentInjector(containerComponent, props) {\n    const parentProps = containerComponent.props;\n    return createElement((ContentInjector), Object.assign({ renderProps: parentProps.renderProps, generatorName: parentProps.generatorName, customGenerator: parentProps.customGenerator, defaultGenerator: parentProps.defaultGenerator, renderId: containerComponent.context }, props));\n}\n// Utils\nfunction generateClassNames(classNameGenerator, renderProps) {\n    const classNames = typeof classNameGenerator === 'function' ?\n        classNameGenerator(renderProps) :\n        classNameGenerator || [];\n    return typeof classNames === 'string' ? [classNames] : classNames;\n}\n\nclass ViewContainer extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let renderProps = { view: context.viewApi };\n        return (createElement(ContentContainer, Object.assign({}, props, { elTag: props.elTag || 'div', elClasses: [\n                ...buildViewClassNames(props.viewSpec),\n                ...(props.elClasses || []),\n            ], renderProps: renderProps, classNameGenerator: options.viewClassNames, generatorName: undefined, didMount: options.viewDidMount, willUnmount: options.viewWillUnmount }), () => props.children));\n    }\n}\nfunction buildViewClassNames(viewSpec) {\n    return [\n        `fc-${viewSpec.type}-view`,\n        'fc-view',\n    ];\n}\n\nfunction parseRange(input, dateEnv) {\n    let start = null;\n    let end = null;\n    if (input.start) {\n        start = dateEnv.createMarker(input.start);\n    }\n    if (input.end) {\n        end = dateEnv.createMarker(input.end);\n    }\n    if (!start && !end) {\n        return null;\n    }\n    if (start && end && end < start) {\n        return null;\n    }\n    return { start, end };\n}\n// SIDE-EFFECT: will mutate ranges.\n// Will return a new array result.\nfunction invertRanges(ranges, constraintRange) {\n    let invertedRanges = [];\n    let { start } = constraintRange; // the end of the previous range. the start of the new range\n    let i;\n    let dateRange;\n    // ranges need to be in order. required for our date-walking algorithm\n    ranges.sort(compareRanges);\n    for (i = 0; i < ranges.length; i += 1) {\n        dateRange = ranges[i];\n        // add the span of time before the event (if there is any)\n        if (dateRange.start > start) { // compare millisecond time (skip any ambig logic)\n            invertedRanges.push({ start, end: dateRange.start });\n        }\n        if (dateRange.end > start) {\n            start = dateRange.end;\n        }\n    }\n    // add the span of time after the last event (if there is any)\n    if (start < constraintRange.end) { // compare millisecond time (skip any ambig logic)\n        invertedRanges.push({ start, end: constraintRange.end });\n    }\n    return invertedRanges;\n}\nfunction compareRanges(range0, range1) {\n    return range0.start.valueOf() - range1.start.valueOf(); // earlier ranges go first\n}\nfunction intersectRanges(range0, range1) {\n    let { start, end } = range0;\n    let newRange = null;\n    if (range1.start !== null) {\n        if (start === null) {\n            start = range1.start;\n        }\n        else {\n            start = new Date(Math.max(start.valueOf(), range1.start.valueOf()));\n        }\n    }\n    if (range1.end != null) {\n        if (end === null) {\n            end = range1.end;\n        }\n        else {\n            end = new Date(Math.min(end.valueOf(), range1.end.valueOf()));\n        }\n    }\n    if (start === null || end === null || start < end) {\n        newRange = { start, end };\n    }\n    return newRange;\n}\nfunction rangesEqual(range0, range1) {\n    return (range0.start === null ? null : range0.start.valueOf()) === (range1.start === null ? null : range1.start.valueOf()) &&\n        (range0.end === null ? null : range0.end.valueOf()) === (range1.end === null ? null : range1.end.valueOf());\n}\nfunction rangesIntersect(range0, range1) {\n    return (range0.end === null || range1.start === null || range0.end > range1.start) &&\n        (range0.start === null || range1.end === null || range0.start < range1.end);\n}\nfunction rangeContainsRange(outerRange, innerRange) {\n    return (outerRange.start === null || (innerRange.start !== null && innerRange.start >= outerRange.start)) &&\n        (outerRange.end === null || (innerRange.end !== null && innerRange.end <= outerRange.end));\n}\nfunction rangeContainsMarker(range, date) {\n    return (range.start === null || date >= range.start) &&\n        (range.end === null || date < range.end);\n}\n// If the given date is not within the given range, move it inside.\n// (If it's past the end, make it one millisecond before the end).\nfunction constrainMarkerToRange(date, range) {\n    if (range.start != null && date < range.start) {\n        return range.start;\n    }\n    if (range.end != null && date >= range.end) {\n        return new Date(range.end.valueOf() - 1);\n    }\n    return date;\n}\n\n/* Date stuff that doesn't belong in datelib core\n----------------------------------------------------------------------------------------------------------------------*/\n// given a timed range, computes an all-day range that has the same exact duration,\n// but whose start time is aligned with the start of the day.\nfunction computeAlignedDayRange(timedRange) {\n    let dayCnt = Math.floor(diffDays(timedRange.start, timedRange.end)) || 1;\n    let start = startOfDay(timedRange.start);\n    let end = addDays(start, dayCnt);\n    return { start, end };\n}\n// given a timed range, computes an all-day range based on how for the end date bleeds into the next day\n// TODO: give nextDayThreshold a default arg\nfunction computeVisibleDayRange(timedRange, nextDayThreshold = createDuration(0)) {\n    let startDay = null;\n    let endDay = null;\n    if (timedRange.end) {\n        endDay = startOfDay(timedRange.end);\n        let endTimeMS = timedRange.end.valueOf() - endDay.valueOf(); // # of milliseconds into `endDay`\n        // If the end time is actually inclusively part of the next day and is equal to or\n        // beyond the next day threshold, adjust the end to be the exclusive end of `endDay`.\n        // Otherwise, leaving it as inclusive will cause it to exclude `endDay`.\n        if (endTimeMS && endTimeMS >= asRoughMs(nextDayThreshold)) {\n            endDay = addDays(endDay, 1);\n        }\n    }\n    if (timedRange.start) {\n        startDay = startOfDay(timedRange.start); // the beginning of the day the range starts\n        // If end is within `startDay` but not past nextDayThreshold, assign the default duration of one day.\n        if (endDay && endDay <= startDay) {\n            endDay = addDays(startDay, 1);\n        }\n    }\n    return { start: startDay, end: endDay };\n}\n// spans from one day into another?\nfunction isMultiDayRange(range) {\n    let visibleRange = computeVisibleDayRange(range);\n    return diffDays(visibleRange.start, visibleRange.end) > 1;\n}\nfunction diffDates(date0, date1, dateEnv, largeUnit) {\n    if (largeUnit === 'year') {\n        return createDuration(dateEnv.diffWholeYears(date0, date1), 'year');\n    }\n    if (largeUnit === 'month') {\n        return createDuration(dateEnv.diffWholeMonths(date0, date1), 'month');\n    }\n    return diffDayAndTime(date0, date1); // returns a duration\n}\n\nfunction reduceCurrentDate(currentDate, action) {\n    switch (action.type) {\n        case 'CHANGE_DATE':\n            return action.dateMarker;\n        default:\n            return currentDate;\n    }\n}\nfunction getInitialDate(options, dateEnv) {\n    let initialDateInput = options.initialDate;\n    // compute the initial ambig-timezone date\n    if (initialDateInput != null) {\n        return dateEnv.createMarker(initialDateInput);\n    }\n    return getNow(options.now, dateEnv); // getNow already returns unzoned\n}\nfunction getNow(nowInput, dateEnv) {\n    if (typeof nowInput === 'function') {\n        nowInput = nowInput();\n    }\n    if (nowInput == null) {\n        return dateEnv.createNowMarker();\n    }\n    return dateEnv.createMarker(nowInput);\n}\n\nclass DateProfileGenerator {\n    constructor(props) {\n        this.props = props;\n        this.nowDate = getNow(props.nowInput, props.dateEnv);\n        this.initHiddenDays();\n    }\n    /* Date Range Computation\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Builds a structure with info about what the dates/ranges will be for the \"prev\" view.\n    buildPrev(currentDateProfile, currentDate, forceToValid) {\n        let { dateEnv } = this.props;\n        let prevDate = dateEnv.subtract(dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month\n        currentDateProfile.dateIncrement);\n        return this.build(prevDate, -1, forceToValid);\n    }\n    // Builds a structure with info about what the dates/ranges will be for the \"next\" view.\n    buildNext(currentDateProfile, currentDate, forceToValid) {\n        let { dateEnv } = this.props;\n        let nextDate = dateEnv.add(dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month\n        currentDateProfile.dateIncrement);\n        return this.build(nextDate, 1, forceToValid);\n    }\n    // Builds a structure holding dates/ranges for rendering around the given date.\n    // Optional direction param indicates whether the date is being incremented/decremented\n    // from its previous value. decremented = -1, incremented = 1 (default).\n    build(currentDate, direction, forceToValid = true) {\n        let { props } = this;\n        let validRange;\n        let currentInfo;\n        let isRangeAllDay;\n        let renderRange;\n        let activeRange;\n        let isValid;\n        validRange = this.buildValidRange();\n        validRange = this.trimHiddenDays(validRange);\n        if (forceToValid) {\n            currentDate = constrainMarkerToRange(currentDate, validRange);\n        }\n        currentInfo = this.buildCurrentRangeInfo(currentDate, direction);\n        isRangeAllDay = /^(year|month|week|day)$/.test(currentInfo.unit);\n        renderRange = this.buildRenderRange(this.trimHiddenDays(currentInfo.range), currentInfo.unit, isRangeAllDay);\n        renderRange = this.trimHiddenDays(renderRange);\n        activeRange = renderRange;\n        if (!props.showNonCurrentDates) {\n            activeRange = intersectRanges(activeRange, currentInfo.range);\n        }\n        activeRange = this.adjustActiveRange(activeRange);\n        activeRange = intersectRanges(activeRange, validRange); // might return null\n        // it's invalid if the originally requested date is not contained,\n        // or if the range is completely outside of the valid range.\n        isValid = rangesIntersect(currentInfo.range, validRange);\n        // HACK: constrain to render-range so `currentDate` is more useful to view rendering\n        if (!rangeContainsMarker(renderRange, currentDate)) {\n            currentDate = renderRange.start;\n        }\n        return {\n            currentDate,\n            // constraint for where prev/next operations can go and where events can be dragged/resized to.\n            // an object with optional start and end properties.\n            validRange,\n            // range the view is formally responsible for.\n            // for example, a month view might have 1st-31st, excluding padded dates\n            currentRange: currentInfo.range,\n            // name of largest unit being displayed, like \"month\" or \"week\"\n            currentRangeUnit: currentInfo.unit,\n            isRangeAllDay,\n            // dates that display events and accept drag-n-drop\n            // will be `null` if no dates accept events\n            activeRange,\n            // date range with a rendered skeleton\n            // includes not-active days that need some sort of DOM\n            renderRange,\n            // Duration object that denotes the first visible time of any given day\n            slotMinTime: props.slotMinTime,\n            // Duration object that denotes the exclusive visible end time of any given day\n            slotMaxTime: props.slotMaxTime,\n            isValid,\n            // how far the current date will move for a prev/next operation\n            dateIncrement: this.buildDateIncrement(currentInfo.duration),\n            // pass a fallback (might be null) ^\n        };\n    }\n    // Builds an object with optional start/end properties.\n    // Indicates the minimum/maximum dates to display.\n    // not responsible for trimming hidden days.\n    buildValidRange() {\n        let input = this.props.validRangeInput;\n        let simpleInput = typeof input === 'function'\n            ? input.call(this.props.calendarApi, this.nowDate)\n            : input;\n        return this.refineRange(simpleInput) ||\n            { start: null, end: null }; // completely open-ended\n    }\n    // Builds a structure with info about the \"current\" range, the range that is\n    // highlighted as being the current month for example.\n    // See build() for a description of `direction`.\n    // Guaranteed to have `range` and `unit` properties. `duration` is optional.\n    buildCurrentRangeInfo(date, direction) {\n        let { props } = this;\n        let duration = null;\n        let unit = null;\n        let range = null;\n        let dayCount;\n        if (props.duration) {\n            duration = props.duration;\n            unit = props.durationUnit;\n            range = this.buildRangeFromDuration(date, direction, duration, unit);\n        }\n        else if ((dayCount = this.props.dayCount)) {\n            unit = 'day';\n            range = this.buildRangeFromDayCount(date, direction, dayCount);\n        }\n        else if ((range = this.buildCustomVisibleRange(date))) {\n            unit = props.dateEnv.greatestWholeUnit(range.start, range.end).unit;\n        }\n        else {\n            duration = this.getFallbackDuration();\n            unit = greatestDurationDenominator(duration).unit;\n            range = this.buildRangeFromDuration(date, direction, duration, unit);\n        }\n        return { duration, unit, range };\n    }\n    getFallbackDuration() {\n        return createDuration({ day: 1 });\n    }\n    // Returns a new activeRange to have time values (un-ambiguate)\n    // slotMinTime or slotMaxTime causes the range to expand.\n    adjustActiveRange(range) {\n        let { dateEnv, usesMinMaxTime, slotMinTime, slotMaxTime } = this.props;\n        let { start, end } = range;\n        if (usesMinMaxTime) {\n            // expand active range if slotMinTime is negative (why not when positive?)\n            if (asRoughDays(slotMinTime) < 0) {\n                start = startOfDay(start); // necessary?\n                start = dateEnv.add(start, slotMinTime);\n            }\n            // expand active range if slotMaxTime is beyond one day (why not when negative?)\n            if (asRoughDays(slotMaxTime) > 1) {\n                end = startOfDay(end); // necessary?\n                end = addDays(end, -1);\n                end = dateEnv.add(end, slotMaxTime);\n            }\n        }\n        return { start, end };\n    }\n    // Builds the \"current\" range when it is specified as an explicit duration.\n    // `unit` is the already-computed greatestDurationDenominator unit of duration.\n    buildRangeFromDuration(date, direction, duration, unit) {\n        let { dateEnv, dateAlignment } = this.props;\n        let start;\n        let end;\n        let res;\n        // compute what the alignment should be\n        if (!dateAlignment) {\n            let { dateIncrement } = this.props;\n            if (dateIncrement) {\n                // use the smaller of the two units\n                if (asRoughMs(dateIncrement) < asRoughMs(duration)) {\n                    dateAlignment = greatestDurationDenominator(dateIncrement).unit;\n                }\n                else {\n                    dateAlignment = unit;\n                }\n            }\n            else {\n                dateAlignment = unit;\n            }\n        }\n        // if the view displays a single day or smaller\n        if (asRoughDays(duration) <= 1) {\n            if (this.isHiddenDay(start)) {\n                start = this.skipHiddenDays(start, direction);\n                start = startOfDay(start);\n            }\n        }\n        function computeRes() {\n            start = dateEnv.startOf(date, dateAlignment);\n            end = dateEnv.add(start, duration);\n            res = { start, end };\n        }\n        computeRes();\n        // if range is completely enveloped by hidden days, go past the hidden days\n        if (!this.trimHiddenDays(res)) {\n            date = this.skipHiddenDays(date, direction);\n            computeRes();\n        }\n        return res;\n    }\n    // Builds the \"current\" range when a dayCount is specified.\n    buildRangeFromDayCount(date, direction, dayCount) {\n        let { dateEnv, dateAlignment } = this.props;\n        let runningCount = 0;\n        let start = date;\n        let end;\n        if (dateAlignment) {\n            start = dateEnv.startOf(start, dateAlignment);\n        }\n        start = startOfDay(start);\n        start = this.skipHiddenDays(start, direction);\n        end = start;\n        do {\n            end = addDays(end, 1);\n            if (!this.isHiddenDay(end)) {\n                runningCount += 1;\n            }\n        } while (runningCount < dayCount);\n        return { start, end };\n    }\n    // Builds a normalized range object for the \"visible\" range,\n    // which is a way to define the currentRange and activeRange at the same time.\n    buildCustomVisibleRange(date) {\n        let { props } = this;\n        let input = props.visibleRangeInput;\n        let simpleInput = typeof input === 'function'\n            ? input.call(props.calendarApi, props.dateEnv.toDate(date))\n            : input;\n        let range = this.refineRange(simpleInput);\n        if (range && (range.start == null || range.end == null)) {\n            return null;\n        }\n        return range;\n    }\n    // Computes the range that will represent the element/cells for *rendering*,\n    // but which may have voided days/times.\n    // not responsible for trimming hidden days.\n    buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay) {\n        return currentRange;\n    }\n    // Compute the duration value that should be added/substracted to the current date\n    // when a prev/next operation happens.\n    buildDateIncrement(fallback) {\n        let { dateIncrement } = this.props;\n        let customAlignment;\n        if (dateIncrement) {\n            return dateIncrement;\n        }\n        if ((customAlignment = this.props.dateAlignment)) {\n            return createDuration(1, customAlignment);\n        }\n        if (fallback) {\n            return fallback;\n        }\n        return createDuration({ days: 1 });\n    }\n    refineRange(rangeInput) {\n        if (rangeInput) {\n            let range = parseRange(rangeInput, this.props.dateEnv);\n            if (range) {\n                range = computeVisibleDayRange(range);\n            }\n            return range;\n        }\n        return null;\n    }\n    /* Hidden Days\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Initializes internal variables related to calculating hidden days-of-week\n    initHiddenDays() {\n        let hiddenDays = this.props.hiddenDays || []; // array of day-of-week indices that are hidden\n        let isHiddenDayHash = []; // is the day-of-week hidden? (hash with day-of-week-index -> bool)\n        let dayCnt = 0;\n        let i;\n        if (this.props.weekends === false) {\n            hiddenDays.push(0, 6); // 0=sunday, 6=saturday\n        }\n        for (i = 0; i < 7; i += 1) {\n            if (!(isHiddenDayHash[i] = hiddenDays.indexOf(i) !== -1)) {\n                dayCnt += 1;\n            }\n        }\n        if (!dayCnt) {\n            throw new Error('invalid hiddenDays'); // all days were hidden? bad.\n        }\n        this.isHiddenDayHash = isHiddenDayHash;\n    }\n    // Remove days from the beginning and end of the range that are computed as hidden.\n    // If the whole range is trimmed off, returns null\n    trimHiddenDays(range) {\n        let { start, end } = range;\n        if (start) {\n            start = this.skipHiddenDays(start);\n        }\n        if (end) {\n            end = this.skipHiddenDays(end, -1, true);\n        }\n        if (start == null || end == null || start < end) {\n            return { start, end };\n        }\n        return null;\n    }\n    // Is the current day hidden?\n    // `day` is a day-of-week index (0-6), or a Date (used for UTC)\n    isHiddenDay(day) {\n        if (day instanceof Date) {\n            day = day.getUTCDay();\n        }\n        return this.isHiddenDayHash[day];\n    }\n    // Incrementing the current day until it is no longer a hidden day, returning a copy.\n    // DOES NOT CONSIDER validRange!\n    // If the initial value of `date` is not a hidden day, don't do anything.\n    // Pass `isExclusive` as `true` if you are dealing with an end date.\n    // `inc` defaults to `1` (increment one day forward each time)\n    skipHiddenDays(date, inc = 1, isExclusive = false) {\n        while (this.isHiddenDayHash[(date.getUTCDay() + (isExclusive ? inc : 0) + 7) % 7]) {\n            date = addDays(date, inc);\n        }\n        return date;\n    }\n}\n\nfunction createEventInstance(defId, range, forcedStartTzo, forcedEndTzo) {\n    return {\n        instanceId: guid(),\n        defId,\n        range,\n        forcedStartTzo: forcedStartTzo == null ? null : forcedStartTzo,\n        forcedEndTzo: forcedEndTzo == null ? null : forcedEndTzo,\n    };\n}\n\nfunction parseRecurring(refined, defaultAllDay, dateEnv, recurringTypes) {\n    for (let i = 0; i < recurringTypes.length; i += 1) {\n        let parsed = recurringTypes[i].parse(refined, dateEnv);\n        if (parsed) {\n            let { allDay } = refined;\n            if (allDay == null) {\n                allDay = defaultAllDay;\n                if (allDay == null) {\n                    allDay = parsed.allDayGuess;\n                    if (allDay == null) {\n                        allDay = false;\n                    }\n                }\n            }\n            return {\n                allDay,\n                duration: parsed.duration,\n                typeData: parsed.typeData,\n                typeId: i,\n            };\n        }\n    }\n    return null;\n}\nfunction expandRecurring(eventStore, framingRange, context) {\n    let { dateEnv, pluginHooks, options } = context;\n    let { defs, instances } = eventStore;\n    // remove existing recurring instances\n    // TODO: bad. always expand events as a second step\n    instances = filterHash(instances, (instance) => !defs[instance.defId].recurringDef);\n    for (let defId in defs) {\n        let def = defs[defId];\n        if (def.recurringDef) {\n            let { duration } = def.recurringDef;\n            if (!duration) {\n                duration = def.allDay ?\n                    options.defaultAllDayEventDuration :\n                    options.defaultTimedEventDuration;\n            }\n            let starts = expandRecurringRanges(def, duration, framingRange, dateEnv, pluginHooks.recurringTypes);\n            for (let start of starts) {\n                let instance = createEventInstance(defId, {\n                    start,\n                    end: dateEnv.add(start, duration),\n                });\n                instances[instance.instanceId] = instance;\n            }\n        }\n    }\n    return { defs, instances };\n}\n/*\nEvent MUST have a recurringDef\n*/\nfunction expandRecurringRanges(eventDef, duration, framingRange, dateEnv, recurringTypes) {\n    let typeDef = recurringTypes[eventDef.recurringDef.typeId];\n    let markers = typeDef.expand(eventDef.recurringDef.typeData, {\n        start: dateEnv.subtract(framingRange.start, duration),\n        end: framingRange.end,\n    }, dateEnv);\n    // the recurrence plugins don't guarantee that all-day events are start-of-day, so we have to\n    if (eventDef.allDay) {\n        markers = markers.map(startOfDay);\n    }\n    return markers;\n}\n\nconst EVENT_NON_DATE_REFINERS = {\n    id: String,\n    groupId: String,\n    title: String,\n    url: String,\n    interactive: Boolean,\n};\nconst EVENT_DATE_REFINERS = {\n    start: identity,\n    end: identity,\n    date: identity,\n    allDay: Boolean,\n};\nconst EVENT_REFINERS = Object.assign(Object.assign(Object.assign({}, EVENT_NON_DATE_REFINERS), EVENT_DATE_REFINERS), { extendedProps: identity });\nfunction parseEvent(raw, eventSource, context, allowOpenRange, refiners = buildEventRefiners(context), defIdMap, instanceIdMap) {\n    let { refined, extra } = refineEventDef(raw, context, refiners);\n    let defaultAllDay = computeIsDefaultAllDay(eventSource, context);\n    let recurringRes = parseRecurring(refined, defaultAllDay, context.dateEnv, context.pluginHooks.recurringTypes);\n    if (recurringRes) {\n        let def = parseEventDef(refined, extra, eventSource ? eventSource.sourceId : '', recurringRes.allDay, Boolean(recurringRes.duration), context, defIdMap);\n        def.recurringDef = {\n            typeId: recurringRes.typeId,\n            typeData: recurringRes.typeData,\n            duration: recurringRes.duration,\n        };\n        return { def, instance: null };\n    }\n    let singleRes = parseSingle(refined, defaultAllDay, context, allowOpenRange);\n    if (singleRes) {\n        let def = parseEventDef(refined, extra, eventSource ? eventSource.sourceId : '', singleRes.allDay, singleRes.hasEnd, context, defIdMap);\n        let instance = createEventInstance(def.defId, singleRes.range, singleRes.forcedStartTzo, singleRes.forcedEndTzo);\n        if (instanceIdMap && def.publicId && instanceIdMap[def.publicId]) {\n            instance.instanceId = instanceIdMap[def.publicId];\n        }\n        return { def, instance };\n    }\n    return null;\n}\nfunction refineEventDef(raw, context, refiners = buildEventRefiners(context)) {\n    return refineProps(raw, refiners);\n}\nfunction buildEventRefiners(context) {\n    return Object.assign(Object.assign(Object.assign({}, EVENT_UI_REFINERS), EVENT_REFINERS), context.pluginHooks.eventRefiners);\n}\n/*\nWill NOT populate extendedProps with the leftover properties.\nWill NOT populate date-related props.\n*/\nfunction parseEventDef(refined, extra, sourceId, allDay, hasEnd, context, defIdMap) {\n    let def = {\n        title: refined.title || '',\n        groupId: refined.groupId || '',\n        publicId: refined.id || '',\n        url: refined.url || '',\n        recurringDef: null,\n        defId: ((defIdMap && refined.id) ? defIdMap[refined.id] : '') || guid(),\n        sourceId,\n        allDay,\n        hasEnd,\n        interactive: refined.interactive,\n        ui: createEventUi(refined, context),\n        extendedProps: Object.assign(Object.assign({}, (refined.extendedProps || {})), extra),\n    };\n    for (let memberAdder of context.pluginHooks.eventDefMemberAdders) {\n        Object.assign(def, memberAdder(refined));\n    }\n    // help out EventImpl from having user modify props\n    Object.freeze(def.ui.classNames);\n    Object.freeze(def.extendedProps);\n    return def;\n}\nfunction parseSingle(refined, defaultAllDay, context, allowOpenRange) {\n    let { allDay } = refined;\n    let startMeta;\n    let startMarker = null;\n    let hasEnd = false;\n    let endMeta;\n    let endMarker = null;\n    let startInput = refined.start != null ? refined.start : refined.date;\n    startMeta = context.dateEnv.createMarkerMeta(startInput);\n    if (startMeta) {\n        startMarker = startMeta.marker;\n    }\n    else if (!allowOpenRange) {\n        return null;\n    }\n    if (refined.end != null) {\n        endMeta = context.dateEnv.createMarkerMeta(refined.end);\n    }\n    if (allDay == null) {\n        if (defaultAllDay != null) {\n            allDay = defaultAllDay;\n        }\n        else {\n            // fall back to the date props LAST\n            allDay = (!startMeta || startMeta.isTimeUnspecified) &&\n                (!endMeta || endMeta.isTimeUnspecified);\n        }\n    }\n    if (allDay && startMarker) {\n        startMarker = startOfDay(startMarker);\n    }\n    if (endMeta) {\n        endMarker = endMeta.marker;\n        if (allDay) {\n            endMarker = startOfDay(endMarker);\n        }\n        if (startMarker && endMarker <= startMarker) {\n            endMarker = null;\n        }\n    }\n    if (endMarker) {\n        hasEnd = true;\n    }\n    else if (!allowOpenRange) {\n        hasEnd = context.options.forceEventDuration || false;\n        endMarker = context.dateEnv.add(startMarker, allDay ?\n            context.options.defaultAllDayEventDuration :\n            context.options.defaultTimedEventDuration);\n    }\n    return {\n        allDay,\n        hasEnd,\n        range: { start: startMarker, end: endMarker },\n        forcedStartTzo: startMeta ? startMeta.forcedTzo : null,\n        forcedEndTzo: endMeta ? endMeta.forcedTzo : null,\n    };\n}\nfunction computeIsDefaultAllDay(eventSource, context) {\n    let res = null;\n    if (eventSource) {\n        res = eventSource.defaultAllDay;\n    }\n    if (res == null) {\n        res = context.options.defaultAllDay;\n    }\n    return res;\n}\n\nfunction parseEvents(rawEvents, eventSource, context, allowOpenRange, defIdMap, instanceIdMap) {\n    let eventStore = createEmptyEventStore();\n    let eventRefiners = buildEventRefiners(context);\n    for (let rawEvent of rawEvents) {\n        let tuple = parseEvent(rawEvent, eventSource, context, allowOpenRange, eventRefiners, defIdMap, instanceIdMap);\n        if (tuple) {\n            eventTupleToStore(tuple, eventStore);\n        }\n    }\n    return eventStore;\n}\nfunction eventTupleToStore(tuple, eventStore = createEmptyEventStore()) {\n    eventStore.defs[tuple.def.defId] = tuple.def;\n    if (tuple.instance) {\n        eventStore.instances[tuple.instance.instanceId] = tuple.instance;\n    }\n    return eventStore;\n}\n// retrieves events that have the same groupId as the instance specified by `instanceId`\n// or they are the same as the instance.\n// why might instanceId not be in the store? an event from another calendar?\nfunction getRelevantEvents(eventStore, instanceId) {\n    let instance = eventStore.instances[instanceId];\n    if (instance) {\n        let def = eventStore.defs[instance.defId];\n        // get events/instances with same group\n        let newStore = filterEventStoreDefs(eventStore, (lookDef) => isEventDefsGrouped(def, lookDef));\n        // add the original\n        // TODO: wish we could use eventTupleToStore or something like it\n        newStore.defs[def.defId] = def;\n        newStore.instances[instance.instanceId] = instance;\n        return newStore;\n    }\n    return createEmptyEventStore();\n}\nfunction isEventDefsGrouped(def0, def1) {\n    return Boolean(def0.groupId && def0.groupId === def1.groupId);\n}\nfunction createEmptyEventStore() {\n    return { defs: {}, instances: {} };\n}\nfunction mergeEventStores(store0, store1) {\n    return {\n        defs: Object.assign(Object.assign({}, store0.defs), store1.defs),\n        instances: Object.assign(Object.assign({}, store0.instances), store1.instances),\n    };\n}\nfunction filterEventStoreDefs(eventStore, filterFunc) {\n    let defs = filterHash(eventStore.defs, filterFunc);\n    let instances = filterHash(eventStore.instances, (instance) => (defs[instance.defId] // still exists?\n    ));\n    return { defs, instances };\n}\nfunction excludeSubEventStore(master, sub) {\n    let { defs, instances } = master;\n    let filteredDefs = {};\n    let filteredInstances = {};\n    for (let defId in defs) {\n        if (!sub.defs[defId]) { // not explicitly excluded\n            filteredDefs[defId] = defs[defId];\n        }\n    }\n    for (let instanceId in instances) {\n        if (!sub.instances[instanceId] && // not explicitly excluded\n            filteredDefs[instances[instanceId].defId] // def wasn't filtered away\n        ) {\n            filteredInstances[instanceId] = instances[instanceId];\n        }\n    }\n    return {\n        defs: filteredDefs,\n        instances: filteredInstances,\n    };\n}\n\nfunction normalizeConstraint(input, context) {\n    if (Array.isArray(input)) {\n        return parseEvents(input, null, context, true); // allowOpenRange=true\n    }\n    if (typeof input === 'object' && input) { // non-null object\n        return parseEvents([input], null, context, true); // allowOpenRange=true\n    }\n    if (input != null) {\n        return String(input);\n    }\n    return null;\n}\n\nfunction parseClassNames(raw) {\n    if (Array.isArray(raw)) {\n        return raw;\n    }\n    if (typeof raw === 'string') {\n        return raw.split(/\\s+/);\n    }\n    return [];\n}\n\n// TODO: better called \"EventSettings\" or \"EventConfig\"\n// TODO: move this file into structs\n// TODO: separate constraint/overlap/allow, because selection uses only that, not other props\nconst EVENT_UI_REFINERS = {\n    display: String,\n    editable: Boolean,\n    startEditable: Boolean,\n    durationEditable: Boolean,\n    constraint: identity,\n    overlap: identity,\n    allow: identity,\n    className: parseClassNames,\n    classNames: parseClassNames,\n    color: String,\n    backgroundColor: String,\n    borderColor: String,\n    textColor: String,\n};\nconst EMPTY_EVENT_UI = {\n    display: null,\n    startEditable: null,\n    durationEditable: null,\n    constraints: [],\n    overlap: null,\n    allows: [],\n    backgroundColor: '',\n    borderColor: '',\n    textColor: '',\n    classNames: [],\n};\nfunction createEventUi(refined, context) {\n    let constraint = normalizeConstraint(refined.constraint, context);\n    return {\n        display: refined.display || null,\n        startEditable: refined.startEditable != null ? refined.startEditable : refined.editable,\n        durationEditable: refined.durationEditable != null ? refined.durationEditable : refined.editable,\n        constraints: constraint != null ? [constraint] : [],\n        overlap: refined.overlap != null ? refined.overlap : null,\n        allows: refined.allow != null ? [refined.allow] : [],\n        backgroundColor: refined.backgroundColor || refined.color || '',\n        borderColor: refined.borderColor || refined.color || '',\n        textColor: refined.textColor || '',\n        classNames: (refined.className || []).concat(refined.classNames || []), // join singular and plural\n    };\n}\n// TODO: prevent against problems with <2 args!\nfunction combineEventUis(uis) {\n    return uis.reduce(combineTwoEventUis, EMPTY_EVENT_UI);\n}\nfunction combineTwoEventUis(item0, item1) {\n    return {\n        display: item1.display != null ? item1.display : item0.display,\n        startEditable: item1.startEditable != null ? item1.startEditable : item0.startEditable,\n        durationEditable: item1.durationEditable != null ? item1.durationEditable : item0.durationEditable,\n        constraints: item0.constraints.concat(item1.constraints),\n        overlap: typeof item1.overlap === 'boolean' ? item1.overlap : item0.overlap,\n        allows: item0.allows.concat(item1.allows),\n        backgroundColor: item1.backgroundColor || item0.backgroundColor,\n        borderColor: item1.borderColor || item0.borderColor,\n        textColor: item1.textColor || item0.textColor,\n        classNames: item0.classNames.concat(item1.classNames),\n    };\n}\n\nconst EVENT_SOURCE_REFINERS = {\n    id: String,\n    defaultAllDay: Boolean,\n    url: String,\n    format: String,\n    events: identity,\n    eventDataTransform: identity,\n    // for any network-related sources\n    success: identity,\n    failure: identity,\n};\nfunction parseEventSource(raw, context, refiners = buildEventSourceRefiners(context)) {\n    let rawObj;\n    if (typeof raw === 'string') {\n        rawObj = { url: raw };\n    }\n    else if (typeof raw === 'function' || Array.isArray(raw)) {\n        rawObj = { events: raw };\n    }\n    else if (typeof raw === 'object' && raw) { // not null\n        rawObj = raw;\n    }\n    if (rawObj) {\n        let { refined, extra } = refineProps(rawObj, refiners);\n        let metaRes = buildEventSourceMeta(refined, context);\n        if (metaRes) {\n            return {\n                _raw: raw,\n                isFetching: false,\n                latestFetchId: '',\n                fetchRange: null,\n                defaultAllDay: refined.defaultAllDay,\n                eventDataTransform: refined.eventDataTransform,\n                success: refined.success,\n                failure: refined.failure,\n                publicId: refined.id || '',\n                sourceId: guid(),\n                sourceDefId: metaRes.sourceDefId,\n                meta: metaRes.meta,\n                ui: createEventUi(refined, context),\n                extendedProps: extra,\n            };\n        }\n    }\n    return null;\n}\nfunction buildEventSourceRefiners(context) {\n    return Object.assign(Object.assign(Object.assign({}, EVENT_UI_REFINERS), EVENT_SOURCE_REFINERS), context.pluginHooks.eventSourceRefiners);\n}\nfunction buildEventSourceMeta(raw, context) {\n    let defs = context.pluginHooks.eventSourceDefs;\n    for (let i = defs.length - 1; i >= 0; i -= 1) { // later-added plugins take precedence\n        let def = defs[i];\n        let meta = def.parseMeta(raw);\n        if (meta) {\n            return { sourceDefId: i, meta };\n        }\n    }\n    return null;\n}\n\nfunction reduceEventStore(eventStore, action, eventSources, dateProfile, context) {\n    switch (action.type) {\n        case 'RECEIVE_EVENTS': // raw\n            return receiveRawEvents(eventStore, eventSources[action.sourceId], action.fetchId, action.fetchRange, action.rawEvents, context);\n        case 'RESET_RAW_EVENTS':\n            return resetRawEvents(eventStore, eventSources[action.sourceId], action.rawEvents, dateProfile.activeRange, context);\n        case 'ADD_EVENTS': // already parsed, but not expanded\n            return addEvent(eventStore, action.eventStore, // new ones\n            dateProfile ? dateProfile.activeRange : null, context);\n        case 'RESET_EVENTS':\n            return action.eventStore;\n        case 'MERGE_EVENTS': // already parsed and expanded\n            return mergeEventStores(eventStore, action.eventStore);\n        case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n        case 'NEXT':\n        case 'CHANGE_DATE':\n        case 'CHANGE_VIEW_TYPE':\n            if (dateProfile) {\n                return expandRecurring(eventStore, dateProfile.activeRange, context);\n            }\n            return eventStore;\n        case 'REMOVE_EVENTS':\n            return excludeSubEventStore(eventStore, action.eventStore);\n        case 'REMOVE_EVENT_SOURCE':\n            return excludeEventsBySourceId(eventStore, action.sourceId);\n        case 'REMOVE_ALL_EVENT_SOURCES':\n            return filterEventStoreDefs(eventStore, (eventDef) => (!eventDef.sourceId // only keep events with no source id\n            ));\n        case 'REMOVE_ALL_EVENTS':\n            return createEmptyEventStore();\n        default:\n            return eventStore;\n    }\n}\nfunction receiveRawEvents(eventStore, eventSource, fetchId, fetchRange, rawEvents, context) {\n    if (eventSource && // not already removed\n        fetchId === eventSource.latestFetchId // TODO: wish this logic was always in event-sources\n    ) {\n        let subset = parseEvents(transformRawEvents(rawEvents, eventSource, context), eventSource, context);\n        if (fetchRange) {\n            subset = expandRecurring(subset, fetchRange, context);\n        }\n        return mergeEventStores(excludeEventsBySourceId(eventStore, eventSource.sourceId), subset);\n    }\n    return eventStore;\n}\nfunction resetRawEvents(existingEventStore, eventSource, rawEvents, activeRange, context) {\n    const { defIdMap, instanceIdMap } = buildPublicIdMaps(existingEventStore);\n    let newEventStore = parseEvents(transformRawEvents(rawEvents, eventSource, context), eventSource, context, false, defIdMap, instanceIdMap);\n    return expandRecurring(newEventStore, activeRange, context);\n}\nfunction transformRawEvents(rawEvents, eventSource, context) {\n    let calEachTransform = context.options.eventDataTransform;\n    let sourceEachTransform = eventSource ? eventSource.eventDataTransform : null;\n    if (sourceEachTransform) {\n        rawEvents = transformEachRawEvent(rawEvents, sourceEachTransform);\n    }\n    if (calEachTransform) {\n        rawEvents = transformEachRawEvent(rawEvents, calEachTransform);\n    }\n    return rawEvents;\n}\nfunction transformEachRawEvent(rawEvents, func) {\n    let refinedEvents;\n    if (!func) {\n        refinedEvents = rawEvents;\n    }\n    else {\n        refinedEvents = [];\n        for (let rawEvent of rawEvents) {\n            let refinedEvent = func(rawEvent);\n            if (refinedEvent) {\n                refinedEvents.push(refinedEvent);\n            }\n            else if (refinedEvent == null) {\n                refinedEvents.push(rawEvent);\n            } // if a different falsy value, do nothing\n        }\n    }\n    return refinedEvents;\n}\nfunction addEvent(eventStore, subset, expandRange, context) {\n    if (expandRange) {\n        subset = expandRecurring(subset, expandRange, context);\n    }\n    return mergeEventStores(eventStore, subset);\n}\nfunction rezoneEventStoreDates(eventStore, oldDateEnv, newDateEnv) {\n    let { defs } = eventStore;\n    let instances = mapHash(eventStore.instances, (instance) => {\n        let def = defs[instance.defId];\n        if (def.allDay) {\n            return instance; // isn't dependent on timezone\n        }\n        return Object.assign(Object.assign({}, instance), { range: {\n                start: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.start, instance.forcedStartTzo)),\n                end: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.end, instance.forcedEndTzo)),\n            }, forcedStartTzo: newDateEnv.canComputeOffset ? null : instance.forcedStartTzo, forcedEndTzo: newDateEnv.canComputeOffset ? null : instance.forcedEndTzo });\n    });\n    return { defs, instances };\n}\nfunction excludeEventsBySourceId(eventStore, sourceId) {\n    return filterEventStoreDefs(eventStore, (eventDef) => eventDef.sourceId !== sourceId);\n}\n// QUESTION: why not just return instances? do a general object-property-exclusion util\nfunction excludeInstances(eventStore, removals) {\n    return {\n        defs: eventStore.defs,\n        instances: filterHash(eventStore.instances, (instance) => !removals[instance.instanceId]),\n    };\n}\nfunction buildPublicIdMaps(eventStore) {\n    const { defs, instances } = eventStore;\n    const defIdMap = {};\n    const instanceIdMap = {};\n    for (let defId in defs) {\n        const def = defs[defId];\n        const { publicId } = def;\n        if (publicId) {\n            defIdMap[publicId] = defId;\n        }\n    }\n    for (let instanceId in instances) {\n        const instance = instances[instanceId];\n        const def = defs[instance.defId];\n        const { publicId } = def;\n        if (publicId) {\n            instanceIdMap[publicId] = instanceId;\n        }\n    }\n    return { defIdMap, instanceIdMap };\n}\n\nclass Emitter {\n    constructor() {\n        this.handlers = {};\n        this.thisContext = null;\n    }\n    setThisContext(thisContext) {\n        this.thisContext = thisContext;\n    }\n    setOptions(options) {\n        this.options = options;\n    }\n    on(type, handler) {\n        addToHash(this.handlers, type, handler);\n    }\n    off(type, handler) {\n        removeFromHash(this.handlers, type, handler);\n    }\n    trigger(type, ...args) {\n        let attachedHandlers = this.handlers[type] || [];\n        let optionHandler = this.options && this.options[type];\n        let handlers = [].concat(optionHandler || [], attachedHandlers);\n        for (let handler of handlers) {\n            handler.apply(this.thisContext, args);\n        }\n    }\n    hasHandlers(type) {\n        return Boolean((this.handlers[type] && this.handlers[type].length) ||\n            (this.options && this.options[type]));\n    }\n}\nfunction addToHash(hash, type, handler) {\n    (hash[type] || (hash[type] = []))\n        .push(handler);\n}\nfunction removeFromHash(hash, type, handler) {\n    if (handler) {\n        if (hash[type]) {\n            hash[type] = hash[type].filter((func) => func !== handler);\n        }\n    }\n    else {\n        delete hash[type]; // remove all handler funcs for this type\n    }\n}\n\nconst DEF_DEFAULTS = {\n    startTime: '09:00',\n    endTime: '17:00',\n    daysOfWeek: [1, 2, 3, 4, 5],\n    display: 'inverse-background',\n    classNames: 'fc-non-business',\n    groupId: '_businessHours', // so multiple defs get grouped\n};\n/*\nTODO: pass around as EventDefHash!!!\n*/\nfunction parseBusinessHours(input, context) {\n    return parseEvents(refineInputs(input), null, context);\n}\nfunction refineInputs(input) {\n    let rawDefs;\n    if (input === true) {\n        rawDefs = [{}]; // will get DEF_DEFAULTS verbatim\n    }\n    else if (Array.isArray(input)) {\n        // if specifying an array, every sub-definition NEEDS a day-of-week\n        rawDefs = input.filter((rawDef) => rawDef.daysOfWeek);\n    }\n    else if (typeof input === 'object' && input) { // non-null object\n        rawDefs = [input];\n    }\n    else { // is probably false\n        rawDefs = [];\n    }\n    rawDefs = rawDefs.map((rawDef) => (Object.assign(Object.assign({}, DEF_DEFAULTS), rawDef)));\n    return rawDefs;\n}\n\nfunction triggerDateSelect(selection, pev, context) {\n    context.emitter.trigger('select', Object.assign(Object.assign({}, buildDateSpanApiWithContext(selection, context)), { jsEvent: pev ? pev.origEvent : null, view: context.viewApi || context.calendarApi.view }));\n}\nfunction triggerDateUnselect(pev, context) {\n    context.emitter.trigger('unselect', {\n        jsEvent: pev ? pev.origEvent : null,\n        view: context.viewApi || context.calendarApi.view,\n    });\n}\nfunction buildDateSpanApiWithContext(dateSpan, context) {\n    let props = {};\n    for (let transform of context.pluginHooks.dateSpanTransforms) {\n        Object.assign(props, transform(dateSpan, context));\n    }\n    Object.assign(props, buildDateSpanApi(dateSpan, context.dateEnv));\n    return props;\n}\n// Given an event's allDay status and start date, return what its fallback end date should be.\n// TODO: rename to computeDefaultEventEnd\nfunction getDefaultEventEnd(allDay, marker, context) {\n    let { dateEnv, options } = context;\n    let end = marker;\n    if (allDay) {\n        end = startOfDay(end);\n        end = dateEnv.add(end, options.defaultAllDayEventDuration);\n    }\n    else {\n        end = dateEnv.add(end, options.defaultTimedEventDuration);\n    }\n    return end;\n}\n\n// applies the mutation to ALL defs/instances within the event store\nfunction applyMutationToEventStore(eventStore, eventConfigBase, mutation, context) {\n    let eventConfigs = compileEventUis(eventStore.defs, eventConfigBase);\n    let dest = createEmptyEventStore();\n    for (let defId in eventStore.defs) {\n        let def = eventStore.defs[defId];\n        dest.defs[defId] = applyMutationToEventDef(def, eventConfigs[defId], mutation, context);\n    }\n    for (let instanceId in eventStore.instances) {\n        let instance = eventStore.instances[instanceId];\n        let def = dest.defs[instance.defId]; // important to grab the newly modified def\n        dest.instances[instanceId] = applyMutationToEventInstance(instance, def, eventConfigs[instance.defId], mutation, context);\n    }\n    return dest;\n}\nfunction applyMutationToEventDef(eventDef, eventConfig, mutation, context) {\n    let standardProps = mutation.standardProps || {};\n    // if hasEnd has not been specified, guess a good value based on deltas.\n    // if duration will change, there's no way the default duration will persist,\n    // and thus, we need to mark the event as having a real end\n    if (standardProps.hasEnd == null &&\n        eventConfig.durationEditable &&\n        (mutation.startDelta || mutation.endDelta)) {\n        standardProps.hasEnd = true; // TODO: is this mutation okay?\n    }\n    let copy = Object.assign(Object.assign(Object.assign({}, eventDef), standardProps), { ui: Object.assign(Object.assign({}, eventDef.ui), standardProps.ui) });\n    if (mutation.extendedProps) {\n        copy.extendedProps = Object.assign(Object.assign({}, copy.extendedProps), mutation.extendedProps);\n    }\n    for (let applier of context.pluginHooks.eventDefMutationAppliers) {\n        applier(copy, mutation, context);\n    }\n    if (!copy.hasEnd && context.options.forceEventDuration) {\n        copy.hasEnd = true;\n    }\n    return copy;\n}\nfunction applyMutationToEventInstance(eventInstance, eventDef, // must first be modified by applyMutationToEventDef\neventConfig, mutation, context) {\n    let { dateEnv } = context;\n    let forceAllDay = mutation.standardProps && mutation.standardProps.allDay === true;\n    let clearEnd = mutation.standardProps && mutation.standardProps.hasEnd === false;\n    let copy = Object.assign({}, eventInstance);\n    if (forceAllDay) {\n        copy.range = computeAlignedDayRange(copy.range);\n    }\n    if (mutation.datesDelta && eventConfig.startEditable) {\n        copy.range = {\n            start: dateEnv.add(copy.range.start, mutation.datesDelta),\n            end: dateEnv.add(copy.range.end, mutation.datesDelta),\n        };\n    }\n    if (mutation.startDelta && eventConfig.durationEditable) {\n        copy.range = {\n            start: dateEnv.add(copy.range.start, mutation.startDelta),\n            end: copy.range.end,\n        };\n    }\n    if (mutation.endDelta && eventConfig.durationEditable) {\n        copy.range = {\n            start: copy.range.start,\n            end: dateEnv.add(copy.range.end, mutation.endDelta),\n        };\n    }\n    if (clearEnd) {\n        copy.range = {\n            start: copy.range.start,\n            end: getDefaultEventEnd(eventDef.allDay, copy.range.start, context),\n        };\n    }\n    // in case event was all-day but the supplied deltas were not\n    // better util for this?\n    if (eventDef.allDay) {\n        copy.range = {\n            start: startOfDay(copy.range.start),\n            end: startOfDay(copy.range.end),\n        };\n    }\n    // handle invalid durations\n    if (copy.range.end < copy.range.start) {\n        copy.range.end = getDefaultEventEnd(eventDef.allDay, copy.range.start, context);\n    }\n    return copy;\n}\n\nclass EventSourceImpl {\n    constructor(context, internalEventSource) {\n        this.context = context;\n        this.internalEventSource = internalEventSource;\n    }\n    remove() {\n        this.context.dispatch({\n            type: 'REMOVE_EVENT_SOURCE',\n            sourceId: this.internalEventSource.sourceId,\n        });\n    }\n    refetch() {\n        this.context.dispatch({\n            type: 'FETCH_EVENT_SOURCES',\n            sourceIds: [this.internalEventSource.sourceId],\n            isRefetch: true,\n        });\n    }\n    get id() {\n        return this.internalEventSource.publicId;\n    }\n    get url() {\n        return this.internalEventSource.meta.url;\n    }\n    get format() {\n        return this.internalEventSource.meta.format; // TODO: bad. not guaranteed\n    }\n}\n\nclass EventImpl {\n    // instance will be null if expressing a recurring event that has no current instances,\n    // OR if trying to validate an incoming external event that has no dates assigned\n    constructor(context, def, instance) {\n        this._context = context;\n        this._def = def;\n        this._instance = instance || null;\n    }\n    /*\n    TODO: make event struct more responsible for this\n    */\n    setProp(name, val) {\n        if (name in EVENT_DATE_REFINERS) {\n            console.warn('Could not set date-related prop \\'name\\'. Use one of the date-related methods instead.');\n            // TODO: make proper aliasing system?\n        }\n        else if (name === 'id') {\n            val = EVENT_NON_DATE_REFINERS[name](val);\n            this.mutate({\n                standardProps: { publicId: val }, // hardcoded internal name\n            });\n        }\n        else if (name in EVENT_NON_DATE_REFINERS) {\n            val = EVENT_NON_DATE_REFINERS[name](val);\n            this.mutate({\n                standardProps: { [name]: val },\n            });\n        }\n        else if (name in EVENT_UI_REFINERS) {\n            let ui = EVENT_UI_REFINERS[name](val);\n            if (name === 'color') {\n                ui = { backgroundColor: val, borderColor: val };\n            }\n            else if (name === 'editable') {\n                ui = { startEditable: val, durationEditable: val };\n            }\n            else {\n                ui = { [name]: val };\n            }\n            this.mutate({\n                standardProps: { ui },\n            });\n        }\n        else {\n            console.warn(`Could not set prop '${name}'. Use setExtendedProp instead.`);\n        }\n    }\n    setExtendedProp(name, val) {\n        this.mutate({\n            extendedProps: { [name]: val },\n        });\n    }\n    setStart(startInput, options = {}) {\n        let { dateEnv } = this._context;\n        let start = dateEnv.createMarker(startInput);\n        if (start && this._instance) { // TODO: warning if parsed bad\n            let instanceRange = this._instance.range;\n            let startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity); // what if parsed bad!?\n            if (options.maintainDuration) {\n                this.mutate({ datesDelta: startDelta });\n            }\n            else {\n                this.mutate({ startDelta });\n            }\n        }\n    }\n    setEnd(endInput, options = {}) {\n        let { dateEnv } = this._context;\n        let end;\n        if (endInput != null) {\n            end = dateEnv.createMarker(endInput);\n            if (!end) {\n                return; // TODO: warning if parsed bad\n            }\n        }\n        if (this._instance) {\n            if (end) {\n                let endDelta = diffDates(this._instance.range.end, end, dateEnv, options.granularity);\n                this.mutate({ endDelta });\n            }\n            else {\n                this.mutate({ standardProps: { hasEnd: false } });\n            }\n        }\n    }\n    setDates(startInput, endInput, options = {}) {\n        let { dateEnv } = this._context;\n        let standardProps = { allDay: options.allDay };\n        let start = dateEnv.createMarker(startInput);\n        let end;\n        if (!start) {\n            return; // TODO: warning if parsed bad\n        }\n        if (endInput != null) {\n            end = dateEnv.createMarker(endInput);\n            if (!end) { // TODO: warning if parsed bad\n                return;\n            }\n        }\n        if (this._instance) {\n            let instanceRange = this._instance.range;\n            // when computing the diff for an event being converted to all-day,\n            // compute diff off of the all-day values the way event-mutation does.\n            if (options.allDay === true) {\n                instanceRange = computeAlignedDayRange(instanceRange);\n            }\n            let startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity);\n            if (end) {\n                let endDelta = diffDates(instanceRange.end, end, dateEnv, options.granularity);\n                if (durationsEqual(startDelta, endDelta)) {\n                    this.mutate({ datesDelta: startDelta, standardProps });\n                }\n                else {\n                    this.mutate({ startDelta, endDelta, standardProps });\n                }\n            }\n            else { // means \"clear the end\"\n                standardProps.hasEnd = false;\n                this.mutate({ datesDelta: startDelta, standardProps });\n            }\n        }\n    }\n    moveStart(deltaInput) {\n        let delta = createDuration(deltaInput);\n        if (delta) { // TODO: warning if parsed bad\n            this.mutate({ startDelta: delta });\n        }\n    }\n    moveEnd(deltaInput) {\n        let delta = createDuration(deltaInput);\n        if (delta) { // TODO: warning if parsed bad\n            this.mutate({ endDelta: delta });\n        }\n    }\n    moveDates(deltaInput) {\n        let delta = createDuration(deltaInput);\n        if (delta) { // TODO: warning if parsed bad\n            this.mutate({ datesDelta: delta });\n        }\n    }\n    setAllDay(allDay, options = {}) {\n        let standardProps = { allDay };\n        let { maintainDuration } = options;\n        if (maintainDuration == null) {\n            maintainDuration = this._context.options.allDayMaintainDuration;\n        }\n        if (this._def.allDay !== allDay) {\n            standardProps.hasEnd = maintainDuration;\n        }\n        this.mutate({ standardProps });\n    }\n    formatRange(formatInput) {\n        let { dateEnv } = this._context;\n        let instance = this._instance;\n        let formatter = createFormatter(formatInput);\n        if (this._def.hasEnd) {\n            return dateEnv.formatRange(instance.range.start, instance.range.end, formatter, {\n                forcedStartTzo: instance.forcedStartTzo,\n                forcedEndTzo: instance.forcedEndTzo,\n            });\n        }\n        return dateEnv.format(instance.range.start, formatter, {\n            forcedTzo: instance.forcedStartTzo,\n        });\n    }\n    mutate(mutation) {\n        let instance = this._instance;\n        if (instance) {\n            let def = this._def;\n            let context = this._context;\n            let { eventStore } = context.getCurrentData();\n            let relevantEvents = getRelevantEvents(eventStore, instance.instanceId);\n            let eventConfigBase = {\n                '': {\n                    display: '',\n                    startEditable: true,\n                    durationEditable: true,\n                    constraints: [],\n                    overlap: null,\n                    allows: [],\n                    backgroundColor: '',\n                    borderColor: '',\n                    textColor: '',\n                    classNames: [],\n                },\n            };\n            relevantEvents = applyMutationToEventStore(relevantEvents, eventConfigBase, mutation, context);\n            let oldEvent = new EventImpl(context, def, instance); // snapshot\n            this._def = relevantEvents.defs[def.defId];\n            this._instance = relevantEvents.instances[instance.instanceId];\n            context.dispatch({\n                type: 'MERGE_EVENTS',\n                eventStore: relevantEvents,\n            });\n            context.emitter.trigger('eventChange', {\n                oldEvent,\n                event: this,\n                relatedEvents: buildEventApis(relevantEvents, context, instance),\n                revert() {\n                    context.dispatch({\n                        type: 'RESET_EVENTS',\n                        eventStore, // the ORIGINAL store\n                    });\n                },\n            });\n        }\n    }\n    remove() {\n        let context = this._context;\n        let asStore = eventApiToStore(this);\n        context.dispatch({\n            type: 'REMOVE_EVENTS',\n            eventStore: asStore,\n        });\n        context.emitter.trigger('eventRemove', {\n            event: this,\n            relatedEvents: [],\n            revert() {\n                context.dispatch({\n                    type: 'MERGE_EVENTS',\n                    eventStore: asStore,\n                });\n            },\n        });\n    }\n    get source() {\n        let { sourceId } = this._def;\n        if (sourceId) {\n            return new EventSourceImpl(this._context, this._context.getCurrentData().eventSources[sourceId]);\n        }\n        return null;\n    }\n    get start() {\n        return this._instance ?\n            this._context.dateEnv.toDate(this._instance.range.start) :\n            null;\n    }\n    get end() {\n        return (this._instance && this._def.hasEnd) ?\n            this._context.dateEnv.toDate(this._instance.range.end) :\n            null;\n    }\n    get startStr() {\n        let instance = this._instance;\n        if (instance) {\n            return this._context.dateEnv.formatIso(instance.range.start, {\n                omitTime: this._def.allDay,\n                forcedTzo: instance.forcedStartTzo,\n            });\n        }\n        return '';\n    }\n    get endStr() {\n        let instance = this._instance;\n        if (instance && this._def.hasEnd) {\n            return this._context.dateEnv.formatIso(instance.range.end, {\n                omitTime: this._def.allDay,\n                forcedTzo: instance.forcedEndTzo,\n            });\n        }\n        return '';\n    }\n    // computable props that all access the def\n    // TODO: find a TypeScript-compatible way to do this at scale\n    get id() { return this._def.publicId; }\n    get groupId() { return this._def.groupId; }\n    get allDay() { return this._def.allDay; }\n    get title() { return this._def.title; }\n    get url() { return this._def.url; }\n    get display() { return this._def.ui.display || 'auto'; } // bad. just normalize the type earlier\n    get startEditable() { return this._def.ui.startEditable; }\n    get durationEditable() { return this._def.ui.durationEditable; }\n    get constraint() { return this._def.ui.constraints[0] || null; }\n    get overlap() { return this._def.ui.overlap; }\n    get allow() { return this._def.ui.allows[0] || null; }\n    get backgroundColor() { return this._def.ui.backgroundColor; }\n    get borderColor() { return this._def.ui.borderColor; }\n    get textColor() { return this._def.ui.textColor; }\n    // NOTE: user can't modify these because Object.freeze was called in event-def parsing\n    get classNames() { return this._def.ui.classNames; }\n    get extendedProps() { return this._def.extendedProps; }\n    toPlainObject(settings = {}) {\n        let def = this._def;\n        let { ui } = def;\n        let { startStr, endStr } = this;\n        let res = {\n            allDay: def.allDay,\n        };\n        if (def.title) {\n            res.title = def.title;\n        }\n        if (startStr) {\n            res.start = startStr;\n        }\n        if (endStr) {\n            res.end = endStr;\n        }\n        if (def.publicId) {\n            res.id = def.publicId;\n        }\n        if (def.groupId) {\n            res.groupId = def.groupId;\n        }\n        if (def.url) {\n            res.url = def.url;\n        }\n        if (ui.display && ui.display !== 'auto') {\n            res.display = ui.display;\n        }\n        // TODO: what about recurring-event properties???\n        // TODO: include startEditable/durationEditable/constraint/overlap/allow\n        if (settings.collapseColor && ui.backgroundColor && ui.backgroundColor === ui.borderColor) {\n            res.color = ui.backgroundColor;\n        }\n        else {\n            if (ui.backgroundColor) {\n                res.backgroundColor = ui.backgroundColor;\n            }\n            if (ui.borderColor) {\n                res.borderColor = ui.borderColor;\n            }\n        }\n        if (ui.textColor) {\n            res.textColor = ui.textColor;\n        }\n        if (ui.classNames.length) {\n            res.classNames = ui.classNames;\n        }\n        if (Object.keys(def.extendedProps).length) {\n            if (settings.collapseExtendedProps) {\n                Object.assign(res, def.extendedProps);\n            }\n            else {\n                res.extendedProps = def.extendedProps;\n            }\n        }\n        return res;\n    }\n    toJSON() {\n        return this.toPlainObject();\n    }\n}\nfunction eventApiToStore(eventApi) {\n    let def = eventApi._def;\n    let instance = eventApi._instance;\n    return {\n        defs: { [def.defId]: def },\n        instances: instance\n            ? { [instance.instanceId]: instance }\n            : {},\n    };\n}\nfunction buildEventApis(eventStore, context, excludeInstance) {\n    let { defs, instances } = eventStore;\n    let eventApis = [];\n    let excludeInstanceId = excludeInstance ? excludeInstance.instanceId : '';\n    for (let id in instances) {\n        let instance = instances[id];\n        let def = defs[instance.defId];\n        if (instance.instanceId !== excludeInstanceId) {\n            eventApis.push(new EventImpl(context, def, instance));\n        }\n    }\n    return eventApis;\n}\n\n/*\nSpecifying nextDayThreshold signals that all-day ranges should be sliced.\n*/\nfunction sliceEventStore(eventStore, eventUiBases, framingRange, nextDayThreshold) {\n    let inverseBgByGroupId = {};\n    let inverseBgByDefId = {};\n    let defByGroupId = {};\n    let bgRanges = [];\n    let fgRanges = [];\n    let eventUis = compileEventUis(eventStore.defs, eventUiBases);\n    for (let defId in eventStore.defs) {\n        let def = eventStore.defs[defId];\n        let ui = eventUis[def.defId];\n        if (ui.display === 'inverse-background') {\n            if (def.groupId) {\n                inverseBgByGroupId[def.groupId] = [];\n                if (!defByGroupId[def.groupId]) {\n                    defByGroupId[def.groupId] = def;\n                }\n            }\n            else {\n                inverseBgByDefId[defId] = [];\n            }\n        }\n    }\n    for (let instanceId in eventStore.instances) {\n        let instance = eventStore.instances[instanceId];\n        let def = eventStore.defs[instance.defId];\n        let ui = eventUis[def.defId];\n        let origRange = instance.range;\n        let normalRange = (!def.allDay && nextDayThreshold) ?\n            computeVisibleDayRange(origRange, nextDayThreshold) :\n            origRange;\n        let slicedRange = intersectRanges(normalRange, framingRange);\n        if (slicedRange) {\n            if (ui.display === 'inverse-background') {\n                if (def.groupId) {\n                    inverseBgByGroupId[def.groupId].push(slicedRange);\n                }\n                else {\n                    inverseBgByDefId[instance.defId].push(slicedRange);\n                }\n            }\n            else if (ui.display !== 'none') {\n                (ui.display === 'background' ? bgRanges : fgRanges).push({\n                    def,\n                    ui,\n                    instance,\n                    range: slicedRange,\n                    isStart: normalRange.start && normalRange.start.valueOf() === slicedRange.start.valueOf(),\n                    isEnd: normalRange.end && normalRange.end.valueOf() === slicedRange.end.valueOf(),\n                });\n            }\n        }\n    }\n    for (let groupId in inverseBgByGroupId) { // BY GROUP\n        let ranges = inverseBgByGroupId[groupId];\n        let invertedRanges = invertRanges(ranges, framingRange);\n        for (let invertedRange of invertedRanges) {\n            let def = defByGroupId[groupId];\n            let ui = eventUis[def.defId];\n            bgRanges.push({\n                def,\n                ui,\n                instance: null,\n                range: invertedRange,\n                isStart: false,\n                isEnd: false,\n            });\n        }\n    }\n    for (let defId in inverseBgByDefId) {\n        let ranges = inverseBgByDefId[defId];\n        let invertedRanges = invertRanges(ranges, framingRange);\n        for (let invertedRange of invertedRanges) {\n            bgRanges.push({\n                def: eventStore.defs[defId],\n                ui: eventUis[defId],\n                instance: null,\n                range: invertedRange,\n                isStart: false,\n                isEnd: false,\n            });\n        }\n    }\n    return { bg: bgRanges, fg: fgRanges };\n}\nfunction hasBgRendering(def) {\n    return def.ui.display === 'background' || def.ui.display === 'inverse-background';\n}\nfunction setElSeg(el, seg) {\n    el.fcSeg = seg;\n}\nfunction getElSeg(el) {\n    return el.fcSeg ||\n        el.parentNode.fcSeg || // for the harness\n        null;\n}\n// event ui computation\nfunction compileEventUis(eventDefs, eventUiBases) {\n    return mapHash(eventDefs, (eventDef) => compileEventUi(eventDef, eventUiBases));\n}\nfunction compileEventUi(eventDef, eventUiBases) {\n    let uis = [];\n    if (eventUiBases['']) {\n        uis.push(eventUiBases['']);\n    }\n    if (eventUiBases[eventDef.defId]) {\n        uis.push(eventUiBases[eventDef.defId]);\n    }\n    uis.push(eventDef.ui);\n    return combineEventUis(uis);\n}\nfunction sortEventSegs(segs, eventOrderSpecs) {\n    let objs = segs.map(buildSegCompareObj);\n    objs.sort((obj0, obj1) => compareByFieldSpecs(obj0, obj1, eventOrderSpecs));\n    return objs.map((c) => c._seg);\n}\n// returns a object with all primitive props that can be compared\nfunction buildSegCompareObj(seg) {\n    let { eventRange } = seg;\n    let eventDef = eventRange.def;\n    let range = eventRange.instance ? eventRange.instance.range : eventRange.range;\n    let start = range.start ? range.start.valueOf() : 0; // TODO: better support for open-range events\n    let end = range.end ? range.end.valueOf() : 0; // \"\n    return Object.assign(Object.assign(Object.assign({}, eventDef.extendedProps), eventDef), { id: eventDef.publicId, start,\n        end, duration: end - start, allDay: Number(eventDef.allDay), _seg: seg });\n}\nfunction computeSegDraggable(seg, context) {\n    let { pluginHooks } = context;\n    let transformers = pluginHooks.isDraggableTransformers;\n    let { def, ui } = seg.eventRange;\n    let val = ui.startEditable;\n    for (let transformer of transformers) {\n        val = transformer(val, def, ui, context);\n    }\n    return val;\n}\nfunction computeSegStartResizable(seg, context) {\n    return seg.isStart && seg.eventRange.ui.durationEditable && context.options.eventResizableFromStart;\n}\nfunction computeSegEndResizable(seg, context) {\n    return seg.isEnd && seg.eventRange.ui.durationEditable;\n}\nfunction buildSegTimeText(seg, timeFormat, context, defaultDisplayEventTime, // defaults to true\ndefaultDisplayEventEnd, // defaults to true\nstartOverride, endOverride) {\n    let { dateEnv, options } = context;\n    let { displayEventTime, displayEventEnd } = options;\n    let eventDef = seg.eventRange.def;\n    let eventInstance = seg.eventRange.instance;\n    if (displayEventTime == null) {\n        displayEventTime = defaultDisplayEventTime !== false;\n    }\n    if (displayEventEnd == null) {\n        displayEventEnd = defaultDisplayEventEnd !== false;\n    }\n    let wholeEventStart = eventInstance.range.start;\n    let wholeEventEnd = eventInstance.range.end;\n    let segStart = startOverride || seg.start || seg.eventRange.range.start;\n    let segEnd = endOverride || seg.end || seg.eventRange.range.end;\n    let isStartDay = startOfDay(wholeEventStart).valueOf() === startOfDay(segStart).valueOf();\n    let isEndDay = startOfDay(addMs(wholeEventEnd, -1)).valueOf() === startOfDay(addMs(segEnd, -1)).valueOf();\n    if (displayEventTime && !eventDef.allDay && (isStartDay || isEndDay)) {\n        segStart = isStartDay ? wholeEventStart : segStart;\n        segEnd = isEndDay ? wholeEventEnd : segEnd;\n        if (displayEventEnd && eventDef.hasEnd) {\n            return dateEnv.formatRange(segStart, segEnd, timeFormat, {\n                forcedStartTzo: startOverride ? null : eventInstance.forcedStartTzo,\n                forcedEndTzo: endOverride ? null : eventInstance.forcedEndTzo,\n            });\n        }\n        return dateEnv.format(segStart, timeFormat, {\n            forcedTzo: startOverride ? null : eventInstance.forcedStartTzo, // nooooo, same\n        });\n    }\n    return '';\n}\nfunction getSegMeta(seg, todayRange, nowDate) {\n    let segRange = seg.eventRange.range;\n    return {\n        isPast: segRange.end < (nowDate || todayRange.start),\n        isFuture: segRange.start >= (nowDate || todayRange.end),\n        isToday: todayRange && rangeContainsMarker(todayRange, segRange.start),\n    };\n}\nfunction getEventClassNames(props) {\n    let classNames = ['fc-event'];\n    if (props.isMirror) {\n        classNames.push('fc-event-mirror');\n    }\n    if (props.isDraggable) {\n        classNames.push('fc-event-draggable');\n    }\n    if (props.isStartResizable || props.isEndResizable) {\n        classNames.push('fc-event-resizable');\n    }\n    if (props.isDragging) {\n        classNames.push('fc-event-dragging');\n    }\n    if (props.isResizing) {\n        classNames.push('fc-event-resizing');\n    }\n    if (props.isSelected) {\n        classNames.push('fc-event-selected');\n    }\n    if (props.isStart) {\n        classNames.push('fc-event-start');\n    }\n    if (props.isEnd) {\n        classNames.push('fc-event-end');\n    }\n    if (props.isPast) {\n        classNames.push('fc-event-past');\n    }\n    if (props.isToday) {\n        classNames.push('fc-event-today');\n    }\n    if (props.isFuture) {\n        classNames.push('fc-event-future');\n    }\n    return classNames;\n}\nfunction buildEventRangeKey(eventRange) {\n    return eventRange.instance\n        ? eventRange.instance.instanceId\n        : `${eventRange.def.defId}:${eventRange.range.start.toISOString()}`;\n    // inverse-background events don't have specific instances. TODO: better solution\n}\nfunction getSegAnchorAttrs(seg, context) {\n    let { def, instance } = seg.eventRange;\n    let { url } = def;\n    if (url) {\n        return { href: url };\n    }\n    let { emitter, options } = context;\n    let { eventInteractive } = options;\n    if (eventInteractive == null) {\n        eventInteractive = def.interactive;\n        if (eventInteractive == null) {\n            eventInteractive = Boolean(emitter.hasHandlers('eventClick'));\n        }\n    }\n    // mock what happens in EventClicking\n    if (eventInteractive) {\n        // only attach keyboard-related handlers because click handler is already done in EventClicking\n        return createAriaKeyboardAttrs((ev) => {\n            emitter.trigger('eventClick', {\n                el: ev.target,\n                event: new EventImpl(context, def, instance),\n                jsEvent: ev,\n                view: context.viewApi,\n            });\n        });\n    }\n    return {};\n}\n\nconst STANDARD_PROPS = {\n    start: identity,\n    end: identity,\n    allDay: Boolean,\n};\nfunction parseDateSpan(raw, dateEnv, defaultDuration) {\n    let span = parseOpenDateSpan(raw, dateEnv);\n    let { range } = span;\n    if (!range.start) {\n        return null;\n    }\n    if (!range.end) {\n        if (defaultDuration == null) {\n            return null;\n        }\n        range.end = dateEnv.add(range.start, defaultDuration);\n    }\n    return span;\n}\n/*\nTODO: somehow combine with parseRange?\nWill return null if the start/end props were present but parsed invalidly.\n*/\nfunction parseOpenDateSpan(raw, dateEnv) {\n    let { refined: standardProps, extra } = refineProps(raw, STANDARD_PROPS);\n    let startMeta = standardProps.start ? dateEnv.createMarkerMeta(standardProps.start) : null;\n    let endMeta = standardProps.end ? dateEnv.createMarkerMeta(standardProps.end) : null;\n    let { allDay } = standardProps;\n    if (allDay == null) {\n        allDay = (startMeta && startMeta.isTimeUnspecified) &&\n            (!endMeta || endMeta.isTimeUnspecified);\n    }\n    return Object.assign({ range: {\n            start: startMeta ? startMeta.marker : null,\n            end: endMeta ? endMeta.marker : null,\n        }, allDay }, extra);\n}\nfunction isDateSpansEqual(span0, span1) {\n    return rangesEqual(span0.range, span1.range) &&\n        span0.allDay === span1.allDay &&\n        isSpanPropsEqual(span0, span1);\n}\n// the NON-DATE-RELATED props\nfunction isSpanPropsEqual(span0, span1) {\n    for (let propName in span1) {\n        if (propName !== 'range' && propName !== 'allDay') {\n            if (span0[propName] !== span1[propName]) {\n                return false;\n            }\n        }\n    }\n    // are there any props that span0 has that span1 DOESN'T have?\n    // both have range/allDay, so no need to special-case.\n    for (let propName in span0) {\n        if (!(propName in span1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction buildDateSpanApi(span, dateEnv) {\n    return Object.assign(Object.assign({}, buildRangeApi(span.range, dateEnv, span.allDay)), { allDay: span.allDay });\n}\nfunction buildRangeApiWithTimeZone(range, dateEnv, omitTime) {\n    return Object.assign(Object.assign({}, buildRangeApi(range, dateEnv, omitTime)), { timeZone: dateEnv.timeZone });\n}\nfunction buildRangeApi(range, dateEnv, omitTime) {\n    return {\n        start: dateEnv.toDate(range.start),\n        end: dateEnv.toDate(range.end),\n        startStr: dateEnv.formatIso(range.start, { omitTime }),\n        endStr: dateEnv.formatIso(range.end, { omitTime }),\n    };\n}\nfunction fabricateEventRange(dateSpan, eventUiBases, context) {\n    let res = refineEventDef({ editable: false }, context);\n    let def = parseEventDef(res.refined, res.extra, '', // sourceId\n    dateSpan.allDay, true, // hasEnd\n    context);\n    return {\n        def,\n        ui: compileEventUi(def, eventUiBases),\n        instance: createEventInstance(def.defId, dateSpan.range),\n        range: dateSpan.range,\n        isStart: true,\n        isEnd: true,\n    };\n}\n\n/*\ngiven a function that resolves a result asynchronously.\nthe function can either call passed-in success and failure callbacks,\nor it can return a promise.\nif you need to pass additional params to func, bind them first.\n*/\nfunction unpromisify(func, normalizedSuccessCallback, normalizedFailureCallback) {\n    // guard against success/failure callbacks being called more than once\n    // and guard against a promise AND callback being used together.\n    let isResolved = false;\n    let wrappedSuccess = function (res) {\n        if (!isResolved) {\n            isResolved = true;\n            normalizedSuccessCallback(res);\n        }\n    };\n    let wrappedFailure = function (error) {\n        if (!isResolved) {\n            isResolved = true;\n            normalizedFailureCallback(error);\n        }\n    };\n    let res = func(wrappedSuccess, wrappedFailure);\n    if (res && typeof res.then === 'function') {\n        res.then(wrappedSuccess, wrappedFailure);\n    }\n}\n\nclass JsonRequestError extends Error {\n    constructor(message, response) {\n        super(message);\n        this.response = response;\n    }\n}\nfunction requestJson(method, url, params) {\n    method = method.toUpperCase();\n    const fetchOptions = {\n        method,\n    };\n    if (method === 'GET') {\n        url += (url.indexOf('?') === -1 ? '?' : '&') +\n            new URLSearchParams(params);\n    }\n    else {\n        fetchOptions.body = new URLSearchParams(params);\n        fetchOptions.headers = {\n            'Content-Type': 'application/x-www-form-urlencoded',\n        };\n    }\n    return fetch(url, fetchOptions).then((fetchRes) => {\n        if (fetchRes.ok) {\n            return fetchRes.json().then((parsedResponse) => {\n                return [parsedResponse, fetchRes];\n            }, () => {\n                throw new JsonRequestError('Failure parsing JSON', fetchRes);\n            });\n        }\n        else {\n            throw new JsonRequestError('Request failed', fetchRes);\n        }\n    });\n}\n\nlet canVGrowWithinCell;\nfunction getCanVGrowWithinCell() {\n    if (canVGrowWithinCell == null) {\n        canVGrowWithinCell = computeCanVGrowWithinCell();\n    }\n    return canVGrowWithinCell;\n}\nfunction computeCanVGrowWithinCell() {\n    // for SSR, because this function is call immediately at top-level\n    // TODO: just make this logic execute top-level, immediately, instead of doing lazily\n    if (typeof document === 'undefined') {\n        return true;\n    }\n    let el = document.createElement('div');\n    el.style.position = 'absolute';\n    el.style.top = '0px';\n    el.style.left = '0px';\n    el.innerHTML = '<table><tr><td><div></div></td></tr></table>';\n    el.querySelector('table').style.height = '100px';\n    el.querySelector('div').style.height = '100%';\n    document.body.appendChild(el);\n    let div = el.querySelector('div');\n    let possible = div.offsetHeight > 0;\n    document.body.removeChild(el);\n    return possible;\n}\n\nclass CalendarRoot extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            forPrint: false,\n        };\n        this.handleBeforePrint = () => {\n            this.setState({ forPrint: true });\n        };\n        this.handleAfterPrint = () => {\n            this.setState({ forPrint: false });\n        };\n    }\n    render() {\n        let { props } = this;\n        let { options } = props;\n        let { forPrint } = this.state;\n        let isHeightAuto = forPrint || options.height === 'auto' || options.contentHeight === 'auto';\n        let height = (!isHeightAuto && options.height != null) ? options.height : '';\n        let classNames = [\n            'fc',\n            forPrint ? 'fc-media-print' : 'fc-media-screen',\n            `fc-direction-${options.direction}`,\n            props.theme.getClass('root'),\n        ];\n        if (!getCanVGrowWithinCell()) {\n            classNames.push('fc-liquid-hack');\n        }\n        return props.children(classNames, height, isHeightAuto, forPrint);\n    }\n    componentDidMount() {\n        let { emitter } = this.props;\n        emitter.on('_beforeprint', this.handleBeforePrint);\n        emitter.on('_afterprint', this.handleAfterPrint);\n    }\n    componentWillUnmount() {\n        let { emitter } = this.props;\n        emitter.off('_beforeprint', this.handleBeforePrint);\n        emitter.off('_afterprint', this.handleAfterPrint);\n    }\n}\n\nclass Interaction {\n    constructor(settings) {\n        this.component = settings.component;\n        this.isHitComboAllowed = settings.isHitComboAllowed || null;\n    }\n    destroy() {\n    }\n}\nfunction parseInteractionSettings(component, input) {\n    return {\n        component,\n        el: input.el,\n        useEventCenter: input.useEventCenter != null ? input.useEventCenter : true,\n        isHitComboAllowed: input.isHitComboAllowed || null,\n    };\n}\nfunction interactionSettingsToStore(settings) {\n    return {\n        [settings.component.uid]: settings,\n    };\n}\n// global state\nconst interactionSettingsStore = {};\n\nclass CalendarImpl {\n    getCurrentData() {\n        return this.currentDataManager.getCurrentData();\n    }\n    dispatch(action) {\n        this.currentDataManager.dispatch(action);\n    }\n    get view() { return this.getCurrentData().viewApi; }\n    batchRendering(callback) {\n        callback();\n    }\n    updateSize() {\n        this.trigger('_resize', true);\n    }\n    // Options\n    // -----------------------------------------------------------------------------------------------------------------\n    setOption(name, val) {\n        this.dispatch({\n            type: 'SET_OPTION',\n            optionName: name,\n            rawOptionValue: val,\n        });\n    }\n    getOption(name) {\n        return this.currentDataManager.currentCalendarOptionsInput[name];\n    }\n    getAvailableLocaleCodes() {\n        return Object.keys(this.getCurrentData().availableRawLocales);\n    }\n    // Trigger\n    // -----------------------------------------------------------------------------------------------------------------\n    on(handlerName, handler) {\n        let { currentDataManager } = this;\n        if (currentDataManager.currentCalendarOptionsRefiners[handlerName]) {\n            currentDataManager.emitter.on(handlerName, handler);\n        }\n        else {\n            console.warn(`Unknown listener name '${handlerName}'`);\n        }\n    }\n    off(handlerName, handler) {\n        this.currentDataManager.emitter.off(handlerName, handler);\n    }\n    // not meant for public use\n    trigger(handlerName, ...args) {\n        this.currentDataManager.emitter.trigger(handlerName, ...args);\n    }\n    // View\n    // -----------------------------------------------------------------------------------------------------------------\n    changeView(viewType, dateOrRange) {\n        this.batchRendering(() => {\n            this.unselect();\n            if (dateOrRange) {\n                if (dateOrRange.start && dateOrRange.end) { // a range\n                    this.dispatch({\n                        type: 'CHANGE_VIEW_TYPE',\n                        viewType,\n                    });\n                    this.dispatch({\n                        type: 'SET_OPTION',\n                        optionName: 'visibleRange',\n                        rawOptionValue: dateOrRange,\n                    });\n                }\n                else {\n                    let { dateEnv } = this.getCurrentData();\n                    this.dispatch({\n                        type: 'CHANGE_VIEW_TYPE',\n                        viewType,\n                        dateMarker: dateEnv.createMarker(dateOrRange),\n                    });\n                }\n            }\n            else {\n                this.dispatch({\n                    type: 'CHANGE_VIEW_TYPE',\n                    viewType,\n                });\n            }\n        });\n    }\n    // Forces navigation to a view for the given date.\n    // `viewType` can be a specific view name or a generic one like \"week\" or \"day\".\n    // needs to change\n    zoomTo(dateMarker, viewType) {\n        let state = this.getCurrentData();\n        let spec;\n        viewType = viewType || 'day'; // day is default zoom\n        spec = state.viewSpecs[viewType] || this.getUnitViewSpec(viewType);\n        this.unselect();\n        if (spec) {\n            this.dispatch({\n                type: 'CHANGE_VIEW_TYPE',\n                viewType: spec.type,\n                dateMarker,\n            });\n        }\n        else {\n            this.dispatch({\n                type: 'CHANGE_DATE',\n                dateMarker,\n            });\n        }\n    }\n    // Given a duration singular unit, like \"week\" or \"day\", finds a matching view spec.\n    // Preference is given to views that have corresponding buttons.\n    getUnitViewSpec(unit) {\n        let { viewSpecs, toolbarConfig } = this.getCurrentData();\n        let viewTypes = [].concat(toolbarConfig.header ? toolbarConfig.header.viewsWithButtons : [], toolbarConfig.footer ? toolbarConfig.footer.viewsWithButtons : []);\n        let i;\n        let spec;\n        for (let viewType in viewSpecs) {\n            viewTypes.push(viewType);\n        }\n        for (i = 0; i < viewTypes.length; i += 1) {\n            spec = viewSpecs[viewTypes[i]];\n            if (spec) {\n                if (spec.singleUnit === unit) {\n                    return spec;\n                }\n            }\n        }\n        return null;\n    }\n    // Current Date\n    // -----------------------------------------------------------------------------------------------------------------\n    prev() {\n        this.unselect();\n        this.dispatch({ type: 'PREV' });\n    }\n    next() {\n        this.unselect();\n        this.dispatch({ type: 'NEXT' });\n    }\n    prevYear() {\n        let state = this.getCurrentData();\n        this.unselect();\n        this.dispatch({\n            type: 'CHANGE_DATE',\n            dateMarker: state.dateEnv.addYears(state.currentDate, -1),\n        });\n    }\n    nextYear() {\n        let state = this.getCurrentData();\n        this.unselect();\n        this.dispatch({\n            type: 'CHANGE_DATE',\n            dateMarker: state.dateEnv.addYears(state.currentDate, 1),\n        });\n    }\n    today() {\n        let state = this.getCurrentData();\n        this.unselect();\n        this.dispatch({\n            type: 'CHANGE_DATE',\n            dateMarker: getNow(state.calendarOptions.now, state.dateEnv),\n        });\n    }\n    gotoDate(zonedDateInput) {\n        let state = this.getCurrentData();\n        this.unselect();\n        this.dispatch({\n            type: 'CHANGE_DATE',\n            dateMarker: state.dateEnv.createMarker(zonedDateInput),\n        });\n    }\n    incrementDate(deltaInput) {\n        let state = this.getCurrentData();\n        let delta = createDuration(deltaInput);\n        if (delta) { // else, warn about invalid input?\n            this.unselect();\n            this.dispatch({\n                type: 'CHANGE_DATE',\n                dateMarker: state.dateEnv.add(state.currentDate, delta),\n            });\n        }\n    }\n    getDate() {\n        let state = this.getCurrentData();\n        return state.dateEnv.toDate(state.currentDate);\n    }\n    // Date Formatting Utils\n    // -----------------------------------------------------------------------------------------------------------------\n    formatDate(d, formatter) {\n        let { dateEnv } = this.getCurrentData();\n        return dateEnv.format(dateEnv.createMarker(d), createFormatter(formatter));\n    }\n    // `settings` is for formatter AND isEndExclusive\n    formatRange(d0, d1, settings) {\n        let { dateEnv } = this.getCurrentData();\n        return dateEnv.formatRange(dateEnv.createMarker(d0), dateEnv.createMarker(d1), createFormatter(settings), settings);\n    }\n    formatIso(d, omitTime) {\n        let { dateEnv } = this.getCurrentData();\n        return dateEnv.formatIso(dateEnv.createMarker(d), { omitTime });\n    }\n    // Date Selection / Event Selection / DayClick\n    // -----------------------------------------------------------------------------------------------------------------\n    select(dateOrObj, endDate) {\n        let selectionInput;\n        if (endDate == null) {\n            if (dateOrObj.start != null) {\n                selectionInput = dateOrObj;\n            }\n            else {\n                selectionInput = {\n                    start: dateOrObj,\n                    end: null,\n                };\n            }\n        }\n        else {\n            selectionInput = {\n                start: dateOrObj,\n                end: endDate,\n            };\n        }\n        let state = this.getCurrentData();\n        let selection = parseDateSpan(selectionInput, state.dateEnv, createDuration({ days: 1 }));\n        if (selection) { // throw parse error otherwise?\n            this.dispatch({ type: 'SELECT_DATES', selection });\n            triggerDateSelect(selection, null, state);\n        }\n    }\n    unselect(pev) {\n        let state = this.getCurrentData();\n        if (state.dateSelection) {\n            this.dispatch({ type: 'UNSELECT_DATES' });\n            triggerDateUnselect(pev, state);\n        }\n    }\n    // Public Events API\n    // -----------------------------------------------------------------------------------------------------------------\n    addEvent(eventInput, sourceInput) {\n        if (eventInput instanceof EventImpl) {\n            let def = eventInput._def;\n            let instance = eventInput._instance;\n            let currentData = this.getCurrentData();\n            // not already present? don't want to add an old snapshot\n            if (!currentData.eventStore.defs[def.defId]) {\n                this.dispatch({\n                    type: 'ADD_EVENTS',\n                    eventStore: eventTupleToStore({ def, instance }), // TODO: better util for two args?\n                });\n                this.triggerEventAdd(eventInput);\n            }\n            return eventInput;\n        }\n        let state = this.getCurrentData();\n        let eventSource;\n        if (sourceInput instanceof EventSourceImpl) {\n            eventSource = sourceInput.internalEventSource;\n        }\n        else if (typeof sourceInput === 'boolean') {\n            if (sourceInput) { // true. part of the first event source\n                [eventSource] = hashValuesToArray(state.eventSources);\n            }\n        }\n        else if (sourceInput != null) { // an ID. accepts a number too\n            let sourceApi = this.getEventSourceById(sourceInput); // TODO: use an internal function\n            if (!sourceApi) {\n                console.warn(`Could not find an event source with ID \"${sourceInput}\"`); // TODO: test\n                return null;\n            }\n            eventSource = sourceApi.internalEventSource;\n        }\n        let tuple = parseEvent(eventInput, eventSource, state, false);\n        if (tuple) {\n            let newEventApi = new EventImpl(state, tuple.def, tuple.def.recurringDef ? null : tuple.instance);\n            this.dispatch({\n                type: 'ADD_EVENTS',\n                eventStore: eventTupleToStore(tuple),\n            });\n            this.triggerEventAdd(newEventApi);\n            return newEventApi;\n        }\n        return null;\n    }\n    triggerEventAdd(eventApi) {\n        let { emitter } = this.getCurrentData();\n        emitter.trigger('eventAdd', {\n            event: eventApi,\n            relatedEvents: [],\n            revert: () => {\n                this.dispatch({\n                    type: 'REMOVE_EVENTS',\n                    eventStore: eventApiToStore(eventApi),\n                });\n            },\n        });\n    }\n    // TODO: optimize\n    getEventById(id) {\n        let state = this.getCurrentData();\n        let { defs, instances } = state.eventStore;\n        id = String(id);\n        for (let defId in defs) {\n            let def = defs[defId];\n            if (def.publicId === id) {\n                if (def.recurringDef) {\n                    return new EventImpl(state, def, null);\n                }\n                for (let instanceId in instances) {\n                    let instance = instances[instanceId];\n                    if (instance.defId === def.defId) {\n                        return new EventImpl(state, def, instance);\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    getEvents() {\n        let currentData = this.getCurrentData();\n        return buildEventApis(currentData.eventStore, currentData);\n    }\n    removeAllEvents() {\n        this.dispatch({ type: 'REMOVE_ALL_EVENTS' });\n    }\n    // Public Event Sources API\n    // -----------------------------------------------------------------------------------------------------------------\n    getEventSources() {\n        let state = this.getCurrentData();\n        let sourceHash = state.eventSources;\n        let sourceApis = [];\n        for (let internalId in sourceHash) {\n            sourceApis.push(new EventSourceImpl(state, sourceHash[internalId]));\n        }\n        return sourceApis;\n    }\n    getEventSourceById(id) {\n        let state = this.getCurrentData();\n        let sourceHash = state.eventSources;\n        id = String(id);\n        for (let sourceId in sourceHash) {\n            if (sourceHash[sourceId].publicId === id) {\n                return new EventSourceImpl(state, sourceHash[sourceId]);\n            }\n        }\n        return null;\n    }\n    addEventSource(sourceInput) {\n        let state = this.getCurrentData();\n        if (sourceInput instanceof EventSourceImpl) {\n            // not already present? don't want to add an old snapshot\n            if (!state.eventSources[sourceInput.internalEventSource.sourceId]) {\n                this.dispatch({\n                    type: 'ADD_EVENT_SOURCES',\n                    sources: [sourceInput.internalEventSource],\n                });\n            }\n            return sourceInput;\n        }\n        let eventSource = parseEventSource(sourceInput, state);\n        if (eventSource) { // TODO: error otherwise?\n            this.dispatch({ type: 'ADD_EVENT_SOURCES', sources: [eventSource] });\n            return new EventSourceImpl(state, eventSource);\n        }\n        return null;\n    }\n    removeAllEventSources() {\n        this.dispatch({ type: 'REMOVE_ALL_EVENT_SOURCES' });\n    }\n    refetchEvents() {\n        this.dispatch({ type: 'FETCH_EVENT_SOURCES', isRefetch: true });\n    }\n    // Scroll\n    // -----------------------------------------------------------------------------------------------------------------\n    scrollToTime(timeInput) {\n        let time = createDuration(timeInput);\n        if (time) {\n            this.trigger('_scrollRequest', { time });\n        }\n    }\n}\n\nfunction pointInsideRect(point, rect) {\n    return point.left >= rect.left &&\n        point.left < rect.right &&\n        point.top >= rect.top &&\n        point.top < rect.bottom;\n}\n// Returns a new rectangle that is the intersection of the two rectangles. If they don't intersect, returns false\nfunction intersectRects(rect1, rect2) {\n    let res = {\n        left: Math.max(rect1.left, rect2.left),\n        right: Math.min(rect1.right, rect2.right),\n        top: Math.max(rect1.top, rect2.top),\n        bottom: Math.min(rect1.bottom, rect2.bottom),\n    };\n    if (res.left < res.right && res.top < res.bottom) {\n        return res;\n    }\n    return false;\n}\nfunction translateRect(rect, deltaX, deltaY) {\n    return {\n        left: rect.left + deltaX,\n        right: rect.right + deltaX,\n        top: rect.top + deltaY,\n        bottom: rect.bottom + deltaY,\n    };\n}\n// Returns a new point that will have been moved to reside within the given rectangle\nfunction constrainPoint(point, rect) {\n    return {\n        left: Math.min(Math.max(point.left, rect.left), rect.right),\n        top: Math.min(Math.max(point.top, rect.top), rect.bottom),\n    };\n}\n// Returns a point that is the center of the given rectangle\nfunction getRectCenter(rect) {\n    return {\n        left: (rect.left + rect.right) / 2,\n        top: (rect.top + rect.bottom) / 2,\n    };\n}\n// Subtracts point2's coordinates from point1's coordinates, returning a delta\nfunction diffPoints(point1, point2) {\n    return {\n        left: point1.left - point2.left,\n        top: point1.top - point2.top,\n    };\n}\n\nconst EMPTY_EVENT_STORE = createEmptyEventStore(); // for purecomponents. TODO: keep elsewhere\nclass Splitter {\n    constructor() {\n        this.getKeysForEventDefs = memoize(this._getKeysForEventDefs);\n        this.splitDateSelection = memoize(this._splitDateSpan);\n        this.splitEventStore = memoize(this._splitEventStore);\n        this.splitIndividualUi = memoize(this._splitIndividualUi);\n        this.splitEventDrag = memoize(this._splitInteraction);\n        this.splitEventResize = memoize(this._splitInteraction);\n        this.eventUiBuilders = {}; // TODO: typescript protection\n    }\n    splitProps(props) {\n        let keyInfos = this.getKeyInfo(props);\n        let defKeys = this.getKeysForEventDefs(props.eventStore);\n        let dateSelections = this.splitDateSelection(props.dateSelection);\n        let individualUi = this.splitIndividualUi(props.eventUiBases, defKeys); // the individual *bases*\n        let eventStores = this.splitEventStore(props.eventStore, defKeys);\n        let eventDrags = this.splitEventDrag(props.eventDrag);\n        let eventResizes = this.splitEventResize(props.eventResize);\n        let splitProps = {};\n        this.eventUiBuilders = mapHash(keyInfos, (info, key) => this.eventUiBuilders[key] || memoize(buildEventUiForKey));\n        for (let key in keyInfos) {\n            let keyInfo = keyInfos[key];\n            let eventStore = eventStores[key] || EMPTY_EVENT_STORE;\n            let buildEventUi = this.eventUiBuilders[key];\n            splitProps[key] = {\n                businessHours: keyInfo.businessHours || props.businessHours,\n                dateSelection: dateSelections[key] || null,\n                eventStore,\n                eventUiBases: buildEventUi(props.eventUiBases[''], keyInfo.ui, individualUi[key]),\n                eventSelection: eventStore.instances[props.eventSelection] ? props.eventSelection : '',\n                eventDrag: eventDrags[key] || null,\n                eventResize: eventResizes[key] || null,\n            };\n        }\n        return splitProps;\n    }\n    _splitDateSpan(dateSpan) {\n        let dateSpans = {};\n        if (dateSpan) {\n            let keys = this.getKeysForDateSpan(dateSpan);\n            for (let key of keys) {\n                dateSpans[key] = dateSpan;\n            }\n        }\n        return dateSpans;\n    }\n    _getKeysForEventDefs(eventStore) {\n        return mapHash(eventStore.defs, (eventDef) => this.getKeysForEventDef(eventDef));\n    }\n    _splitEventStore(eventStore, defKeys) {\n        let { defs, instances } = eventStore;\n        let splitStores = {};\n        for (let defId in defs) {\n            for (let key of defKeys[defId]) {\n                if (!splitStores[key]) {\n                    splitStores[key] = createEmptyEventStore();\n                }\n                splitStores[key].defs[defId] = defs[defId];\n            }\n        }\n        for (let instanceId in instances) {\n            let instance = instances[instanceId];\n            for (let key of defKeys[instance.defId]) {\n                if (splitStores[key]) { // must have already been created\n                    splitStores[key].instances[instanceId] = instance;\n                }\n            }\n        }\n        return splitStores;\n    }\n    _splitIndividualUi(eventUiBases, defKeys) {\n        let splitHashes = {};\n        for (let defId in eventUiBases) {\n            if (defId) { // not the '' key\n                for (let key of defKeys[defId]) {\n                    if (!splitHashes[key]) {\n                        splitHashes[key] = {};\n                    }\n                    splitHashes[key][defId] = eventUiBases[defId];\n                }\n            }\n        }\n        return splitHashes;\n    }\n    _splitInteraction(interaction) {\n        let splitStates = {};\n        if (interaction) {\n            let affectedStores = this._splitEventStore(interaction.affectedEvents, this._getKeysForEventDefs(interaction.affectedEvents));\n            // can't rely on defKeys because event data is mutated\n            let mutatedKeysByDefId = this._getKeysForEventDefs(interaction.mutatedEvents);\n            let mutatedStores = this._splitEventStore(interaction.mutatedEvents, mutatedKeysByDefId);\n            let populate = (key) => {\n                if (!splitStates[key]) {\n                    splitStates[key] = {\n                        affectedEvents: affectedStores[key] || EMPTY_EVENT_STORE,\n                        mutatedEvents: mutatedStores[key] || EMPTY_EVENT_STORE,\n                        isEvent: interaction.isEvent,\n                    };\n                }\n            };\n            for (let key in affectedStores) {\n                populate(key);\n            }\n            for (let key in mutatedStores) {\n                populate(key);\n            }\n        }\n        return splitStates;\n    }\n}\nfunction buildEventUiForKey(allUi, eventUiForKey, individualUi) {\n    let baseParts = [];\n    if (allUi) {\n        baseParts.push(allUi);\n    }\n    if (eventUiForKey) {\n        baseParts.push(eventUiForKey);\n    }\n    let stuff = {\n        '': combineEventUis(baseParts),\n    };\n    if (individualUi) {\n        Object.assign(stuff, individualUi);\n    }\n    return stuff;\n}\n\nfunction getDateMeta(date, todayRange, nowDate, dateProfile) {\n    return {\n        dow: date.getUTCDay(),\n        isDisabled: Boolean(dateProfile && !rangeContainsMarker(dateProfile.activeRange, date)),\n        isOther: Boolean(dateProfile && !rangeContainsMarker(dateProfile.currentRange, date)),\n        isToday: Boolean(todayRange && rangeContainsMarker(todayRange, date)),\n        isPast: Boolean(nowDate ? (date < nowDate) : todayRange ? (date < todayRange.start) : false),\n        isFuture: Boolean(nowDate ? (date > nowDate) : todayRange ? (date >= todayRange.end) : false),\n    };\n}\nfunction getDayClassNames(meta, theme) {\n    let classNames = [\n        'fc-day',\n        `fc-day-${DAY_IDS[meta.dow]}`,\n    ];\n    if (meta.isDisabled) {\n        classNames.push('fc-day-disabled');\n    }\n    else {\n        if (meta.isToday) {\n            classNames.push('fc-day-today');\n            classNames.push(theme.getClass('today'));\n        }\n        if (meta.isPast) {\n            classNames.push('fc-day-past');\n        }\n        if (meta.isFuture) {\n            classNames.push('fc-day-future');\n        }\n        if (meta.isOther) {\n            classNames.push('fc-day-other');\n        }\n    }\n    return classNames;\n}\nfunction getSlotClassNames(meta, theme) {\n    let classNames = [\n        'fc-slot',\n        `fc-slot-${DAY_IDS[meta.dow]}`,\n    ];\n    if (meta.isDisabled) {\n        classNames.push('fc-slot-disabled');\n    }\n    else {\n        if (meta.isToday) {\n            classNames.push('fc-slot-today');\n            classNames.push(theme.getClass('today'));\n        }\n        if (meta.isPast) {\n            classNames.push('fc-slot-past');\n        }\n        if (meta.isFuture) {\n            classNames.push('fc-slot-future');\n        }\n    }\n    return classNames;\n}\n\nconst DAY_FORMAT = createFormatter({ year: 'numeric', month: 'long', day: 'numeric' });\nconst WEEK_FORMAT = createFormatter({ week: 'long' });\nfunction buildNavLinkAttrs(context, dateMarker, viewType = 'day', isTabbable = true) {\n    const { dateEnv, options, calendarApi } = context;\n    let dateStr = dateEnv.format(dateMarker, viewType === 'week' ? WEEK_FORMAT : DAY_FORMAT);\n    if (options.navLinks) {\n        let zonedDate = dateEnv.toDate(dateMarker);\n        const handleInteraction = (ev) => {\n            let customAction = viewType === 'day' ? options.navLinkDayClick :\n                viewType === 'week' ? options.navLinkWeekClick : null;\n            if (typeof customAction === 'function') {\n                customAction.call(calendarApi, dateEnv.toDate(dateMarker), ev);\n            }\n            else {\n                if (typeof customAction === 'string') {\n                    viewType = customAction;\n                }\n                calendarApi.zoomTo(dateMarker, viewType);\n            }\n        };\n        return Object.assign({ title: formatWithOrdinals(options.navLinkHint, [dateStr, zonedDate], dateStr), 'data-navlink': '' }, (isTabbable\n            ? createAriaClickAttrs(handleInteraction)\n            : { onClick: handleInteraction }));\n    }\n    return { 'aria-label': dateStr };\n}\n\nlet _isRtlScrollbarOnLeft = null;\nfunction getIsRtlScrollbarOnLeft() {\n    if (_isRtlScrollbarOnLeft === null) {\n        _isRtlScrollbarOnLeft = computeIsRtlScrollbarOnLeft();\n    }\n    return _isRtlScrollbarOnLeft;\n}\nfunction computeIsRtlScrollbarOnLeft() {\n    let outerEl = document.createElement('div');\n    applyStyle(outerEl, {\n        position: 'absolute',\n        top: -1000,\n        left: 0,\n        border: 0,\n        padding: 0,\n        overflow: 'scroll',\n        direction: 'rtl',\n    });\n    outerEl.innerHTML = '<div></div>';\n    document.body.appendChild(outerEl);\n    let innerEl = outerEl.firstChild;\n    let res = innerEl.getBoundingClientRect().left > outerEl.getBoundingClientRect().left;\n    removeElement(outerEl);\n    return res;\n}\n\nlet _scrollbarWidths;\nfunction getScrollbarWidths() {\n    if (!_scrollbarWidths) {\n        _scrollbarWidths = computeScrollbarWidths();\n    }\n    return _scrollbarWidths;\n}\nfunction computeScrollbarWidths() {\n    let el = document.createElement('div');\n    el.style.overflow = 'scroll';\n    el.style.position = 'absolute';\n    el.style.top = '-9999px';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    let res = computeScrollbarWidthsForEl(el);\n    document.body.removeChild(el);\n    return res;\n}\n// WARNING: will include border\nfunction computeScrollbarWidthsForEl(el) {\n    return {\n        x: el.offsetHeight - el.clientHeight,\n        y: el.offsetWidth - el.clientWidth,\n    };\n}\n\nfunction computeEdges(el, getPadding = false) {\n    let computedStyle = window.getComputedStyle(el);\n    let borderLeft = parseInt(computedStyle.borderLeftWidth, 10) || 0;\n    let borderRight = parseInt(computedStyle.borderRightWidth, 10) || 0;\n    let borderTop = parseInt(computedStyle.borderTopWidth, 10) || 0;\n    let borderBottom = parseInt(computedStyle.borderBottomWidth, 10) || 0;\n    let badScrollbarWidths = computeScrollbarWidthsForEl(el); // includes border!\n    let scrollbarLeftRight = badScrollbarWidths.y - borderLeft - borderRight;\n    let scrollbarBottom = badScrollbarWidths.x - borderTop - borderBottom;\n    let res = {\n        borderLeft,\n        borderRight,\n        borderTop,\n        borderBottom,\n        scrollbarBottom,\n        scrollbarLeft: 0,\n        scrollbarRight: 0,\n    };\n    if (getIsRtlScrollbarOnLeft() && computedStyle.direction === 'rtl') { // is the scrollbar on the left side?\n        res.scrollbarLeft = scrollbarLeftRight;\n    }\n    else {\n        res.scrollbarRight = scrollbarLeftRight;\n    }\n    if (getPadding) {\n        res.paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0;\n        res.paddingRight = parseInt(computedStyle.paddingRight, 10) || 0;\n        res.paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;\n        res.paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;\n    }\n    return res;\n}\nfunction computeInnerRect(el, goWithinPadding = false, doFromWindowViewport) {\n    let outerRect = doFromWindowViewport ? el.getBoundingClientRect() : computeRect(el);\n    let edges = computeEdges(el, goWithinPadding);\n    let res = {\n        left: outerRect.left + edges.borderLeft + edges.scrollbarLeft,\n        right: outerRect.right - edges.borderRight - edges.scrollbarRight,\n        top: outerRect.top + edges.borderTop,\n        bottom: outerRect.bottom - edges.borderBottom - edges.scrollbarBottom,\n    };\n    if (goWithinPadding) {\n        res.left += edges.paddingLeft;\n        res.right -= edges.paddingRight;\n        res.top += edges.paddingTop;\n        res.bottom -= edges.paddingBottom;\n    }\n    return res;\n}\nfunction computeRect(el) {\n    let rect = el.getBoundingClientRect();\n    return {\n        left: rect.left + window.pageXOffset,\n        top: rect.top + window.pageYOffset,\n        right: rect.right + window.pageXOffset,\n        bottom: rect.bottom + window.pageYOffset,\n    };\n}\nfunction computeClippedClientRect(el) {\n    let clippingParents = getClippingParents(el);\n    let rect = el.getBoundingClientRect();\n    for (let clippingParent of clippingParents) {\n        let intersection = intersectRects(rect, clippingParent.getBoundingClientRect());\n        if (intersection) {\n            rect = intersection;\n        }\n        else {\n            return null;\n        }\n    }\n    return rect;\n}\n// does not return window\nfunction getClippingParents(el) {\n    let parents = [];\n    while (el instanceof HTMLElement) { // will stop when gets to document or null\n        let computedStyle = window.getComputedStyle(el);\n        if (computedStyle.position === 'fixed') {\n            break;\n        }\n        if ((/(auto|scroll)/).test(computedStyle.overflow + computedStyle.overflowY + computedStyle.overflowX)) {\n            parents.push(el);\n        }\n        el = el.parentNode;\n    }\n    return parents;\n}\n\n/*\nRecords offset information for a set of elements, relative to an origin element.\nCan record the left/right OR the top/bottom OR both.\nProvides methods for querying the cache by position.\n*/\nclass PositionCache {\n    constructor(originEl, els, isHorizontal, isVertical) {\n        this.els = els;\n        let originClientRect = this.originClientRect = originEl.getBoundingClientRect(); // relative to viewport top-left\n        if (isHorizontal) {\n            this.buildElHorizontals(originClientRect.left);\n        }\n        if (isVertical) {\n            this.buildElVerticals(originClientRect.top);\n        }\n    }\n    // Populates the left/right internal coordinate arrays\n    buildElHorizontals(originClientLeft) {\n        let lefts = [];\n        let rights = [];\n        for (let el of this.els) {\n            let rect = el.getBoundingClientRect();\n            lefts.push(rect.left - originClientLeft);\n            rights.push(rect.right - originClientLeft);\n        }\n        this.lefts = lefts;\n        this.rights = rights;\n    }\n    // Populates the top/bottom internal coordinate arrays\n    buildElVerticals(originClientTop) {\n        let tops = [];\n        let bottoms = [];\n        for (let el of this.els) {\n            let rect = el.getBoundingClientRect();\n            tops.push(rect.top - originClientTop);\n            bottoms.push(rect.bottom - originClientTop);\n        }\n        this.tops = tops;\n        this.bottoms = bottoms;\n    }\n    // Given a left offset (from document left), returns the index of the el that it horizontally intersects.\n    // If no intersection is made, returns undefined.\n    leftToIndex(leftPosition) {\n        let { lefts, rights } = this;\n        let len = lefts.length;\n        let i;\n        for (i = 0; i < len; i += 1) {\n            if (leftPosition >= lefts[i] && leftPosition < rights[i]) {\n                return i;\n            }\n        }\n        return undefined; // TODO: better\n    }\n    // Given a top offset (from document top), returns the index of the el that it vertically intersects.\n    // If no intersection is made, returns undefined.\n    topToIndex(topPosition) {\n        let { tops, bottoms } = this;\n        let len = tops.length;\n        let i;\n        for (i = 0; i < len; i += 1) {\n            if (topPosition >= tops[i] && topPosition < bottoms[i]) {\n                return i;\n            }\n        }\n        return undefined; // TODO: better\n    }\n    // Gets the width of the element at the given index\n    getWidth(leftIndex) {\n        return this.rights[leftIndex] - this.lefts[leftIndex];\n    }\n    // Gets the height of the element at the given index\n    getHeight(topIndex) {\n        return this.bottoms[topIndex] - this.tops[topIndex];\n    }\n    similarTo(otherCache) {\n        return similarNumArrays(this.tops || [], otherCache.tops || []) &&\n            similarNumArrays(this.bottoms || [], otherCache.bottoms || []) &&\n            similarNumArrays(this.lefts || [], otherCache.lefts || []) &&\n            similarNumArrays(this.rights || [], otherCache.rights || []);\n    }\n}\nfunction similarNumArrays(a, b) {\n    const len = a.length;\n    if (len !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < len; i++) {\n        if (Math.round(a[i]) !== Math.round(b[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/* eslint max-classes-per-file: \"off\" */\n/*\nAn object for getting/setting scroll-related information for an element.\nInternally, this is done very differently for window versus DOM element,\nso this object serves as a common interface.\n*/\nclass ScrollController {\n    getMaxScrollTop() {\n        return this.getScrollHeight() - this.getClientHeight();\n    }\n    getMaxScrollLeft() {\n        return this.getScrollWidth() - this.getClientWidth();\n    }\n    canScrollVertically() {\n        return this.getMaxScrollTop() > 0;\n    }\n    canScrollHorizontally() {\n        return this.getMaxScrollLeft() > 0;\n    }\n    canScrollUp() {\n        return this.getScrollTop() > 0;\n    }\n    canScrollDown() {\n        return this.getScrollTop() < this.getMaxScrollTop();\n    }\n    canScrollLeft() {\n        return this.getScrollLeft() > 0;\n    }\n    canScrollRight() {\n        return this.getScrollLeft() < this.getMaxScrollLeft();\n    }\n}\nclass ElementScrollController extends ScrollController {\n    constructor(el) {\n        super();\n        this.el = el;\n    }\n    getScrollTop() {\n        return this.el.scrollTop;\n    }\n    getScrollLeft() {\n        return this.el.scrollLeft;\n    }\n    setScrollTop(top) {\n        this.el.scrollTop = top;\n    }\n    setScrollLeft(left) {\n        this.el.scrollLeft = left;\n    }\n    getScrollWidth() {\n        return this.el.scrollWidth;\n    }\n    getScrollHeight() {\n        return this.el.scrollHeight;\n    }\n    getClientHeight() {\n        return this.el.clientHeight;\n    }\n    getClientWidth() {\n        return this.el.clientWidth;\n    }\n}\nclass WindowScrollController extends ScrollController {\n    getScrollTop() {\n        return window.pageYOffset;\n    }\n    getScrollLeft() {\n        return window.pageXOffset;\n    }\n    setScrollTop(n) {\n        window.scroll(window.pageXOffset, n);\n    }\n    setScrollLeft(n) {\n        window.scroll(n, window.pageYOffset);\n    }\n    getScrollWidth() {\n        return document.documentElement.scrollWidth;\n    }\n    getScrollHeight() {\n        return document.documentElement.scrollHeight;\n    }\n    getClientHeight() {\n        return document.documentElement.clientHeight;\n    }\n    getClientWidth() {\n        return document.documentElement.clientWidth;\n    }\n}\n\n/*\nan INTERACTABLE date component\n\nPURPOSES:\n- hook up to fg, fill, and mirror renderers\n- interface for dragging and hits\n*/\nclass DateComponent extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.uid = guid();\n    }\n    // Hit System\n    // -----------------------------------------------------------------------------------------------------------------\n    prepareHits() {\n    }\n    queryHit(positionLeft, positionTop, elWidth, elHeight) {\n        return null; // this should be abstract\n    }\n    // Pointer Interaction Utils\n    // -----------------------------------------------------------------------------------------------------------------\n    isValidSegDownEl(el) {\n        return !this.props.eventDrag && // HACK\n            !this.props.eventResize && // HACK\n            !elementClosest(el, '.fc-event-mirror');\n    }\n    isValidDateDownEl(el) {\n        return !elementClosest(el, '.fc-event:not(.fc-bg-event)') &&\n            !elementClosest(el, '.fc-more-link') && // a \"more..\" link\n            !elementClosest(el, 'a[data-navlink]') && // a clickable nav link\n            !elementClosest(el, '.fc-popover'); // hack\n    }\n}\n\nclass NamedTimeZoneImpl {\n    constructor(timeZoneName) {\n        this.timeZoneName = timeZoneName;\n    }\n}\n\nclass SegHierarchy {\n    constructor(getEntryThickness = (entry) => {\n        // should return an integer\n        return entry.thickness;\n    }) {\n        this.getEntryThickness = getEntryThickness;\n        // settings\n        this.strictOrder = false;\n        this.allowReslicing = false;\n        this.maxCoord = -1; // -1 means no max\n        this.maxStackCnt = -1; // -1 means no max\n        this.levelCoords = []; // ordered\n        this.entriesByLevel = []; // parallel with levelCoords\n        this.stackCnts = {}; // TODO: use better technique!?\n    }\n    addSegs(inputs) {\n        let hiddenEntries = [];\n        for (let input of inputs) {\n            this.insertEntry(input, hiddenEntries);\n        }\n        return hiddenEntries;\n    }\n    insertEntry(entry, hiddenEntries) {\n        let insertion = this.findInsertion(entry);\n        if (this.isInsertionValid(insertion, entry)) {\n            this.insertEntryAt(entry, insertion);\n            return 1;\n        }\n        return this.handleInvalidInsertion(insertion, entry, hiddenEntries);\n    }\n    isInsertionValid(insertion, entry) {\n        return (this.maxCoord === -1 || insertion.levelCoord + this.getEntryThickness(entry) <= this.maxCoord) &&\n            (this.maxStackCnt === -1 || insertion.stackCnt < this.maxStackCnt);\n    }\n    // returns number of new entries inserted\n    handleInvalidInsertion(insertion, entry, hiddenEntries) {\n        if (this.allowReslicing && insertion.touchingEntry) {\n            return this.splitEntry(entry, insertion.touchingEntry, hiddenEntries);\n        }\n        hiddenEntries.push(entry);\n        return 0;\n    }\n    splitEntry(entry, barrier, hiddenEntries) {\n        let partCnt = 0;\n        let splitHiddenEntries = [];\n        let entrySpan = entry.span;\n        let barrierSpan = barrier.span;\n        if (entrySpan.start < barrierSpan.start) {\n            partCnt += this.insertEntry({\n                index: entry.index,\n                thickness: entry.thickness,\n                span: { start: entrySpan.start, end: barrierSpan.start },\n            }, splitHiddenEntries);\n        }\n        if (entrySpan.end > barrierSpan.end) {\n            partCnt += this.insertEntry({\n                index: entry.index,\n                thickness: entry.thickness,\n                span: { start: barrierSpan.end, end: entrySpan.end },\n            }, splitHiddenEntries);\n        }\n        if (partCnt) {\n            hiddenEntries.push({\n                index: entry.index,\n                thickness: entry.thickness,\n                span: intersectSpans(barrierSpan, entrySpan), // guaranteed to intersect\n            }, ...splitHiddenEntries);\n            return partCnt;\n        }\n        hiddenEntries.push(entry);\n        return 0;\n    }\n    insertEntryAt(entry, insertion) {\n        let { entriesByLevel, levelCoords } = this;\n        if (insertion.lateral === -1) {\n            // create a new level\n            insertAt(levelCoords, insertion.level, insertion.levelCoord);\n            insertAt(entriesByLevel, insertion.level, [entry]);\n        }\n        else {\n            // insert into existing level\n            insertAt(entriesByLevel[insertion.level], insertion.lateral, entry);\n        }\n        this.stackCnts[buildEntryKey(entry)] = insertion.stackCnt;\n    }\n    findInsertion(newEntry) {\n        let { levelCoords, entriesByLevel, strictOrder, stackCnts } = this;\n        let levelCnt = levelCoords.length;\n        let candidateCoord = 0;\n        let touchingLevel = -1;\n        let touchingLateral = -1;\n        let touchingEntry = null;\n        let stackCnt = 0;\n        for (let trackingLevel = 0; trackingLevel < levelCnt; trackingLevel += 1) {\n            let trackingCoord = levelCoords[trackingLevel];\n            // if the current level is past the placed entry, we have found a good empty space and can stop.\n            // if strictOrder, keep finding more lateral intersections.\n            if (!strictOrder && trackingCoord >= candidateCoord + this.getEntryThickness(newEntry)) {\n                break;\n            }\n            let trackingEntries = entriesByLevel[trackingLevel];\n            let trackingEntry;\n            let searchRes = binarySearch(trackingEntries, newEntry.span.start, getEntrySpanEnd); // find first entry after newEntry's end\n            let lateralIndex = searchRes[0] + searchRes[1]; // if exact match (which doesn't collide), go to next one\n            while ( // loop through entries that horizontally intersect\n            (trackingEntry = trackingEntries[lateralIndex]) && // but not past the whole entry list\n                trackingEntry.span.start < newEntry.span.end // and not entirely past newEntry\n            ) {\n                let trackingEntryBottom = trackingCoord + this.getEntryThickness(trackingEntry);\n                // intersects into the top of the candidate?\n                if (trackingEntryBottom > candidateCoord) {\n                    candidateCoord = trackingEntryBottom;\n                    touchingEntry = trackingEntry;\n                    touchingLevel = trackingLevel;\n                    touchingLateral = lateralIndex;\n                }\n                // butts up against top of candidate? (will happen if just intersected as well)\n                if (trackingEntryBottom === candidateCoord) {\n                    // accumulate the highest possible stackCnt of the trackingEntries that butt up\n                    stackCnt = Math.max(stackCnt, stackCnts[buildEntryKey(trackingEntry)] + 1);\n                }\n                lateralIndex += 1;\n            }\n        }\n        // the destination level will be after touchingEntry's level. find it\n        let destLevel = 0;\n        if (touchingEntry) {\n            destLevel = touchingLevel + 1;\n            while (destLevel < levelCnt && levelCoords[destLevel] < candidateCoord) {\n                destLevel += 1;\n            }\n        }\n        // if adding to an existing level, find where to insert\n        let destLateral = -1;\n        if (destLevel < levelCnt && levelCoords[destLevel] === candidateCoord) {\n            destLateral = binarySearch(entriesByLevel[destLevel], newEntry.span.end, getEntrySpanEnd)[0];\n        }\n        return {\n            touchingLevel,\n            touchingLateral,\n            touchingEntry,\n            stackCnt,\n            levelCoord: candidateCoord,\n            level: destLevel,\n            lateral: destLateral,\n        };\n    }\n    // sorted by levelCoord (lowest to highest)\n    toRects() {\n        let { entriesByLevel, levelCoords } = this;\n        let levelCnt = entriesByLevel.length;\n        let rects = [];\n        for (let level = 0; level < levelCnt; level += 1) {\n            let entries = entriesByLevel[level];\n            let levelCoord = levelCoords[level];\n            for (let entry of entries) {\n                rects.push(Object.assign(Object.assign({}, entry), { thickness: this.getEntryThickness(entry), levelCoord }));\n            }\n        }\n        return rects;\n    }\n}\nfunction getEntrySpanEnd(entry) {\n    return entry.span.end;\n}\nfunction buildEntryKey(entry) {\n    return entry.index + ':' + entry.span.start;\n}\n// returns groups with entries sorted by input order\nfunction groupIntersectingEntries(entries) {\n    let merges = [];\n    for (let entry of entries) {\n        let filteredMerges = [];\n        let hungryMerge = {\n            span: entry.span,\n            entries: [entry],\n        };\n        for (let merge of merges) {\n            if (intersectSpans(merge.span, hungryMerge.span)) {\n                hungryMerge = {\n                    entries: merge.entries.concat(hungryMerge.entries),\n                    span: joinSpans(merge.span, hungryMerge.span),\n                };\n            }\n            else {\n                filteredMerges.push(merge);\n            }\n        }\n        filteredMerges.push(hungryMerge);\n        merges = filteredMerges;\n    }\n    return merges;\n}\nfunction joinSpans(span0, span1) {\n    return {\n        start: Math.min(span0.start, span1.start),\n        end: Math.max(span0.end, span1.end),\n    };\n}\nfunction intersectSpans(span0, span1) {\n    let start = Math.max(span0.start, span1.start);\n    let end = Math.min(span0.end, span1.end);\n    if (start < end) {\n        return { start, end };\n    }\n    return null;\n}\n// general util\n// ---------------------------------------------------------------------------------------------------------------------\nfunction insertAt(arr, index, item) {\n    arr.splice(index, 0, item);\n}\nfunction binarySearch(a, searchVal, getItemVal) {\n    let startIndex = 0;\n    let endIndex = a.length; // exclusive\n    if (!endIndex || searchVal < getItemVal(a[startIndex])) { // no items OR before first item\n        return [0, 0];\n    }\n    if (searchVal > getItemVal(a[endIndex - 1])) { // after last item\n        return [endIndex, 0];\n    }\n    while (startIndex < endIndex) {\n        let middleIndex = Math.floor(startIndex + (endIndex - startIndex) / 2);\n        let middleVal = getItemVal(a[middleIndex]);\n        if (searchVal < middleVal) {\n            endIndex = middleIndex;\n        }\n        else if (searchVal > middleVal) {\n            startIndex = middleIndex + 1;\n        }\n        else { // equal!\n            return [middleIndex, 1];\n        }\n    }\n    return [startIndex, 0];\n}\n\n/*\nAn abstraction for a dragging interaction originating on an event.\nDoes higher-level things than PointerDragger, such as possibly:\n- a \"mirror\" that moves with the pointer\n- a minimum number of pixels or other criteria for a true drag to begin\n\nsubclasses must emit:\n- pointerdown\n- dragstart\n- dragmove\n- pointerup\n- dragend\n*/\nclass ElementDragging {\n    constructor(el, selector) {\n        this.emitter = new Emitter();\n    }\n    destroy() {\n    }\n    setMirrorIsVisible(bool) {\n        // optional if subclass doesn't want to support a mirror\n    }\n    setMirrorNeedsRevert(bool) {\n        // optional if subclass doesn't want to support a mirror\n    }\n    setAutoScrollEnabled(bool) {\n        // optional\n    }\n}\n\n// TODO: get rid of this in favor of options system,\n// tho it's really easy to access this globally rather than pass thru options.\nconst config = {};\n\n/*\nInformation about what will happen when an external element is dragged-and-dropped\nonto a calendar. Contains information for creating an event.\n*/\nconst DRAG_META_REFINERS = {\n    startTime: createDuration,\n    duration: createDuration,\n    create: Boolean,\n    sourceId: String,\n};\nfunction parseDragMeta(raw) {\n    let { refined, extra } = refineProps(raw, DRAG_META_REFINERS);\n    return {\n        startTime: refined.startTime || null,\n        duration: refined.duration || null,\n        create: refined.create != null ? refined.create : true,\n        sourceId: refined.sourceId,\n        leftoverProps: extra,\n    };\n}\n\n// Computes a default column header formatting string if `colFormat` is not explicitly defined\nfunction computeFallbackHeaderFormat(datesRepDistinctDays, dayCnt) {\n    // if more than one week row, or if there are a lot of columns with not much space,\n    // put just the day numbers will be in each cell\n    if (!datesRepDistinctDays || dayCnt > 10) {\n        return createFormatter({ weekday: 'short' }); // \"Sat\"\n    }\n    if (dayCnt > 1) {\n        return createFormatter({ weekday: 'short', month: 'numeric', day: 'numeric', omitCommas: true }); // \"Sat 11/12\"\n    }\n    return createFormatter({ weekday: 'long' }); // \"Saturday\"\n}\n\nconst CLASS_NAME = 'fc-col-header-cell'; // do the cushion too? no\nfunction renderInner$1(renderProps) {\n    return renderProps.text;\n}\n\n// BAD name for this class now. used in the Header\nclass TableDateCell extends BaseComponent {\n    render() {\n        let { dateEnv, options, theme, viewApi } = this.context;\n        let { props } = this;\n        let { date, dateProfile } = props;\n        let dayMeta = getDateMeta(date, props.todayRange, null, dateProfile);\n        let classNames = [CLASS_NAME].concat(getDayClassNames(dayMeta, theme));\n        let text = dateEnv.format(date, props.dayHeaderFormat);\n        // if colCnt is 1, we are already in a day-view and don't need a navlink\n        let navLinkAttrs = (!dayMeta.isDisabled && props.colCnt > 1)\n            ? buildNavLinkAttrs(this.context, date)\n            : {};\n        let renderProps = Object.assign(Object.assign(Object.assign({ date: dateEnv.toDate(date), view: viewApi }, props.extraRenderProps), { text }), dayMeta);\n        return (createElement(ContentContainer, { elTag: \"th\", elClasses: classNames, elAttrs: Object.assign({ role: 'columnheader', colSpan: props.colSpan, 'data-date': !dayMeta.isDisabled ? formatDayString(date) : undefined }, props.extraDataAttrs), renderProps: renderProps, generatorName: \"dayHeaderContent\", customGenerator: options.dayHeaderContent, defaultGenerator: renderInner$1, classNameGenerator: options.dayHeaderClassNames, didMount: options.dayHeaderDidMount, willUnmount: options.dayHeaderWillUnmount }, (InnerContainer) => (createElement(\"div\", { className: \"fc-scrollgrid-sync-inner\" }, !dayMeta.isDisabled && (createElement(InnerContainer, { elTag: \"a\", elAttrs: navLinkAttrs, elClasses: [\n                'fc-col-header-cell-cushion',\n                props.isSticky && 'fc-sticky',\n            ] }))))));\n    }\n}\n\nconst WEEKDAY_FORMAT = createFormatter({ weekday: 'long' });\nclass TableDowCell extends BaseComponent {\n    render() {\n        let { props } = this;\n        let { dateEnv, theme, viewApi, options } = this.context;\n        let date = addDays(new Date(259200000), props.dow); // start with Sun, 04 Jan 1970 00:00:00 GMT\n        let dateMeta = {\n            dow: props.dow,\n            isDisabled: false,\n            isFuture: false,\n            isPast: false,\n            isToday: false,\n            isOther: false,\n        };\n        let text = dateEnv.format(date, props.dayHeaderFormat);\n        let renderProps = Object.assign(Object.assign(Object.assign(Object.assign({ // TODO: make this public?\n            date }, dateMeta), { view: viewApi }), props.extraRenderProps), { text });\n        return (createElement(ContentContainer, { elTag: \"th\", elClasses: [\n                CLASS_NAME,\n                ...getDayClassNames(dateMeta, theme),\n                ...(props.extraClassNames || []),\n            ], elAttrs: Object.assign({ role: 'columnheader', colSpan: props.colSpan }, props.extraDataAttrs), renderProps: renderProps, generatorName: \"dayHeaderContent\", customGenerator: options.dayHeaderContent, defaultGenerator: renderInner$1, classNameGenerator: options.dayHeaderClassNames, didMount: options.dayHeaderDidMount, willUnmount: options.dayHeaderWillUnmount }, (InnerContent) => (createElement(\"div\", { className: \"fc-scrollgrid-sync-inner\" },\n            createElement(InnerContent, { elTag: \"a\", elClasses: [\n                    'fc-col-header-cell-cushion',\n                    props.isSticky && 'fc-sticky',\n                ], elAttrs: {\n                    'aria-label': dateEnv.format(date, WEEKDAY_FORMAT),\n                } })))));\n    }\n}\n\nclass NowTimer extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.initialNowDate = getNow(context.options.now, context.dateEnv);\n        this.initialNowQueriedMs = new Date().valueOf();\n        this.state = this.computeTiming().currentState;\n    }\n    render() {\n        let { props, state } = this;\n        return props.children(state.nowDate, state.todayRange);\n    }\n    componentDidMount() {\n        this.setTimeout();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.unit !== this.props.unit) {\n            this.clearTimeout();\n            this.setTimeout();\n        }\n    }\n    componentWillUnmount() {\n        this.clearTimeout();\n    }\n    computeTiming() {\n        let { props, context } = this;\n        let unroundedNow = addMs(this.initialNowDate, new Date().valueOf() - this.initialNowQueriedMs);\n        let currentUnitStart = context.dateEnv.startOf(unroundedNow, props.unit);\n        let nextUnitStart = context.dateEnv.add(currentUnitStart, createDuration(1, props.unit));\n        let waitMs = nextUnitStart.valueOf() - unroundedNow.valueOf();\n        // there is a max setTimeout ms value (https://stackoverflow.com/a/3468650/96342)\n        // ensure no longer than a day\n        waitMs = Math.min(1000 * 60 * 60 * 24, waitMs);\n        return {\n            currentState: { nowDate: currentUnitStart, todayRange: buildDayRange(currentUnitStart) },\n            nextState: { nowDate: nextUnitStart, todayRange: buildDayRange(nextUnitStart) },\n            waitMs,\n        };\n    }\n    setTimeout() {\n        let { nextState, waitMs } = this.computeTiming();\n        this.timeoutId = setTimeout(() => {\n            this.setState(nextState, () => {\n                this.setTimeout();\n            });\n        }, waitMs);\n    }\n    clearTimeout() {\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n        }\n    }\n}\nNowTimer.contextType = ViewContextType;\nfunction buildDayRange(date) {\n    let start = startOfDay(date);\n    let end = addDays(start, 1);\n    return { start, end };\n}\n\nclass DayHeader extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.createDayHeaderFormatter = memoize(createDayHeaderFormatter);\n    }\n    render() {\n        let { context } = this;\n        let { dates, dateProfile, datesRepDistinctDays, renderIntro } = this.props;\n        let dayHeaderFormat = this.createDayHeaderFormatter(context.options.dayHeaderFormat, datesRepDistinctDays, dates.length);\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => (createElement(\"tr\", { role: \"row\" },\n            renderIntro && renderIntro('day'),\n            dates.map((date) => (datesRepDistinctDays ? (createElement(TableDateCell, { key: date.toISOString(), date: date, dateProfile: dateProfile, todayRange: todayRange, colCnt: dates.length, dayHeaderFormat: dayHeaderFormat })) : (createElement(TableDowCell, { key: date.getUTCDay(), dow: date.getUTCDay(), dayHeaderFormat: dayHeaderFormat }))))))));\n    }\n}\nfunction createDayHeaderFormatter(explicitFormat, datesRepDistinctDays, dateCnt) {\n    return explicitFormat || computeFallbackHeaderFormat(datesRepDistinctDays, dateCnt);\n}\n\nclass DaySeriesModel {\n    constructor(range, dateProfileGenerator) {\n        let date = range.start;\n        let { end } = range;\n        let indices = [];\n        let dates = [];\n        let dayIndex = -1;\n        while (date < end) { // loop each day from start to end\n            if (dateProfileGenerator.isHiddenDay(date)) {\n                indices.push(dayIndex + 0.5); // mark that it's between indices\n            }\n            else {\n                dayIndex += 1;\n                indices.push(dayIndex);\n                dates.push(date);\n            }\n            date = addDays(date, 1);\n        }\n        this.dates = dates;\n        this.indices = indices;\n        this.cnt = dates.length;\n    }\n    sliceRange(range) {\n        let firstIndex = this.getDateDayIndex(range.start); // inclusive first index\n        let lastIndex = this.getDateDayIndex(addDays(range.end, -1)); // inclusive last index\n        let clippedFirstIndex = Math.max(0, firstIndex);\n        let clippedLastIndex = Math.min(this.cnt - 1, lastIndex);\n        // deal with in-between indices\n        clippedFirstIndex = Math.ceil(clippedFirstIndex); // in-between starts round to next cell\n        clippedLastIndex = Math.floor(clippedLastIndex); // in-between ends round to prev cell\n        if (clippedFirstIndex <= clippedLastIndex) {\n            return {\n                firstIndex: clippedFirstIndex,\n                lastIndex: clippedLastIndex,\n                isStart: firstIndex === clippedFirstIndex,\n                isEnd: lastIndex === clippedLastIndex,\n            };\n        }\n        return null;\n    }\n    // Given a date, returns its chronolocial cell-index from the first cell of the grid.\n    // If the date lies between cells (because of hiddenDays), returns a floating-point value between offsets.\n    // If before the first offset, returns a negative number.\n    // If after the last offset, returns an offset past the last cell offset.\n    // Only works for *start* dates of cells. Will not work for exclusive end dates for cells.\n    getDateDayIndex(date) {\n        let { indices } = this;\n        let dayOffset = Math.floor(diffDays(this.dates[0], date));\n        if (dayOffset < 0) {\n            return indices[0] - 1;\n        }\n        if (dayOffset >= indices.length) {\n            return indices[indices.length - 1] + 1;\n        }\n        return indices[dayOffset];\n    }\n}\n\nclass DayTableModel {\n    constructor(daySeries, breakOnWeeks) {\n        let { dates } = daySeries;\n        let daysPerRow;\n        let firstDay;\n        let rowCnt;\n        if (breakOnWeeks) {\n            // count columns until the day-of-week repeats\n            firstDay = dates[0].getUTCDay();\n            for (daysPerRow = 1; daysPerRow < dates.length; daysPerRow += 1) {\n                if (dates[daysPerRow].getUTCDay() === firstDay) {\n                    break;\n                }\n            }\n            rowCnt = Math.ceil(dates.length / daysPerRow);\n        }\n        else {\n            rowCnt = 1;\n            daysPerRow = dates.length;\n        }\n        this.rowCnt = rowCnt;\n        this.colCnt = daysPerRow;\n        this.daySeries = daySeries;\n        this.cells = this.buildCells();\n        this.headerDates = this.buildHeaderDates();\n    }\n    buildCells() {\n        let rows = [];\n        for (let row = 0; row < this.rowCnt; row += 1) {\n            let cells = [];\n            for (let col = 0; col < this.colCnt; col += 1) {\n                cells.push(this.buildCell(row, col));\n            }\n            rows.push(cells);\n        }\n        return rows;\n    }\n    buildCell(row, col) {\n        let date = this.daySeries.dates[row * this.colCnt + col];\n        return {\n            key: date.toISOString(),\n            date,\n        };\n    }\n    buildHeaderDates() {\n        let dates = [];\n        for (let col = 0; col < this.colCnt; col += 1) {\n            dates.push(this.cells[0][col].date);\n        }\n        return dates;\n    }\n    sliceRange(range) {\n        let { colCnt } = this;\n        let seriesSeg = this.daySeries.sliceRange(range);\n        let segs = [];\n        if (seriesSeg) {\n            let { firstIndex, lastIndex } = seriesSeg;\n            let index = firstIndex;\n            while (index <= lastIndex) {\n                let row = Math.floor(index / colCnt);\n                let nextIndex = Math.min((row + 1) * colCnt, lastIndex + 1);\n                segs.push({\n                    row,\n                    firstCol: index % colCnt,\n                    lastCol: (nextIndex - 1) % colCnt,\n                    isStart: seriesSeg.isStart && index === firstIndex,\n                    isEnd: seriesSeg.isEnd && (nextIndex - 1) === lastIndex,\n                });\n                index = nextIndex;\n            }\n        }\n        return segs;\n    }\n}\n\nclass Slicer {\n    constructor() {\n        this.sliceBusinessHours = memoize(this._sliceBusinessHours);\n        this.sliceDateSelection = memoize(this._sliceDateSpan);\n        this.sliceEventStore = memoize(this._sliceEventStore);\n        this.sliceEventDrag = memoize(this._sliceInteraction);\n        this.sliceEventResize = memoize(this._sliceInteraction);\n        this.forceDayIfListItem = false; // hack\n    }\n    sliceProps(props, dateProfile, nextDayThreshold, context, ...extraArgs) {\n        let { eventUiBases } = props;\n        let eventSegs = this.sliceEventStore(props.eventStore, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs);\n        return {\n            dateSelectionSegs: this.sliceDateSelection(props.dateSelection, dateProfile, nextDayThreshold, eventUiBases, context, ...extraArgs),\n            businessHourSegs: this.sliceBusinessHours(props.businessHours, dateProfile, nextDayThreshold, context, ...extraArgs),\n            fgEventSegs: eventSegs.fg,\n            bgEventSegs: eventSegs.bg,\n            eventDrag: this.sliceEventDrag(props.eventDrag, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs),\n            eventResize: this.sliceEventResize(props.eventResize, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs),\n            eventSelection: props.eventSelection,\n        }; // TODO: give interactionSegs?\n    }\n    sliceNowDate(// does not memoize\n    date, dateProfile, nextDayThreshold, context, ...extraArgs) {\n        return this._sliceDateSpan({ range: { start: date, end: addMs(date, 1) }, allDay: false }, // add 1 ms, protect against null range\n        dateProfile, nextDayThreshold, {}, context, ...extraArgs);\n    }\n    _sliceBusinessHours(businessHours, dateProfile, nextDayThreshold, context, ...extraArgs) {\n        if (!businessHours) {\n            return [];\n        }\n        return this._sliceEventStore(expandRecurring(businessHours, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), context), {}, dateProfile, nextDayThreshold, ...extraArgs).bg;\n    }\n    _sliceEventStore(eventStore, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs) {\n        if (eventStore) {\n            let rangeRes = sliceEventStore(eventStore, eventUiBases, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), nextDayThreshold);\n            return {\n                bg: this.sliceEventRanges(rangeRes.bg, extraArgs),\n                fg: this.sliceEventRanges(rangeRes.fg, extraArgs),\n            };\n        }\n        return { bg: [], fg: [] };\n    }\n    _sliceInteraction(interaction, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs) {\n        if (!interaction) {\n            return null;\n        }\n        let rangeRes = sliceEventStore(interaction.mutatedEvents, eventUiBases, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), nextDayThreshold);\n        return {\n            segs: this.sliceEventRanges(rangeRes.fg, extraArgs),\n            affectedInstances: interaction.affectedEvents.instances,\n            isEvent: interaction.isEvent,\n        };\n    }\n    _sliceDateSpan(dateSpan, dateProfile, nextDayThreshold, eventUiBases, context, ...extraArgs) {\n        if (!dateSpan) {\n            return [];\n        }\n        let activeRange = computeActiveRange(dateProfile, Boolean(nextDayThreshold));\n        let activeDateSpanRange = intersectRanges(dateSpan.range, activeRange);\n        if (activeDateSpanRange) {\n            dateSpan = Object.assign(Object.assign({}, dateSpan), { range: activeDateSpanRange });\n            let eventRange = fabricateEventRange(dateSpan, eventUiBases, context);\n            let segs = this.sliceRange(dateSpan.range, ...extraArgs);\n            for (let seg of segs) {\n                seg.eventRange = eventRange;\n            }\n            return segs;\n        }\n        return [];\n    }\n    /*\n    \"complete\" seg means it has component and eventRange\n    */\n    sliceEventRanges(eventRanges, extraArgs) {\n        let segs = [];\n        for (let eventRange of eventRanges) {\n            segs.push(...this.sliceEventRange(eventRange, extraArgs));\n        }\n        return segs;\n    }\n    /*\n    \"complete\" seg means it has component and eventRange\n    */\n    sliceEventRange(eventRange, extraArgs) {\n        let dateRange = eventRange.range;\n        // hack to make multi-day events that are being force-displayed as list-items to take up only one day\n        if (this.forceDayIfListItem && eventRange.ui.display === 'list-item') {\n            dateRange = {\n                start: dateRange.start,\n                end: addDays(dateRange.start, 1),\n            };\n        }\n        let segs = this.sliceRange(dateRange, ...extraArgs);\n        for (let seg of segs) {\n            seg.eventRange = eventRange;\n            seg.isStart = eventRange.isStart && seg.isStart;\n            seg.isEnd = eventRange.isEnd && seg.isEnd;\n        }\n        return segs;\n    }\n}\n/*\nfor incorporating slotMinTime/slotMaxTime if appropriate\nTODO: should be part of DateProfile!\nTimelineDateProfile already does this btw\n*/\nfunction computeActiveRange(dateProfile, isComponentAllDay) {\n    let range = dateProfile.activeRange;\n    if (isComponentAllDay) {\n        return range;\n    }\n    return {\n        start: addMs(range.start, dateProfile.slotMinTime.milliseconds),\n        end: addMs(range.end, dateProfile.slotMaxTime.milliseconds - 864e5), // 864e5 = ms in a day\n    };\n}\n\n// high-level segmenting-aware tester functions\n// ------------------------------------------------------------------------------------------------------------------------\nfunction isInteractionValid(interaction, dateProfile, context) {\n    let { instances } = interaction.mutatedEvents;\n    for (let instanceId in instances) {\n        if (!rangeContainsRange(dateProfile.validRange, instances[instanceId].range)) {\n            return false;\n        }\n    }\n    return isNewPropsValid({ eventDrag: interaction }, context); // HACK: the eventDrag props is used for ALL interactions\n}\nfunction isDateSelectionValid(dateSelection, dateProfile, context) {\n    if (!rangeContainsRange(dateProfile.validRange, dateSelection.range)) {\n        return false;\n    }\n    return isNewPropsValid({ dateSelection }, context);\n}\nfunction isNewPropsValid(newProps, context) {\n    let calendarState = context.getCurrentData();\n    let props = Object.assign({ businessHours: calendarState.businessHours, dateSelection: '', eventStore: calendarState.eventStore, eventUiBases: calendarState.eventUiBases, eventSelection: '', eventDrag: null, eventResize: null }, newProps);\n    return (context.pluginHooks.isPropsValid || isPropsValid)(props, context);\n}\nfunction isPropsValid(state, context, dateSpanMeta = {}, filterConfig) {\n    if (state.eventDrag && !isInteractionPropsValid(state, context, dateSpanMeta, filterConfig)) {\n        return false;\n    }\n    if (state.dateSelection && !isDateSelectionPropsValid(state, context, dateSpanMeta, filterConfig)) {\n        return false;\n    }\n    return true;\n}\n// Moving Event Validation\n// ------------------------------------------------------------------------------------------------------------------------\nfunction isInteractionPropsValid(state, context, dateSpanMeta, filterConfig) {\n    let currentState = context.getCurrentData();\n    let interaction = state.eventDrag; // HACK: the eventDrag props is used for ALL interactions\n    let subjectEventStore = interaction.mutatedEvents;\n    let subjectDefs = subjectEventStore.defs;\n    let subjectInstances = subjectEventStore.instances;\n    let subjectConfigs = compileEventUis(subjectDefs, interaction.isEvent ?\n        state.eventUiBases :\n        { '': currentState.selectionConfig });\n    if (filterConfig) {\n        subjectConfigs = mapHash(subjectConfigs, filterConfig);\n    }\n    // exclude the subject events. TODO: exclude defs too?\n    let otherEventStore = excludeInstances(state.eventStore, interaction.affectedEvents.instances);\n    let otherDefs = otherEventStore.defs;\n    let otherInstances = otherEventStore.instances;\n    let otherConfigs = compileEventUis(otherDefs, state.eventUiBases);\n    for (let subjectInstanceId in subjectInstances) {\n        let subjectInstance = subjectInstances[subjectInstanceId];\n        let subjectRange = subjectInstance.range;\n        let subjectConfig = subjectConfigs[subjectInstance.defId];\n        let subjectDef = subjectDefs[subjectInstance.defId];\n        // constraint\n        if (!allConstraintsPass(subjectConfig.constraints, subjectRange, otherEventStore, state.businessHours, context)) {\n            return false;\n        }\n        // overlap\n        let { eventOverlap } = context.options;\n        let eventOverlapFunc = typeof eventOverlap === 'function' ? eventOverlap : null;\n        for (let otherInstanceId in otherInstances) {\n            let otherInstance = otherInstances[otherInstanceId];\n            // intersect! evaluate\n            if (rangesIntersect(subjectRange, otherInstance.range)) {\n                let otherOverlap = otherConfigs[otherInstance.defId].overlap;\n                // consider the other event's overlap. only do this if the subject event is a \"real\" event\n                if (otherOverlap === false && interaction.isEvent) {\n                    return false;\n                }\n                if (subjectConfig.overlap === false) {\n                    return false;\n                }\n                if (eventOverlapFunc && !eventOverlapFunc(new EventImpl(context, otherDefs[otherInstance.defId], otherInstance), // still event\n                new EventImpl(context, subjectDef, subjectInstance))) {\n                    return false;\n                }\n            }\n        }\n        // allow (a function)\n        let calendarEventStore = currentState.eventStore; // need global-to-calendar, not local to component (splittable)state\n        for (let subjectAllow of subjectConfig.allows) {\n            let subjectDateSpan = Object.assign(Object.assign({}, dateSpanMeta), { range: subjectInstance.range, allDay: subjectDef.allDay });\n            let origDef = calendarEventStore.defs[subjectDef.defId];\n            let origInstance = calendarEventStore.instances[subjectInstanceId];\n            let eventApi;\n            if (origDef) { // was previously in the calendar\n                eventApi = new EventImpl(context, origDef, origInstance);\n            }\n            else { // was an external event\n                eventApi = new EventImpl(context, subjectDef); // no instance, because had no dates\n            }\n            if (!subjectAllow(buildDateSpanApiWithContext(subjectDateSpan, context), eventApi)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n// Date Selection Validation\n// ------------------------------------------------------------------------------------------------------------------------\nfunction isDateSelectionPropsValid(state, context, dateSpanMeta, filterConfig) {\n    let relevantEventStore = state.eventStore;\n    let relevantDefs = relevantEventStore.defs;\n    let relevantInstances = relevantEventStore.instances;\n    let selection = state.dateSelection;\n    let selectionRange = selection.range;\n    let { selectionConfig } = context.getCurrentData();\n    if (filterConfig) {\n        selectionConfig = filterConfig(selectionConfig);\n    }\n    // constraint\n    if (!allConstraintsPass(selectionConfig.constraints, selectionRange, relevantEventStore, state.businessHours, context)) {\n        return false;\n    }\n    // overlap\n    let { selectOverlap } = context.options;\n    let selectOverlapFunc = typeof selectOverlap === 'function' ? selectOverlap : null;\n    for (let relevantInstanceId in relevantInstances) {\n        let relevantInstance = relevantInstances[relevantInstanceId];\n        // intersect! evaluate\n        if (rangesIntersect(selectionRange, relevantInstance.range)) {\n            if (selectionConfig.overlap === false) {\n                return false;\n            }\n            if (selectOverlapFunc && !selectOverlapFunc(new EventImpl(context, relevantDefs[relevantInstance.defId], relevantInstance), null)) {\n                return false;\n            }\n        }\n    }\n    // allow (a function)\n    for (let selectionAllow of selectionConfig.allows) {\n        let fullDateSpan = Object.assign(Object.assign({}, dateSpanMeta), selection);\n        if (!selectionAllow(buildDateSpanApiWithContext(fullDateSpan, context), null)) {\n            return false;\n        }\n    }\n    return true;\n}\n// Constraint Utils\n// ------------------------------------------------------------------------------------------------------------------------\nfunction allConstraintsPass(constraints, subjectRange, otherEventStore, businessHoursUnexpanded, context) {\n    for (let constraint of constraints) {\n        if (!anyRangesContainRange(constraintToRanges(constraint, subjectRange, otherEventStore, businessHoursUnexpanded, context), subjectRange)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction constraintToRanges(constraint, subjectRange, // for expanding a recurring constraint, or expanding business hours\notherEventStore, // for if constraint is an even group ID\nbusinessHoursUnexpanded, // for if constraint is 'businessHours'\ncontext) {\n    if (constraint === 'businessHours') {\n        return eventStoreToRanges(expandRecurring(businessHoursUnexpanded, subjectRange, context));\n    }\n    if (typeof constraint === 'string') { // an group ID\n        return eventStoreToRanges(filterEventStoreDefs(otherEventStore, (eventDef) => eventDef.groupId === constraint));\n    }\n    if (typeof constraint === 'object' && constraint) { // non-null object\n        return eventStoreToRanges(expandRecurring(constraint, subjectRange, context));\n    }\n    return []; // if it's false\n}\n// TODO: move to event-store file?\nfunction eventStoreToRanges(eventStore) {\n    let { instances } = eventStore;\n    let ranges = [];\n    for (let instanceId in instances) {\n        ranges.push(instances[instanceId].range);\n    }\n    return ranges;\n}\n// TODO: move to geom file?\nfunction anyRangesContainRange(outerRanges, innerRange) {\n    for (let outerRange of outerRanges) {\n        if (rangeContainsRange(outerRange, innerRange)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconst VISIBLE_HIDDEN_RE = /^(visible|hidden)$/;\nclass Scroller extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.handleEl = (el) => {\n            this.el = el;\n            setRef(this.props.elRef, el);\n        };\n    }\n    render() {\n        let { props } = this;\n        let { liquid, liquidIsAbsolute } = props;\n        let isAbsolute = liquid && liquidIsAbsolute;\n        let className = ['fc-scroller'];\n        if (liquid) {\n            if (liquidIsAbsolute) {\n                className.push('fc-scroller-liquid-absolute');\n            }\n            else {\n                className.push('fc-scroller-liquid');\n            }\n        }\n        return (createElement(\"div\", { ref: this.handleEl, className: className.join(' '), style: {\n                overflowX: props.overflowX,\n                overflowY: props.overflowY,\n                left: (isAbsolute && -(props.overcomeLeft || 0)) || '',\n                right: (isAbsolute && -(props.overcomeRight || 0)) || '',\n                bottom: (isAbsolute && -(props.overcomeBottom || 0)) || '',\n                marginLeft: (!isAbsolute && -(props.overcomeLeft || 0)) || '',\n                marginRight: (!isAbsolute && -(props.overcomeRight || 0)) || '',\n                marginBottom: (!isAbsolute && -(props.overcomeBottom || 0)) || '',\n                maxHeight: props.maxHeight || '',\n            } }, props.children));\n    }\n    needsXScrolling() {\n        if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {\n            return false;\n        }\n        // testing scrollWidth>clientWidth is unreliable cross-browser when pixel heights aren't integers.\n        // much more reliable to see if children are taller than the scroller, even tho doesn't account for\n        // inner-child margins and absolute positioning\n        let { el } = this;\n        let realClientWidth = this.el.getBoundingClientRect().width - this.getYScrollbarWidth();\n        let { children } = el;\n        for (let i = 0; i < children.length; i += 1) {\n            let childEl = children[i];\n            if (childEl.getBoundingClientRect().width > realClientWidth) {\n                return true;\n            }\n        }\n        return false;\n    }\n    needsYScrolling() {\n        if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {\n            return false;\n        }\n        // testing scrollHeight>clientHeight is unreliable cross-browser when pixel heights aren't integers.\n        // much more reliable to see if children are taller than the scroller, even tho doesn't account for\n        // inner-child margins and absolute positioning\n        let { el } = this;\n        let realClientHeight = this.el.getBoundingClientRect().height - this.getXScrollbarWidth();\n        let { children } = el;\n        for (let i = 0; i < children.length; i += 1) {\n            let childEl = children[i];\n            if (childEl.getBoundingClientRect().height > realClientHeight) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getXScrollbarWidth() {\n        if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {\n            return 0;\n        }\n        return this.el.offsetHeight - this.el.clientHeight; // only works because we guarantee no borders. TODO: add to CSS with important?\n    }\n    getYScrollbarWidth() {\n        if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {\n            return 0;\n        }\n        return this.el.offsetWidth - this.el.clientWidth; // only works because we guarantee no borders. TODO: add to CSS with important?\n    }\n}\n\n/*\nTODO: somehow infer OtherArgs from masterCallback?\nTODO: infer RefType from masterCallback if provided\n*/\nclass RefMap {\n    constructor(masterCallback) {\n        this.masterCallback = masterCallback;\n        this.currentMap = {};\n        this.depths = {};\n        this.callbackMap = {};\n        this.handleValue = (val, key) => {\n            let { depths, currentMap } = this;\n            let removed = false;\n            let added = false;\n            if (val !== null) {\n                // for bug... ACTUALLY: can probably do away with this now that callers don't share numeric indices anymore\n                removed = (key in currentMap);\n                currentMap[key] = val;\n                depths[key] = (depths[key] || 0) + 1;\n                added = true;\n            }\n            else {\n                depths[key] -= 1;\n                if (!depths[key]) {\n                    delete currentMap[key];\n                    delete this.callbackMap[key];\n                    removed = true;\n                }\n            }\n            if (this.masterCallback) {\n                if (removed) {\n                    this.masterCallback(null, String(key));\n                }\n                if (added) {\n                    this.masterCallback(val, String(key));\n                }\n            }\n        };\n    }\n    createRef(key) {\n        let refCallback = this.callbackMap[key];\n        if (!refCallback) {\n            refCallback = this.callbackMap[key] = (val) => {\n                this.handleValue(val, String(key));\n            };\n        }\n        return refCallback;\n    }\n    // TODO: check callers that don't care about order. should use getAll instead\n    // NOTE: this method has become less valuable now that we are encouraged to map order by some other index\n    // TODO: provide ONE array-export function, buildArray, which fails on non-numeric indexes. caller can manipulate and \"collect\"\n    collect(startIndex, endIndex, step) {\n        return collectFromHash(this.currentMap, startIndex, endIndex, step);\n    }\n    getAll() {\n        return hashValuesToArray(this.currentMap);\n    }\n}\n\nfunction computeShrinkWidth(chunkEls) {\n    let shrinkCells = findElements(chunkEls, '.fc-scrollgrid-shrink');\n    let largestWidth = 0;\n    for (let shrinkCell of shrinkCells) {\n        largestWidth = Math.max(largestWidth, computeSmallestCellWidth(shrinkCell));\n    }\n    return Math.ceil(largestWidth); // <table> elements work best with integers. round up to ensure contents fits\n}\nfunction getSectionHasLiquidHeight(props, sectionConfig) {\n    return props.liquid && sectionConfig.liquid; // does the section do liquid-height? (need to have whole scrollgrid liquid-height as well)\n}\nfunction getAllowYScrolling(props, sectionConfig) {\n    return sectionConfig.maxHeight != null || // if its possible for the height to max out, we might need scrollbars\n        getSectionHasLiquidHeight(props, sectionConfig); // if the section is liquid height, it might condense enough to require scrollbars\n}\n// TODO: ONLY use `arg`. force out internal function to use same API\nfunction renderChunkContent(sectionConfig, chunkConfig, arg, isHeader) {\n    let { expandRows } = arg;\n    let content = typeof chunkConfig.content === 'function' ?\n        chunkConfig.content(arg) :\n        createElement('table', {\n            role: 'presentation',\n            className: [\n                chunkConfig.tableClassName,\n                sectionConfig.syncRowHeights ? 'fc-scrollgrid-sync-table' : '',\n            ].join(' '),\n            style: {\n                minWidth: arg.tableMinWidth,\n                width: arg.clientWidth,\n                height: expandRows ? arg.clientHeight : '', // css `height` on a <table> serves as a min-height\n            },\n        }, arg.tableColGroupNode, createElement(isHeader ? 'thead' : 'tbody', {\n            role: 'presentation',\n        }, typeof chunkConfig.rowContent === 'function'\n            ? chunkConfig.rowContent(arg)\n            : chunkConfig.rowContent));\n    return content;\n}\nfunction isColPropsEqual(cols0, cols1) {\n    return isArraysEqual(cols0, cols1, isPropsEqual);\n}\nfunction renderMicroColGroup(cols, shrinkWidth) {\n    let colNodes = [];\n    /*\n    for ColProps with spans, it would have been great to make a single <col span=\"\">\n    HOWEVER, Chrome was getting messing up distributing the width to <td>/<th> elements with colspans.\n    SOLUTION: making individual <col> elements makes Chrome behave.\n    */\n    for (let colProps of cols) {\n        let span = colProps.span || 1;\n        for (let i = 0; i < span; i += 1) {\n            colNodes.push(createElement(\"col\", { style: {\n                    width: colProps.width === 'shrink' ? sanitizeShrinkWidth(shrinkWidth) : (colProps.width || ''),\n                    minWidth: colProps.minWidth || '',\n                } }));\n        }\n    }\n    return createElement('colgroup', {}, ...colNodes);\n}\nfunction sanitizeShrinkWidth(shrinkWidth) {\n    /* why 4? if we do 0, it will kill any border, which are needed for computeSmallestCellWidth\n    4 accounts for 2 2-pixel borders. TODO: better solution? */\n    return shrinkWidth == null ? 4 : shrinkWidth;\n}\nfunction hasShrinkWidth(cols) {\n    for (let col of cols) {\n        if (col.width === 'shrink') {\n            return true;\n        }\n    }\n    return false;\n}\nfunction getScrollGridClassNames(liquid, context) {\n    let classNames = [\n        'fc-scrollgrid',\n        context.theme.getClass('table'),\n    ];\n    if (liquid) {\n        classNames.push('fc-scrollgrid-liquid');\n    }\n    return classNames;\n}\nfunction getSectionClassNames(sectionConfig, wholeTableVGrow) {\n    let classNames = [\n        'fc-scrollgrid-section',\n        `fc-scrollgrid-section-${sectionConfig.type}`,\n        sectionConfig.className, // used?\n    ];\n    if (wholeTableVGrow && sectionConfig.liquid && sectionConfig.maxHeight == null) {\n        classNames.push('fc-scrollgrid-section-liquid');\n    }\n    if (sectionConfig.isSticky) {\n        classNames.push('fc-scrollgrid-section-sticky');\n    }\n    return classNames;\n}\nfunction renderScrollShim(arg) {\n    return (createElement(\"div\", { className: \"fc-scrollgrid-sticky-shim\", style: {\n            width: arg.clientWidth,\n            minWidth: arg.tableMinWidth,\n        } }));\n}\nfunction getStickyHeaderDates(options) {\n    let { stickyHeaderDates } = options;\n    if (stickyHeaderDates == null || stickyHeaderDates === 'auto') {\n        stickyHeaderDates = options.height === 'auto' || options.viewHeight === 'auto';\n    }\n    return stickyHeaderDates;\n}\nfunction getStickyFooterScrollbar(options) {\n    let { stickyFooterScrollbar } = options;\n    if (stickyFooterScrollbar == null || stickyFooterScrollbar === 'auto') {\n        stickyFooterScrollbar = options.height === 'auto' || options.viewHeight === 'auto';\n    }\n    return stickyFooterScrollbar;\n}\n\nclass SimpleScrollGrid extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.processCols = memoize((a) => a, isColPropsEqual); // so we get same `cols` props every time\n        // yucky to memoize VNodes, but much more efficient for consumers\n        this.renderMicroColGroup = memoize(renderMicroColGroup);\n        this.scrollerRefs = new RefMap();\n        this.scrollerElRefs = new RefMap(this._handleScrollerEl.bind(this));\n        this.state = {\n            shrinkWidth: null,\n            forceYScrollbars: false,\n            scrollerClientWidths: {},\n            scrollerClientHeights: {},\n        };\n        // TODO: can do a really simple print-view. dont need to join rows\n        this.handleSizing = () => {\n            this.safeSetState(Object.assign({ shrinkWidth: this.computeShrinkWidth() }, this.computeScrollerDims()));\n        };\n    }\n    render() {\n        let { props, state, context } = this;\n        let sectionConfigs = props.sections || [];\n        let cols = this.processCols(props.cols);\n        let microColGroupNode = this.renderMicroColGroup(cols, state.shrinkWidth);\n        let classNames = getScrollGridClassNames(props.liquid, context);\n        if (props.collapsibleWidth) {\n            classNames.push('fc-scrollgrid-collapsible');\n        }\n        // TODO: make DRY\n        let configCnt = sectionConfigs.length;\n        let configI = 0;\n        let currentConfig;\n        let headSectionNodes = [];\n        let bodySectionNodes = [];\n        let footSectionNodes = [];\n        while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'header') {\n            headSectionNodes.push(this.renderSection(currentConfig, microColGroupNode, true));\n            configI += 1;\n        }\n        while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'body') {\n            bodySectionNodes.push(this.renderSection(currentConfig, microColGroupNode, false));\n            configI += 1;\n        }\n        while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'footer') {\n            footSectionNodes.push(this.renderSection(currentConfig, microColGroupNode, true));\n            configI += 1;\n        }\n        // firefox bug: when setting height on table and there is a thead or tfoot,\n        // the necessary height:100% on the liquid-height body section forces the *whole* table to be taller. (bug #5524)\n        // use getCanVGrowWithinCell as a way to detect table-stupid firefox.\n        // if so, use a simpler dom structure, jam everything into a lone tbody.\n        let isBuggy = !getCanVGrowWithinCell();\n        const roleAttrs = { role: 'rowgroup' };\n        return createElement('table', {\n            role: 'grid',\n            className: classNames.join(' '),\n            style: { height: props.height },\n        }, Boolean(!isBuggy && headSectionNodes.length) && createElement('thead', roleAttrs, ...headSectionNodes), Boolean(!isBuggy && bodySectionNodes.length) && createElement('tbody', roleAttrs, ...bodySectionNodes), Boolean(!isBuggy && footSectionNodes.length) && createElement('tfoot', roleAttrs, ...footSectionNodes), isBuggy && createElement('tbody', roleAttrs, ...headSectionNodes, ...bodySectionNodes, ...footSectionNodes));\n    }\n    renderSection(sectionConfig, microColGroupNode, isHeader) {\n        if ('outerContent' in sectionConfig) {\n            return (createElement(Fragment, { key: sectionConfig.key }, sectionConfig.outerContent));\n        }\n        return (createElement(\"tr\", { key: sectionConfig.key, role: \"presentation\", className: getSectionClassNames(sectionConfig, this.props.liquid).join(' ') }, this.renderChunkTd(sectionConfig, microColGroupNode, sectionConfig.chunk, isHeader)));\n    }\n    renderChunkTd(sectionConfig, microColGroupNode, chunkConfig, isHeader) {\n        if ('outerContent' in chunkConfig) {\n            return chunkConfig.outerContent;\n        }\n        let { props } = this;\n        let { forceYScrollbars, scrollerClientWidths, scrollerClientHeights } = this.state;\n        let needsYScrolling = getAllowYScrolling(props, sectionConfig); // TODO: do lazily. do in section config?\n        let isLiquid = getSectionHasLiquidHeight(props, sectionConfig);\n        // for `!props.liquid` - is WHOLE scrollgrid natural height?\n        // TODO: do same thing in advanced scrollgrid? prolly not b/c always has horizontal scrollbars\n        let overflowY = !props.liquid ? 'visible' :\n            forceYScrollbars ? 'scroll' :\n                !needsYScrolling ? 'hidden' :\n                    'auto';\n        let sectionKey = sectionConfig.key;\n        let content = renderChunkContent(sectionConfig, chunkConfig, {\n            tableColGroupNode: microColGroupNode,\n            tableMinWidth: '',\n            clientWidth: (!props.collapsibleWidth && scrollerClientWidths[sectionKey] !== undefined) ? scrollerClientWidths[sectionKey] : null,\n            clientHeight: scrollerClientHeights[sectionKey] !== undefined ? scrollerClientHeights[sectionKey] : null,\n            expandRows: sectionConfig.expandRows,\n            syncRowHeights: false,\n            rowSyncHeights: [],\n            reportRowHeightChange: () => { },\n        }, isHeader);\n        return createElement(isHeader ? 'th' : 'td', {\n            ref: chunkConfig.elRef,\n            role: 'presentation',\n        }, createElement(\"div\", { className: `fc-scroller-harness${isLiquid ? ' fc-scroller-harness-liquid' : ''}` },\n            createElement(Scroller, { ref: this.scrollerRefs.createRef(sectionKey), elRef: this.scrollerElRefs.createRef(sectionKey), overflowY: overflowY, overflowX: !props.liquid ? 'visible' : 'hidden' /* natural height? */, maxHeight: sectionConfig.maxHeight, liquid: isLiquid, liquidIsAbsolute // because its within a harness\n                : true }, content)));\n    }\n    _handleScrollerEl(scrollerEl, key) {\n        let section = getSectionByKey(this.props.sections, key);\n        if (section) {\n            setRef(section.chunk.scrollerElRef, scrollerEl);\n        }\n    }\n    componentDidMount() {\n        this.handleSizing();\n        this.context.addResizeHandler(this.handleSizing);\n    }\n    componentDidUpdate() {\n        // TODO: need better solution when state contains non-sizing things\n        this.handleSizing();\n    }\n    componentWillUnmount() {\n        this.context.removeResizeHandler(this.handleSizing);\n    }\n    computeShrinkWidth() {\n        return hasShrinkWidth(this.props.cols)\n            ? computeShrinkWidth(this.scrollerElRefs.getAll())\n            : 0;\n    }\n    computeScrollerDims() {\n        let scrollbarWidth = getScrollbarWidths();\n        let { scrollerRefs, scrollerElRefs } = this;\n        let forceYScrollbars = false;\n        let scrollerClientWidths = {};\n        let scrollerClientHeights = {};\n        for (let sectionKey in scrollerRefs.currentMap) {\n            let scroller = scrollerRefs.currentMap[sectionKey];\n            if (scroller && scroller.needsYScrolling()) {\n                forceYScrollbars = true;\n                break;\n            }\n        }\n        for (let section of this.props.sections) {\n            let sectionKey = section.key;\n            let scrollerEl = scrollerElRefs.currentMap[sectionKey];\n            if (scrollerEl) {\n                let harnessEl = scrollerEl.parentNode; // TODO: weird way to get this. need harness b/c doesn't include table borders\n                scrollerClientWidths[sectionKey] = Math.floor(harnessEl.getBoundingClientRect().width - (forceYScrollbars\n                    ? scrollbarWidth.y // use global because scroller might not have scrollbars yet but will need them in future\n                    : 0));\n                scrollerClientHeights[sectionKey] = Math.floor(harnessEl.getBoundingClientRect().height);\n            }\n        }\n        return { forceYScrollbars, scrollerClientWidths, scrollerClientHeights };\n    }\n}\nSimpleScrollGrid.addStateEquality({\n    scrollerClientWidths: isPropsEqual,\n    scrollerClientHeights: isPropsEqual,\n});\nfunction getSectionByKey(sections, key) {\n    for (let section of sections) {\n        if (section.key === key) {\n            return section;\n        }\n    }\n    return null;\n}\n\nclass EventContainer extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.handleEl = (el) => {\n            this.el = el;\n            if (el) {\n                setElSeg(el, this.props.seg);\n            }\n        };\n    }\n    render() {\n        const { props, context } = this;\n        const { options } = context;\n        const { seg } = props;\n        const { eventRange } = seg;\n        const { ui } = eventRange;\n        const renderProps = {\n            event: new EventImpl(context, eventRange.def, eventRange.instance),\n            view: context.viewApi,\n            timeText: props.timeText,\n            textColor: ui.textColor,\n            backgroundColor: ui.backgroundColor,\n            borderColor: ui.borderColor,\n            isDraggable: !props.disableDragging && computeSegDraggable(seg, context),\n            isStartResizable: !props.disableResizing && computeSegStartResizable(seg, context),\n            isEndResizable: !props.disableResizing && computeSegEndResizable(seg),\n            isMirror: Boolean(props.isDragging || props.isResizing || props.isDateSelecting),\n            isStart: Boolean(seg.isStart),\n            isEnd: Boolean(seg.isEnd),\n            isPast: Boolean(props.isPast),\n            isFuture: Boolean(props.isFuture),\n            isToday: Boolean(props.isToday),\n            isSelected: Boolean(props.isSelected),\n            isDragging: Boolean(props.isDragging),\n            isResizing: Boolean(props.isResizing),\n        };\n        return (createElement(ContentContainer, Object.assign({}, props /* contains children */, { elRef: this.handleEl, elClasses: [\n                ...getEventClassNames(renderProps),\n                ...seg.eventRange.ui.classNames,\n                ...(props.elClasses || []),\n            ], renderProps: renderProps, generatorName: \"eventContent\", customGenerator: options.eventContent, defaultGenerator: props.defaultGenerator, classNameGenerator: options.eventClassNames, didMount: options.eventDidMount, willUnmount: options.eventWillUnmount })));\n    }\n    componentDidUpdate(prevProps) {\n        if (this.el && this.props.seg !== prevProps.seg) {\n            setElSeg(this.el, this.props.seg);\n        }\n    }\n}\n\n// should not be a purecomponent\nclass StandardEvent extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { seg } = props;\n        let { ui } = seg.eventRange;\n        let timeFormat = options.eventTimeFormat || props.defaultTimeFormat;\n        let timeText = buildSegTimeText(seg, timeFormat, context, props.defaultDisplayEventTime, props.defaultDisplayEventEnd);\n        return (createElement(EventContainer, Object.assign({}, props /* includes elRef */, { elTag: \"a\", elStyle: {\n                borderColor: ui.borderColor,\n                backgroundColor: ui.backgroundColor,\n            }, elAttrs: getSegAnchorAttrs(seg, context), defaultGenerator: renderInnerContent$1, timeText: timeText }), (InnerContent, eventContentArg) => (createElement(Fragment, null,\n            createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-event-main'], elStyle: { color: eventContentArg.textColor } }),\n            Boolean(eventContentArg.isStartResizable) && (createElement(\"div\", { className: \"fc-event-resizer fc-event-resizer-start\" })),\n            Boolean(eventContentArg.isEndResizable) && (createElement(\"div\", { className: \"fc-event-resizer fc-event-resizer-end\" }))))));\n    }\n}\nfunction renderInnerContent$1(innerProps) {\n    return (createElement(\"div\", { className: \"fc-event-main-frame\" },\n        innerProps.timeText && (createElement(\"div\", { className: \"fc-event-time\" }, innerProps.timeText)),\n        createElement(\"div\", { className: \"fc-event-title-container\" },\n            createElement(\"div\", { className: \"fc-event-title fc-sticky\" }, innerProps.event.title || createElement(Fragment, null, \"\\u00A0\")))));\n}\n\nconst NowIndicatorContainer = (props) => (createElement(ViewContextType.Consumer, null, (context) => {\n    let { options } = context;\n    let renderProps = {\n        isAxis: props.isAxis,\n        date: context.dateEnv.toDate(props.date),\n        view: context.viewApi,\n    };\n    return (createElement(ContentContainer, Object.assign({}, props /* includes children */, { elTag: props.elTag || 'div', renderProps: renderProps, generatorName: \"nowIndicatorContent\", customGenerator: options.nowIndicatorContent, classNameGenerator: options.nowIndicatorClassNames, didMount: options.nowIndicatorDidMount, willUnmount: options.nowIndicatorWillUnmount })));\n}));\n\nconst DAY_NUM_FORMAT = createFormatter({ day: 'numeric' });\nclass DayCellContainer extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.refineRenderProps = memoizeObjArg(refineRenderProps);\n    }\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let renderProps = this.refineRenderProps({\n            date: props.date,\n            dateProfile: props.dateProfile,\n            todayRange: props.todayRange,\n            isMonthStart: props.isMonthStart || false,\n            showDayNumber: props.showDayNumber,\n            extraRenderProps: props.extraRenderProps,\n            viewApi: context.viewApi,\n            dateEnv: context.dateEnv,\n            monthStartFormat: options.monthStartFormat,\n        });\n        return (createElement(ContentContainer, Object.assign({}, props /* includes children */, { elClasses: [\n                ...getDayClassNames(renderProps, context.theme),\n                ...(props.elClasses || []),\n            ], elAttrs: Object.assign(Object.assign({}, props.elAttrs), (renderProps.isDisabled ? {} : { 'data-date': formatDayString(props.date) })), renderProps: renderProps, generatorName: \"dayCellContent\", customGenerator: options.dayCellContent, defaultGenerator: props.defaultGenerator, classNameGenerator: \n            // don't use custom classNames if disabled\n            renderProps.isDisabled ? undefined : options.dayCellClassNames, didMount: options.dayCellDidMount, willUnmount: options.dayCellWillUnmount })));\n    }\n}\nfunction hasCustomDayCellContent(options) {\n    return Boolean(options.dayCellContent || hasCustomRenderingHandler('dayCellContent', options));\n}\nfunction refineRenderProps(raw) {\n    let { date, dateEnv, dateProfile, isMonthStart } = raw;\n    let dayMeta = getDateMeta(date, raw.todayRange, null, dateProfile);\n    let dayNumberText = raw.showDayNumber ? (dateEnv.format(date, isMonthStart ? raw.monthStartFormat : DAY_NUM_FORMAT)) : '';\n    return Object.assign(Object.assign(Object.assign({ date: dateEnv.toDate(date), view: raw.viewApi }, dayMeta), { isMonthStart,\n        dayNumberText }), raw.extraRenderProps);\n}\n\nclass BgEvent extends BaseComponent {\n    render() {\n        let { props } = this;\n        let { seg } = props;\n        return (createElement(EventContainer, { elTag: \"div\", elClasses: ['fc-bg-event'], elStyle: { backgroundColor: seg.eventRange.ui.backgroundColor }, defaultGenerator: renderInnerContent, seg: seg, timeText: \"\", isDragging: false, isResizing: false, isDateSelecting: false, isSelected: false, isPast: props.isPast, isFuture: props.isFuture, isToday: props.isToday, disableDragging: true, disableResizing: true }));\n    }\n}\nfunction renderInnerContent(props) {\n    let { title } = props.event;\n    return title && (createElement(\"div\", { className: \"fc-event-title\" }, props.event.title));\n}\nfunction renderFill(fillType) {\n    return (createElement(\"div\", { className: `fc-${fillType}` }));\n}\n\nconst WeekNumberContainer = (props) => (createElement(ViewContextType.Consumer, null, (context) => {\n    let { dateEnv, options } = context;\n    let { date } = props;\n    let format = options.weekNumberFormat || props.defaultFormat;\n    let num = dateEnv.computeWeekNumber(date); // TODO: somehow use for formatting as well?\n    let text = dateEnv.format(date, format);\n    let renderProps = { num, text, date };\n    return (createElement(ContentContainer // why isn't WeekNumberContentArg being auto-detected?\n    , Object.assign({}, props /* includes children */, { renderProps: renderProps, generatorName: \"weekNumberContent\", customGenerator: options.weekNumberContent, defaultGenerator: renderInner, classNameGenerator: options.weekNumberClassNames, didMount: options.weekNumberDidMount, willUnmount: options.weekNumberWillUnmount })));\n}));\nfunction renderInner(innerProps) {\n    return innerProps.text;\n}\n\nconst PADDING_FROM_VIEWPORT = 10;\nclass Popover extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            titleId: getUniqueDomId(),\n        };\n        this.handleRootEl = (el) => {\n            this.rootEl = el;\n            if (this.props.elRef) {\n                setRef(this.props.elRef, el);\n            }\n        };\n        // Triggered when the user clicks *anywhere* in the document, for the autoHide feature\n        this.handleDocumentMouseDown = (ev) => {\n            // only hide the popover if the click happened outside the popover\n            const target = getEventTargetViaRoot(ev);\n            if (!this.rootEl.contains(target)) {\n                this.handleCloseClick();\n            }\n        };\n        this.handleDocumentKeyDown = (ev) => {\n            if (ev.key === 'Escape') {\n                this.handleCloseClick();\n            }\n        };\n        this.handleCloseClick = () => {\n            let { onClose } = this.props;\n            if (onClose) {\n                onClose();\n            }\n        };\n    }\n    render() {\n        let { theme, options } = this.context;\n        let { props, state } = this;\n        let classNames = [\n            'fc-popover',\n            theme.getClass('popover'),\n        ].concat(props.extraClassNames || []);\n        return createPortal(createElement(\"div\", Object.assign({}, props.extraAttrs, { id: props.id, className: classNames.join(' '), \"aria-labelledby\": state.titleId, ref: this.handleRootEl }),\n            createElement(\"div\", { className: 'fc-popover-header ' + theme.getClass('popoverHeader') },\n                createElement(\"span\", { className: \"fc-popover-title\", id: state.titleId }, props.title),\n                createElement(\"span\", { className: 'fc-popover-close ' + theme.getIconClass('close'), title: options.closeHint, onClick: this.handleCloseClick })),\n            createElement(\"div\", { className: 'fc-popover-body ' + theme.getClass('popoverContent') }, props.children)), props.parentEl);\n    }\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleDocumentMouseDown);\n        document.addEventListener('keydown', this.handleDocumentKeyDown);\n        this.updateSize();\n    }\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleDocumentMouseDown);\n        document.removeEventListener('keydown', this.handleDocumentKeyDown);\n    }\n    updateSize() {\n        let { isRtl } = this.context;\n        let { alignmentEl, alignGridTop } = this.props;\n        let { rootEl } = this;\n        let alignmentRect = computeClippedClientRect(alignmentEl);\n        if (alignmentRect) {\n            let popoverDims = rootEl.getBoundingClientRect();\n            // position relative to viewport\n            let popoverTop = alignGridTop\n                ? elementClosest(alignmentEl, '.fc-scrollgrid').getBoundingClientRect().top\n                : alignmentRect.top;\n            let popoverLeft = isRtl ? alignmentRect.right - popoverDims.width : alignmentRect.left;\n            // constrain\n            popoverTop = Math.max(popoverTop, PADDING_FROM_VIEWPORT);\n            popoverLeft = Math.min(popoverLeft, document.documentElement.clientWidth - PADDING_FROM_VIEWPORT - popoverDims.width);\n            popoverLeft = Math.max(popoverLeft, PADDING_FROM_VIEWPORT);\n            let origin = rootEl.offsetParent.getBoundingClientRect();\n            applyStyle(rootEl, {\n                top: popoverTop - origin.top,\n                left: popoverLeft - origin.left,\n            });\n        }\n    }\n}\n\nclass MorePopover extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.handleRootEl = (rootEl) => {\n            this.rootEl = rootEl;\n            if (rootEl) {\n                this.context.registerInteractiveComponent(this, {\n                    el: rootEl,\n                    useEventCenter: false,\n                });\n            }\n            else {\n                this.context.unregisterInteractiveComponent(this);\n            }\n        };\n    }\n    render() {\n        let { options, dateEnv } = this.context;\n        let { props } = this;\n        let { startDate, todayRange, dateProfile } = props;\n        let title = dateEnv.format(startDate, options.dayPopoverFormat);\n        return (createElement(DayCellContainer, { elRef: this.handleRootEl, date: startDate, dateProfile: dateProfile, todayRange: todayRange }, (InnerContent, renderProps, elAttrs) => (createElement(Popover, { elRef: elAttrs.ref, id: props.id, title: title, extraClassNames: ['fc-more-popover'].concat(elAttrs.className || []), extraAttrs: elAttrs /* TODO: make these time-based when not whole-day? */, parentEl: props.parentEl, alignmentEl: props.alignmentEl, alignGridTop: props.alignGridTop, onClose: props.onClose },\n            hasCustomDayCellContent(options) && (createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-more-popover-misc'] })),\n            props.children))));\n    }\n    queryHit(positionLeft, positionTop, elWidth, elHeight) {\n        let { rootEl, props } = this;\n        if (positionLeft >= 0 && positionLeft < elWidth &&\n            positionTop >= 0 && positionTop < elHeight) {\n            return {\n                dateProfile: props.dateProfile,\n                dateSpan: Object.assign({ allDay: !props.forceTimed, range: {\n                        start: props.startDate,\n                        end: props.endDate,\n                    } }, props.extraDateSpan),\n                dayEl: rootEl,\n                rect: {\n                    left: 0,\n                    top: 0,\n                    right: elWidth,\n                    bottom: elHeight,\n                },\n                layer: 1, // important when comparing with hits from other components\n            };\n        }\n        return null;\n    }\n}\n\nclass MoreLinkContainer extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            isPopoverOpen: false,\n            popoverId: getUniqueDomId(),\n        };\n        this.handleLinkEl = (linkEl) => {\n            this.linkEl = linkEl;\n            if (this.props.elRef) {\n                setRef(this.props.elRef, linkEl);\n            }\n        };\n        this.handleClick = (ev) => {\n            let { props, context } = this;\n            let { moreLinkClick } = context.options;\n            let date = computeRange(props).start;\n            function buildPublicSeg(seg) {\n                let { def, instance, range } = seg.eventRange;\n                return {\n                    event: new EventImpl(context, def, instance),\n                    start: context.dateEnv.toDate(range.start),\n                    end: context.dateEnv.toDate(range.end),\n                    isStart: seg.isStart,\n                    isEnd: seg.isEnd,\n                };\n            }\n            if (typeof moreLinkClick === 'function') {\n                moreLinkClick = moreLinkClick({\n                    date,\n                    allDay: Boolean(props.allDayDate),\n                    allSegs: props.allSegs.map(buildPublicSeg),\n                    hiddenSegs: props.hiddenSegs.map(buildPublicSeg),\n                    jsEvent: ev,\n                    view: context.viewApi,\n                });\n            }\n            if (!moreLinkClick || moreLinkClick === 'popover') {\n                this.setState({ isPopoverOpen: true });\n            }\n            else if (typeof moreLinkClick === 'string') { // a view name\n                context.calendarApi.zoomTo(date, moreLinkClick);\n            }\n        };\n        this.handlePopoverClose = () => {\n            this.setState({ isPopoverOpen: false });\n        };\n    }\n    render() {\n        let { props, state } = this;\n        return (createElement(ViewContextType.Consumer, null, (context) => {\n            let { viewApi, options, calendarApi } = context;\n            let { moreLinkText } = options;\n            let { moreCnt } = props;\n            let range = computeRange(props);\n            let text = typeof moreLinkText === 'function' // TODO: eventually use formatWithOrdinals\n                ? moreLinkText.call(calendarApi, moreCnt)\n                : `+${moreCnt} ${moreLinkText}`;\n            let hint = formatWithOrdinals(options.moreLinkHint, [moreCnt], text);\n            let renderProps = {\n                num: moreCnt,\n                shortText: `+${moreCnt}`,\n                text,\n                view: viewApi,\n            };\n            return (createElement(Fragment, null,\n                Boolean(props.moreCnt) && (createElement(ContentContainer, { elTag: props.elTag || 'a', elRef: this.handleLinkEl, elClasses: [\n                        ...(props.elClasses || []),\n                        'fc-more-link',\n                    ], elStyle: props.elStyle, elAttrs: Object.assign(Object.assign(Object.assign({}, props.elAttrs), createAriaClickAttrs(this.handleClick)), { title: hint, 'aria-expanded': state.isPopoverOpen, 'aria-controls': state.isPopoverOpen ? state.popoverId : '' }), renderProps: renderProps, generatorName: \"moreLinkContent\", customGenerator: options.moreLinkContent, defaultGenerator: props.defaultGenerator || renderMoreLinkInner, classNameGenerator: options.moreLinkClassNames, didMount: options.moreLinkDidMount, willUnmount: options.moreLinkWillUnmount }, props.children)),\n                state.isPopoverOpen && (createElement(MorePopover, { id: state.popoverId, startDate: range.start, endDate: range.end, dateProfile: props.dateProfile, todayRange: props.todayRange, extraDateSpan: props.extraDateSpan, parentEl: this.parentEl, alignmentEl: props.alignmentElRef ?\n                        props.alignmentElRef.current :\n                        this.linkEl, alignGridTop: props.alignGridTop, forceTimed: props.forceTimed, onClose: this.handlePopoverClose }, props.popoverContent()))));\n        }));\n    }\n    componentDidMount() {\n        this.updateParentEl();\n    }\n    componentDidUpdate() {\n        this.updateParentEl();\n    }\n    updateParentEl() {\n        if (this.linkEl) {\n            this.parentEl = elementClosest(this.linkEl, '.fc-view-harness');\n        }\n    }\n}\nfunction renderMoreLinkInner(props) {\n    return props.text;\n}\nfunction computeRange(props) {\n    if (props.allDayDate) {\n        return {\n            start: props.allDayDate,\n            end: addDays(props.allDayDate, 1),\n        };\n    }\n    let { hiddenSegs } = props;\n    return {\n        start: computeEarliestSegStart(hiddenSegs),\n        end: computeLatestSegEnd(hiddenSegs),\n    };\n}\nfunction computeEarliestSegStart(segs) {\n    return segs.reduce(pickEarliestStart).eventRange.range.start;\n}\nfunction pickEarliestStart(seg0, seg1) {\n    return seg0.eventRange.range.start < seg1.eventRange.range.start ? seg0 : seg1;\n}\nfunction computeLatestSegEnd(segs) {\n    return segs.reduce(pickLatestEnd).eventRange.range.end;\n}\nfunction pickLatestEnd(seg0, seg1) {\n    return seg0.eventRange.range.end > seg1.eventRange.range.end ? seg0 : seg1;\n}\n\nclass Store {\n    constructor() {\n        this.handlers = [];\n    }\n    set(value) {\n        this.currentValue = value;\n        for (let handler of this.handlers) {\n            handler(value);\n        }\n    }\n    subscribe(handler) {\n        this.handlers.push(handler);\n        if (this.currentValue !== undefined) {\n            handler(this.currentValue);\n        }\n    }\n}\n\n/*\nSubscribers will get a LIST of CustomRenderings\n*/\nclass CustomRenderingStore extends Store {\n    constructor() {\n        super(...arguments);\n        this.map = new Map();\n    }\n    // for consistent order\n    handle(customRendering) {\n        const { map } = this;\n        let updated = false;\n        if (customRendering.isActive) {\n            map.set(customRendering.id, customRendering);\n            updated = true;\n        }\n        else if (map.has(customRendering.id)) {\n            map.delete(customRendering.id);\n            updated = true;\n        }\n        if (updated) {\n            this.set(map);\n        }\n    }\n}\n\nexport { elementClosest as $, memoizeObjArg as A, BaseComponent as B, ContentContainer as C, DelayedRunner as D, isPropsEqual as E, Emitter as F, getInitialDate as G, rangeContainsMarker as H, createEmptyEventStore as I, reduceCurrentDate as J, reduceEventStore as K, rezoneEventStoreDates as L, mergeRawOptions as M, BASE_OPTION_REFINERS as N, CALENDAR_LISTENER_REFINERS as O, CALENDAR_OPTION_REFINERS as P, COMPLEX_OPTION_COMPARATORS as Q, VIEW_OPTION_REFINERS as R, DateEnv as S, Theme as T, DateProfileGenerator as U, ViewContextType as V, createEventUi as W, parseBusinessHours as X, setRef as Y, Interaction as Z, getElSeg as _, mapHash as a, getSlotClassNames as a$, EventImpl as a0, listenBySelector as a1, listenToHoverBySelector as a2, PureComponent as a3, buildViewContext as a4, getUniqueDomId as a5, parseInteractionSettings as a6, interactionSettingsStore as a7, getNow as a8, CalendarImpl as a9, diffDates as aA, removeExact as aB, memoizeArraylike as aC, memoizeHashlike as aD, intersectRects as aE, pointInsideRect as aF, constrainPoint as aG, getRectCenter as aH, diffPoints as aI, translateRect as aJ, compareObjs as aK, collectFromHash as aL, findElements as aM, findDirectChildren as aN, removeElement as aO, applyStyle as aP, elementMatches as aQ, getEventTargetViaRoot as aR, parseClassNames as aS, getCanVGrowWithinCell as aT, mergeEventStores as aU, getRelevantEvents as aV, eventTupleToStore as aW, combineEventUis as aX, Splitter as aY, getDayClassNames as aZ, getDateMeta as a_, flushSync as aa, CalendarRoot as ab, RenderId as ac, ensureElHasStyles as ad, applyStyleProp as ae, sliceEventStore as af, JsonRequestError as ag, createContext as ah, refineProps as ai, createEventInstance as aj, parseEventDef as ak, refineEventDef as al, padStart as am, isInt as an, parseFieldSpecs as ao, compareByFieldSpecs as ap, flexibleCompare as aq, preventSelection as ar, allowSelection as as, preventContextMenu as at, allowContextMenu as au, compareNumbers as av, enableCursor as aw, disableCursor as ax, computeVisibleDayRange as ay, isMultiDayRange as az, buildViewClassNames as b, SimpleScrollGrid as b$, buildNavLinkAttrs as b0, preventDefault as b1, whenTransitionDone as b2, computeInnerRect as b3, computeEdges as b4, getClippingParents as b5, computeRect as b6, rangesEqual as b7, rangesIntersect as b8, rangeContainsRange as b9, SegHierarchy as bA, buildEntryKey as bB, getEntrySpanEnd as bC, binarySearch as bD, groupIntersectingEntries as bE, intersectSpans as bF, interactionSettingsToStore as bG, ElementDragging as bH, config as bI, parseDragMeta as bJ, DayHeader as bK, computeFallbackHeaderFormat as bL, TableDateCell as bM, TableDowCell as bN, DaySeriesModel as bO, hasBgRendering as bP, buildSegTimeText as bQ, sortEventSegs as bR, getSegMeta as bS, buildEventRangeKey as bT, getSegAnchorAttrs as bU, DayTableModel as bV, Slicer as bW, applyMutationToEventStore as bX, isPropsValid as bY, isInteractionValid as bZ, isDateSelectionValid as b_, PositionCache as ba, ScrollController as bb, ElementScrollController as bc, WindowScrollController as bd, DateComponent as be, isDateSpansEqual as bf, addMs as bg, addWeeks as bh, diffWeeks as bi, diffWholeWeeks as bj, diffDayAndTime as bk, diffDays as bl, isValidDate as bm, asCleanDays as bn, multiplyDuration as bo, addDurations as bp, asRoughMinutes as bq, asRoughSeconds as br, asRoughMs as bs, wholeDivideDurations as bt, formatIsoTimeString as bu, formatDayString as bv, buildIsoString as bw, formatIsoMonthStr as bx, NamedTimeZoneImpl as by, parse as bz, greatestDurationDenominator as c, hasShrinkWidth as c0, renderMicroColGroup as c1, getScrollGridClassNames as c2, getSectionClassNames as c3, getSectionHasLiquidHeight as c4, getAllowYScrolling as c5, renderChunkContent as c6, computeShrinkWidth as c7, sanitizeShrinkWidth as c8, isColPropsEqual as c9, renderScrollShim as ca, getStickyFooterScrollbar as cb, getStickyHeaderDates as cc, Scroller as cd, getScrollbarWidths as ce, RefMap as cf, getIsRtlScrollbarOnLeft as cg, NowTimer as ch, ScrollResponder as ci, StandardEvent as cj, NowIndicatorContainer as ck, DayCellContainer as cl, hasCustomDayCellContent as cm, EventContainer as cn, renderFill as co, BgEvent as cp, WeekNumberContainer as cq, MoreLinkContainer as cr, computeEarliestSegStart as cs, ViewContainer as ct, triggerDateSelect as cu, getDefaultEventEnd as cv, injectStyles as cw, buildElAttrs as cx, CustomRenderingStore as cy, createDuration as d, BASE_OPTION_DEFAULTS as e, arrayToHash as f, guid as g, filterHash as h, isArraysEqual as i, buildEventSourceRefiners as j, formatWithOrdinals as k, buildRangeApiWithTimeZone as l, mergeProps as m, identity as n, intersectRanges as o, parseEventSource as p, startOfDay as q, requestJson as r, subtractDurations as s, addDays as t, unpromisify as u, hashValuesToArray as v, buildEventApis as w, createFormatter as x, diffWholeDays as y, memoize as z };\n","import { m as mergeProps, g as guid, i as isArraysEqual, T as Theme, a as mapHash, B as BaseComponent, V as ViewContextType, C as ContentContainer, b as buildViewClassNames, c as greatestDurationDenominator, d as createDuration, e as BASE_OPTION_DEFAULTS, f as arrayToHash, h as filterHash, j as buildEventSourceRefiners, p as parseEventSource, k as formatWithOrdinals, u as unpromisify, l as buildRangeApiWithTimeZone, n as identity, r as requestJson, s as subtractDurations, o as intersectRanges, q as startOfDay, t as addDays, v as hashValuesToArray, w as buildEventApis, D as DelayedRunner, x as createFormatter, y as diffWholeDays, z as memoize, A as memoizeObjArg, E as isPropsEqual, F as Emitter, G as getInitialDate, H as rangeContainsMarker, I as createEmptyEventStore, J as reduceCurrentDate, K as reduceEventStore, L as rezoneEventStoreDates, M as mergeRawOptions, N as BASE_OPTION_REFINERS, O as CALENDAR_LISTENER_REFINERS, P as CALENDAR_OPTION_REFINERS, Q as COMPLEX_OPTION_COMPARATORS, R as VIEW_OPTION_REFINERS, S as DateEnv, U as DateProfileGenerator, W as createEventUi, X as parseBusinessHours, Y as setRef, Z as Interaction, _ as getElSeg, $ as elementClosest, a0 as EventImpl, a1 as listenBySelector, a2 as listenToHoverBySelector, a3 as PureComponent, a4 as buildViewContext, a5 as getUniqueDomId, a6 as parseInteractionSettings, a7 as interactionSettingsStore, a8 as getNow, a9 as CalendarImpl, aa as flushSync, ab as CalendarRoot, ac as RenderId, ad as ensureElHasStyles, ae as applyStyleProp, af as sliceEventStore } from './internal-common.js';\nexport { ag as JsonRequestError } from './internal-common.js';\nimport { createElement, createRef, Fragment, render } from 'preact';\nimport 'preact/compat';\n\nconst globalLocales = [];\n\nconst MINIMAL_RAW_EN_LOCALE = {\n    code: 'en',\n    week: {\n        dow: 0,\n        doy: 4, // 4 days need to be within the year to be considered the first week\n    },\n    direction: 'ltr',\n    buttonText: {\n        prev: 'prev',\n        next: 'next',\n        prevYear: 'prev year',\n        nextYear: 'next year',\n        year: 'year',\n        today: 'today',\n        month: 'month',\n        week: 'week',\n        day: 'day',\n        list: 'list',\n    },\n    weekText: 'W',\n    weekTextLong: 'Week',\n    closeHint: 'Close',\n    timeHint: 'Time',\n    eventHint: 'Event',\n    allDayText: 'all-day',\n    moreLinkText: 'more',\n    noEventsText: 'No events to display',\n};\nconst RAW_EN_LOCALE = Object.assign(Object.assign({}, MINIMAL_RAW_EN_LOCALE), { \n    // Includes things we don't want other locales to inherit,\n    // things that derive from other translatable strings.\n    buttonHints: {\n        prev: 'Previous $0',\n        next: 'Next $0',\n        today(buttonText, unit) {\n            return (unit === 'day')\n                ? 'Today'\n                : `This ${buttonText}`;\n        },\n    }, viewHint: '$0 view', navLinkHint: 'Go to $0', moreLinkHint(eventCnt) {\n        return `Show ${eventCnt} more event${eventCnt === 1 ? '' : 's'}`;\n    } });\nfunction organizeRawLocales(explicitRawLocales) {\n    let defaultCode = explicitRawLocales.length > 0 ? explicitRawLocales[0].code : 'en';\n    let allRawLocales = globalLocales.concat(explicitRawLocales);\n    let rawLocaleMap = {\n        en: RAW_EN_LOCALE,\n    };\n    for (let rawLocale of allRawLocales) {\n        rawLocaleMap[rawLocale.code] = rawLocale;\n    }\n    return {\n        map: rawLocaleMap,\n        defaultCode,\n    };\n}\nfunction buildLocale(inputSingular, available) {\n    if (typeof inputSingular === 'object' && !Array.isArray(inputSingular)) {\n        return parseLocale(inputSingular.code, [inputSingular.code], inputSingular);\n    }\n    return queryLocale(inputSingular, available);\n}\nfunction queryLocale(codeArg, available) {\n    let codes = [].concat(codeArg || []); // will convert to array\n    let raw = queryRawLocale(codes, available) || RAW_EN_LOCALE;\n    return parseLocale(codeArg, codes, raw);\n}\nfunction queryRawLocale(codes, available) {\n    for (let i = 0; i < codes.length; i += 1) {\n        let parts = codes[i].toLocaleLowerCase().split('-');\n        for (let j = parts.length; j > 0; j -= 1) {\n            let simpleId = parts.slice(0, j).join('-');\n            if (available[simpleId]) {\n                return available[simpleId];\n            }\n        }\n    }\n    return null;\n}\nfunction parseLocale(codeArg, codes, raw) {\n    let merged = mergeProps([MINIMAL_RAW_EN_LOCALE, raw], ['buttonText']);\n    delete merged.code; // don't want this part of the options\n    let { week } = merged;\n    delete merged.week;\n    return {\n        codeArg,\n        codes,\n        week,\n        simpleNumberFormat: new Intl.NumberFormat(codeArg),\n        options: merged,\n    };\n}\n\n// TODO: easier way to add new hooks? need to update a million things\nfunction createPlugin(input) {\n    return {\n        id: guid(),\n        name: input.name,\n        premiumReleaseDate: input.premiumReleaseDate ? new Date(input.premiumReleaseDate) : undefined,\n        deps: input.deps || [],\n        reducers: input.reducers || [],\n        isLoadingFuncs: input.isLoadingFuncs || [],\n        contextInit: [].concat(input.contextInit || []),\n        eventRefiners: input.eventRefiners || {},\n        eventDefMemberAdders: input.eventDefMemberAdders || [],\n        eventSourceRefiners: input.eventSourceRefiners || {},\n        isDraggableTransformers: input.isDraggableTransformers || [],\n        eventDragMutationMassagers: input.eventDragMutationMassagers || [],\n        eventDefMutationAppliers: input.eventDefMutationAppliers || [],\n        dateSelectionTransformers: input.dateSelectionTransformers || [],\n        datePointTransforms: input.datePointTransforms || [],\n        dateSpanTransforms: input.dateSpanTransforms || [],\n        views: input.views || {},\n        viewPropsTransformers: input.viewPropsTransformers || [],\n        isPropsValid: input.isPropsValid || null,\n        externalDefTransforms: input.externalDefTransforms || [],\n        viewContainerAppends: input.viewContainerAppends || [],\n        eventDropTransformers: input.eventDropTransformers || [],\n        componentInteractions: input.componentInteractions || [],\n        calendarInteractions: input.calendarInteractions || [],\n        themeClasses: input.themeClasses || {},\n        eventSourceDefs: input.eventSourceDefs || [],\n        cmdFormatter: input.cmdFormatter,\n        recurringTypes: input.recurringTypes || [],\n        namedTimeZonedImpl: input.namedTimeZonedImpl,\n        initialView: input.initialView || '',\n        elementDraggingImpl: input.elementDraggingImpl,\n        optionChangeHandlers: input.optionChangeHandlers || {},\n        scrollGridImpl: input.scrollGridImpl || null,\n        listenerRefiners: input.listenerRefiners || {},\n        optionRefiners: input.optionRefiners || {},\n        propSetHandlers: input.propSetHandlers || {},\n    };\n}\nfunction buildPluginHooks(pluginDefs, globalDefs) {\n    let currentPluginIds = {};\n    let hooks = {\n        premiumReleaseDate: undefined,\n        reducers: [],\n        isLoadingFuncs: [],\n        contextInit: [],\n        eventRefiners: {},\n        eventDefMemberAdders: [],\n        eventSourceRefiners: {},\n        isDraggableTransformers: [],\n        eventDragMutationMassagers: [],\n        eventDefMutationAppliers: [],\n        dateSelectionTransformers: [],\n        datePointTransforms: [],\n        dateSpanTransforms: [],\n        views: {},\n        viewPropsTransformers: [],\n        isPropsValid: null,\n        externalDefTransforms: [],\n        viewContainerAppends: [],\n        eventDropTransformers: [],\n        componentInteractions: [],\n        calendarInteractions: [],\n        themeClasses: {},\n        eventSourceDefs: [],\n        cmdFormatter: null,\n        recurringTypes: [],\n        namedTimeZonedImpl: null,\n        initialView: '',\n        elementDraggingImpl: null,\n        optionChangeHandlers: {},\n        scrollGridImpl: null,\n        listenerRefiners: {},\n        optionRefiners: {},\n        propSetHandlers: {},\n    };\n    function addDefs(defs) {\n        for (let def of defs) {\n            const pluginName = def.name;\n            const currentId = currentPluginIds[pluginName];\n            if (currentId === undefined) {\n                currentPluginIds[pluginName] = def.id;\n                addDefs(def.deps);\n                hooks = combineHooks(hooks, def);\n            }\n            else if (currentId !== def.id) {\n                // different ID than the one already added\n                console.warn(`Duplicate plugin '${pluginName}'`);\n            }\n        }\n    }\n    if (pluginDefs) {\n        addDefs(pluginDefs);\n    }\n    addDefs(globalDefs);\n    return hooks;\n}\nfunction buildBuildPluginHooks() {\n    let currentOverrideDefs = [];\n    let currentGlobalDefs = [];\n    let currentHooks;\n    return (overrideDefs, globalDefs) => {\n        if (!currentHooks || !isArraysEqual(overrideDefs, currentOverrideDefs) || !isArraysEqual(globalDefs, currentGlobalDefs)) {\n            currentHooks = buildPluginHooks(overrideDefs, globalDefs);\n        }\n        currentOverrideDefs = overrideDefs;\n        currentGlobalDefs = globalDefs;\n        return currentHooks;\n    };\n}\nfunction combineHooks(hooks0, hooks1) {\n    return {\n        premiumReleaseDate: compareOptionalDates(hooks0.premiumReleaseDate, hooks1.premiumReleaseDate),\n        reducers: hooks0.reducers.concat(hooks1.reducers),\n        isLoadingFuncs: hooks0.isLoadingFuncs.concat(hooks1.isLoadingFuncs),\n        contextInit: hooks0.contextInit.concat(hooks1.contextInit),\n        eventRefiners: Object.assign(Object.assign({}, hooks0.eventRefiners), hooks1.eventRefiners),\n        eventDefMemberAdders: hooks0.eventDefMemberAdders.concat(hooks1.eventDefMemberAdders),\n        eventSourceRefiners: Object.assign(Object.assign({}, hooks0.eventSourceRefiners), hooks1.eventSourceRefiners),\n        isDraggableTransformers: hooks0.isDraggableTransformers.concat(hooks1.isDraggableTransformers),\n        eventDragMutationMassagers: hooks0.eventDragMutationMassagers.concat(hooks1.eventDragMutationMassagers),\n        eventDefMutationAppliers: hooks0.eventDefMutationAppliers.concat(hooks1.eventDefMutationAppliers),\n        dateSelectionTransformers: hooks0.dateSelectionTransformers.concat(hooks1.dateSelectionTransformers),\n        datePointTransforms: hooks0.datePointTransforms.concat(hooks1.datePointTransforms),\n        dateSpanTransforms: hooks0.dateSpanTransforms.concat(hooks1.dateSpanTransforms),\n        views: Object.assign(Object.assign({}, hooks0.views), hooks1.views),\n        viewPropsTransformers: hooks0.viewPropsTransformers.concat(hooks1.viewPropsTransformers),\n        isPropsValid: hooks1.isPropsValid || hooks0.isPropsValid,\n        externalDefTransforms: hooks0.externalDefTransforms.concat(hooks1.externalDefTransforms),\n        viewContainerAppends: hooks0.viewContainerAppends.concat(hooks1.viewContainerAppends),\n        eventDropTransformers: hooks0.eventDropTransformers.concat(hooks1.eventDropTransformers),\n        calendarInteractions: hooks0.calendarInteractions.concat(hooks1.calendarInteractions),\n        componentInteractions: hooks0.componentInteractions.concat(hooks1.componentInteractions),\n        themeClasses: Object.assign(Object.assign({}, hooks0.themeClasses), hooks1.themeClasses),\n        eventSourceDefs: hooks0.eventSourceDefs.concat(hooks1.eventSourceDefs),\n        cmdFormatter: hooks1.cmdFormatter || hooks0.cmdFormatter,\n        recurringTypes: hooks0.recurringTypes.concat(hooks1.recurringTypes),\n        namedTimeZonedImpl: hooks1.namedTimeZonedImpl || hooks0.namedTimeZonedImpl,\n        initialView: hooks0.initialView || hooks1.initialView,\n        elementDraggingImpl: hooks0.elementDraggingImpl || hooks1.elementDraggingImpl,\n        optionChangeHandlers: Object.assign(Object.assign({}, hooks0.optionChangeHandlers), hooks1.optionChangeHandlers),\n        scrollGridImpl: hooks1.scrollGridImpl || hooks0.scrollGridImpl,\n        listenerRefiners: Object.assign(Object.assign({}, hooks0.listenerRefiners), hooks1.listenerRefiners),\n        optionRefiners: Object.assign(Object.assign({}, hooks0.optionRefiners), hooks1.optionRefiners),\n        propSetHandlers: Object.assign(Object.assign({}, hooks0.propSetHandlers), hooks1.propSetHandlers),\n    };\n}\nfunction compareOptionalDates(date0, date1) {\n    if (date0 === undefined) {\n        return date1;\n    }\n    if (date1 === undefined) {\n        return date0;\n    }\n    return new Date(Math.max(date0.valueOf(), date1.valueOf()));\n}\n\nclass StandardTheme extends Theme {\n}\nStandardTheme.prototype.classes = {\n    root: 'fc-theme-standard',\n    tableCellShaded: 'fc-cell-shaded',\n    buttonGroup: 'fc-button-group',\n    button: 'fc-button fc-button-primary',\n    buttonActive: 'fc-button-active',\n};\nStandardTheme.prototype.baseIconClass = 'fc-icon';\nStandardTheme.prototype.iconClasses = {\n    close: 'fc-icon-x',\n    prev: 'fc-icon-chevron-left',\n    next: 'fc-icon-chevron-right',\n    prevYear: 'fc-icon-chevrons-left',\n    nextYear: 'fc-icon-chevrons-right',\n};\nStandardTheme.prototype.rtlIconClasses = {\n    prev: 'fc-icon-chevron-right',\n    next: 'fc-icon-chevron-left',\n    prevYear: 'fc-icon-chevrons-right',\n    nextYear: 'fc-icon-chevrons-left',\n};\nStandardTheme.prototype.iconOverrideOption = 'buttonIcons'; // TODO: make TS-friendly\nStandardTheme.prototype.iconOverrideCustomButtonOption = 'icon';\nStandardTheme.prototype.iconOverridePrefix = 'fc-icon-';\n\nfunction compileViewDefs(defaultConfigs, overrideConfigs) {\n    let hash = {};\n    let viewType;\n    for (viewType in defaultConfigs) {\n        ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);\n    }\n    for (viewType in overrideConfigs) {\n        ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);\n    }\n    return hash;\n}\nfunction ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs) {\n    if (hash[viewType]) {\n        return hash[viewType];\n    }\n    let viewDef = buildViewDef(viewType, hash, defaultConfigs, overrideConfigs);\n    if (viewDef) {\n        hash[viewType] = viewDef;\n    }\n    return viewDef;\n}\nfunction buildViewDef(viewType, hash, defaultConfigs, overrideConfigs) {\n    let defaultConfig = defaultConfigs[viewType];\n    let overrideConfig = overrideConfigs[viewType];\n    let queryProp = (name) => ((defaultConfig && defaultConfig[name] !== null) ? defaultConfig[name] :\n        ((overrideConfig && overrideConfig[name] !== null) ? overrideConfig[name] : null));\n    let theComponent = queryProp('component');\n    let superType = queryProp('superType');\n    let superDef = null;\n    if (superType) {\n        if (superType === viewType) {\n            throw new Error('Can\\'t have a custom view type that references itself');\n        }\n        superDef = ensureViewDef(superType, hash, defaultConfigs, overrideConfigs);\n    }\n    if (!theComponent && superDef) {\n        theComponent = superDef.component;\n    }\n    if (!theComponent) {\n        return null; // don't throw a warning, might be settings for a single-unit view\n    }\n    return {\n        type: viewType,\n        component: theComponent,\n        defaults: Object.assign(Object.assign({}, (superDef ? superDef.defaults : {})), (defaultConfig ? defaultConfig.rawOptions : {})),\n        overrides: Object.assign(Object.assign({}, (superDef ? superDef.overrides : {})), (overrideConfig ? overrideConfig.rawOptions : {})),\n    };\n}\n\nfunction parseViewConfigs(inputs) {\n    return mapHash(inputs, parseViewConfig);\n}\nfunction parseViewConfig(input) {\n    let rawOptions = typeof input === 'function' ?\n        { component: input } :\n        input;\n    let { component } = rawOptions;\n    if (rawOptions.content) {\n        // TODO: remove content/classNames/didMount/etc from options?\n        component = createViewHookComponent(rawOptions);\n    }\n    else if (component && !(component.prototype instanceof BaseComponent)) {\n        // WHY?: people were using `component` property for `content`\n        // TODO: converge on one setting name\n        component = createViewHookComponent(Object.assign(Object.assign({}, rawOptions), { content: component }));\n    }\n    return {\n        superType: rawOptions.type,\n        component: component,\n        rawOptions, // includes type and component too :(\n    };\n}\nfunction createViewHookComponent(options) {\n    return (viewProps) => (createElement(ViewContextType.Consumer, null, (context) => (createElement(ContentContainer, { elTag: \"div\", elClasses: buildViewClassNames(context.viewSpec), renderProps: Object.assign(Object.assign({}, viewProps), { nextDayThreshold: context.options.nextDayThreshold }), generatorName: undefined, customGenerator: options.content, classNameGenerator: options.classNames, didMount: options.didMount, willUnmount: options.willUnmount }))));\n}\n\nfunction buildViewSpecs(defaultInputs, optionOverrides, dynamicOptionOverrides, localeDefaults) {\n    let defaultConfigs = parseViewConfigs(defaultInputs);\n    let overrideConfigs = parseViewConfigs(optionOverrides.views);\n    let viewDefs = compileViewDefs(defaultConfigs, overrideConfigs);\n    return mapHash(viewDefs, (viewDef) => buildViewSpec(viewDef, overrideConfigs, optionOverrides, dynamicOptionOverrides, localeDefaults));\n}\nfunction buildViewSpec(viewDef, overrideConfigs, optionOverrides, dynamicOptionOverrides, localeDefaults) {\n    let durationInput = viewDef.overrides.duration ||\n        viewDef.defaults.duration ||\n        dynamicOptionOverrides.duration ||\n        optionOverrides.duration;\n    let duration = null;\n    let durationUnit = '';\n    let singleUnit = '';\n    let singleUnitOverrides = {};\n    if (durationInput) {\n        duration = createDurationCached(durationInput);\n        if (duration) { // valid?\n            let denom = greatestDurationDenominator(duration);\n            durationUnit = denom.unit;\n            if (denom.value === 1) {\n                singleUnit = durationUnit;\n                singleUnitOverrides = overrideConfigs[durationUnit] ? overrideConfigs[durationUnit].rawOptions : {};\n            }\n        }\n    }\n    let queryButtonText = (optionsSubset) => {\n        let buttonTextMap = optionsSubset.buttonText || {};\n        let buttonTextKey = viewDef.defaults.buttonTextKey;\n        if (buttonTextKey != null && buttonTextMap[buttonTextKey] != null) {\n            return buttonTextMap[buttonTextKey];\n        }\n        if (buttonTextMap[viewDef.type] != null) {\n            return buttonTextMap[viewDef.type];\n        }\n        if (buttonTextMap[singleUnit] != null) {\n            return buttonTextMap[singleUnit];\n        }\n        return null;\n    };\n    let queryButtonTitle = (optionsSubset) => {\n        let buttonHints = optionsSubset.buttonHints || {};\n        let buttonKey = viewDef.defaults.buttonTextKey; // use same key as text\n        if (buttonKey != null && buttonHints[buttonKey] != null) {\n            return buttonHints[buttonKey];\n        }\n        if (buttonHints[viewDef.type] != null) {\n            return buttonHints[viewDef.type];\n        }\n        if (buttonHints[singleUnit] != null) {\n            return buttonHints[singleUnit];\n        }\n        return null;\n    };\n    return {\n        type: viewDef.type,\n        component: viewDef.component,\n        duration,\n        durationUnit,\n        singleUnit,\n        optionDefaults: viewDef.defaults,\n        optionOverrides: Object.assign(Object.assign({}, singleUnitOverrides), viewDef.overrides),\n        buttonTextOverride: queryButtonText(dynamicOptionOverrides) ||\n            queryButtonText(optionOverrides) || // constructor-specified buttonText lookup hash takes precedence\n            viewDef.overrides.buttonText,\n        buttonTextDefault: queryButtonText(localeDefaults) ||\n            viewDef.defaults.buttonText ||\n            queryButtonText(BASE_OPTION_DEFAULTS) ||\n            viewDef.type,\n        // not DRY\n        buttonTitleOverride: queryButtonTitle(dynamicOptionOverrides) ||\n            queryButtonTitle(optionOverrides) ||\n            viewDef.overrides.buttonHint,\n        buttonTitleDefault: queryButtonTitle(localeDefaults) ||\n            viewDef.defaults.buttonHint ||\n            queryButtonTitle(BASE_OPTION_DEFAULTS),\n        // will eventually fall back to buttonText\n    };\n}\n// hack to get memoization working\nlet durationInputMap = {};\nfunction createDurationCached(durationInput) {\n    let json = JSON.stringify(durationInput);\n    let res = durationInputMap[json];\n    if (res === undefined) {\n        res = createDuration(durationInput);\n        durationInputMap[json] = res;\n    }\n    return res;\n}\n\nfunction reduceViewType(viewType, action) {\n    switch (action.type) {\n        case 'CHANGE_VIEW_TYPE':\n            viewType = action.viewType;\n    }\n    return viewType;\n}\n\nfunction reduceDynamicOptionOverrides(dynamicOptionOverrides, action) {\n    switch (action.type) {\n        case 'SET_OPTION':\n            return Object.assign(Object.assign({}, dynamicOptionOverrides), { [action.optionName]: action.rawOptionValue });\n        default:\n            return dynamicOptionOverrides;\n    }\n}\n\nfunction reduceDateProfile(currentDateProfile, action, currentDate, dateProfileGenerator) {\n    let dp;\n    switch (action.type) {\n        case 'CHANGE_VIEW_TYPE':\n            return dateProfileGenerator.build(action.dateMarker || currentDate);\n        case 'CHANGE_DATE':\n            return dateProfileGenerator.build(action.dateMarker);\n        case 'PREV':\n            dp = dateProfileGenerator.buildPrev(currentDateProfile, currentDate);\n            if (dp.isValid) {\n                return dp;\n            }\n            break;\n        case 'NEXT':\n            dp = dateProfileGenerator.buildNext(currentDateProfile, currentDate);\n            if (dp.isValid) {\n                return dp;\n            }\n            break;\n    }\n    return currentDateProfile;\n}\n\nfunction initEventSources(calendarOptions, dateProfile, context) {\n    let activeRange = dateProfile ? dateProfile.activeRange : null;\n    return addSources({}, parseInitialSources(calendarOptions, context), activeRange, context);\n}\nfunction reduceEventSources(eventSources, action, dateProfile, context) {\n    let activeRange = dateProfile ? dateProfile.activeRange : null; // need this check?\n    switch (action.type) {\n        case 'ADD_EVENT_SOURCES': // already parsed\n            return addSources(eventSources, action.sources, activeRange, context);\n        case 'REMOVE_EVENT_SOURCE':\n            return removeSource(eventSources, action.sourceId);\n        case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n        case 'NEXT':\n        case 'CHANGE_DATE':\n        case 'CHANGE_VIEW_TYPE':\n            if (dateProfile) {\n                return fetchDirtySources(eventSources, activeRange, context);\n            }\n            return eventSources;\n        case 'FETCH_EVENT_SOURCES':\n            return fetchSourcesByIds(eventSources, action.sourceIds ? // why no type?\n                arrayToHash(action.sourceIds) :\n                excludeStaticSources(eventSources, context), activeRange, action.isRefetch || false, context);\n        case 'RECEIVE_EVENTS':\n        case 'RECEIVE_EVENT_ERROR':\n            return receiveResponse(eventSources, action.sourceId, action.fetchId, action.fetchRange);\n        case 'REMOVE_ALL_EVENT_SOURCES':\n            return {};\n        default:\n            return eventSources;\n    }\n}\nfunction reduceEventSourcesNewTimeZone(eventSources, dateProfile, context) {\n    let activeRange = dateProfile ? dateProfile.activeRange : null; // need this check?\n    return fetchSourcesByIds(eventSources, excludeStaticSources(eventSources, context), activeRange, true, context);\n}\nfunction computeEventSourcesLoading(eventSources) {\n    for (let sourceId in eventSources) {\n        if (eventSources[sourceId].isFetching) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction addSources(eventSourceHash, sources, fetchRange, context) {\n    let hash = {};\n    for (let source of sources) {\n        hash[source.sourceId] = source;\n    }\n    if (fetchRange) {\n        hash = fetchDirtySources(hash, fetchRange, context);\n    }\n    return Object.assign(Object.assign({}, eventSourceHash), hash);\n}\nfunction removeSource(eventSourceHash, sourceId) {\n    return filterHash(eventSourceHash, (eventSource) => eventSource.sourceId !== sourceId);\n}\nfunction fetchDirtySources(sourceHash, fetchRange, context) {\n    return fetchSourcesByIds(sourceHash, filterHash(sourceHash, (eventSource) => isSourceDirty(eventSource, fetchRange, context)), fetchRange, false, context);\n}\nfunction isSourceDirty(eventSource, fetchRange, context) {\n    if (!doesSourceNeedRange(eventSource, context)) {\n        return !eventSource.latestFetchId;\n    }\n    return !context.options.lazyFetching ||\n        !eventSource.fetchRange ||\n        eventSource.isFetching || // always cancel outdated in-progress fetches\n        fetchRange.start < eventSource.fetchRange.start ||\n        fetchRange.end > eventSource.fetchRange.end;\n}\nfunction fetchSourcesByIds(prevSources, sourceIdHash, fetchRange, isRefetch, context) {\n    let nextSources = {};\n    for (let sourceId in prevSources) {\n        let source = prevSources[sourceId];\n        if (sourceIdHash[sourceId]) {\n            nextSources[sourceId] = fetchSource(source, fetchRange, isRefetch, context);\n        }\n        else {\n            nextSources[sourceId] = source;\n        }\n    }\n    return nextSources;\n}\nfunction fetchSource(eventSource, fetchRange, isRefetch, context) {\n    let { options, calendarApi } = context;\n    let sourceDef = context.pluginHooks.eventSourceDefs[eventSource.sourceDefId];\n    let fetchId = guid();\n    sourceDef.fetch({\n        eventSource,\n        range: fetchRange,\n        isRefetch,\n        context,\n    }, (res) => {\n        let { rawEvents } = res;\n        if (options.eventSourceSuccess) {\n            rawEvents = options.eventSourceSuccess.call(calendarApi, rawEvents, res.response) || rawEvents;\n        }\n        if (eventSource.success) {\n            rawEvents = eventSource.success.call(calendarApi, rawEvents, res.response) || rawEvents;\n        }\n        context.dispatch({\n            type: 'RECEIVE_EVENTS',\n            sourceId: eventSource.sourceId,\n            fetchId,\n            fetchRange,\n            rawEvents,\n        });\n    }, (error) => {\n        let errorHandled = false;\n        if (options.eventSourceFailure) {\n            options.eventSourceFailure.call(calendarApi, error);\n            errorHandled = true;\n        }\n        if (eventSource.failure) {\n            eventSource.failure(error);\n            errorHandled = true;\n        }\n        if (!errorHandled) {\n            console.warn(error.message, error);\n        }\n        context.dispatch({\n            type: 'RECEIVE_EVENT_ERROR',\n            sourceId: eventSource.sourceId,\n            fetchId,\n            fetchRange,\n            error,\n        });\n    });\n    return Object.assign(Object.assign({}, eventSource), { isFetching: true, latestFetchId: fetchId });\n}\nfunction receiveResponse(sourceHash, sourceId, fetchId, fetchRange) {\n    let eventSource = sourceHash[sourceId];\n    if (eventSource && // not already removed\n        fetchId === eventSource.latestFetchId) {\n        return Object.assign(Object.assign({}, sourceHash), { [sourceId]: Object.assign(Object.assign({}, eventSource), { isFetching: false, fetchRange }) });\n    }\n    return sourceHash;\n}\nfunction excludeStaticSources(eventSources, context) {\n    return filterHash(eventSources, (eventSource) => doesSourceNeedRange(eventSource, context));\n}\nfunction parseInitialSources(rawOptions, context) {\n    let refiners = buildEventSourceRefiners(context);\n    let rawSources = [].concat(rawOptions.eventSources || []);\n    let sources = []; // parsed\n    if (rawOptions.initialEvents) {\n        rawSources.unshift(rawOptions.initialEvents);\n    }\n    if (rawOptions.events) {\n        rawSources.unshift(rawOptions.events);\n    }\n    for (let rawSource of rawSources) {\n        let source = parseEventSource(rawSource, context, refiners);\n        if (source) {\n            sources.push(source);\n        }\n    }\n    return sources;\n}\nfunction doesSourceNeedRange(eventSource, context) {\n    let defs = context.pluginHooks.eventSourceDefs;\n    return !defs[eventSource.sourceDefId].ignoreRange;\n}\n\nfunction reduceDateSelection(currentSelection, action) {\n    switch (action.type) {\n        case 'UNSELECT_DATES':\n            return null;\n        case 'SELECT_DATES':\n            return action.selection;\n        default:\n            return currentSelection;\n    }\n}\n\nfunction reduceSelectedEvent(currentInstanceId, action) {\n    switch (action.type) {\n        case 'UNSELECT_EVENT':\n            return '';\n        case 'SELECT_EVENT':\n            return action.eventInstanceId;\n        default:\n            return currentInstanceId;\n    }\n}\n\nfunction reduceEventDrag(currentDrag, action) {\n    let newDrag;\n    switch (action.type) {\n        case 'UNSET_EVENT_DRAG':\n            return null;\n        case 'SET_EVENT_DRAG':\n            newDrag = action.state;\n            return {\n                affectedEvents: newDrag.affectedEvents,\n                mutatedEvents: newDrag.mutatedEvents,\n                isEvent: newDrag.isEvent,\n            };\n        default:\n            return currentDrag;\n    }\n}\n\nfunction reduceEventResize(currentResize, action) {\n    let newResize;\n    switch (action.type) {\n        case 'UNSET_EVENT_RESIZE':\n            return null;\n        case 'SET_EVENT_RESIZE':\n            newResize = action.state;\n            return {\n                affectedEvents: newResize.affectedEvents,\n                mutatedEvents: newResize.mutatedEvents,\n                isEvent: newResize.isEvent,\n            };\n        default:\n            return currentResize;\n    }\n}\n\nfunction parseToolbars(calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) {\n    let header = calendarOptions.headerToolbar ? parseToolbar(calendarOptions.headerToolbar, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) : null;\n    let footer = calendarOptions.footerToolbar ? parseToolbar(calendarOptions.footerToolbar, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) : null;\n    return { header, footer };\n}\nfunction parseToolbar(sectionStrHash, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) {\n    let sectionWidgets = {};\n    let viewsWithButtons = [];\n    let hasTitle = false;\n    for (let sectionName in sectionStrHash) {\n        let sectionStr = sectionStrHash[sectionName];\n        let sectionRes = parseSection(sectionStr, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi);\n        sectionWidgets[sectionName] = sectionRes.widgets;\n        viewsWithButtons.push(...sectionRes.viewsWithButtons);\n        hasTitle = hasTitle || sectionRes.hasTitle;\n    }\n    return { sectionWidgets, viewsWithButtons, hasTitle };\n}\n/*\nBAD: querying icons and text here. should be done at render time\n*/\nfunction parseSection(sectionStr, calendarOptions, // defaults+overrides, then refined\ncalendarOptionOverrides, // overrides only!, unrefined :(\ntheme, viewSpecs, calendarApi) {\n    let isRtl = calendarOptions.direction === 'rtl';\n    let calendarCustomButtons = calendarOptions.customButtons || {};\n    let calendarButtonTextOverrides = calendarOptionOverrides.buttonText || {};\n    let calendarButtonText = calendarOptions.buttonText || {};\n    let calendarButtonHintOverrides = calendarOptionOverrides.buttonHints || {};\n    let calendarButtonHints = calendarOptions.buttonHints || {};\n    let sectionSubstrs = sectionStr ? sectionStr.split(' ') : [];\n    let viewsWithButtons = [];\n    let hasTitle = false;\n    let widgets = sectionSubstrs.map((buttonGroupStr) => (buttonGroupStr.split(',').map((buttonName) => {\n        if (buttonName === 'title') {\n            hasTitle = true;\n            return { buttonName };\n        }\n        let customButtonProps;\n        let viewSpec;\n        let buttonClick;\n        let buttonIcon; // only one of these will be set\n        let buttonText; // \"\n        let buttonHint;\n        // ^ for the title=\"\" attribute, for accessibility\n        if ((customButtonProps = calendarCustomButtons[buttonName])) {\n            buttonClick = (ev) => {\n                if (customButtonProps.click) {\n                    customButtonProps.click.call(ev.target, ev, ev.target); // TODO: use Calendar this context?\n                }\n            };\n            (buttonIcon = theme.getCustomButtonIconClass(customButtonProps)) ||\n                (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||\n                (buttonText = customButtonProps.text);\n            buttonHint = customButtonProps.hint || customButtonProps.text;\n        }\n        else if ((viewSpec = viewSpecs[buttonName])) {\n            viewsWithButtons.push(buttonName);\n            buttonClick = () => {\n                calendarApi.changeView(buttonName);\n            };\n            (buttonText = viewSpec.buttonTextOverride) ||\n                (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||\n                (buttonText = viewSpec.buttonTextDefault);\n            let textFallback = viewSpec.buttonTextOverride ||\n                viewSpec.buttonTextDefault;\n            buttonHint = formatWithOrdinals(viewSpec.buttonTitleOverride ||\n                viewSpec.buttonTitleDefault ||\n                calendarOptions.viewHint, [textFallback, buttonName], // view-name = buttonName\n            textFallback);\n        }\n        else if (calendarApi[buttonName]) { // a calendarApi method\n            buttonClick = () => {\n                calendarApi[buttonName]();\n            };\n            (buttonText = calendarButtonTextOverrides[buttonName]) ||\n                (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||\n                (buttonText = calendarButtonText[buttonName]); // everything else is considered default\n            if (buttonName === 'prevYear' || buttonName === 'nextYear') {\n                let prevOrNext = buttonName === 'prevYear' ? 'prev' : 'next';\n                buttonHint = formatWithOrdinals(calendarButtonHintOverrides[prevOrNext] ||\n                    calendarButtonHints[prevOrNext], [\n                    calendarButtonText.year || 'year',\n                    'year',\n                ], calendarButtonText[buttonName]);\n            }\n            else {\n                buttonHint = (navUnit) => formatWithOrdinals(calendarButtonHintOverrides[buttonName] ||\n                    calendarButtonHints[buttonName], [\n                    calendarButtonText[navUnit] || navUnit,\n                    navUnit,\n                ], calendarButtonText[buttonName]);\n            }\n        }\n        return { buttonName, buttonClick, buttonIcon, buttonText, buttonHint };\n    })));\n    return { widgets, viewsWithButtons, hasTitle };\n}\n\n// always represents the current view. otherwise, it'd need to change value every time date changes\nclass ViewImpl {\n    constructor(type, getCurrentData, dateEnv) {\n        this.type = type;\n        this.getCurrentData = getCurrentData;\n        this.dateEnv = dateEnv;\n    }\n    get calendar() {\n        return this.getCurrentData().calendarApi;\n    }\n    get title() {\n        return this.getCurrentData().viewTitle;\n    }\n    get activeStart() {\n        return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.start);\n    }\n    get activeEnd() {\n        return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.end);\n    }\n    get currentStart() {\n        return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.start);\n    }\n    get currentEnd() {\n        return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.end);\n    }\n    getOption(name) {\n        return this.getCurrentData().options[name]; // are the view-specific options\n    }\n}\n\nlet eventSourceDef$2 = {\n    ignoreRange: true,\n    parseMeta(refined) {\n        if (Array.isArray(refined.events)) {\n            return refined.events;\n        }\n        return null;\n    },\n    fetch(arg, successCallback) {\n        successCallback({\n            rawEvents: arg.eventSource.meta,\n        });\n    },\n};\nconst arrayEventSourcePlugin = createPlugin({\n    name: 'array-event-source',\n    eventSourceDefs: [eventSourceDef$2],\n});\n\nlet eventSourceDef$1 = {\n    parseMeta(refined) {\n        if (typeof refined.events === 'function') {\n            return refined.events;\n        }\n        return null;\n    },\n    fetch(arg, successCallback, errorCallback) {\n        const { dateEnv } = arg.context;\n        const func = arg.eventSource.meta;\n        unpromisify(func.bind(null, buildRangeApiWithTimeZone(arg.range, dateEnv)), (rawEvents) => successCallback({ rawEvents }), errorCallback);\n    },\n};\nconst funcEventSourcePlugin = createPlugin({\n    name: 'func-event-source',\n    eventSourceDefs: [eventSourceDef$1],\n});\n\nconst JSON_FEED_EVENT_SOURCE_REFINERS = {\n    method: String,\n    extraParams: identity,\n    startParam: String,\n    endParam: String,\n    timeZoneParam: String,\n};\n\nlet eventSourceDef = {\n    parseMeta(refined) {\n        if (refined.url && (refined.format === 'json' || !refined.format)) {\n            return {\n                url: refined.url,\n                format: 'json',\n                method: (refined.method || 'GET').toUpperCase(),\n                extraParams: refined.extraParams,\n                startParam: refined.startParam,\n                endParam: refined.endParam,\n                timeZoneParam: refined.timeZoneParam,\n            };\n        }\n        return null;\n    },\n    fetch(arg, successCallback, errorCallback) {\n        const { meta } = arg.eventSource;\n        const requestParams = buildRequestParams(meta, arg.range, arg.context);\n        requestJson(meta.method, meta.url, requestParams).then(([rawEvents, response]) => {\n            successCallback({ rawEvents, response });\n        }, errorCallback);\n    },\n};\nconst jsonFeedEventSourcePlugin = createPlugin({\n    name: 'json-event-source',\n    eventSourceRefiners: JSON_FEED_EVENT_SOURCE_REFINERS,\n    eventSourceDefs: [eventSourceDef],\n});\nfunction buildRequestParams(meta, range, context) {\n    let { dateEnv, options } = context;\n    let startParam;\n    let endParam;\n    let timeZoneParam;\n    let customRequestParams;\n    let params = {};\n    startParam = meta.startParam;\n    if (startParam == null) {\n        startParam = options.startParam;\n    }\n    endParam = meta.endParam;\n    if (endParam == null) {\n        endParam = options.endParam;\n    }\n    timeZoneParam = meta.timeZoneParam;\n    if (timeZoneParam == null) {\n        timeZoneParam = options.timeZoneParam;\n    }\n    // retrieve any outbound GET/POST data from the options\n    if (typeof meta.extraParams === 'function') {\n        // supplied as a function that returns a key/value object\n        customRequestParams = meta.extraParams();\n    }\n    else {\n        // probably supplied as a straight key/value object\n        customRequestParams = meta.extraParams || {};\n    }\n    Object.assign(params, customRequestParams);\n    params[startParam] = dateEnv.formatIso(range.start);\n    params[endParam] = dateEnv.formatIso(range.end);\n    if (dateEnv.timeZone !== 'local') {\n        params[timeZoneParam] = dateEnv.timeZone;\n    }\n    return params;\n}\n\nconst SIMPLE_RECURRING_REFINERS = {\n    daysOfWeek: identity,\n    startTime: createDuration,\n    endTime: createDuration,\n    duration: createDuration,\n    startRecur: identity,\n    endRecur: identity,\n};\n\nlet recurring = {\n    parse(refined, dateEnv) {\n        if (refined.daysOfWeek || refined.startTime || refined.endTime || refined.startRecur || refined.endRecur) {\n            let recurringData = {\n                daysOfWeek: refined.daysOfWeek || null,\n                startTime: refined.startTime || null,\n                endTime: refined.endTime || null,\n                startRecur: refined.startRecur ? dateEnv.createMarker(refined.startRecur) : null,\n                endRecur: refined.endRecur ? dateEnv.createMarker(refined.endRecur) : null,\n            };\n            let duration;\n            if (refined.duration) {\n                duration = refined.duration;\n            }\n            if (!duration && refined.startTime && refined.endTime) {\n                duration = subtractDurations(refined.endTime, refined.startTime);\n            }\n            return {\n                allDayGuess: Boolean(!refined.startTime && !refined.endTime),\n                duration,\n                typeData: recurringData, // doesn't need endTime anymore but oh well\n            };\n        }\n        return null;\n    },\n    expand(typeData, framingRange, dateEnv) {\n        let clippedFramingRange = intersectRanges(framingRange, { start: typeData.startRecur, end: typeData.endRecur });\n        if (clippedFramingRange) {\n            return expandRanges(typeData.daysOfWeek, typeData.startTime, clippedFramingRange, dateEnv);\n        }\n        return [];\n    },\n};\nconst simpleRecurringEventsPlugin = createPlugin({\n    name: 'simple-recurring-event',\n    recurringTypes: [recurring],\n    eventRefiners: SIMPLE_RECURRING_REFINERS,\n});\nfunction expandRanges(daysOfWeek, startTime, framingRange, dateEnv) {\n    let dowHash = daysOfWeek ? arrayToHash(daysOfWeek) : null;\n    let dayMarker = startOfDay(framingRange.start);\n    let endMarker = framingRange.end;\n    let instanceStarts = [];\n    while (dayMarker < endMarker) {\n        let instanceStart;\n        // if everyday, or this particular day-of-week\n        if (!dowHash || dowHash[dayMarker.getUTCDay()]) {\n            if (startTime) {\n                instanceStart = dateEnv.add(dayMarker, startTime);\n            }\n            else {\n                instanceStart = dayMarker;\n            }\n            instanceStarts.push(instanceStart);\n        }\n        dayMarker = addDays(dayMarker, 1);\n    }\n    return instanceStarts;\n}\n\nconst changeHandlerPlugin = createPlugin({\n    name: 'change-handler',\n    optionChangeHandlers: {\n        events(events, context) {\n            handleEventSources([events], context);\n        },\n        eventSources: handleEventSources,\n    },\n});\n/*\nBUG: if `event` was supplied, all previously-given `eventSources` will be wiped out\n*/\nfunction handleEventSources(inputs, context) {\n    let unfoundSources = hashValuesToArray(context.getCurrentData().eventSources);\n    if (unfoundSources.length === 1 &&\n        inputs.length === 1 &&\n        Array.isArray(unfoundSources[0]._raw) &&\n        Array.isArray(inputs[0])) {\n        context.dispatch({\n            type: 'RESET_RAW_EVENTS',\n            sourceId: unfoundSources[0].sourceId,\n            rawEvents: inputs[0],\n        });\n        return;\n    }\n    let newInputs = [];\n    for (let input of inputs) {\n        let inputFound = false;\n        for (let i = 0; i < unfoundSources.length; i += 1) {\n            if (unfoundSources[i]._raw === input) {\n                unfoundSources.splice(i, 1); // delete\n                inputFound = true;\n                break;\n            }\n        }\n        if (!inputFound) {\n            newInputs.push(input);\n        }\n    }\n    for (let unfoundSource of unfoundSources) {\n        context.dispatch({\n            type: 'REMOVE_EVENT_SOURCE',\n            sourceId: unfoundSource.sourceId,\n        });\n    }\n    for (let newInput of newInputs) {\n        context.calendarApi.addEventSource(newInput);\n    }\n}\n\nfunction handleDateProfile(dateProfile, context) {\n    context.emitter.trigger('datesSet', Object.assign(Object.assign({}, buildRangeApiWithTimeZone(dateProfile.activeRange, context.dateEnv)), { view: context.viewApi }));\n}\n\nfunction handleEventStore(eventStore, context) {\n    let { emitter } = context;\n    if (emitter.hasHandlers('eventsSet')) {\n        emitter.trigger('eventsSet', buildEventApis(eventStore, context));\n    }\n}\n\n/*\nthis array is exposed on the root namespace so that UMD plugins can add to it.\nsee the rollup-bundles script.\n*/\nconst globalPlugins = [\n    arrayEventSourcePlugin,\n    funcEventSourcePlugin,\n    jsonFeedEventSourcePlugin,\n    simpleRecurringEventsPlugin,\n    changeHandlerPlugin,\n    createPlugin({\n        name: 'misc',\n        isLoadingFuncs: [\n            (state) => computeEventSourcesLoading(state.eventSources),\n        ],\n        propSetHandlers: {\n            dateProfile: handleDateProfile,\n            eventStore: handleEventStore,\n        },\n    }),\n];\n\nclass TaskRunner {\n    constructor(runTaskOption, drainedOption) {\n        this.runTaskOption = runTaskOption;\n        this.drainedOption = drainedOption;\n        this.queue = [];\n        this.delayedRunner = new DelayedRunner(this.drain.bind(this));\n    }\n    request(task, delay) {\n        this.queue.push(task);\n        this.delayedRunner.request(delay);\n    }\n    pause(scope) {\n        this.delayedRunner.pause(scope);\n    }\n    resume(scope, force) {\n        this.delayedRunner.resume(scope, force);\n    }\n    drain() {\n        let { queue } = this;\n        while (queue.length) {\n            let completedTasks = [];\n            let task;\n            while ((task = queue.shift())) {\n                this.runTask(task);\n                completedTasks.push(task);\n            }\n            this.drained(completedTasks);\n        } // keep going, in case new tasks were added in the drained handler\n    }\n    runTask(task) {\n        if (this.runTaskOption) {\n            this.runTaskOption(task);\n        }\n    }\n    drained(completedTasks) {\n        if (this.drainedOption) {\n            this.drainedOption(completedTasks);\n        }\n    }\n}\n\n// Computes what the title at the top of the calendarApi should be for this view\nfunction buildTitle(dateProfile, viewOptions, dateEnv) {\n    let range;\n    // for views that span a large unit of time, show the proper interval, ignoring stray days before and after\n    if (/^(year|month)$/.test(dateProfile.currentRangeUnit)) {\n        range = dateProfile.currentRange;\n    }\n    else { // for day units or smaller, use the actual day range\n        range = dateProfile.activeRange;\n    }\n    return dateEnv.formatRange(range.start, range.end, createFormatter(viewOptions.titleFormat || buildTitleFormat(dateProfile)), {\n        isEndExclusive: dateProfile.isRangeAllDay,\n        defaultSeparator: viewOptions.titleRangeSeparator,\n    });\n}\n// Generates the format string that should be used to generate the title for the current date range.\n// Attempts to compute the most appropriate format if not explicitly specified with `titleFormat`.\nfunction buildTitleFormat(dateProfile) {\n    let { currentRangeUnit } = dateProfile;\n    if (currentRangeUnit === 'year') {\n        return { year: 'numeric' };\n    }\n    if (currentRangeUnit === 'month') {\n        return { year: 'numeric', month: 'long' }; // like \"September 2014\"\n    }\n    let days = diffWholeDays(dateProfile.currentRange.start, dateProfile.currentRange.end);\n    if (days !== null && days > 1) {\n        // multi-day range. shorter, like \"Sep 9 - 10 2014\"\n        return { year: 'numeric', month: 'short', day: 'numeric' };\n    }\n    // one day. longer, like \"September 9 2014\"\n    return { year: 'numeric', month: 'long', day: 'numeric' };\n}\n\n// in future refactor, do the redux-style function(state=initial) for initial-state\n// also, whatever is happening in constructor, have it happen in action queue too\nclass CalendarDataManager {\n    constructor(props) {\n        this.computeCurrentViewData = memoize(this._computeCurrentViewData);\n        this.organizeRawLocales = memoize(organizeRawLocales);\n        this.buildLocale = memoize(buildLocale);\n        this.buildPluginHooks = buildBuildPluginHooks();\n        this.buildDateEnv = memoize(buildDateEnv$1);\n        this.buildTheme = memoize(buildTheme);\n        this.parseToolbars = memoize(parseToolbars);\n        this.buildViewSpecs = memoize(buildViewSpecs);\n        this.buildDateProfileGenerator = memoizeObjArg(buildDateProfileGenerator);\n        this.buildViewApi = memoize(buildViewApi);\n        this.buildViewUiProps = memoizeObjArg(buildViewUiProps);\n        this.buildEventUiBySource = memoize(buildEventUiBySource, isPropsEqual);\n        this.buildEventUiBases = memoize(buildEventUiBases);\n        this.parseContextBusinessHours = memoizeObjArg(parseContextBusinessHours);\n        this.buildTitle = memoize(buildTitle);\n        this.emitter = new Emitter();\n        this.actionRunner = new TaskRunner(this._handleAction.bind(this), this.updateData.bind(this));\n        this.currentCalendarOptionsInput = {};\n        this.currentCalendarOptionsRefined = {};\n        this.currentViewOptionsInput = {};\n        this.currentViewOptionsRefined = {};\n        this.currentCalendarOptionsRefiners = {};\n        this.optionsForRefining = [];\n        this.optionsForHandling = [];\n        this.getCurrentData = () => this.data;\n        this.dispatch = (action) => {\n            this.actionRunner.request(action); // protects against recursive calls to _handleAction\n        };\n        this.props = props;\n        this.actionRunner.pause();\n        let dynamicOptionOverrides = {};\n        let optionsData = this.computeOptionsData(props.optionOverrides, dynamicOptionOverrides, props.calendarApi);\n        let currentViewType = optionsData.calendarOptions.initialView || optionsData.pluginHooks.initialView;\n        let currentViewData = this.computeCurrentViewData(currentViewType, optionsData, props.optionOverrides, dynamicOptionOverrides);\n        // wire things up\n        // TODO: not DRY\n        props.calendarApi.currentDataManager = this;\n        this.emitter.setThisContext(props.calendarApi);\n        this.emitter.setOptions(currentViewData.options);\n        let currentDate = getInitialDate(optionsData.calendarOptions, optionsData.dateEnv);\n        let dateProfile = currentViewData.dateProfileGenerator.build(currentDate);\n        if (!rangeContainsMarker(dateProfile.activeRange, currentDate)) {\n            currentDate = dateProfile.currentRange.start;\n        }\n        let calendarContext = {\n            dateEnv: optionsData.dateEnv,\n            options: optionsData.calendarOptions,\n            pluginHooks: optionsData.pluginHooks,\n            calendarApi: props.calendarApi,\n            dispatch: this.dispatch,\n            emitter: this.emitter,\n            getCurrentData: this.getCurrentData,\n        };\n        // needs to be after setThisContext\n        for (let callback of optionsData.pluginHooks.contextInit) {\n            callback(calendarContext);\n        }\n        // NOT DRY\n        let eventSources = initEventSources(optionsData.calendarOptions, dateProfile, calendarContext);\n        let initialState = {\n            dynamicOptionOverrides,\n            currentViewType,\n            currentDate,\n            dateProfile,\n            businessHours: this.parseContextBusinessHours(calendarContext),\n            eventSources,\n            eventUiBases: {},\n            eventStore: createEmptyEventStore(),\n            renderableEventStore: createEmptyEventStore(),\n            dateSelection: null,\n            eventSelection: '',\n            eventDrag: null,\n            eventResize: null,\n            selectionConfig: this.buildViewUiProps(calendarContext).selectionConfig,\n        };\n        let contextAndState = Object.assign(Object.assign({}, calendarContext), initialState);\n        for (let reducer of optionsData.pluginHooks.reducers) {\n            Object.assign(initialState, reducer(null, null, contextAndState));\n        }\n        if (computeIsLoading(initialState, calendarContext)) {\n            this.emitter.trigger('loading', true); // NOT DRY\n        }\n        this.state = initialState;\n        this.updateData();\n        this.actionRunner.resume();\n    }\n    resetOptions(optionOverrides, changedOptionNames) {\n        let { props } = this;\n        if (changedOptionNames === undefined) {\n            props.optionOverrides = optionOverrides;\n        }\n        else {\n            props.optionOverrides = Object.assign(Object.assign({}, (props.optionOverrides || {})), optionOverrides);\n            this.optionsForRefining.push(...changedOptionNames);\n        }\n        if (changedOptionNames === undefined || changedOptionNames.length) {\n            this.actionRunner.request({\n                type: 'NOTHING',\n            });\n        }\n    }\n    _handleAction(action) {\n        let { props, state, emitter } = this;\n        let dynamicOptionOverrides = reduceDynamicOptionOverrides(state.dynamicOptionOverrides, action);\n        let optionsData = this.computeOptionsData(props.optionOverrides, dynamicOptionOverrides, props.calendarApi);\n        let currentViewType = reduceViewType(state.currentViewType, action);\n        let currentViewData = this.computeCurrentViewData(currentViewType, optionsData, props.optionOverrides, dynamicOptionOverrides);\n        // wire things up\n        // TODO: not DRY\n        props.calendarApi.currentDataManager = this;\n        emitter.setThisContext(props.calendarApi);\n        emitter.setOptions(currentViewData.options);\n        let calendarContext = {\n            dateEnv: optionsData.dateEnv,\n            options: optionsData.calendarOptions,\n            pluginHooks: optionsData.pluginHooks,\n            calendarApi: props.calendarApi,\n            dispatch: this.dispatch,\n            emitter,\n            getCurrentData: this.getCurrentData,\n        };\n        let { currentDate, dateProfile } = state;\n        if (this.data && this.data.dateProfileGenerator !== currentViewData.dateProfileGenerator) { // hack\n            dateProfile = currentViewData.dateProfileGenerator.build(currentDate);\n        }\n        currentDate = reduceCurrentDate(currentDate, action);\n        dateProfile = reduceDateProfile(dateProfile, action, currentDate, currentViewData.dateProfileGenerator);\n        if (action.type === 'PREV' || // TODO: move this logic into DateProfileGenerator\n            action.type === 'NEXT' || // \"\n            !rangeContainsMarker(dateProfile.currentRange, currentDate)) {\n            currentDate = dateProfile.currentRange.start;\n        }\n        let eventSources = reduceEventSources(state.eventSources, action, dateProfile, calendarContext);\n        let eventStore = reduceEventStore(state.eventStore, action, eventSources, dateProfile, calendarContext);\n        let isEventsLoading = computeEventSourcesLoading(eventSources); // BAD. also called in this func in computeIsLoading\n        let renderableEventStore = (isEventsLoading && !currentViewData.options.progressiveEventRendering) ?\n            (state.renderableEventStore || eventStore) : // try from previous state\n            eventStore;\n        let { eventUiSingleBase, selectionConfig } = this.buildViewUiProps(calendarContext); // will memoize obj\n        let eventUiBySource = this.buildEventUiBySource(eventSources);\n        let eventUiBases = this.buildEventUiBases(renderableEventStore.defs, eventUiSingleBase, eventUiBySource);\n        let newState = {\n            dynamicOptionOverrides,\n            currentViewType,\n            currentDate,\n            dateProfile,\n            eventSources,\n            eventStore,\n            renderableEventStore,\n            selectionConfig,\n            eventUiBases,\n            businessHours: this.parseContextBusinessHours(calendarContext),\n            dateSelection: reduceDateSelection(state.dateSelection, action),\n            eventSelection: reduceSelectedEvent(state.eventSelection, action),\n            eventDrag: reduceEventDrag(state.eventDrag, action),\n            eventResize: reduceEventResize(state.eventResize, action),\n        };\n        let contextAndState = Object.assign(Object.assign({}, calendarContext), newState);\n        for (let reducer of optionsData.pluginHooks.reducers) {\n            Object.assign(newState, reducer(state, action, contextAndState)); // give the OLD state, for old value\n        }\n        let wasLoading = computeIsLoading(state, calendarContext);\n        let isLoading = computeIsLoading(newState, calendarContext);\n        // TODO: use propSetHandlers in plugin system\n        if (!wasLoading && isLoading) {\n            emitter.trigger('loading', true);\n        }\n        else if (wasLoading && !isLoading) {\n            emitter.trigger('loading', false);\n        }\n        this.state = newState;\n        if (props.onAction) {\n            props.onAction(action);\n        }\n    }\n    updateData() {\n        let { props, state } = this;\n        let oldData = this.data;\n        let optionsData = this.computeOptionsData(props.optionOverrides, state.dynamicOptionOverrides, props.calendarApi);\n        let currentViewData = this.computeCurrentViewData(state.currentViewType, optionsData, props.optionOverrides, state.dynamicOptionOverrides);\n        let data = this.data = Object.assign(Object.assign(Object.assign({ viewTitle: this.buildTitle(state.dateProfile, currentViewData.options, optionsData.dateEnv), calendarApi: props.calendarApi, dispatch: this.dispatch, emitter: this.emitter, getCurrentData: this.getCurrentData }, optionsData), currentViewData), state);\n        let changeHandlers = optionsData.pluginHooks.optionChangeHandlers;\n        let oldCalendarOptions = oldData && oldData.calendarOptions;\n        let newCalendarOptions = optionsData.calendarOptions;\n        if (oldCalendarOptions && oldCalendarOptions !== newCalendarOptions) {\n            if (oldCalendarOptions.timeZone !== newCalendarOptions.timeZone) {\n                // hack\n                state.eventSources = data.eventSources = reduceEventSourcesNewTimeZone(data.eventSources, state.dateProfile, data);\n                state.eventStore = data.eventStore = rezoneEventStoreDates(data.eventStore, oldData.dateEnv, data.dateEnv);\n                state.renderableEventStore = data.renderableEventStore = rezoneEventStoreDates(data.renderableEventStore, oldData.dateEnv, data.dateEnv);\n            }\n            for (let optionName in changeHandlers) {\n                if (this.optionsForHandling.indexOf(optionName) !== -1 ||\n                    oldCalendarOptions[optionName] !== newCalendarOptions[optionName]) {\n                    changeHandlers[optionName](newCalendarOptions[optionName], data);\n                }\n            }\n        }\n        this.optionsForHandling = [];\n        if (props.onData) {\n            props.onData(data);\n        }\n    }\n    computeOptionsData(optionOverrides, dynamicOptionOverrides, calendarApi) {\n        // TODO: blacklist options that are handled by optionChangeHandlers\n        if (!this.optionsForRefining.length &&\n            optionOverrides === this.stableOptionOverrides &&\n            dynamicOptionOverrides === this.stableDynamicOptionOverrides) {\n            return this.stableCalendarOptionsData;\n        }\n        let { refinedOptions, pluginHooks, localeDefaults, availableLocaleData, extra, } = this.processRawCalendarOptions(optionOverrides, dynamicOptionOverrides);\n        warnUnknownOptions(extra);\n        let dateEnv = this.buildDateEnv(refinedOptions.timeZone, refinedOptions.locale, refinedOptions.weekNumberCalculation, refinedOptions.firstDay, refinedOptions.weekText, pluginHooks, availableLocaleData, refinedOptions.defaultRangeSeparator);\n        let viewSpecs = this.buildViewSpecs(pluginHooks.views, this.stableOptionOverrides, this.stableDynamicOptionOverrides, localeDefaults);\n        let theme = this.buildTheme(refinedOptions, pluginHooks);\n        let toolbarConfig = this.parseToolbars(refinedOptions, this.stableOptionOverrides, theme, viewSpecs, calendarApi);\n        return this.stableCalendarOptionsData = {\n            calendarOptions: refinedOptions,\n            pluginHooks,\n            dateEnv,\n            viewSpecs,\n            theme,\n            toolbarConfig,\n            localeDefaults,\n            availableRawLocales: availableLocaleData.map,\n        };\n    }\n    // always called from behind a memoizer\n    processRawCalendarOptions(optionOverrides, dynamicOptionOverrides) {\n        let { locales, locale } = mergeRawOptions([\n            BASE_OPTION_DEFAULTS,\n            optionOverrides,\n            dynamicOptionOverrides,\n        ]);\n        let availableLocaleData = this.organizeRawLocales(locales);\n        let availableRawLocales = availableLocaleData.map;\n        let localeDefaults = this.buildLocale(locale || availableLocaleData.defaultCode, availableRawLocales).options;\n        let pluginHooks = this.buildPluginHooks(optionOverrides.plugins || [], globalPlugins);\n        let refiners = this.currentCalendarOptionsRefiners = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, BASE_OPTION_REFINERS), CALENDAR_LISTENER_REFINERS), CALENDAR_OPTION_REFINERS), pluginHooks.listenerRefiners), pluginHooks.optionRefiners);\n        let extra = {};\n        let raw = mergeRawOptions([\n            BASE_OPTION_DEFAULTS,\n            localeDefaults,\n            optionOverrides,\n            dynamicOptionOverrides,\n        ]);\n        let refined = {};\n        let currentRaw = this.currentCalendarOptionsInput;\n        let currentRefined = this.currentCalendarOptionsRefined;\n        let anyChanges = false;\n        for (let optionName in raw) {\n            if (this.optionsForRefining.indexOf(optionName) === -1 && (raw[optionName] === currentRaw[optionName] || (COMPLEX_OPTION_COMPARATORS[optionName] &&\n                (optionName in currentRaw) &&\n                COMPLEX_OPTION_COMPARATORS[optionName](currentRaw[optionName], raw[optionName])))) {\n                refined[optionName] = currentRefined[optionName];\n            }\n            else if (refiners[optionName]) {\n                refined[optionName] = refiners[optionName](raw[optionName]);\n                anyChanges = true;\n            }\n            else {\n                extra[optionName] = currentRaw[optionName];\n            }\n        }\n        if (anyChanges) {\n            this.currentCalendarOptionsInput = raw;\n            this.currentCalendarOptionsRefined = refined;\n            this.stableOptionOverrides = optionOverrides;\n            this.stableDynamicOptionOverrides = dynamicOptionOverrides;\n        }\n        this.optionsForHandling.push(...this.optionsForRefining);\n        this.optionsForRefining = [];\n        return {\n            rawOptions: this.currentCalendarOptionsInput,\n            refinedOptions: this.currentCalendarOptionsRefined,\n            pluginHooks,\n            availableLocaleData,\n            localeDefaults,\n            extra,\n        };\n    }\n    _computeCurrentViewData(viewType, optionsData, optionOverrides, dynamicOptionOverrides) {\n        let viewSpec = optionsData.viewSpecs[viewType];\n        if (!viewSpec) {\n            throw new Error(`viewType \"${viewType}\" is not available. Please make sure you've loaded all neccessary plugins`);\n        }\n        let { refinedOptions, extra } = this.processRawViewOptions(viewSpec, optionsData.pluginHooks, optionsData.localeDefaults, optionOverrides, dynamicOptionOverrides);\n        warnUnknownOptions(extra);\n        let dateProfileGenerator = this.buildDateProfileGenerator({\n            dateProfileGeneratorClass: viewSpec.optionDefaults.dateProfileGeneratorClass,\n            duration: viewSpec.duration,\n            durationUnit: viewSpec.durationUnit,\n            usesMinMaxTime: viewSpec.optionDefaults.usesMinMaxTime,\n            dateEnv: optionsData.dateEnv,\n            calendarApi: this.props.calendarApi,\n            slotMinTime: refinedOptions.slotMinTime,\n            slotMaxTime: refinedOptions.slotMaxTime,\n            showNonCurrentDates: refinedOptions.showNonCurrentDates,\n            dayCount: refinedOptions.dayCount,\n            dateAlignment: refinedOptions.dateAlignment,\n            dateIncrement: refinedOptions.dateIncrement,\n            hiddenDays: refinedOptions.hiddenDays,\n            weekends: refinedOptions.weekends,\n            nowInput: refinedOptions.now,\n            validRangeInput: refinedOptions.validRange,\n            visibleRangeInput: refinedOptions.visibleRange,\n            fixedWeekCount: refinedOptions.fixedWeekCount,\n        });\n        let viewApi = this.buildViewApi(viewType, this.getCurrentData, optionsData.dateEnv);\n        return { viewSpec, options: refinedOptions, dateProfileGenerator, viewApi };\n    }\n    processRawViewOptions(viewSpec, pluginHooks, localeDefaults, optionOverrides, dynamicOptionOverrides) {\n        let raw = mergeRawOptions([\n            BASE_OPTION_DEFAULTS,\n            viewSpec.optionDefaults,\n            localeDefaults,\n            optionOverrides,\n            viewSpec.optionOverrides,\n            dynamicOptionOverrides,\n        ]);\n        let refiners = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, BASE_OPTION_REFINERS), CALENDAR_LISTENER_REFINERS), CALENDAR_OPTION_REFINERS), VIEW_OPTION_REFINERS), pluginHooks.listenerRefiners), pluginHooks.optionRefiners);\n        let refined = {};\n        let currentRaw = this.currentViewOptionsInput;\n        let currentRefined = this.currentViewOptionsRefined;\n        let anyChanges = false;\n        let extra = {};\n        for (let optionName in raw) {\n            if (raw[optionName] === currentRaw[optionName] ||\n                (COMPLEX_OPTION_COMPARATORS[optionName] &&\n                    COMPLEX_OPTION_COMPARATORS[optionName](raw[optionName], currentRaw[optionName]))) {\n                refined[optionName] = currentRefined[optionName];\n            }\n            else {\n                if (raw[optionName] === this.currentCalendarOptionsInput[optionName] ||\n                    (COMPLEX_OPTION_COMPARATORS[optionName] &&\n                        COMPLEX_OPTION_COMPARATORS[optionName](raw[optionName], this.currentCalendarOptionsInput[optionName]))) {\n                    if (optionName in this.currentCalendarOptionsRefined) { // might be an \"extra\" prop\n                        refined[optionName] = this.currentCalendarOptionsRefined[optionName];\n                    }\n                }\n                else if (refiners[optionName]) {\n                    refined[optionName] = refiners[optionName](raw[optionName]);\n                }\n                else {\n                    extra[optionName] = raw[optionName];\n                }\n                anyChanges = true;\n            }\n        }\n        if (anyChanges) {\n            this.currentViewOptionsInput = raw;\n            this.currentViewOptionsRefined = refined;\n        }\n        return {\n            rawOptions: this.currentViewOptionsInput,\n            refinedOptions: this.currentViewOptionsRefined,\n            extra,\n        };\n    }\n}\nfunction buildDateEnv$1(timeZone, explicitLocale, weekNumberCalculation, firstDay, weekText, pluginHooks, availableLocaleData, defaultSeparator) {\n    let locale = buildLocale(explicitLocale || availableLocaleData.defaultCode, availableLocaleData.map);\n    return new DateEnv({\n        calendarSystem: 'gregory',\n        timeZone,\n        namedTimeZoneImpl: pluginHooks.namedTimeZonedImpl,\n        locale,\n        weekNumberCalculation,\n        firstDay,\n        weekText,\n        cmdFormatter: pluginHooks.cmdFormatter,\n        defaultSeparator,\n    });\n}\nfunction buildTheme(options, pluginHooks) {\n    let ThemeClass = pluginHooks.themeClasses[options.themeSystem] || StandardTheme;\n    return new ThemeClass(options);\n}\nfunction buildDateProfileGenerator(props) {\n    let DateProfileGeneratorClass = props.dateProfileGeneratorClass || DateProfileGenerator;\n    return new DateProfileGeneratorClass(props);\n}\nfunction buildViewApi(type, getCurrentData, dateEnv) {\n    return new ViewImpl(type, getCurrentData, dateEnv);\n}\nfunction buildEventUiBySource(eventSources) {\n    return mapHash(eventSources, (eventSource) => eventSource.ui);\n}\nfunction buildEventUiBases(eventDefs, eventUiSingleBase, eventUiBySource) {\n    let eventUiBases = { '': eventUiSingleBase };\n    for (let defId in eventDefs) {\n        let def = eventDefs[defId];\n        if (def.sourceId && eventUiBySource[def.sourceId]) {\n            eventUiBases[defId] = eventUiBySource[def.sourceId];\n        }\n    }\n    return eventUiBases;\n}\nfunction buildViewUiProps(calendarContext) {\n    let { options } = calendarContext;\n    return {\n        eventUiSingleBase: createEventUi({\n            display: options.eventDisplay,\n            editable: options.editable,\n            startEditable: options.eventStartEditable,\n            durationEditable: options.eventDurationEditable,\n            constraint: options.eventConstraint,\n            overlap: typeof options.eventOverlap === 'boolean' ? options.eventOverlap : undefined,\n            allow: options.eventAllow,\n            backgroundColor: options.eventBackgroundColor,\n            borderColor: options.eventBorderColor,\n            textColor: options.eventTextColor,\n            color: options.eventColor,\n            // classNames: options.eventClassNames // render hook will handle this\n        }, calendarContext),\n        selectionConfig: createEventUi({\n            constraint: options.selectConstraint,\n            overlap: typeof options.selectOverlap === 'boolean' ? options.selectOverlap : undefined,\n            allow: options.selectAllow,\n        }, calendarContext),\n    };\n}\nfunction computeIsLoading(state, context) {\n    for (let isLoadingFunc of context.pluginHooks.isLoadingFuncs) {\n        if (isLoadingFunc(state)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction parseContextBusinessHours(calendarContext) {\n    return parseBusinessHours(calendarContext.options.businessHours, calendarContext);\n}\nfunction warnUnknownOptions(options, viewName) {\n    for (let optionName in options) {\n        console.warn(`Unknown option '${optionName}'` +\n            (viewName ? ` for view '${viewName}'` : ''));\n    }\n}\n\nclass ToolbarSection extends BaseComponent {\n    render() {\n        let children = this.props.widgetGroups.map((widgetGroup) => this.renderWidgetGroup(widgetGroup));\n        return createElement('div', { className: 'fc-toolbar-chunk' }, ...children);\n    }\n    renderWidgetGroup(widgetGroup) {\n        let { props } = this;\n        let { theme } = this.context;\n        let children = [];\n        let isOnlyButtons = true;\n        for (let widget of widgetGroup) {\n            let { buttonName, buttonClick, buttonText, buttonIcon, buttonHint } = widget;\n            if (buttonName === 'title') {\n                isOnlyButtons = false;\n                children.push(createElement(\"h2\", { className: \"fc-toolbar-title\", id: props.titleId }, props.title));\n            }\n            else {\n                let isPressed = buttonName === props.activeButton;\n                let isDisabled = (!props.isTodayEnabled && buttonName === 'today') ||\n                    (!props.isPrevEnabled && buttonName === 'prev') ||\n                    (!props.isNextEnabled && buttonName === 'next');\n                let buttonClasses = [`fc-${buttonName}-button`, theme.getClass('button')];\n                if (isPressed) {\n                    buttonClasses.push(theme.getClass('buttonActive'));\n                }\n                children.push(createElement(\"button\", { type: \"button\", title: typeof buttonHint === 'function' ? buttonHint(props.navUnit) : buttonHint, disabled: isDisabled, \"aria-pressed\": isPressed, className: buttonClasses.join(' '), onClick: buttonClick }, buttonText || (buttonIcon ? createElement(\"span\", { className: buttonIcon }) : '')));\n            }\n        }\n        if (children.length > 1) {\n            let groupClassName = (isOnlyButtons && theme.getClass('buttonGroup')) || '';\n            return createElement('div', { className: groupClassName }, ...children);\n        }\n        return children[0];\n    }\n}\n\nclass Toolbar extends BaseComponent {\n    render() {\n        let { model, extraClassName } = this.props;\n        let forceLtr = false;\n        let startContent;\n        let endContent;\n        let sectionWidgets = model.sectionWidgets;\n        let centerContent = sectionWidgets.center;\n        if (sectionWidgets.left) {\n            forceLtr = true;\n            startContent = sectionWidgets.left;\n        }\n        else {\n            startContent = sectionWidgets.start;\n        }\n        if (sectionWidgets.right) {\n            forceLtr = true;\n            endContent = sectionWidgets.right;\n        }\n        else {\n            endContent = sectionWidgets.end;\n        }\n        let classNames = [\n            extraClassName || '',\n            'fc-toolbar',\n            forceLtr ? 'fc-toolbar-ltr' : '',\n        ];\n        return (createElement(\"div\", { className: classNames.join(' ') },\n            this.renderSection('start', startContent || []),\n            this.renderSection('center', centerContent || []),\n            this.renderSection('end', endContent || [])));\n    }\n    renderSection(key, widgetGroups) {\n        let { props } = this;\n        return (createElement(ToolbarSection, { key: key, widgetGroups: widgetGroups, title: props.title, navUnit: props.navUnit, activeButton: props.activeButton, isTodayEnabled: props.isTodayEnabled, isPrevEnabled: props.isPrevEnabled, isNextEnabled: props.isNextEnabled, titleId: props.titleId }));\n    }\n}\n\nclass ViewHarness extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            availableWidth: null,\n        };\n        this.handleEl = (el) => {\n            this.el = el;\n            setRef(this.props.elRef, el);\n            this.updateAvailableWidth();\n        };\n        this.handleResize = () => {\n            this.updateAvailableWidth();\n        };\n    }\n    render() {\n        let { props, state } = this;\n        let { aspectRatio } = props;\n        let classNames = [\n            'fc-view-harness',\n            (aspectRatio || props.liquid || props.height)\n                ? 'fc-view-harness-active' // harness controls the height\n                : 'fc-view-harness-passive', // let the view do the height\n        ];\n        let height = '';\n        let paddingBottom = '';\n        if (aspectRatio) {\n            if (state.availableWidth !== null) {\n                height = state.availableWidth / aspectRatio;\n            }\n            else {\n                // while waiting to know availableWidth, we can't set height to *zero*\n                // because will cause lots of unnecessary scrollbars within scrollgrid.\n                // BETTER: don't start rendering ANYTHING yet until we know container width\n                // NOTE: why not always use paddingBottom? Causes height oscillation (issue 5606)\n                paddingBottom = `${(1 / aspectRatio) * 100}%`;\n            }\n        }\n        else {\n            height = props.height || '';\n        }\n        return (createElement(\"div\", { \"aria-labelledby\": props.labeledById, ref: this.handleEl, className: classNames.join(' '), style: { height, paddingBottom } }, props.children));\n    }\n    componentDidMount() {\n        this.context.addResizeHandler(this.handleResize);\n    }\n    componentWillUnmount() {\n        this.context.removeResizeHandler(this.handleResize);\n    }\n    updateAvailableWidth() {\n        if (this.el && // needed. but why?\n            this.props.aspectRatio // aspectRatio is the only height setting that needs availableWidth\n        ) {\n            this.setState({ availableWidth: this.el.offsetWidth });\n        }\n    }\n}\n\n/*\nDetects when the user clicks on an event within a DateComponent\n*/\nclass EventClicking extends Interaction {\n    constructor(settings) {\n        super(settings);\n        this.handleSegClick = (ev, segEl) => {\n            let { component } = this;\n            let { context } = component;\n            let seg = getElSeg(segEl);\n            if (seg && // might be the <div> surrounding the more link\n                component.isValidSegDownEl(ev.target)) {\n                // our way to simulate a link click for elements that can't be <a> tags\n                // grab before trigger fired in case trigger trashes DOM thru rerendering\n                let hasUrlContainer = elementClosest(ev.target, '.fc-event-forced-url');\n                let url = hasUrlContainer ? hasUrlContainer.querySelector('a[href]').href : '';\n                context.emitter.trigger('eventClick', {\n                    el: segEl,\n                    event: new EventImpl(component.context, seg.eventRange.def, seg.eventRange.instance),\n                    jsEvent: ev,\n                    view: context.viewApi,\n                });\n                if (url && !ev.defaultPrevented) {\n                    window.location.href = url;\n                }\n            }\n        };\n        this.destroy = listenBySelector(settings.el, 'click', '.fc-event', // on both fg and bg events\n        this.handleSegClick);\n    }\n}\n\n/*\nTriggers events and adds/removes core classNames when the user's pointer\nenters/leaves event-elements of a component.\n*/\nclass EventHovering extends Interaction {\n    constructor(settings) {\n        super(settings);\n        // for simulating an eventMouseLeave when the event el is destroyed while mouse is over it\n        this.handleEventElRemove = (el) => {\n            if (el === this.currentSegEl) {\n                this.handleSegLeave(null, this.currentSegEl);\n            }\n        };\n        this.handleSegEnter = (ev, segEl) => {\n            if (getElSeg(segEl)) { // TODO: better way to make sure not hovering over more+ link or its wrapper\n                this.currentSegEl = segEl;\n                this.triggerEvent('eventMouseEnter', ev, segEl);\n            }\n        };\n        this.handleSegLeave = (ev, segEl) => {\n            if (this.currentSegEl) {\n                this.currentSegEl = null;\n                this.triggerEvent('eventMouseLeave', ev, segEl);\n            }\n        };\n        this.removeHoverListeners = listenToHoverBySelector(settings.el, '.fc-event', // on both fg and bg events\n        this.handleSegEnter, this.handleSegLeave);\n    }\n    destroy() {\n        this.removeHoverListeners();\n    }\n    triggerEvent(publicEvName, ev, segEl) {\n        let { component } = this;\n        let { context } = component;\n        let seg = getElSeg(segEl);\n        if (!ev || component.isValidSegDownEl(ev.target)) {\n            context.emitter.trigger(publicEvName, {\n                el: segEl,\n                event: new EventImpl(context, seg.eventRange.def, seg.eventRange.instance),\n                jsEvent: ev,\n                view: context.viewApi,\n            });\n        }\n    }\n}\n\nclass CalendarContent extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.buildViewContext = memoize(buildViewContext);\n        this.buildViewPropTransformers = memoize(buildViewPropTransformers);\n        this.buildToolbarProps = memoize(buildToolbarProps);\n        this.headerRef = createRef();\n        this.footerRef = createRef();\n        this.interactionsStore = {};\n        // eslint-disable-next-line\n        this.state = {\n            viewLabelId: getUniqueDomId(),\n        };\n        // Component Registration\n        // -----------------------------------------------------------------------------------------------------------------\n        this.registerInteractiveComponent = (component, settingsInput) => {\n            let settings = parseInteractionSettings(component, settingsInput);\n            let DEFAULT_INTERACTIONS = [\n                EventClicking,\n                EventHovering,\n            ];\n            let interactionClasses = DEFAULT_INTERACTIONS.concat(this.props.pluginHooks.componentInteractions);\n            let interactions = interactionClasses.map((TheInteractionClass) => new TheInteractionClass(settings));\n            this.interactionsStore[component.uid] = interactions;\n            interactionSettingsStore[component.uid] = settings;\n        };\n        this.unregisterInteractiveComponent = (component) => {\n            let listeners = this.interactionsStore[component.uid];\n            if (listeners) {\n                for (let listener of listeners) {\n                    listener.destroy();\n                }\n                delete this.interactionsStore[component.uid];\n            }\n            delete interactionSettingsStore[component.uid];\n        };\n        // Resizing\n        // -----------------------------------------------------------------------------------------------------------------\n        this.resizeRunner = new DelayedRunner(() => {\n            this.props.emitter.trigger('_resize', true); // should window resizes be considered \"forced\" ?\n            this.props.emitter.trigger('windowResize', { view: this.props.viewApi });\n        });\n        this.handleWindowResize = (ev) => {\n            let { options } = this.props;\n            if (options.handleWindowResize &&\n                ev.target === window // avoid jqui events\n            ) {\n                this.resizeRunner.request(options.windowResizeDelay);\n            }\n        };\n    }\n    /*\n    renders INSIDE of an outer div\n    */\n    render() {\n        let { props } = this;\n        let { toolbarConfig, options } = props;\n        let toolbarProps = this.buildToolbarProps(props.viewSpec, props.dateProfile, props.dateProfileGenerator, props.currentDate, getNow(props.options.now, props.dateEnv), // TODO: use NowTimer????\n        props.viewTitle);\n        let viewVGrow = false;\n        let viewHeight = '';\n        let viewAspectRatio;\n        if (props.isHeightAuto || props.forPrint) {\n            viewHeight = '';\n        }\n        else if (options.height != null) {\n            viewVGrow = true;\n        }\n        else if (options.contentHeight != null) {\n            viewHeight = options.contentHeight;\n        }\n        else {\n            viewAspectRatio = Math.max(options.aspectRatio, 0.5); // prevent from getting too tall\n        }\n        let viewContext = this.buildViewContext(props.viewSpec, props.viewApi, props.options, props.dateProfileGenerator, props.dateEnv, props.theme, props.pluginHooks, props.dispatch, props.getCurrentData, props.emitter, props.calendarApi, this.registerInteractiveComponent, this.unregisterInteractiveComponent);\n        let viewLabelId = (toolbarConfig.header && toolbarConfig.header.hasTitle)\n            ? this.state.viewLabelId\n            : '';\n        return (createElement(ViewContextType.Provider, { value: viewContext },\n            toolbarConfig.header && (createElement(Toolbar, Object.assign({ ref: this.headerRef, extraClassName: \"fc-header-toolbar\", model: toolbarConfig.header, titleId: viewLabelId }, toolbarProps))),\n            createElement(ViewHarness, { liquid: viewVGrow, height: viewHeight, aspectRatio: viewAspectRatio, labeledById: viewLabelId },\n                this.renderView(props),\n                this.buildAppendContent()),\n            toolbarConfig.footer && (createElement(Toolbar, Object.assign({ ref: this.footerRef, extraClassName: \"fc-footer-toolbar\", model: toolbarConfig.footer, titleId: \"\" }, toolbarProps)))));\n    }\n    componentDidMount() {\n        let { props } = this;\n        this.calendarInteractions = props.pluginHooks.calendarInteractions\n            .map((CalendarInteractionClass) => new CalendarInteractionClass(props));\n        window.addEventListener('resize', this.handleWindowResize);\n        let { propSetHandlers } = props.pluginHooks;\n        for (let propName in propSetHandlers) {\n            propSetHandlers[propName](props[propName], props);\n        }\n    }\n    componentDidUpdate(prevProps) {\n        let { props } = this;\n        let { propSetHandlers } = props.pluginHooks;\n        for (let propName in propSetHandlers) {\n            if (props[propName] !== prevProps[propName]) {\n                propSetHandlers[propName](props[propName], props);\n            }\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleWindowResize);\n        this.resizeRunner.clear();\n        for (let interaction of this.calendarInteractions) {\n            interaction.destroy();\n        }\n        this.props.emitter.trigger('_unmount');\n    }\n    buildAppendContent() {\n        let { props } = this;\n        let children = props.pluginHooks.viewContainerAppends.map((buildAppendContent) => buildAppendContent(props));\n        return createElement(Fragment, {}, ...children);\n    }\n    renderView(props) {\n        let { pluginHooks } = props;\n        let { viewSpec } = props;\n        let viewProps = {\n            dateProfile: props.dateProfile,\n            businessHours: props.businessHours,\n            eventStore: props.renderableEventStore,\n            eventUiBases: props.eventUiBases,\n            dateSelection: props.dateSelection,\n            eventSelection: props.eventSelection,\n            eventDrag: props.eventDrag,\n            eventResize: props.eventResize,\n            isHeightAuto: props.isHeightAuto,\n            forPrint: props.forPrint,\n        };\n        let transformers = this.buildViewPropTransformers(pluginHooks.viewPropsTransformers);\n        for (let transformer of transformers) {\n            Object.assign(viewProps, transformer.transform(viewProps, props));\n        }\n        let ViewComponent = viewSpec.component;\n        return (createElement(ViewComponent, Object.assign({}, viewProps)));\n    }\n}\nfunction buildToolbarProps(viewSpec, dateProfile, dateProfileGenerator, currentDate, now, title) {\n    // don't force any date-profiles to valid date profiles (the `false`) so that we can tell if it's invalid\n    let todayInfo = dateProfileGenerator.build(now, undefined, false); // TODO: need `undefined` or else INFINITE LOOP for some reason\n    let prevInfo = dateProfileGenerator.buildPrev(dateProfile, currentDate, false);\n    let nextInfo = dateProfileGenerator.buildNext(dateProfile, currentDate, false);\n    return {\n        title,\n        activeButton: viewSpec.type,\n        navUnit: viewSpec.singleUnit,\n        isTodayEnabled: todayInfo.isValid && !rangeContainsMarker(dateProfile.currentRange, now),\n        isPrevEnabled: prevInfo.isValid,\n        isNextEnabled: nextInfo.isValid,\n    };\n}\n// Plugin\n// -----------------------------------------------------------------------------------------------------------------\nfunction buildViewPropTransformers(theClasses) {\n    return theClasses.map((TheClass) => new TheClass());\n}\n\nclass Calendar extends CalendarImpl {\n    constructor(el, optionOverrides = {}) {\n        super();\n        this.isRendering = false;\n        this.isRendered = false;\n        this.currentClassNames = [];\n        this.customContentRenderId = 0;\n        this.handleAction = (action) => {\n            // actions we know we want to render immediately\n            switch (action.type) {\n                case 'SET_EVENT_DRAG':\n                case 'SET_EVENT_RESIZE':\n                    this.renderRunner.tryDrain();\n            }\n        };\n        this.handleData = (data) => {\n            this.currentData = data;\n            this.renderRunner.request(data.calendarOptions.rerenderDelay);\n        };\n        this.handleRenderRequest = () => {\n            if (this.isRendering) {\n                this.isRendered = true;\n                let { currentData } = this;\n                flushSync(() => {\n                    render(createElement(CalendarRoot, { options: currentData.calendarOptions, theme: currentData.theme, emitter: currentData.emitter }, (classNames, height, isHeightAuto, forPrint) => {\n                        this.setClassNames(classNames);\n                        this.setHeight(height);\n                        return (createElement(RenderId.Provider, { value: this.customContentRenderId },\n                            createElement(CalendarContent, Object.assign({ isHeightAuto: isHeightAuto, forPrint: forPrint }, currentData))));\n                    }), this.el);\n                });\n            }\n            else if (this.isRendered) {\n                this.isRendered = false;\n                render(null, this.el);\n                this.setClassNames([]);\n                this.setHeight('');\n            }\n        };\n        ensureElHasStyles(el);\n        this.el = el;\n        this.renderRunner = new DelayedRunner(this.handleRenderRequest);\n        new CalendarDataManager({\n            optionOverrides,\n            calendarApi: this,\n            onAction: this.handleAction,\n            onData: this.handleData,\n        });\n    }\n    render() {\n        let wasRendering = this.isRendering;\n        if (!wasRendering) {\n            this.isRendering = true;\n        }\n        else {\n            this.customContentRenderId += 1;\n        }\n        this.renderRunner.request();\n        if (wasRendering) {\n            this.updateSize();\n        }\n    }\n    destroy() {\n        if (this.isRendering) {\n            this.isRendering = false;\n            this.renderRunner.request();\n        }\n    }\n    updateSize() {\n        flushSync(() => {\n            super.updateSize();\n        });\n    }\n    batchRendering(func) {\n        this.renderRunner.pause('batchRendering');\n        func();\n        this.renderRunner.resume('batchRendering');\n    }\n    pauseRendering() {\n        this.renderRunner.pause('pauseRendering');\n    }\n    resumeRendering() {\n        this.renderRunner.resume('pauseRendering', true);\n    }\n    resetOptions(optionOverrides, changedOptionNames) {\n        this.currentDataManager.resetOptions(optionOverrides, changedOptionNames);\n    }\n    setClassNames(classNames) {\n        if (!isArraysEqual(classNames, this.currentClassNames)) {\n            let { classList } = this.el;\n            for (let className of this.currentClassNames) {\n                classList.remove(className);\n            }\n            for (let className of classNames) {\n                classList.add(className);\n            }\n            this.currentClassNames = classNames;\n        }\n    }\n    setHeight(height) {\n        applyStyleProp(this.el, 'height', height);\n    }\n}\n\nfunction formatDate(dateInput, options = {}) {\n    let dateEnv = buildDateEnv(options);\n    let formatter = createFormatter(options);\n    let dateMeta = dateEnv.createMarkerMeta(dateInput);\n    if (!dateMeta) { // TODO: warning?\n        return '';\n    }\n    return dateEnv.format(dateMeta.marker, formatter, {\n        forcedTzo: dateMeta.forcedTzo,\n    });\n}\nfunction formatRange(startInput, endInput, options) {\n    let dateEnv = buildDateEnv(typeof options === 'object' && options ? options : {}); // pass in if non-null object\n    let formatter = createFormatter(options);\n    let startMeta = dateEnv.createMarkerMeta(startInput);\n    let endMeta = dateEnv.createMarkerMeta(endInput);\n    if (!startMeta || !endMeta) { // TODO: warning?\n        return '';\n    }\n    return dateEnv.formatRange(startMeta.marker, endMeta.marker, formatter, {\n        forcedStartTzo: startMeta.forcedTzo,\n        forcedEndTzo: endMeta.forcedTzo,\n        isEndExclusive: options.isEndExclusive,\n        defaultSeparator: BASE_OPTION_DEFAULTS.defaultRangeSeparator,\n    });\n}\n// TODO: more DRY and optimized\nfunction buildDateEnv(settings) {\n    let locale = buildLocale(settings.locale || 'en', organizeRawLocales([]).map); // TODO: don't hardcode 'en' everywhere\n    return new DateEnv(Object.assign(Object.assign({ timeZone: BASE_OPTION_DEFAULTS.timeZone, calendarSystem: 'gregory' }, settings), { locale }));\n}\n\n// HELPERS\n/*\nif nextDayThreshold is specified, slicing is done in an all-day fashion.\nyou can get nextDayThreshold from context.nextDayThreshold\n*/\nfunction sliceEvents(props, allDay) {\n    return sliceEventStore(props.eventStore, props.eventUiBases, props.dateProfile.activeRange, allDay ? props.nextDayThreshold : null).fg;\n}\n\nconst version = '6.1.9';\n\nexport { Calendar, createPlugin, formatDate, formatRange, globalLocales, globalPlugins, sliceEvents, version };\n","import { injectStyles, createFormatter, BaseComponent, StandardEvent, buildSegTimeText, EventContainer, getSegAnchorAttrs, memoize, MoreLinkContainer, getSegMeta, DateComponent, getUniqueDomId, setRef, DayCellContainer, WeekNumberContainer, buildNavLinkAttrs, hasCustomDayCellContent, addMs, intersectRanges, addDays, SegHierarchy, buildEntryKey, intersectSpans, RefMap, sortEventSegs, isPropsEqual, buildEventRangeKey, BgEvent, renderFill, PositionCache, NowTimer, formatIsoMonthStr, formatDayString, Slicer, DateProfileGenerator, addWeeks, diffWeeks, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, renderScrollShim, DayHeader, DaySeriesModel, DayTableModel } from '@fullcalendar/core/internal.js';\nimport { createElement, Fragment, createRef } from '@fullcalendar/core/preact.js';\n\nvar css_248z = \":root{--fc-daygrid-event-dot-width:8px}.fc-daygrid-day-events:after,.fc-daygrid-day-events:before,.fc-daygrid-day-frame:after,.fc-daygrid-day-frame:before,.fc-daygrid-event-harness:after,.fc-daygrid-event-harness:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-body{position:relative;z-index:1}.fc .fc-daygrid-day.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-daygrid-day-frame{min-height:100%;position:relative}.fc .fc-daygrid-day-top{display:flex;flex-direction:row-reverse}.fc .fc-day-other .fc-daygrid-day-top{opacity:.3}.fc .fc-daygrid-day-number{padding:4px;position:relative;z-index:4}.fc .fc-daygrid-month-start{font-size:1.1em;font-weight:700}.fc .fc-daygrid-day-events{margin-top:1px}.fc .fc-daygrid-body-balanced .fc-daygrid-day-events{left:0;position:absolute;right:0}.fc .fc-daygrid-body-unbalanced .fc-daygrid-day-events{min-height:2em;position:relative}.fc .fc-daygrid-body-natural .fc-daygrid-day-events{margin-bottom:1em}.fc .fc-daygrid-event-harness{position:relative}.fc .fc-daygrid-event-harness-abs{left:0;position:absolute;right:0;top:0}.fc .fc-daygrid-bg-harness{bottom:0;position:absolute;top:0}.fc .fc-daygrid-day-bg .fc-non-business{z-index:1}.fc .fc-daygrid-day-bg .fc-bg-event{z-index:2}.fc .fc-daygrid-day-bg .fc-highlight{z-index:3}.fc .fc-daygrid-event{margin-top:1px;z-index:6}.fc .fc-daygrid-event.fc-event-mirror{z-index:7}.fc .fc-daygrid-day-bottom{font-size:.85em;margin:0 2px}.fc .fc-daygrid-day-bottom:after,.fc .fc-daygrid-day-bottom:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-more-link{border-radius:3px;cursor:pointer;line-height:1;margin-top:1px;max-width:100%;overflow:hidden;padding:2px;position:relative;white-space:nowrap;z-index:4}.fc .fc-daygrid-more-link:hover{background-color:rgba(0,0,0,.1)}.fc .fc-daygrid-week-number{background-color:var(--fc-neutral-bg-color);color:var(--fc-neutral-text-color);min-width:1.5em;padding:2px;position:absolute;text-align:center;top:0;z-index:5}.fc .fc-more-popover .fc-popover-body{min-width:220px;padding:10px}.fc-direction-ltr .fc-daygrid-event.fc-event-start,.fc-direction-rtl .fc-daygrid-event.fc-event-end{margin-left:2px}.fc-direction-ltr .fc-daygrid-event.fc-event-end,.fc-direction-rtl .fc-daygrid-event.fc-event-start{margin-right:2px}.fc-direction-ltr .fc-daygrid-more-link{float:left}.fc-direction-ltr .fc-daygrid-week-number{border-radius:0 0 3px 0;left:0}.fc-direction-rtl .fc-daygrid-more-link{float:right}.fc-direction-rtl .fc-daygrid-week-number{border-radius:0 0 0 3px;right:0}.fc-liquid-hack .fc-daygrid-day-frame{position:static}.fc-daygrid-event{border-radius:3px;font-size:var(--fc-small-font-size);position:relative;white-space:nowrap}.fc-daygrid-block-event .fc-event-time{font-weight:700}.fc-daygrid-block-event .fc-event-time,.fc-daygrid-block-event .fc-event-title{padding:1px}.fc-daygrid-dot-event{align-items:center;display:flex;padding:2px 0}.fc-daygrid-dot-event .fc-event-title{flex-grow:1;flex-shrink:1;font-weight:700;min-width:0;overflow:hidden}.fc-daygrid-dot-event.fc-event-mirror,.fc-daygrid-dot-event:hover{background:rgba(0,0,0,.1)}.fc-daygrid-dot-event.fc-event-selected:before{bottom:-10px;top:-10px}.fc-daygrid-event-dot{border:calc(var(--fc-daygrid-event-dot-width)/2) solid var(--fc-event-border-color);border-radius:calc(var(--fc-daygrid-event-dot-width)/2);box-sizing:content-box;height:0;margin:0 4px;width:0}.fc-direction-ltr .fc-daygrid-event .fc-event-time{margin-right:3px}.fc-direction-rtl .fc-daygrid-event .fc-event-time{margin-left:3px}\";\ninjectStyles(css_248z);\n\nfunction splitSegsByRow(segs, rowCnt) {\n    let byRow = [];\n    for (let i = 0; i < rowCnt; i += 1) {\n        byRow[i] = [];\n    }\n    for (let seg of segs) {\n        byRow[seg.row].push(seg);\n    }\n    return byRow;\n}\nfunction splitSegsByFirstCol(segs, colCnt) {\n    let byCol = [];\n    for (let i = 0; i < colCnt; i += 1) {\n        byCol[i] = [];\n    }\n    for (let seg of segs) {\n        byCol[seg.firstCol].push(seg);\n    }\n    return byCol;\n}\nfunction splitInteractionByRow(ui, rowCnt) {\n    let byRow = [];\n    if (!ui) {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = null;\n        }\n    }\n    else {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = {\n                affectedInstances: ui.affectedInstances,\n                isEvent: ui.isEvent,\n                segs: [],\n            };\n        }\n        for (let seg of ui.segs) {\n            byRow[seg.row].segs.push(seg);\n        }\n    }\n    return byRow;\n}\n\nconst DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    omitZeroMinute: true,\n    meridiem: 'narrow',\n});\nfunction hasListItemDisplay(seg) {\n    let { display } = seg.eventRange.ui;\n    return display === 'list-item' || (display === 'auto' &&\n        !seg.eventRange.def.allDay &&\n        seg.firstCol === seg.lastCol && // can't be multi-day\n        seg.isStart && // \"\n        seg.isEnd // \"\n    );\n}\n\nclass TableBlockEvent extends BaseComponent {\n    render() {\n        let { props } = this;\n        return (createElement(StandardEvent, Object.assign({}, props, { elClasses: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'], defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT, defaultDisplayEventEnd: props.defaultDisplayEventEnd, disableResizing: !props.seg.eventRange.def.allDay })));\n    }\n}\n\nclass TableListItemEvent extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { seg } = props;\n        let timeFormat = options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n        let timeText = buildSegTimeText(seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n        return (createElement(EventContainer, Object.assign({}, props, { elTag: \"a\", elClasses: ['fc-daygrid-event', 'fc-daygrid-dot-event'], elAttrs: getSegAnchorAttrs(props.seg, context), defaultGenerator: renderInnerContent, timeText: timeText, isResizing: false, isDateSelecting: false })));\n    }\n}\nfunction renderInnerContent(renderProps) {\n    return (createElement(Fragment, null,\n        createElement(\"div\", { className: \"fc-daygrid-event-dot\", style: { borderColor: renderProps.borderColor || renderProps.backgroundColor } }),\n        renderProps.timeText && (createElement(\"div\", { className: \"fc-event-time\" }, renderProps.timeText)),\n        createElement(\"div\", { className: \"fc-event-title\" }, renderProps.event.title || createElement(Fragment, null, \"\\u00A0\"))));\n}\n\nclass TableCellMoreLink extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.compileSegs = memoize(compileSegs);\n    }\n    render() {\n        let { props } = this;\n        let { allSegs, invisibleSegs } = this.compileSegs(props.singlePlacements);\n        return (createElement(MoreLinkContainer, { elClasses: ['fc-daygrid-more-link'], dateProfile: props.dateProfile, todayRange: props.todayRange, allDayDate: props.allDayDate, moreCnt: props.moreCnt, allSegs: allSegs, hiddenSegs: invisibleSegs, alignmentElRef: props.alignmentElRef, alignGridTop: props.alignGridTop, extraDateSpan: props.extraDateSpan, popoverContent: () => {\n                let isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) ||\n                    (props.eventResize ? props.eventResize.affectedInstances : null) ||\n                    {};\n                return (createElement(Fragment, null, allSegs.map((seg) => {\n                    let instanceId = seg.eventRange.instance.instanceId;\n                    return (createElement(\"div\", { className: \"fc-daygrid-event-harness\", key: instanceId, style: {\n                            visibility: isForcedInvisible[instanceId] ? 'hidden' : '',\n                        } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange))))));\n                })));\n            } }));\n    }\n}\nfunction compileSegs(singlePlacements) {\n    let allSegs = [];\n    let invisibleSegs = [];\n    for (let placement of singlePlacements) {\n        allSegs.push(placement.seg);\n        if (!placement.isVisible) {\n            invisibleSegs.push(placement.seg);\n        }\n    }\n    return { allSegs, invisibleSegs };\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'narrow' });\nclass TableCell extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.rootElRef = createRef();\n        this.state = {\n            dayNumberId: getUniqueDomId(),\n        };\n        this.handleRootEl = (el) => {\n            setRef(this.rootElRef, el);\n            setRef(this.props.elRef, el);\n        };\n    }\n    render() {\n        let { context, props, state, rootElRef } = this;\n        let { options, dateEnv } = context;\n        let { date, dateProfile } = props;\n        // TODO: memoize this?\n        const isMonthStart = props.showDayNumber &&\n            shouldDisplayMonthStart(date, dateProfile.currentRange, dateEnv);\n        return (createElement(DayCellContainer, { elTag: \"td\", elRef: this.handleRootEl, elClasses: [\n                'fc-daygrid-day',\n                ...(props.extraClassNames || []),\n            ], elAttrs: Object.assign(Object.assign(Object.assign({}, props.extraDataAttrs), (props.showDayNumber ? { 'aria-labelledby': state.dayNumberId } : {})), { role: 'gridcell' }), defaultGenerator: renderTopInner, date: date, dateProfile: dateProfile, todayRange: props.todayRange, showDayNumber: props.showDayNumber, isMonthStart: isMonthStart, extraRenderProps: props.extraRenderProps }, (InnerContent, renderProps) => (createElement(\"div\", { ref: props.innerElRef, className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\", style: { minHeight: props.minHeight } },\n            props.showWeekNumber && (createElement(WeekNumberContainer, { elTag: \"a\", elClasses: ['fc-daygrid-week-number'], elAttrs: buildNavLinkAttrs(context, date, 'week'), date: date, defaultFormat: DEFAULT_WEEK_NUM_FORMAT })),\n            !renderProps.isDisabled &&\n                (props.showDayNumber || hasCustomDayCellContent(options) || props.forceDayTop) ? (createElement(\"div\", { className: \"fc-daygrid-day-top\" },\n                createElement(InnerContent, { elTag: \"a\", elClasses: [\n                        'fc-daygrid-day-number',\n                        isMonthStart && 'fc-daygrid-month-start',\n                    ], elAttrs: Object.assign(Object.assign({}, buildNavLinkAttrs(context, date)), { id: state.dayNumberId }) }))) : props.showDayNumber ? (\n            // for creating correct amount of space (see issue #7162)\n            createElement(\"div\", { className: \"fc-daygrid-day-top\", style: { visibility: 'hidden' } },\n                createElement(\"a\", { className: \"fc-daygrid-day-number\" }, \"\\u00A0\"))) : undefined,\n            createElement(\"div\", { className: \"fc-daygrid-day-events\", ref: props.fgContentElRef },\n                props.fgContent,\n                createElement(\"div\", { className: \"fc-daygrid-day-bottom\", style: { marginTop: props.moreMarginTop } },\n                    createElement(TableCellMoreLink, { allDayDate: date, singlePlacements: props.singlePlacements, moreCnt: props.moreCnt, alignmentElRef: rootElRef, alignGridTop: !props.showDayNumber, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange }))),\n            createElement(\"div\", { className: \"fc-daygrid-day-bg\" }, props.bgContent)))));\n    }\n}\nfunction renderTopInner(props) {\n    return props.dayNumberText || createElement(Fragment, null, \"\\u00A0\");\n}\nfunction shouldDisplayMonthStart(date, currentRange, dateEnv) {\n    const { start: currentStart, end: currentEnd } = currentRange;\n    const currentEndIncl = addMs(currentEnd, -1);\n    const currentFirstYear = dateEnv.getYear(currentStart);\n    const currentFirstMonth = dateEnv.getMonth(currentStart);\n    const currentLastYear = dateEnv.getYear(currentEndIncl);\n    const currentLastMonth = dateEnv.getMonth(currentEndIncl);\n    // spans more than one month?\n    return !(currentFirstYear === currentLastYear && currentFirstMonth === currentLastMonth) &&\n        Boolean(\n        // first date in current view?\n        date.valueOf() === currentStart.valueOf() ||\n            // a month-start that's within the current range?\n            (dateEnv.getDay(date) === 1 && date.valueOf() < currentEnd.valueOf()));\n}\n\nfunction generateSegKey(seg) {\n    return seg.eventRange.instance.instanceId + ':' + seg.firstCol;\n}\nfunction generateSegUid(seg) {\n    return generateSegKey(seg) + ':' + seg.lastCol;\n}\nfunction computeFgSegPlacement(segs, // assumed already sorted\ndayMaxEvents, dayMaxEventRows, strictOrder, segHeights, maxContentHeight, cells) {\n    let hierarchy = new DayGridSegHierarchy((segEntry) => {\n        // TODO: more DRY with generateSegUid\n        let segUid = segs[segEntry.index].eventRange.instance.instanceId +\n            ':' + segEntry.span.start +\n            ':' + (segEntry.span.end - 1);\n        return segHeights[segUid];\n    });\n    hierarchy.allowReslicing = true;\n    hierarchy.strictOrder = strictOrder;\n    if (dayMaxEvents === true || dayMaxEventRows === true) {\n        hierarchy.maxCoord = maxContentHeight;\n        hierarchy.hiddenConsumes = true;\n    }\n    else if (typeof dayMaxEvents === 'number') {\n        hierarchy.maxStackCnt = dayMaxEvents;\n    }\n    else if (typeof dayMaxEventRows === 'number') {\n        hierarchy.maxStackCnt = dayMaxEventRows;\n        hierarchy.hiddenConsumes = true;\n    }\n    // create segInputs only for segs with known heights\n    let segInputs = [];\n    let unknownHeightSegs = [];\n    for (let i = 0; i < segs.length; i += 1) {\n        let seg = segs[i];\n        let segUid = generateSegUid(seg);\n        let eventHeight = segHeights[segUid];\n        if (eventHeight != null) {\n            segInputs.push({\n                index: i,\n                span: {\n                    start: seg.firstCol,\n                    end: seg.lastCol + 1,\n                },\n            });\n        }\n        else {\n            unknownHeightSegs.push(seg);\n        }\n    }\n    let hiddenEntries = hierarchy.addSegs(segInputs);\n    let segRects = hierarchy.toRects();\n    let { singleColPlacements, multiColPlacements, leftoverMargins } = placeRects(segRects, segs, cells);\n    let moreCnts = [];\n    let moreMarginTops = [];\n    // add segs with unknown heights\n    for (let seg of unknownHeightSegs) {\n        multiColPlacements[seg.firstCol].push({\n            seg,\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // add the hidden entries\n    for (let col = 0; col < cells.length; col += 1) {\n        moreCnts.push(0);\n    }\n    for (let hiddenEntry of hiddenEntries) {\n        let seg = segs[hiddenEntry.index];\n        let hiddenSpan = hiddenEntry.span;\n        multiColPlacements[hiddenSpan.start].push({\n            seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n            moreCnts[col] += 1;\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // deal with leftover margins\n    for (let col = 0; col < cells.length; col += 1) {\n        moreMarginTops.push(leftoverMargins[col]);\n    }\n    return { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops };\n}\n// rects ordered by top coord, then left\nfunction placeRects(allRects, segs, cells) {\n    let rectsByEachCol = groupRectsByEachCol(allRects, cells.length);\n    let singleColPlacements = [];\n    let multiColPlacements = [];\n    let leftoverMargins = [];\n    for (let col = 0; col < cells.length; col += 1) {\n        let rects = rectsByEachCol[col];\n        // compute all static segs in singlePlacements\n        let singlePlacements = [];\n        let currentHeight = 0;\n        let currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            singlePlacements.push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: true,\n                isAbsolute: false,\n                absoluteTop: rect.levelCoord,\n                marginTop: rect.levelCoord - currentHeight,\n            });\n            currentHeight = rect.levelCoord + rect.thickness;\n        }\n        // compute mixed static/absolute segs in multiPlacements\n        let multiPlacements = [];\n        currentHeight = 0;\n        currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            let isAbsolute = rect.span.end - rect.span.start > 1; // multi-column?\n            let isFirstCol = rect.span.start === col;\n            currentMarginTop += rect.levelCoord - currentHeight; // amount of space since bottom of previous seg\n            currentHeight = rect.levelCoord + rect.thickness; // height will now be bottom of current seg\n            if (isAbsolute) {\n                currentMarginTop += rect.thickness;\n                if (isFirstCol) {\n                    multiPlacements.push({\n                        seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                        isVisible: true,\n                        isAbsolute: true,\n                        absoluteTop: rect.levelCoord,\n                        marginTop: 0,\n                    });\n                }\n            }\n            else if (isFirstCol) {\n                multiPlacements.push({\n                    seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                    isVisible: true,\n                    isAbsolute: false,\n                    absoluteTop: rect.levelCoord,\n                    marginTop: currentMarginTop, // claim the margin\n                });\n                currentMarginTop = 0;\n            }\n        }\n        singleColPlacements.push(singlePlacements);\n        multiColPlacements.push(multiPlacements);\n        leftoverMargins.push(currentMarginTop);\n    }\n    return { singleColPlacements, multiColPlacements, leftoverMargins };\n}\nfunction groupRectsByEachCol(rects, colCnt) {\n    let rectsByEachCol = [];\n    for (let col = 0; col < colCnt; col += 1) {\n        rectsByEachCol.push([]);\n    }\n    for (let rect of rects) {\n        for (let col = rect.span.start; col < rect.span.end; col += 1) {\n            rectsByEachCol[col].push(rect);\n        }\n    }\n    return rectsByEachCol;\n}\nfunction resliceSeg(seg, spanStart, spanEnd, cells) {\n    if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n        return seg;\n    }\n    let eventRange = seg.eventRange;\n    let origRange = eventRange.range;\n    let slicedRange = intersectRanges(origRange, {\n        start: cells[spanStart].date,\n        end: addDays(cells[spanEnd - 1].date, 1),\n    });\n    return Object.assign(Object.assign({}, seg), { firstCol: spanStart, lastCol: spanEnd - 1, eventRange: {\n            def: eventRange.def,\n            ui: Object.assign(Object.assign({}, eventRange.ui), { durationEditable: false }),\n            instance: eventRange.instance,\n            range: slicedRange,\n        }, isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(), isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf() });\n}\nclass DayGridSegHierarchy extends SegHierarchy {\n    constructor() {\n        super(...arguments);\n        // config\n        this.hiddenConsumes = false;\n        // allows us to keep hidden entries in the hierarchy so they take up space\n        this.forceHidden = {};\n    }\n    addSegs(segInputs) {\n        const hiddenSegs = super.addSegs(segInputs);\n        const { entriesByLevel } = this;\n        const excludeHidden = (entry) => !this.forceHidden[buildEntryKey(entry)];\n        // remove the forced-hidden segs\n        for (let level = 0; level < entriesByLevel.length; level += 1) {\n            entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);\n        }\n        return hiddenSegs;\n    }\n    handleInvalidInsertion(insertion, entry, hiddenEntries) {\n        const { entriesByLevel, forceHidden } = this;\n        const { touchingEntry, touchingLevel, touchingLateral } = insertion;\n        if (this.hiddenConsumes && touchingEntry) {\n            const touchingEntryId = buildEntryKey(touchingEntry);\n            // if not already hidden\n            if (!forceHidden[touchingEntryId]) {\n                if (this.allowReslicing) {\n                    const placeholderEntry = Object.assign(Object.assign({}, touchingEntry), { span: intersectSpans(touchingEntry.span, entry.span) });\n                    const placeholderEntryId = buildEntryKey(placeholderEntry);\n                    forceHidden[placeholderEntryId] = true;\n                    entriesByLevel[touchingLevel][touchingLateral] = placeholderEntry; // replace touchingEntry with our placeholder\n                    this.splitEntry(touchingEntry, entry, hiddenEntries); // split up the touchingEntry, reinsert it\n                }\n                else {\n                    forceHidden[touchingEntryId] = true;\n                    hiddenEntries.push(touchingEntry);\n                }\n            }\n        }\n        return super.handleInvalidInsertion(insertion, entry, hiddenEntries);\n    }\n}\n\nclass TableRow extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.cellElRefs = new RefMap(); // the <td>\n        this.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n        this.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n        this.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n        this.rootElRef = createRef();\n        this.state = {\n            framePositions: null,\n            maxContentHeight: null,\n            segHeights: {},\n        };\n        this.handleResize = (isForced) => {\n            if (isForced) {\n                this.updateSizing(true); // isExternal=true\n            }\n        };\n    }\n    render() {\n        let { props, state, context } = this;\n        let { options } = context;\n        let colCnt = props.cells.length;\n        let businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n        let bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n        let highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n        let mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n        let { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops } = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.segHeights, state.maxContentHeight, props.cells);\n        let isForcedInvisible = // TODO: messy way to compute this\n         (props.eventDrag && props.eventDrag.affectedInstances) ||\n            (props.eventResize && props.eventResize.affectedInstances) ||\n            {};\n        return (createElement(\"tr\", { ref: this.rootElRef, role: \"row\" },\n            props.renderIntro && props.renderIntro(),\n            props.cells.map((cell, col) => {\n                let normalFgNodes = this.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);\n                let mirrorFgNodes = this.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n                return (createElement(TableCell, { key: cell.key, elRef: this.cellElRefs.createRef(cell.key), innerElRef: this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */, dateProfile: props.dateProfile, date: cell.date, showDayNumber: props.showDayNumbers, showWeekNumber: props.showWeekNumbers && col === 0, forceDayTop: props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */, todayRange: props.todayRange, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, extraRenderProps: cell.extraRenderProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, moreCnt: moreCnts[col], moreMarginTop: moreMarginTops[col], singlePlacements: singleColPlacements[col], fgContentElRef: this.fgElRefs.createRef(cell.key), fgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        createElement(Fragment, null, normalFgNodes),\n                        createElement(Fragment, null, mirrorFgNodes))), bgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        this.renderFillSegs(highlightSegsByCol[col], 'highlight'),\n                        this.renderFillSegs(businessHoursByCol[col], 'non-business'),\n                        this.renderFillSegs(bgEventSegsByCol[col], 'bg-event'))), minHeight: props.cellMinHeight }));\n            })));\n    }\n    componentDidMount() {\n        this.updateSizing(true);\n        this.context.addResizeHandler(this.handleResize);\n    }\n    componentDidUpdate(prevProps, prevState) {\n        let currentProps = this.props;\n        this.updateSizing(!isPropsEqual(prevProps, currentProps));\n    }\n    componentWillUnmount() {\n        this.context.removeResizeHandler(this.handleResize);\n    }\n    getHighlightSegs() {\n        let { props } = this;\n        if (props.eventDrag && props.eventDrag.segs.length) { // messy check\n            return props.eventDrag.segs;\n        }\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return props.dateSelectionSegs;\n    }\n    getMirrorSegs() {\n        let { props } = this;\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return [];\n    }\n    renderFgSegs(col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {\n        let { context } = this;\n        let { eventSelection } = this.props;\n        let { framePositions } = this.state;\n        let defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n        let isMirror = isDragging || isResizing || isDateSelecting;\n        let nodes = [];\n        if (framePositions) {\n            for (let placement of segPlacements) {\n                let { seg } = placement;\n                let { instanceId } = seg.eventRange.instance;\n                let isVisible = placement.isVisible && !isForcedInvisible[instanceId];\n                let isAbsolute = placement.isAbsolute;\n                let left = '';\n                let right = '';\n                if (isAbsolute) {\n                    if (context.isRtl) {\n                        right = 0;\n                        left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n                    }\n                    else {\n                        left = 0;\n                        right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n                    }\n                }\n                /*\n                known bug: events that are force to be list-item but span multiple days still take up space in later columns\n                todo: in print view, for multi-day events, don't display title within non-start/end segs\n                */\n                nodes.push(createElement(\"div\", { className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''), key: generateSegKey(seg), ref: isMirror ? null : this.segHarnessRefs.createRef(generateSegUid(seg)), style: {\n                        visibility: isVisible ? '' : 'hidden',\n                        marginTop: isAbsolute ? '' : placement.marginTop,\n                        top: isAbsolute ? placement.absoluteTop : '',\n                        left,\n                        right,\n                    } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: isDragging, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange))))));\n            }\n        }\n        return nodes;\n    }\n    renderFillSegs(segs, fillType) {\n        let { isRtl } = this.context;\n        let { todayRange } = this.props;\n        let { framePositions } = this.state;\n        let nodes = [];\n        if (framePositions) {\n            for (let seg of segs) {\n                let leftRightCss = isRtl ? {\n                    right: 0,\n                    left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol],\n                } : {\n                    left: 0,\n                    right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol],\n                };\n                nodes.push(createElement(\"div\", { key: buildEventRangeKey(seg.eventRange), className: \"fc-daygrid-bg-harness\", style: leftRightCss }, fillType === 'bg-event' ?\n                    createElement(BgEvent, Object.assign({ seg: seg }, getSegMeta(seg, todayRange))) :\n                    renderFill(fillType)));\n            }\n        }\n        return createElement(Fragment, {}, ...nodes);\n    }\n    updateSizing(isExternalSizingChange) {\n        let { props, state, frameElRefs } = this;\n        if (!props.forPrint &&\n            props.clientWidth !== null // positioning ready?\n        ) {\n            if (isExternalSizingChange) {\n                let frameEls = props.cells.map((cell) => frameElRefs.currentMap[cell.key]);\n                if (frameEls.length) {\n                    let originEl = this.rootElRef.current;\n                    let newPositionCache = new PositionCache(originEl, frameEls, true, // isHorizontal\n                    false);\n                    if (!state.framePositions || !state.framePositions.similarTo(newPositionCache)) {\n                        this.setState({\n                            framePositions: new PositionCache(originEl, frameEls, true, // isHorizontal\n                            false),\n                        });\n                    }\n                }\n            }\n            const oldSegHeights = this.state.segHeights;\n            const newSegHeights = this.querySegHeights();\n            const limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n            this.safeSetState({\n                // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n                // Essentially, once you compute an element's height, never null-out.\n                // TODO: always display all events, as visibility:hidden?\n                segHeights: Object.assign(Object.assign({}, oldSegHeights), newSegHeights),\n                maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null,\n            });\n        }\n    }\n    querySegHeights() {\n        let segElMap = this.segHarnessRefs.currentMap;\n        let segHeights = {};\n        // get the max height amongst instance segs\n        for (let segUid in segElMap) {\n            let height = Math.round(segElMap[segUid].getBoundingClientRect().height);\n            segHeights[segUid] = Math.max(segHeights[segUid] || 0, height);\n        }\n        return segHeights;\n    }\n    computeMaxContentHeight() {\n        let firstKey = this.props.cells[0].key;\n        let cellEl = this.cellElRefs.currentMap[firstKey];\n        let fcContainerEl = this.fgElRefs.currentMap[firstKey];\n        return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n    }\n    getCellEls() {\n        let elMap = this.cellElRefs.currentMap;\n        return this.props.cells.map((cell) => elMap[cell.key]);\n    }\n}\nTableRow.addStateEquality({\n    segHeights: isPropsEqual,\n});\nfunction buildMirrorPlacements(mirrorSegs, colPlacements) {\n    if (!mirrorSegs.length) {\n        return [];\n    }\n    let topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?\n    return mirrorSegs.map((seg) => ({\n        seg,\n        isVisible: true,\n        isAbsolute: true,\n        absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n        marginTop: 0,\n    }));\n}\nfunction buildAbsoluteTopHash(colPlacements) {\n    let topsByInstanceId = {};\n    for (let placements of colPlacements) {\n        for (let placement of placements) {\n            topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;\n        }\n    }\n    return topsByInstanceId;\n}\n\nclass TableRows extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.splitBusinessHourSegs = memoize(splitSegsByRow);\n        this.splitBgEventSegs = memoize(splitSegsByRow);\n        this.splitFgEventSegs = memoize(splitSegsByRow);\n        this.splitDateSelectionSegs = memoize(splitSegsByRow);\n        this.splitEventDrag = memoize(splitInteractionByRow);\n        this.splitEventResize = memoize(splitInteractionByRow);\n        this.rowRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        let rowCnt = props.cells.length;\n        let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n        let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n        let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n        let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n        let eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n        let eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt);\n        // for DayGrid view with many rows, force a min-height on cells so doesn't appear squished\n        // choose 7 because a month view will have max 6 rows\n        let cellMinHeight = (rowCnt >= 7 && props.clientWidth) ?\n            props.clientWidth / context.options.aspectRatio / 6 :\n            null;\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => (createElement(Fragment, null, props.cells.map((cells, row) => (createElement(TableRow, { ref: this.rowRefs.createRef(row), key: cells.length\n                ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */\n                : row // in case there are no cells (like when resource view is loading)\n            , showDayNumbers: rowCnt > 1, showWeekNumbers: props.showWeekNumbers, todayRange: todayRange, dateProfile: props.dateProfile, cells: cells, renderIntro: props.renderRowIntro, businessHourSegs: businessHourSegsByRow[row], eventSelection: props.eventSelection, bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay) /* hack */, fgEventSegs: fgEventSegsByRow[row], dateSelectionSegs: dateSelectionSegsByRow[row], eventDrag: eventDragByRow[row], eventResize: eventResizeByRow[row], dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, clientWidth: props.clientWidth, clientHeight: props.clientHeight, cellMinHeight: cellMinHeight, forPrint: props.forPrint })))))));\n    }\n    componentDidMount() {\n        this.registerInteractiveComponent();\n    }\n    componentDidUpdate() {\n        // for if started with zero cells\n        this.registerInteractiveComponent();\n    }\n    registerInteractiveComponent() {\n        if (!this.rootEl) {\n            // HACK: need a daygrid wrapper parent to do positioning\n            // NOTE: a daygrid resource view w/o resources can have zero cells\n            const firstCellEl = this.rowRefs.currentMap[0].getCellEls()[0];\n            const rootEl = firstCellEl ? firstCellEl.closest('.fc-daygrid-body') : null;\n            if (rootEl) {\n                this.rootEl = rootEl;\n                this.context.registerInteractiveComponent(this, {\n                    el: rootEl,\n                    isHitComboAllowed: this.props.isHitComboAllowed,\n                });\n            }\n        }\n    }\n    componentWillUnmount() {\n        if (this.rootEl) {\n            this.context.unregisterInteractiveComponent(this);\n            this.rootEl = null;\n        }\n    }\n    // Hit System\n    // ----------------------------------------------------------------------------------------------------\n    prepareHits() {\n        this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map((rowObj) => rowObj.getCellEls()[0]), // first cell el in each row. TODO: not optimal\n        false, true);\n        this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n        true, // horizontal\n        false);\n    }\n    queryHit(positionLeft, positionTop) {\n        let { colPositions, rowPositions } = this;\n        let col = colPositions.leftToIndex(positionLeft);\n        let row = rowPositions.topToIndex(positionTop);\n        if (row != null && col != null) {\n            let cell = this.props.cells[row][col];\n            return {\n                dateProfile: this.props.dateProfile,\n                dateSpan: Object.assign({ range: this.getCellRange(row, col), allDay: true }, cell.extraDateSpan),\n                dayEl: this.getCellEl(row, col),\n                rect: {\n                    left: colPositions.lefts[col],\n                    right: colPositions.rights[col],\n                    top: rowPositions.tops[row],\n                    bottom: rowPositions.bottoms[row],\n                },\n                layer: 0,\n            };\n        }\n        return null;\n    }\n    getCellEl(row, col) {\n        return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n    }\n    getCellRange(row, col) {\n        let start = this.props.cells[row][col].date;\n        let end = addDays(start, 1);\n        return { start, end };\n    }\n}\nfunction isSegAllDay(seg) {\n    return seg.eventRange.def.allDay;\n}\n\nclass Table extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.elRef = createRef();\n        this.needsScrollReset = false;\n    }\n    render() {\n        let { props } = this;\n        let { dayMaxEventRows, dayMaxEvents, expandRows } = props;\n        let limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true;\n        // if rows can't expand to fill fixed height, can't do balanced-height event limit\n        // TODO: best place to normalize these options?\n        if (limitViaBalanced && !expandRows) {\n            limitViaBalanced = false;\n            dayMaxEventRows = null;\n            dayMaxEvents = null;\n        }\n        let classNames = [\n            'fc-daygrid-body',\n            limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced',\n            expandRows ? '' : 'fc-daygrid-body-natural', // will height of one row depend on the others?\n        ];\n        return (createElement(\"div\", { ref: this.elRef, className: classNames.join(' '), style: {\n                // these props are important to give this wrapper correct dimensions for interactions\n                // TODO: if we set it here, can we avoid giving to inner tables?\n                width: props.clientWidth,\n                minWidth: props.tableMinWidth,\n            } },\n            createElement(\"table\", { role: \"presentation\", className: \"fc-scrollgrid-sync-table\", style: {\n                    width: props.clientWidth,\n                    minWidth: props.tableMinWidth,\n                    height: expandRows ? props.clientHeight : '',\n                } },\n                props.colGroupNode,\n                createElement(\"tbody\", { role: \"presentation\" },\n                    createElement(TableRows, { dateProfile: props.dateProfile, cells: props.cells, renderRowIntro: props.renderRowIntro, showWeekNumbers: props.showWeekNumbers, clientWidth: props.clientWidth, clientHeight: props.clientHeight, businessHourSegs: props.businessHourSegs, bgEventSegs: props.bgEventSegs, fgEventSegs: props.fgEventSegs, dateSelectionSegs: props.dateSelectionSegs, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, dayMaxEvents: dayMaxEvents, dayMaxEventRows: dayMaxEventRows, forPrint: props.forPrint, isHitComboAllowed: props.isHitComboAllowed })))));\n    }\n    componentDidMount() {\n        this.requestScrollReset();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.dateProfile !== this.props.dateProfile) {\n            this.requestScrollReset();\n        }\n        else {\n            this.flushScrollReset();\n        }\n    }\n    requestScrollReset() {\n        this.needsScrollReset = true;\n        this.flushScrollReset();\n    }\n    flushScrollReset() {\n        if (this.needsScrollReset &&\n            this.props.clientWidth // sizes computed?\n        ) {\n            const subjectEl = getScrollSubjectEl(this.elRef.current, this.props.dateProfile);\n            if (subjectEl) {\n                const originEl = subjectEl.closest('.fc-daygrid-body');\n                const scrollEl = originEl.closest('.fc-scroller');\n                const scrollTop = subjectEl.getBoundingClientRect().top -\n                    originEl.getBoundingClientRect().top;\n                scrollEl.scrollTop = scrollTop ? (scrollTop + 1) : 0; // overcome border\n            }\n            this.needsScrollReset = false;\n        }\n    }\n}\nfunction getScrollSubjectEl(containerEl, dateProfile) {\n    let el;\n    if (dateProfile.currentRangeUnit.match(/year|month/)) {\n        el = containerEl.querySelector(`[data-date=\"${formatIsoMonthStr(dateProfile.currentDate)}-01\"]`);\n        // even if view is month-based, first-of-month might be hidden...\n    }\n    if (!el) {\n        el = containerEl.querySelector(`[data-date=\"${formatDayString(dateProfile.currentDate)}\"]`);\n        // could still be hidden if an interior-view hidden day\n    }\n    return el;\n}\n\nclass DayTableSlicer extends Slicer {\n    constructor() {\n        super(...arguments);\n        this.forceDayIfListItem = true;\n    }\n    sliceRange(dateRange, dayTableModel) {\n        return dayTableModel.sliceRange(dateRange);\n    }\n}\n\nclass DayTable extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.slicer = new DayTableSlicer();\n        this.tableRef = createRef();\n    }\n    render() {\n        let { props, context } = this;\n        return (createElement(Table, Object.assign({ ref: this.tableRef }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), { dateProfile: props.dateProfile, cells: props.dayTableModel.cells, colGroupNode: props.colGroupNode, tableMinWidth: props.tableMinWidth, renderRowIntro: props.renderRowIntro, dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, showWeekNumbers: props.showWeekNumbers, expandRows: props.expandRows, headerAlignElRef: props.headerAlignElRef, clientWidth: props.clientWidth, clientHeight: props.clientHeight, forPrint: props.forPrint })));\n    }\n}\n\nclass TableDateProfileGenerator extends DateProfileGenerator {\n    // Computes the date range that will be rendered\n    buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay) {\n        let renderRange = super.buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay);\n        let { props } = this;\n        return buildDayTableRenderRange({\n            currentRange: renderRange,\n            snapToWeek: /^(year|month)$/.test(currentRangeUnit),\n            fixedWeekCount: props.fixedWeekCount,\n            dateEnv: props.dateEnv,\n        });\n    }\n}\nfunction buildDayTableRenderRange(props) {\n    let { dateEnv, currentRange } = props;\n    let { start, end } = currentRange;\n    let endOfWeek;\n    // year and month views should be aligned with weeks. this is already done for week\n    if (props.snapToWeek) {\n        start = dateEnv.startOfWeek(start);\n        // make end-of-week if not already\n        endOfWeek = dateEnv.startOfWeek(end);\n        if (endOfWeek.valueOf() !== end.valueOf()) {\n            end = addWeeks(endOfWeek, 1);\n        }\n    }\n    // ensure 6 weeks\n    if (props.fixedWeekCount) {\n        // TODO: instead of these date-math gymnastics (for multimonth view),\n        // compute dateprofiles of all months, then use start of first and end of last.\n        let lastMonthRenderStart = dateEnv.startOfWeek(dateEnv.startOfMonth(addDays(currentRange.end, -1)));\n        let rowCnt = Math.ceil(// could be partial weeks due to hiddenDays\n        diffWeeks(lastMonthRenderStart, end));\n        end = addWeeks(end, 6 - rowCnt);\n    }\n    return { start, end };\n}\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\nclass TableView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.headerElRef = createRef();\n    }\n    renderSimpleLayout(headerRowContent, bodyContent) {\n        let { props, context } = this;\n        let sections = [];\n        let stickyHeaderDates = getStickyHeaderDates(context.options);\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunk: {\n                    elRef: this.headerElRef,\n                    tableClassName: 'fc-col-header',\n                    rowContent: headerRowContent,\n                },\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunk: { content: bodyContent },\n        });\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [] /* TODO: make optional? */, sections: sections })));\n    }\n    renderHScrollLayout(headerRowContent, bodyContent, colCnt, dayMinWidth) {\n        let ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n        if (!ScrollGrid) {\n            throw new Error('No ScrollGrid implementation');\n        }\n        let { props, context } = this;\n        let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n        let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n        let sections = [];\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunks: [{\n                        key: 'main',\n                        elRef: this.headerElRef,\n                        tableClassName: 'fc-col-header',\n                        rowContent: headerRowContent,\n                    }],\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunks: [{\n                    key: 'main',\n                    content: bodyContent,\n                }],\n        });\n        if (stickyFooterScrollbar) {\n            sections.push({\n                type: 'footer',\n                key: 'footer',\n                isSticky: true,\n                chunks: [{\n                        key: 'main',\n                        content: renderScrollShim,\n                    }],\n            });\n        }\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, forPrint: props.forPrint, collapsibleWidth: props.forPrint, colGroups: [{ cols: [{ span: colCnt, minWidth: dayMinWidth }] }], sections: sections })));\n    }\n}\n\nclass DayTableView extends TableView {\n    constructor() {\n        super(...arguments);\n        this.buildDayTableModel = memoize(buildDayTableModel);\n        this.headerRef = createRef();\n        this.tableRef = createRef();\n        // can't override any lifecycle methods from parent\n    }\n    render() {\n        let { options, dateProfileGenerator } = this.context;\n        let { props } = this;\n        let dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n        let headerContent = options.dayHeaders && (createElement(DayHeader, { ref: this.headerRef, dateProfile: props.dateProfile, dates: dayTableModel.headerDates, datesRepDistinctDays: dayTableModel.rowCnt === 1 }));\n        let bodyContent = (contentArg) => (createElement(DayTable, { ref: this.tableRef, dateProfile: props.dateProfile, dayTableModel: dayTableModel, businessHours: props.businessHours, dateSelection: props.dateSelection, eventStore: props.eventStore, eventUiBases: props.eventUiBases, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, nextDayThreshold: options.nextDayThreshold, colGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, dayMaxEvents: options.dayMaxEvents, dayMaxEventRows: options.dayMaxEventRows, showWeekNumbers: options.weekNumbers, expandRows: !props.isHeightAuto, headerAlignElRef: this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint }));\n        return options.dayMinWidth\n            ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth)\n            : this.renderSimpleLayout(headerContent, bodyContent);\n    }\n}\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n    let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableDateProfileGenerator, TableRows, TableView, buildDayTableModel, buildDayTableRenderRange };\n","import { createPlugin } from '@fullcalendar/core/index.js';\nimport { DayGridView as DayTableView, TableDateProfileGenerator } from './internal.js';\nimport '@fullcalendar/core/internal.js';\nimport '@fullcalendar/core/preact.js';\n\nvar index = createPlugin({\n    name: '@fullcalendar/daygrid',\n    initialView: 'dayGridMonth',\n    views: {\n        dayGrid: {\n            component: DayTableView,\n            dateProfileGeneratorClass: TableDateProfileGenerator,\n        },\n        dayGridDay: {\n            type: 'dayGrid',\n            duration: { days: 1 },\n        },\n        dayGridWeek: {\n            type: 'dayGrid',\n            duration: { weeks: 1 },\n        },\n        dayGridMonth: {\n            type: 'dayGrid',\n            duration: { months: 1 },\n            fixedWeekCount: true,\n        },\n        dayGridYear: {\n            type: 'dayGrid',\n            duration: { years: 1 },\n        },\n    },\n});\n\nexport { index as default };\n","import { injectStyles, Splitter, hasBgRendering, createFormatter, ViewContextType, ContentContainer, BaseComponent, DateComponent, diffDays, buildNavLinkAttrs, WeekNumberContainer, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, NowTimer, NowIndicatorContainer, renderScrollShim, rangeContainsMarker, startOfDay, asRoughMs, createDuration, RefMap, PositionCache, MoreLinkContainer, SegHierarchy, groupIntersectingEntries, binarySearch, getEntrySpanEnd, buildEntryKey, StandardEvent, memoize, sortEventSegs, DayCellContainer, hasCustomDayCellContent, getSegMeta, buildIsoString, computeEarliestSegStart, buildEventRangeKey, BgEvent, renderFill, addDurations, multiplyDuration, wholeDivideDurations, Slicer, intersectRanges, formatIsoTimeString, DayHeader, DaySeriesModel, DayTableModel } from '@fullcalendar/core/internal.js';\nimport { createElement, createRef, Fragment } from '@fullcalendar/core/preact.js';\nimport { DayTable } from '@fullcalendar/daygrid/internal.js';\n\nvar css_248z = \".fc-v-event{background-color:var(--fc-event-bg-color);border:1px solid var(--fc-event-border-color);display:block}.fc-v-event .fc-event-main{color:var(--fc-event-text-color);height:100%}.fc-v-event .fc-event-main-frame{display:flex;flex-direction:column;height:100%}.fc-v-event .fc-event-time{flex-grow:0;flex-shrink:0;max-height:100%;overflow:hidden}.fc-v-event .fc-event-title-container{flex-grow:1;flex-shrink:1;min-height:0}.fc-v-event .fc-event-title{bottom:0;max-height:100%;overflow:hidden;top:0}.fc-v-event:not(.fc-event-start){border-top-left-radius:0;border-top-right-radius:0;border-top-width:0}.fc-v-event:not(.fc-event-end){border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-width:0}.fc-v-event.fc-event-selected:before{left:-10px;right:-10px}.fc-v-event .fc-event-resizer-start{cursor:n-resize}.fc-v-event .fc-event-resizer-end{cursor:s-resize}.fc-v-event:not(.fc-event-selected) .fc-event-resizer{height:var(--fc-event-resizer-thickness);left:0;right:0}.fc-v-event:not(.fc-event-selected) .fc-event-resizer-start{top:calc(var(--fc-event-resizer-thickness)/-2)}.fc-v-event:not(.fc-event-selected) .fc-event-resizer-end{bottom:calc(var(--fc-event-resizer-thickness)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer{left:50%;margin-left:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer-start{top:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer-end{bottom:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc .fc-timegrid .fc-daygrid-body{z-index:2}.fc .fc-timegrid-divider{padding:0 0 2px}.fc .fc-timegrid-body{min-height:100%;position:relative;z-index:1}.fc .fc-timegrid-axis-chunk{position:relative}.fc .fc-timegrid-axis-chunk>table,.fc .fc-timegrid-slots{position:relative;z-index:1}.fc .fc-timegrid-slot{border-bottom:0;height:1.5em}.fc .fc-timegrid-slot:empty:before{content:\\\"\\\\00a0\\\"}.fc .fc-timegrid-slot-minor{border-top-style:dotted}.fc .fc-timegrid-slot-label-cushion{display:inline-block;white-space:nowrap}.fc .fc-timegrid-slot-label{vertical-align:middle}.fc .fc-timegrid-axis-cushion,.fc .fc-timegrid-slot-label-cushion{padding:0 4px}.fc .fc-timegrid-axis-frame-liquid{height:100%}.fc .fc-timegrid-axis-frame{align-items:center;display:flex;justify-content:flex-end;overflow:hidden}.fc .fc-timegrid-axis-cushion{flex-shrink:0;max-width:60px}.fc-direction-ltr .fc-timegrid-slot-label-frame{text-align:right}.fc-direction-rtl .fc-timegrid-slot-label-frame{text-align:left}.fc-liquid-hack .fc-timegrid-axis-frame-liquid{bottom:0;height:auto;left:0;position:absolute;right:0;top:0}.fc .fc-timegrid-col.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-timegrid-col-frame{min-height:100%;position:relative}.fc-media-screen.fc-liquid-hack .fc-timegrid-col-frame{bottom:0;height:auto;left:0;position:absolute;right:0;top:0}.fc-media-screen .fc-timegrid-cols{bottom:0;left:0;position:absolute;right:0;top:0}.fc-media-screen .fc-timegrid-cols>table{height:100%}.fc-media-screen .fc-timegrid-col-bg,.fc-media-screen .fc-timegrid-col-events,.fc-media-screen .fc-timegrid-now-indicator-container{left:0;position:absolute;right:0;top:0}.fc .fc-timegrid-col-bg{z-index:2}.fc .fc-timegrid-col-bg .fc-non-business{z-index:1}.fc .fc-timegrid-col-bg .fc-bg-event{z-index:2}.fc .fc-timegrid-col-bg .fc-highlight{z-index:3}.fc .fc-timegrid-bg-harness{left:0;position:absolute;right:0}.fc .fc-timegrid-col-events{z-index:3}.fc .fc-timegrid-now-indicator-container{bottom:0;overflow:hidden}.fc-direction-ltr .fc-timegrid-col-events{margin:0 2.5% 0 2px}.fc-direction-rtl .fc-timegrid-col-events{margin:0 2px 0 2.5%}.fc-timegrid-event-harness{position:absolute}.fc-timegrid-event-harness>.fc-timegrid-event{bottom:0;left:0;position:absolute;right:0;top:0}.fc-timegrid-event-harness-inset .fc-timegrid-event,.fc-timegrid-event.fc-event-mirror,.fc-timegrid-more-link{box-shadow:0 0 0 1px var(--fc-page-bg-color)}.fc-timegrid-event,.fc-timegrid-more-link{border-radius:3px;font-size:var(--fc-small-font-size)}.fc-timegrid-event{margin-bottom:1px}.fc-timegrid-event .fc-event-main{padding:1px 1px 0}.fc-timegrid-event .fc-event-time{font-size:var(--fc-small-font-size);margin-bottom:1px;white-space:nowrap}.fc-timegrid-event-short .fc-event-main-frame{flex-direction:row;overflow:hidden}.fc-timegrid-event-short .fc-event-time:after{content:\\\"\\\\00a0-\\\\00a0\\\"}.fc-timegrid-event-short .fc-event-title{font-size:var(--fc-small-font-size)}.fc-timegrid-more-link{background:var(--fc-more-link-bg-color);color:var(--fc-more-link-text-color);cursor:pointer;margin-bottom:1px;position:absolute;z-index:9999}.fc-timegrid-more-link-inner{padding:3px 2px;top:0}.fc-direction-ltr .fc-timegrid-more-link{right:0}.fc-direction-rtl .fc-timegrid-more-link{left:0}.fc .fc-timegrid-now-indicator-line{border-color:var(--fc-now-indicator-color);border-style:solid;border-width:1px 0 0;left:0;position:absolute;right:0;z-index:4}.fc .fc-timegrid-now-indicator-arrow{border-color:var(--fc-now-indicator-color);border-style:solid;margin-top:-5px;position:absolute;z-index:4}.fc-direction-ltr .fc-timegrid-now-indicator-arrow{border-bottom-color:transparent;border-top-color:transparent;border-width:5px 0 5px 6px;left:0}.fc-direction-rtl .fc-timegrid-now-indicator-arrow{border-bottom-color:transparent;border-top-color:transparent;border-width:5px 6px 5px 0;right:0}\";\ninjectStyles(css_248z);\n\nclass AllDaySplitter extends Splitter {\n    getKeyInfo() {\n        return {\n            allDay: {},\n            timed: {},\n        };\n    }\n    getKeysForDateSpan(dateSpan) {\n        if (dateSpan.allDay) {\n            return ['allDay'];\n        }\n        return ['timed'];\n    }\n    getKeysForEventDef(eventDef) {\n        if (!eventDef.allDay) {\n            return ['timed'];\n        }\n        if (hasBgRendering(eventDef)) {\n            return ['timed', 'allDay'];\n        }\n        return ['allDay'];\n    }\n}\n\nconst DEFAULT_SLAT_LABEL_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    omitZeroMinute: true,\n    meridiem: 'short',\n});\nfunction TimeColsAxisCell(props) {\n    let classNames = [\n        'fc-timegrid-slot',\n        'fc-timegrid-slot-label',\n        props.isLabeled ? 'fc-scrollgrid-shrink' : 'fc-timegrid-slot-minor',\n    ];\n    return (createElement(ViewContextType.Consumer, null, (context) => {\n        if (!props.isLabeled) {\n            return (createElement(\"td\", { className: classNames.join(' '), \"data-time\": props.isoTimeStr }));\n        }\n        let { dateEnv, options, viewApi } = context;\n        let labelFormat = // TODO: fully pre-parse\n         options.slotLabelFormat == null ? DEFAULT_SLAT_LABEL_FORMAT :\n            Array.isArray(options.slotLabelFormat) ? createFormatter(options.slotLabelFormat[0]) :\n                createFormatter(options.slotLabelFormat);\n        let renderProps = {\n            level: 0,\n            time: props.time,\n            date: dateEnv.toDate(props.date),\n            view: viewApi,\n            text: dateEnv.format(props.date, labelFormat),\n        };\n        return (createElement(ContentContainer, { elTag: \"td\", elClasses: classNames, elAttrs: {\n                'data-time': props.isoTimeStr,\n            }, renderProps: renderProps, generatorName: \"slotLabelContent\", customGenerator: options.slotLabelContent, defaultGenerator: renderInnerContent, classNameGenerator: options.slotLabelClassNames, didMount: options.slotLabelDidMount, willUnmount: options.slotLabelWillUnmount }, (InnerContent) => (createElement(\"div\", { className: \"fc-timegrid-slot-label-frame fc-scrollgrid-shrink-frame\" },\n            createElement(InnerContent, { elTag: \"div\", elClasses: [\n                    'fc-timegrid-slot-label-cushion',\n                    'fc-scrollgrid-shrink-cushion',\n                ] })))));\n    }));\n}\nfunction renderInnerContent(props) {\n    return props.text;\n}\n\nclass TimeBodyAxis extends BaseComponent {\n    render() {\n        return this.props.slatMetas.map((slatMeta) => (createElement(\"tr\", { key: slatMeta.key },\n            createElement(TimeColsAxisCell, Object.assign({}, slatMeta)))));\n    }\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'short' });\nconst AUTO_ALL_DAY_MAX_EVENT_ROWS = 5;\nclass TimeColsView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.allDaySplitter = new AllDaySplitter(); // for use by subclasses\n        this.headerElRef = createRef();\n        this.rootElRef = createRef();\n        this.scrollerElRef = createRef();\n        this.state = {\n            slatCoords: null,\n        };\n        this.handleScrollTopRequest = (scrollTop) => {\n            let scrollerEl = this.scrollerElRef.current;\n            if (scrollerEl) { // TODO: not sure how this could ever be null. weirdness with the reducer\n                scrollerEl.scrollTop = scrollTop;\n            }\n        };\n        /* Header Render Methods\n        ------------------------------------------------------------------------------------------------------------------*/\n        this.renderHeadAxis = (rowKey, frameHeight = '') => {\n            let { options } = this.context;\n            let { dateProfile } = this.props;\n            let range = dateProfile.renderRange;\n            let dayCnt = diffDays(range.start, range.end);\n            // only do in day views (to avoid doing in week views that dont need it)\n            let navLinkAttrs = (dayCnt === 1)\n                ? buildNavLinkAttrs(this.context, range.start, 'week')\n                : {};\n            if (options.weekNumbers && rowKey === 'day') {\n                return (createElement(WeekNumberContainer, { elTag: \"th\", elClasses: [\n                        'fc-timegrid-axis',\n                        'fc-scrollgrid-shrink',\n                    ], elAttrs: {\n                        'aria-hidden': true,\n                    }, date: range.start, defaultFormat: DEFAULT_WEEK_NUM_FORMAT }, (InnerContent) => (createElement(\"div\", { className: [\n                        'fc-timegrid-axis-frame',\n                        'fc-scrollgrid-shrink-frame',\n                        'fc-timegrid-axis-frame-liquid',\n                    ].join(' '), style: { height: frameHeight } },\n                    createElement(InnerContent, { elTag: \"a\", elClasses: [\n                            'fc-timegrid-axis-cushion',\n                            'fc-scrollgrid-shrink-cushion',\n                            'fc-scrollgrid-sync-inner',\n                        ], elAttrs: navLinkAttrs })))));\n            }\n            return (createElement(\"th\", { \"aria-hidden\": true, className: \"fc-timegrid-axis\" },\n                createElement(\"div\", { className: \"fc-timegrid-axis-frame\", style: { height: frameHeight } })));\n        };\n        /* Table Component Render Methods\n        ------------------------------------------------------------------------------------------------------------------*/\n        // only a one-way height sync. we don't send the axis inner-content height to the DayGrid,\n        // but DayGrid still needs to have classNames on inner elements in order to measure.\n        this.renderTableRowAxis = (rowHeight) => {\n            let { options, viewApi } = this.context;\n            let renderProps = {\n                text: options.allDayText,\n                view: viewApi,\n            };\n            return (\n            // TODO: make reusable hook. used in list view too\n            createElement(ContentContainer, { elTag: \"td\", elClasses: [\n                    'fc-timegrid-axis',\n                    'fc-scrollgrid-shrink',\n                ], elAttrs: {\n                    'aria-hidden': true,\n                }, renderProps: renderProps, generatorName: \"allDayContent\", customGenerator: options.allDayContent, defaultGenerator: renderAllDayInner, classNameGenerator: options.allDayClassNames, didMount: options.allDayDidMount, willUnmount: options.allDayWillUnmount }, (InnerContent) => (createElement(\"div\", { className: [\n                    'fc-timegrid-axis-frame',\n                    'fc-scrollgrid-shrink-frame',\n                    rowHeight == null ? ' fc-timegrid-axis-frame-liquid' : '',\n                ].join(' '), style: { height: rowHeight } },\n                createElement(InnerContent, { elTag: \"span\", elClasses: [\n                        'fc-timegrid-axis-cushion',\n                        'fc-scrollgrid-shrink-cushion',\n                        'fc-scrollgrid-sync-inner',\n                    ] })))));\n        };\n        this.handleSlatCoords = (slatCoords) => {\n            this.setState({ slatCoords });\n        };\n    }\n    // rendering\n    // ----------------------------------------------------------------------------------------------------\n    renderSimpleLayout(headerRowContent, allDayContent, timeContent) {\n        let { context, props } = this;\n        let sections = [];\n        let stickyHeaderDates = getStickyHeaderDates(context.options);\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunk: {\n                    elRef: this.headerElRef,\n                    tableClassName: 'fc-col-header',\n                    rowContent: headerRowContent,\n                },\n            });\n        }\n        if (allDayContent) {\n            sections.push({\n                type: 'body',\n                key: 'all-day',\n                chunk: { content: allDayContent },\n            });\n            sections.push({\n                type: 'body',\n                key: 'all-day-divider',\n                outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?\n                createElement(\"tr\", { role: \"presentation\", className: \"fc-scrollgrid-section\" },\n                    createElement(\"td\", { className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded') }))),\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            expandRows: Boolean(context.options.expandRows),\n            chunk: {\n                scrollerElRef: this.scrollerElRef,\n                content: timeContent,\n            },\n        });\n        return (createElement(ViewContainer, { elRef: this.rootElRef, elClasses: ['fc-timegrid'], viewSpec: context.viewSpec },\n            createElement(SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [{ width: 'shrink' }], sections: sections })));\n    }\n    renderHScrollLayout(headerRowContent, allDayContent, timeContent, colCnt, dayMinWidth, slatMetas, slatCoords) {\n        let ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n        if (!ScrollGrid) {\n            throw new Error('No ScrollGrid implementation');\n        }\n        let { context, props } = this;\n        let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n        let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n        let sections = [];\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                syncRowHeights: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        rowContent: (arg) => (createElement(\"tr\", { role: \"presentation\" }, this.renderHeadAxis('day', arg.rowSyncHeights[0]))),\n                    },\n                    {\n                        key: 'cols',\n                        elRef: this.headerElRef,\n                        tableClassName: 'fc-col-header',\n                        rowContent: headerRowContent,\n                    },\n                ],\n            });\n        }\n        if (allDayContent) {\n            sections.push({\n                type: 'body',\n                key: 'all-day',\n                syncRowHeights: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        rowContent: (contentArg) => (createElement(\"tr\", { role: \"presentation\" }, this.renderTableRowAxis(contentArg.rowSyncHeights[0]))),\n                    },\n                    {\n                        key: 'cols',\n                        content: allDayContent,\n                    },\n                ],\n            });\n            sections.push({\n                key: 'all-day-divider',\n                type: 'body',\n                outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?\n                createElement(\"tr\", { role: \"presentation\", className: \"fc-scrollgrid-section\" },\n                    createElement(\"td\", { colSpan: 2, className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded') }))),\n            });\n        }\n        let isNowIndicator = context.options.nowIndicator;\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            expandRows: Boolean(context.options.expandRows),\n            chunks: [\n                {\n                    key: 'axis',\n                    content: (arg) => (\n                    // TODO: make this now-indicator arrow more DRY with TimeColsContent\n                    createElement(\"div\", { className: \"fc-timegrid-axis-chunk\" },\n                        createElement(\"table\", { \"aria-hidden\": true, style: { height: arg.expandRows ? arg.clientHeight : '' } },\n                            arg.tableColGroupNode,\n                            createElement(\"tbody\", null,\n                                createElement(TimeBodyAxis, { slatMetas: slatMetas }))),\n                        createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" },\n                            createElement(NowTimer, { unit: isNowIndicator ? 'minute' : 'day' /* hacky */ }, (nowDate) => {\n                                let nowIndicatorTop = isNowIndicator &&\n                                    slatCoords &&\n                                    slatCoords.safeComputeTop(nowDate); // might return void\n                                if (typeof nowIndicatorTop === 'number') {\n                                    return (createElement(NowIndicatorContainer, { elClasses: ['fc-timegrid-now-indicator-arrow'], elStyle: { top: nowIndicatorTop }, isAxis: true, date: nowDate }));\n                                }\n                                return null;\n                            })))),\n                },\n                {\n                    key: 'cols',\n                    scrollerElRef: this.scrollerElRef,\n                    content: timeContent,\n                },\n            ],\n        });\n        if (stickyFooterScrollbar) {\n            sections.push({\n                key: 'footer',\n                type: 'footer',\n                isSticky: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        content: renderScrollShim,\n                    },\n                    {\n                        key: 'cols',\n                        content: renderScrollShim,\n                    },\n                ],\n            });\n        }\n        return (createElement(ViewContainer, { elRef: this.rootElRef, elClasses: ['fc-timegrid'], viewSpec: context.viewSpec },\n            createElement(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, forPrint: props.forPrint, collapsibleWidth: false, colGroups: [\n                    { width: 'shrink', cols: [{ width: 'shrink' }] },\n                    { cols: [{ span: colCnt, minWidth: dayMinWidth }] },\n                ], sections: sections })));\n    }\n    /* Dimensions\n    ------------------------------------------------------------------------------------------------------------------*/\n    getAllDayMaxEventProps() {\n        let { dayMaxEvents, dayMaxEventRows } = this.context.options;\n        if (dayMaxEvents === true || dayMaxEventRows === true) { // is auto?\n            dayMaxEvents = undefined;\n            dayMaxEventRows = AUTO_ALL_DAY_MAX_EVENT_ROWS; // make sure \"auto\" goes to a real number\n        }\n        return { dayMaxEvents, dayMaxEventRows };\n    }\n}\nfunction renderAllDayInner(renderProps) {\n    return renderProps.text;\n}\n\nclass TimeColsSlatsCoords {\n    constructor(positions, dateProfile, slotDuration) {\n        this.positions = positions;\n        this.dateProfile = dateProfile;\n        this.slotDuration = slotDuration;\n    }\n    safeComputeTop(date) {\n        let { dateProfile } = this;\n        if (rangeContainsMarker(dateProfile.currentRange, date)) {\n            let startOfDayDate = startOfDay(date);\n            let timeMs = date.valueOf() - startOfDayDate.valueOf();\n            if (timeMs >= asRoughMs(dateProfile.slotMinTime) &&\n                timeMs < asRoughMs(dateProfile.slotMaxTime)) {\n                return this.computeTimeTop(createDuration(timeMs));\n            }\n        }\n        return null;\n    }\n    // Computes the top coordinate, relative to the bounds of the grid, of the given date.\n    // A `startOfDayDate` must be given for avoiding ambiguity over how to treat midnight.\n    computeDateTop(when, startOfDayDate) {\n        if (!startOfDayDate) {\n            startOfDayDate = startOfDay(when);\n        }\n        return this.computeTimeTop(createDuration(when.valueOf() - startOfDayDate.valueOf()));\n    }\n    // Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).\n    // This is a makeshify way to compute the time-top. Assumes all slatMetas dates are uniform.\n    // Eventually allow computation with arbirary slat dates.\n    computeTimeTop(duration) {\n        let { positions, dateProfile } = this;\n        let len = positions.els.length;\n        // floating-point value of # of slots covered\n        let slatCoverage = (duration.milliseconds - asRoughMs(dateProfile.slotMinTime)) / asRoughMs(this.slotDuration);\n        let slatIndex;\n        let slatRemainder;\n        // compute a floating-point number for how many slats should be progressed through.\n        // from 0 to number of slats (inclusive)\n        // constrained because slotMinTime/slotMaxTime might be customized.\n        slatCoverage = Math.max(0, slatCoverage);\n        slatCoverage = Math.min(len, slatCoverage);\n        // an integer index of the furthest whole slat\n        // from 0 to number slats (*exclusive*, so len-1)\n        slatIndex = Math.floor(slatCoverage);\n        slatIndex = Math.min(slatIndex, len - 1);\n        // how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.\n        // could be 1.0 if slatCoverage is covering *all* the slots\n        slatRemainder = slatCoverage - slatIndex;\n        return positions.tops[slatIndex] +\n            positions.getHeight(slatIndex) * slatRemainder;\n    }\n}\n\nclass TimeColsSlatsBody extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { slatElRefs } = props;\n        return (createElement(\"tbody\", null, props.slatMetas.map((slatMeta, i) => {\n            let renderProps = {\n                time: slatMeta.time,\n                date: context.dateEnv.toDate(slatMeta.date),\n                view: context.viewApi,\n            };\n            return (createElement(\"tr\", { key: slatMeta.key, ref: slatElRefs.createRef(slatMeta.key) },\n                props.axis && (createElement(TimeColsAxisCell, Object.assign({}, slatMeta))),\n                createElement(ContentContainer, { elTag: \"td\", elClasses: [\n                        'fc-timegrid-slot',\n                        'fc-timegrid-slot-lane',\n                        !slatMeta.isLabeled && 'fc-timegrid-slot-minor',\n                    ], elAttrs: {\n                        'data-time': slatMeta.isoTimeStr,\n                    }, renderProps: renderProps, generatorName: \"slotLaneContent\", customGenerator: options.slotLaneContent, classNameGenerator: options.slotLaneClassNames, didMount: options.slotLaneDidMount, willUnmount: options.slotLaneWillUnmount })));\n        })));\n    }\n}\n\n/*\nfor the horizontal \"slats\" that run width-wise. Has a time axis on a side. Depends on RTL.\n*/\nclass TimeColsSlats extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.rootElRef = createRef();\n        this.slatElRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        return (createElement(\"div\", { ref: this.rootElRef, className: \"fc-timegrid-slots\" },\n            createElement(\"table\", { \"aria-hidden\": true, className: context.theme.getClass('table'), style: {\n                    minWidth: props.tableMinWidth,\n                    width: props.clientWidth,\n                    height: props.minHeight,\n                } },\n                props.tableColGroupNode /* relies on there only being a single <col> for the axis */,\n                createElement(TimeColsSlatsBody, { slatElRefs: this.slatElRefs, axis: props.axis, slatMetas: props.slatMetas }))));\n    }\n    componentDidMount() {\n        this.updateSizing();\n    }\n    componentDidUpdate() {\n        this.updateSizing();\n    }\n    componentWillUnmount() {\n        if (this.props.onCoords) {\n            this.props.onCoords(null);\n        }\n    }\n    updateSizing() {\n        let { context, props } = this;\n        if (props.onCoords &&\n            props.clientWidth !== null // means sizing has stabilized\n        ) {\n            let rootEl = this.rootElRef.current;\n            if (rootEl.offsetHeight) { // not hidden by css\n                props.onCoords(new TimeColsSlatsCoords(new PositionCache(this.rootElRef.current, collectSlatEls(this.slatElRefs.currentMap, props.slatMetas), false, true), this.props.dateProfile, context.options.slotDuration));\n            }\n        }\n    }\n}\nfunction collectSlatEls(elMap, slatMetas) {\n    return slatMetas.map((slatMeta) => elMap[slatMeta.key]);\n}\n\nfunction splitSegsByCol(segs, colCnt) {\n    let segsByCol = [];\n    let i;\n    for (i = 0; i < colCnt; i += 1) {\n        segsByCol.push([]);\n    }\n    if (segs) {\n        for (i = 0; i < segs.length; i += 1) {\n            segsByCol[segs[i].col].push(segs[i]);\n        }\n    }\n    return segsByCol;\n}\nfunction splitInteractionByCol(ui, colCnt) {\n    let byRow = [];\n    if (!ui) {\n        for (let i = 0; i < colCnt; i += 1) {\n            byRow[i] = null;\n        }\n    }\n    else {\n        for (let i = 0; i < colCnt; i += 1) {\n            byRow[i] = {\n                affectedInstances: ui.affectedInstances,\n                isEvent: ui.isEvent,\n                segs: [],\n            };\n        }\n        for (let seg of ui.segs) {\n            byRow[seg.col].segs.push(seg);\n        }\n    }\n    return byRow;\n}\n\nclass TimeColMoreLink extends BaseComponent {\n    render() {\n        let { props } = this;\n        return (createElement(MoreLinkContainer, { elClasses: ['fc-timegrid-more-link'], elStyle: {\n                top: props.top,\n                bottom: props.bottom,\n            }, allDayDate: null, moreCnt: props.hiddenSegs.length, allSegs: props.hiddenSegs, hiddenSegs: props.hiddenSegs, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, todayRange: props.todayRange, popoverContent: () => renderPlainFgSegs(props.hiddenSegs, props), defaultGenerator: renderMoreLinkInner, forceTimed: true }, (InnerContent) => (createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-timegrid-more-link-inner', 'fc-sticky'] }))));\n    }\n}\nfunction renderMoreLinkInner(props) {\n    return props.shortText;\n}\n\n// segInputs assumed sorted\nfunction buildPositioning(segInputs, strictOrder, maxStackCnt) {\n    let hierarchy = new SegHierarchy();\n    if (strictOrder != null) {\n        hierarchy.strictOrder = strictOrder;\n    }\n    if (maxStackCnt != null) {\n        hierarchy.maxStackCnt = maxStackCnt;\n    }\n    let hiddenEntries = hierarchy.addSegs(segInputs);\n    let hiddenGroups = groupIntersectingEntries(hiddenEntries);\n    let web = buildWeb(hierarchy);\n    web = stretchWeb(web, 1); // all levelCoords/thickness will have 0.0-1.0\n    let segRects = webToRects(web);\n    return { segRects, hiddenGroups };\n}\nfunction buildWeb(hierarchy) {\n    const { entriesByLevel } = hierarchy;\n    const buildNode = cacheable((level, lateral) => level + ':' + lateral, (level, lateral) => {\n        let siblingRange = findNextLevelSegs(hierarchy, level, lateral);\n        let nextLevelRes = buildNodes(siblingRange, buildNode);\n        let entry = entriesByLevel[level][lateral];\n        return [\n            Object.assign(Object.assign({}, entry), { nextLevelNodes: nextLevelRes[0] }),\n            entry.thickness + nextLevelRes[1], // the pressure builds\n        ];\n    });\n    return buildNodes(entriesByLevel.length\n        ? { level: 0, lateralStart: 0, lateralEnd: entriesByLevel[0].length }\n        : null, buildNode)[0];\n}\nfunction buildNodes(siblingRange, buildNode) {\n    if (!siblingRange) {\n        return [[], 0];\n    }\n    let { level, lateralStart, lateralEnd } = siblingRange;\n    let lateral = lateralStart;\n    let pairs = [];\n    while (lateral < lateralEnd) {\n        pairs.push(buildNode(level, lateral));\n        lateral += 1;\n    }\n    pairs.sort(cmpDescPressures);\n    return [\n        pairs.map(extractNode),\n        pairs[0][1], // first item's pressure\n    ];\n}\nfunction cmpDescPressures(a, b) {\n    return b[1] - a[1];\n}\nfunction extractNode(a) {\n    return a[0];\n}\nfunction findNextLevelSegs(hierarchy, subjectLevel, subjectLateral) {\n    let { levelCoords, entriesByLevel } = hierarchy;\n    let subjectEntry = entriesByLevel[subjectLevel][subjectLateral];\n    let afterSubject = levelCoords[subjectLevel] + subjectEntry.thickness;\n    let levelCnt = levelCoords.length;\n    let level = subjectLevel;\n    // skip past levels that are too high up\n    for (; level < levelCnt && levelCoords[level] < afterSubject; level += 1)\n        ; // do nothing\n    for (; level < levelCnt; level += 1) {\n        let entries = entriesByLevel[level];\n        let entry;\n        let searchIndex = binarySearch(entries, subjectEntry.span.start, getEntrySpanEnd);\n        let lateralStart = searchIndex[0] + searchIndex[1]; // if exact match (which doesn't collide), go to next one\n        let lateralEnd = lateralStart;\n        while ( // loop through entries that horizontally intersect\n        (entry = entries[lateralEnd]) && // but not past the whole seg list\n            entry.span.start < subjectEntry.span.end) {\n            lateralEnd += 1;\n        }\n        if (lateralStart < lateralEnd) {\n            return { level, lateralStart, lateralEnd };\n        }\n    }\n    return null;\n}\nfunction stretchWeb(topLevelNodes, totalThickness) {\n    const stretchNode = cacheable((node, startCoord, prevThickness) => buildEntryKey(node), (node, startCoord, prevThickness) => {\n        let { nextLevelNodes, thickness } = node;\n        let allThickness = thickness + prevThickness;\n        let thicknessFraction = thickness / allThickness;\n        let endCoord;\n        let newChildren = [];\n        if (!nextLevelNodes.length) {\n            endCoord = totalThickness;\n        }\n        else {\n            for (let childNode of nextLevelNodes) {\n                if (endCoord === undefined) {\n                    let res = stretchNode(childNode, startCoord, allThickness);\n                    endCoord = res[0];\n                    newChildren.push(res[1]);\n                }\n                else {\n                    let res = stretchNode(childNode, endCoord, 0);\n                    newChildren.push(res[1]);\n                }\n            }\n        }\n        let newThickness = (endCoord - startCoord) * thicknessFraction;\n        return [endCoord - newThickness, Object.assign(Object.assign({}, node), { thickness: newThickness, nextLevelNodes: newChildren })];\n    });\n    return topLevelNodes.map((node) => stretchNode(node, 0, 0)[1]);\n}\n// not sorted in any particular order\nfunction webToRects(topLevelNodes) {\n    let rects = [];\n    const processNode = cacheable((node, levelCoord, stackDepth) => buildEntryKey(node), (node, levelCoord, stackDepth) => {\n        let rect = Object.assign(Object.assign({}, node), { levelCoord,\n            stackDepth, stackForward: 0 });\n        rects.push(rect);\n        return (rect.stackForward = processNodes(node.nextLevelNodes, levelCoord + node.thickness, stackDepth + 1) + 1);\n    });\n    function processNodes(nodes, levelCoord, stackDepth) {\n        let stackForward = 0;\n        for (let node of nodes) {\n            stackForward = Math.max(processNode(node, levelCoord, stackDepth), stackForward);\n        }\n        return stackForward;\n    }\n    processNodes(topLevelNodes, 0, 0);\n    return rects; // TODO: sort rects by levelCoord to be consistent with toRects?\n}\n// TODO: move to general util\nfunction cacheable(keyFunc, workFunc) {\n    const cache = {};\n    return (...args) => {\n        let key = keyFunc(...args);\n        return (key in cache)\n            ? cache[key]\n            : (cache[key] = workFunc(...args));\n    };\n}\n\nfunction computeSegVCoords(segs, colDate, slatCoords = null, eventMinHeight = 0) {\n    let vcoords = [];\n    if (slatCoords) {\n        for (let i = 0; i < segs.length; i += 1) {\n            let seg = segs[i];\n            let spanStart = slatCoords.computeDateTop(seg.start, colDate);\n            let spanEnd = Math.max(spanStart + (eventMinHeight || 0), // :(\n            slatCoords.computeDateTop(seg.end, colDate));\n            vcoords.push({\n                start: Math.round(spanStart),\n                end: Math.round(spanEnd), //\n            });\n        }\n    }\n    return vcoords;\n}\nfunction computeFgSegPlacements(segs, segVCoords, // might not have for every seg\neventOrderStrict, eventMaxStack) {\n    let segInputs = [];\n    let dumbSegs = []; // segs without coords\n    for (let i = 0; i < segs.length; i += 1) {\n        let vcoords = segVCoords[i];\n        if (vcoords) {\n            segInputs.push({\n                index: i,\n                thickness: 1,\n                span: vcoords,\n            });\n        }\n        else {\n            dumbSegs.push(segs[i]);\n        }\n    }\n    let { segRects, hiddenGroups } = buildPositioning(segInputs, eventOrderStrict, eventMaxStack);\n    let segPlacements = [];\n    for (let segRect of segRects) {\n        segPlacements.push({\n            seg: segs[segRect.index],\n            rect: segRect,\n        });\n    }\n    for (let dumbSeg of dumbSegs) {\n        segPlacements.push({ seg: dumbSeg, rect: null });\n    }\n    return { segPlacements, hiddenGroups };\n}\n\nconst DEFAULT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    meridiem: false,\n});\nclass TimeColEvent extends BaseComponent {\n    render() {\n        return (createElement(StandardEvent, Object.assign({}, this.props, { elClasses: [\n                'fc-timegrid-event',\n                'fc-v-event',\n                this.props.isShort && 'fc-timegrid-event-short',\n            ], defaultTimeFormat: DEFAULT_TIME_FORMAT })));\n    }\n}\n\nclass TimeCol extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.sortEventSegs = memoize(sortEventSegs);\n    }\n    // TODO: memoize event-placement?\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let isSelectMirror = options.selectMirror;\n        let mirrorSegs = // yuck\n         (props.eventDrag && props.eventDrag.segs) ||\n            (props.eventResize && props.eventResize.segs) ||\n            (isSelectMirror && props.dateSelectionSegs) ||\n            [];\n        let interactionAffectedInstances = // TODO: messy way to compute this\n         (props.eventDrag && props.eventDrag.affectedInstances) ||\n            (props.eventResize && props.eventResize.affectedInstances) ||\n            {};\n        let sortedFgSegs = this.sortEventSegs(props.fgEventSegs, options.eventOrder);\n        return (createElement(DayCellContainer, { elTag: \"td\", elRef: props.elRef, elClasses: [\n                'fc-timegrid-col',\n                ...(props.extraClassNames || []),\n            ], elAttrs: Object.assign({ role: 'gridcell' }, props.extraDataAttrs), date: props.date, dateProfile: props.dateProfile, todayRange: props.todayRange, extraRenderProps: props.extraRenderProps }, (InnerContent) => (createElement(\"div\", { className: \"fc-timegrid-col-frame\" },\n            createElement(\"div\", { className: \"fc-timegrid-col-bg\" },\n                this.renderFillSegs(props.businessHourSegs, 'non-business'),\n                this.renderFillSegs(props.bgEventSegs, 'bg-event'),\n                this.renderFillSegs(props.dateSelectionSegs, 'highlight')),\n            createElement(\"div\", { className: \"fc-timegrid-col-events\" }, this.renderFgSegs(sortedFgSegs, interactionAffectedInstances, false, false, false)),\n            createElement(\"div\", { className: \"fc-timegrid-col-events\" }, this.renderFgSegs(mirrorSegs, {}, Boolean(props.eventDrag), Boolean(props.eventResize), Boolean(isSelectMirror), 'mirror')),\n            createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" }, this.renderNowIndicator(props.nowIndicatorSegs)),\n            hasCustomDayCellContent(options) && (createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-timegrid-col-misc'] }))))));\n    }\n    renderFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey) {\n        let { props } = this;\n        if (props.forPrint) {\n            return renderPlainFgSegs(sortedFgSegs, props);\n        }\n        return this.renderPositionedFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey);\n    }\n    renderPositionedFgSegs(segs, // if not mirror, needs to be sorted\n    segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey) {\n        let { eventMaxStack, eventShortHeight, eventOrderStrict, eventMinHeight } = this.context.options;\n        let { date, slatCoords, eventSelection, todayRange, nowDate } = this.props;\n        let isMirror = isDragging || isResizing || isDateSelecting;\n        let segVCoords = computeSegVCoords(segs, date, slatCoords, eventMinHeight);\n        let { segPlacements, hiddenGroups } = computeFgSegPlacements(segs, segVCoords, eventOrderStrict, eventMaxStack);\n        return (createElement(Fragment, null,\n            this.renderHiddenGroups(hiddenGroups, segs),\n            segPlacements.map((segPlacement) => {\n                let { seg, rect } = segPlacement;\n                let instanceId = seg.eventRange.instance.instanceId;\n                let isVisible = isMirror || Boolean(!segIsInvisible[instanceId] && rect);\n                let vStyle = computeSegVStyle(rect && rect.span);\n                let hStyle = (!isMirror && rect) ? this.computeSegHStyle(rect) : { left: 0, right: 0 };\n                let isInset = Boolean(rect) && rect.stackForward > 0;\n                let isShort = Boolean(rect) && (rect.span.end - rect.span.start) < eventShortHeight; // look at other places for this problem\n                return (createElement(\"div\", { className: 'fc-timegrid-event-harness' +\n                        (isInset ? ' fc-timegrid-event-harness-inset' : ''), key: forcedKey || instanceId, style: Object.assign(Object.assign({ visibility: isVisible ? '' : 'hidden' }, vStyle), hStyle) },\n                    createElement(TimeColEvent, Object.assign({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, isShort: isShort }, getSegMeta(seg, todayRange, nowDate)))));\n            })));\n    }\n    // will already have eventMinHeight applied because segInputs already had it\n    renderHiddenGroups(hiddenGroups, segs) {\n        let { extraDateSpan, dateProfile, todayRange, nowDate, eventSelection, eventDrag, eventResize } = this.props;\n        return (createElement(Fragment, null, hiddenGroups.map((hiddenGroup) => {\n            let positionCss = computeSegVStyle(hiddenGroup.span);\n            let hiddenSegs = compileSegsFromEntries(hiddenGroup.entries, segs);\n            return (createElement(TimeColMoreLink, { key: buildIsoString(computeEarliestSegStart(hiddenSegs)), hiddenSegs: hiddenSegs, top: positionCss.top, bottom: positionCss.bottom, extraDateSpan: extraDateSpan, dateProfile: dateProfile, todayRange: todayRange, nowDate: nowDate, eventSelection: eventSelection, eventDrag: eventDrag, eventResize: eventResize }));\n        })));\n    }\n    renderFillSegs(segs, fillType) {\n        let { props, context } = this;\n        let segVCoords = computeSegVCoords(segs, props.date, props.slatCoords, context.options.eventMinHeight); // don't assume all populated\n        let children = segVCoords.map((vcoords, i) => {\n            let seg = segs[i];\n            return (createElement(\"div\", { key: buildEventRangeKey(seg.eventRange), className: \"fc-timegrid-bg-harness\", style: computeSegVStyle(vcoords) }, fillType === 'bg-event' ?\n                createElement(BgEvent, Object.assign({ seg: seg }, getSegMeta(seg, props.todayRange, props.nowDate))) :\n                renderFill(fillType)));\n        });\n        return createElement(Fragment, null, children);\n    }\n    renderNowIndicator(segs) {\n        let { slatCoords, date } = this.props;\n        if (!slatCoords) {\n            return null;\n        }\n        return segs.map((seg, i) => (createElement(NowIndicatorContainer\n        // key doesn't matter. will only ever be one\n        , { \n            // key doesn't matter. will only ever be one\n            key: i, elClasses: ['fc-timegrid-now-indicator-line'], elStyle: {\n                top: slatCoords.computeDateTop(seg.start, date),\n            }, isAxis: false, date: date })));\n    }\n    computeSegHStyle(segHCoords) {\n        let { isRtl, options } = this.context;\n        let shouldOverlap = options.slotEventOverlap;\n        let nearCoord = segHCoords.levelCoord; // the left side if LTR. the right side if RTL. floating-point\n        let farCoord = segHCoords.levelCoord + segHCoords.thickness; // the right side if LTR. the left side if RTL. floating-point\n        let left; // amount of space from left edge, a fraction of the total width\n        let right; // amount of space from right edge, a fraction of the total width\n        if (shouldOverlap) {\n            // double the width, but don't go beyond the maximum forward coordinate (1.0)\n            farCoord = Math.min(1, nearCoord + (farCoord - nearCoord) * 2);\n        }\n        if (isRtl) {\n            left = 1 - farCoord;\n            right = nearCoord;\n        }\n        else {\n            left = nearCoord;\n            right = 1 - farCoord;\n        }\n        let props = {\n            zIndex: segHCoords.stackDepth + 1,\n            left: left * 100 + '%',\n            right: right * 100 + '%',\n        };\n        if (shouldOverlap && !segHCoords.stackForward) {\n            // add padding to the edge so that forward stacked events don't cover the resizer's icon\n            props[isRtl ? 'marginLeft' : 'marginRight'] = 10 * 2; // 10 is a guesstimate of the icon's width\n        }\n        return props;\n    }\n}\nfunction renderPlainFgSegs(sortedFgSegs, { todayRange, nowDate, eventSelection, eventDrag, eventResize }) {\n    let hiddenInstances = (eventDrag ? eventDrag.affectedInstances : null) ||\n        (eventResize ? eventResize.affectedInstances : null) ||\n        {};\n    return (createElement(Fragment, null, sortedFgSegs.map((seg) => {\n        let instanceId = seg.eventRange.instance.instanceId;\n        return (createElement(\"div\", { key: instanceId, style: { visibility: hiddenInstances[instanceId] ? 'hidden' : '' } },\n            createElement(TimeColEvent, Object.assign({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === eventSelection, isShort: false }, getSegMeta(seg, todayRange, nowDate)))));\n    })));\n}\nfunction computeSegVStyle(segVCoords) {\n    if (!segVCoords) {\n        return { top: '', bottom: '' };\n    }\n    return {\n        top: segVCoords.start,\n        bottom: -segVCoords.end,\n    };\n}\nfunction compileSegsFromEntries(segEntries, allSegs) {\n    return segEntries.map((segEntry) => allSegs[segEntry.index]);\n}\n\nclass TimeColsContent extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.splitFgEventSegs = memoize(splitSegsByCol);\n        this.splitBgEventSegs = memoize(splitSegsByCol);\n        this.splitBusinessHourSegs = memoize(splitSegsByCol);\n        this.splitNowIndicatorSegs = memoize(splitSegsByCol);\n        this.splitDateSelectionSegs = memoize(splitSegsByCol);\n        this.splitEventDrag = memoize(splitInteractionByCol);\n        this.splitEventResize = memoize(splitInteractionByCol);\n        this.rootElRef = createRef();\n        this.cellElRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        let nowIndicatorTop = context.options.nowIndicator &&\n            props.slatCoords &&\n            props.slatCoords.safeComputeTop(props.nowDate); // might return void\n        let colCnt = props.cells.length;\n        let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, colCnt);\n        let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, colCnt);\n        let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, colCnt);\n        let nowIndicatorSegsByRow = this.splitNowIndicatorSegs(props.nowIndicatorSegs, colCnt);\n        let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, colCnt);\n        let eventDragByRow = this.splitEventDrag(props.eventDrag, colCnt);\n        let eventResizeByRow = this.splitEventResize(props.eventResize, colCnt);\n        return (createElement(\"div\", { className: \"fc-timegrid-cols\", ref: this.rootElRef },\n            createElement(\"table\", { role: \"presentation\", style: {\n                    minWidth: props.tableMinWidth,\n                    width: props.clientWidth,\n                } },\n                props.tableColGroupNode,\n                createElement(\"tbody\", { role: \"presentation\" },\n                    createElement(\"tr\", { role: \"row\" },\n                        props.axis && (createElement(\"td\", { \"aria-hidden\": true, className: \"fc-timegrid-col fc-timegrid-axis\" },\n                            createElement(\"div\", { className: \"fc-timegrid-col-frame\" },\n                                createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" }, typeof nowIndicatorTop === 'number' && (createElement(NowIndicatorContainer, { elClasses: ['fc-timegrid-now-indicator-arrow'], elStyle: { top: nowIndicatorTop }, isAxis: true, date: props.nowDate })))))),\n                        props.cells.map((cell, i) => (createElement(TimeCol, { key: cell.key, elRef: this.cellElRefs.createRef(cell.key), dateProfile: props.dateProfile, date: cell.date, nowDate: props.nowDate, todayRange: props.todayRange, extraRenderProps: cell.extraRenderProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, fgEventSegs: fgEventSegsByRow[i], bgEventSegs: bgEventSegsByRow[i], businessHourSegs: businessHourSegsByRow[i], nowIndicatorSegs: nowIndicatorSegsByRow[i], dateSelectionSegs: dateSelectionSegsByRow[i], eventDrag: eventDragByRow[i], eventResize: eventResizeByRow[i], slatCoords: props.slatCoords, eventSelection: props.eventSelection, forPrint: props.forPrint }))))))));\n    }\n    componentDidMount() {\n        this.updateCoords();\n    }\n    componentDidUpdate() {\n        this.updateCoords();\n    }\n    updateCoords() {\n        let { props } = this;\n        if (props.onColCoords &&\n            props.clientWidth !== null // means sizing has stabilized\n        ) {\n            props.onColCoords(new PositionCache(this.rootElRef.current, collectCellEls(this.cellElRefs.currentMap, props.cells), true, // horizontal\n            false));\n        }\n    }\n}\nfunction collectCellEls(elMap, cells) {\n    return cells.map((cell) => elMap[cell.key]);\n}\n\n/* A component that renders one or more columns of vertical time slots\n----------------------------------------------------------------------------------------------------------------------*/\nclass TimeCols extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.processSlotOptions = memoize(processSlotOptions);\n        this.state = {\n            slatCoords: null,\n        };\n        this.handleRootEl = (el) => {\n            if (el) {\n                this.context.registerInteractiveComponent(this, {\n                    el,\n                    isHitComboAllowed: this.props.isHitComboAllowed,\n                });\n            }\n            else {\n                this.context.unregisterInteractiveComponent(this);\n            }\n        };\n        this.handleScrollRequest = (request) => {\n            let { onScrollTopRequest } = this.props;\n            let { slatCoords } = this.state;\n            if (onScrollTopRequest && slatCoords) {\n                if (request.time) {\n                    let top = slatCoords.computeTimeTop(request.time);\n                    top = Math.ceil(top); // zoom can give weird floating-point values. rather scroll a little bit further\n                    if (top) {\n                        top += 1; // to overcome top border that slots beyond the first have. looks better\n                    }\n                    onScrollTopRequest(top);\n                }\n                return true;\n            }\n            return false;\n        };\n        this.handleColCoords = (colCoords) => {\n            this.colCoords = colCoords;\n        };\n        this.handleSlatCoords = (slatCoords) => {\n            this.setState({ slatCoords });\n            if (this.props.onSlatCoords) {\n                this.props.onSlatCoords(slatCoords);\n            }\n        };\n    }\n    render() {\n        let { props, state } = this;\n        return (createElement(\"div\", { className: \"fc-timegrid-body\", ref: this.handleRootEl, style: {\n                // these props are important to give this wrapper correct dimensions for interactions\n                // TODO: if we set it here, can we avoid giving to inner tables?\n                width: props.clientWidth,\n                minWidth: props.tableMinWidth,\n            } },\n            createElement(TimeColsSlats, { axis: props.axis, dateProfile: props.dateProfile, slatMetas: props.slatMetas, clientWidth: props.clientWidth, minHeight: props.expandRows ? props.clientHeight : '', tableMinWidth: props.tableMinWidth, tableColGroupNode: props.axis ? props.tableColGroupNode : null /* axis depends on the colgroup's shrinking */, onCoords: this.handleSlatCoords }),\n            createElement(TimeColsContent, { cells: props.cells, axis: props.axis, dateProfile: props.dateProfile, businessHourSegs: props.businessHourSegs, bgEventSegs: props.bgEventSegs, fgEventSegs: props.fgEventSegs, dateSelectionSegs: props.dateSelectionSegs, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange, nowDate: props.nowDate, nowIndicatorSegs: props.nowIndicatorSegs, clientWidth: props.clientWidth, tableMinWidth: props.tableMinWidth, tableColGroupNode: props.tableColGroupNode, slatCoords: state.slatCoords, onColCoords: this.handleColCoords, forPrint: props.forPrint })));\n    }\n    componentDidMount() {\n        this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest);\n    }\n    componentDidUpdate(prevProps) {\n        this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile);\n    }\n    componentWillUnmount() {\n        this.scrollResponder.detach();\n    }\n    queryHit(positionLeft, positionTop) {\n        let { dateEnv, options } = this.context;\n        let { colCoords } = this;\n        let { dateProfile } = this.props;\n        let { slatCoords } = this.state;\n        let { snapDuration, snapsPerSlot } = this.processSlotOptions(this.props.slotDuration, options.snapDuration);\n        let colIndex = colCoords.leftToIndex(positionLeft);\n        let slatIndex = slatCoords.positions.topToIndex(positionTop);\n        if (colIndex != null && slatIndex != null) {\n            let cell = this.props.cells[colIndex];\n            let slatTop = slatCoords.positions.tops[slatIndex];\n            let slatHeight = slatCoords.positions.getHeight(slatIndex);\n            let partial = (positionTop - slatTop) / slatHeight; // floating point number between 0 and 1\n            let localSnapIndex = Math.floor(partial * snapsPerSlot); // the snap # relative to start of slat\n            let snapIndex = slatIndex * snapsPerSlot + localSnapIndex;\n            let dayDate = this.props.cells[colIndex].date;\n            let time = addDurations(dateProfile.slotMinTime, multiplyDuration(snapDuration, snapIndex));\n            let start = dateEnv.add(dayDate, time);\n            let end = dateEnv.add(start, snapDuration);\n            return {\n                dateProfile,\n                dateSpan: Object.assign({ range: { start, end }, allDay: false }, cell.extraDateSpan),\n                dayEl: colCoords.els[colIndex],\n                rect: {\n                    left: colCoords.lefts[colIndex],\n                    right: colCoords.rights[colIndex],\n                    top: slatTop,\n                    bottom: slatTop + slatHeight,\n                },\n                layer: 0,\n            };\n        }\n        return null;\n    }\n}\nfunction processSlotOptions(slotDuration, snapDurationOverride) {\n    let snapDuration = snapDurationOverride || slotDuration;\n    let snapsPerSlot = wholeDivideDurations(slotDuration, snapDuration);\n    if (snapsPerSlot === null) {\n        snapDuration = slotDuration;\n        snapsPerSlot = 1;\n        // TODO: say warning?\n    }\n    return { snapDuration, snapsPerSlot };\n}\n\nclass DayTimeColsSlicer extends Slicer {\n    sliceRange(range, dayRanges) {\n        let segs = [];\n        for (let col = 0; col < dayRanges.length; col += 1) {\n            let segRange = intersectRanges(range, dayRanges[col]);\n            if (segRange) {\n                segs.push({\n                    start: segRange.start,\n                    end: segRange.end,\n                    isStart: segRange.start.valueOf() === range.start.valueOf(),\n                    isEnd: segRange.end.valueOf() === range.end.valueOf(),\n                    col,\n                });\n            }\n        }\n        return segs;\n    }\n}\n\nclass DayTimeCols extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.buildDayRanges = memoize(buildDayRanges);\n        this.slicer = new DayTimeColsSlicer();\n        this.timeColsRef = createRef();\n    }\n    render() {\n        let { props, context } = this;\n        let { dateProfile, dayTableModel } = props;\n        let { nowIndicator, nextDayThreshold } = context.options;\n        let dayRanges = this.buildDayRanges(dayTableModel, dateProfile, context.dateEnv);\n        // give it the first row of cells\n        // TODO: would move this further down hierarchy, but sliceNowDate needs it\n        return (createElement(NowTimer, { unit: nowIndicator ? 'minute' : 'day' }, (nowDate, todayRange) => (createElement(TimeCols, Object.assign({ ref: this.timeColsRef }, this.slicer.sliceProps(props, dateProfile, null, context, dayRanges), { forPrint: props.forPrint, axis: props.axis, dateProfile: dateProfile, slatMetas: props.slatMetas, slotDuration: props.slotDuration, cells: dayTableModel.cells[0], tableColGroupNode: props.tableColGroupNode, tableMinWidth: props.tableMinWidth, clientWidth: props.clientWidth, clientHeight: props.clientHeight, expandRows: props.expandRows, nowDate: nowDate, nowIndicatorSegs: nowIndicator && this.slicer.sliceNowDate(nowDate, dateProfile, nextDayThreshold, context, dayRanges), todayRange: todayRange, onScrollTopRequest: props.onScrollTopRequest, onSlatCoords: props.onSlatCoords })))));\n    }\n}\nfunction buildDayRanges(dayTableModel, dateProfile, dateEnv) {\n    let ranges = [];\n    for (let date of dayTableModel.headerDates) {\n        ranges.push({\n            start: dateEnv.add(date, dateProfile.slotMinTime),\n            end: dateEnv.add(date, dateProfile.slotMaxTime),\n        });\n    }\n    return ranges;\n}\n\n// potential nice values for the slot-duration and interval-duration\n// from largest to smallest\nconst STOCK_SUB_DURATIONS = [\n    { hours: 1 },\n    { minutes: 30 },\n    { minutes: 15 },\n    { seconds: 30 },\n    { seconds: 15 },\n];\nfunction buildSlatMetas(slotMinTime, slotMaxTime, explicitLabelInterval, slotDuration, dateEnv) {\n    let dayStart = new Date(0);\n    let slatTime = slotMinTime;\n    let slatIterator = createDuration(0);\n    let labelInterval = explicitLabelInterval || computeLabelInterval(slotDuration);\n    let metas = [];\n    while (asRoughMs(slatTime) < asRoughMs(slotMaxTime)) {\n        let date = dateEnv.add(dayStart, slatTime);\n        let isLabeled = wholeDivideDurations(slatIterator, labelInterval) !== null;\n        metas.push({\n            date,\n            time: slatTime,\n            key: date.toISOString(),\n            isoTimeStr: formatIsoTimeString(date),\n            isLabeled,\n        });\n        slatTime = addDurations(slatTime, slotDuration);\n        slatIterator = addDurations(slatIterator, slotDuration);\n    }\n    return metas;\n}\n// Computes an automatic value for slotLabelInterval\nfunction computeLabelInterval(slotDuration) {\n    let i;\n    let labelInterval;\n    let slotsPerLabel;\n    // find the smallest stock label interval that results in more than one slots-per-label\n    for (i = STOCK_SUB_DURATIONS.length - 1; i >= 0; i -= 1) {\n        labelInterval = createDuration(STOCK_SUB_DURATIONS[i]);\n        slotsPerLabel = wholeDivideDurations(labelInterval, slotDuration);\n        if (slotsPerLabel !== null && slotsPerLabel > 1) {\n            return labelInterval;\n        }\n    }\n    return slotDuration; // fall back\n}\n\nclass DayTimeColsView extends TimeColsView {\n    constructor() {\n        super(...arguments);\n        this.buildTimeColsModel = memoize(buildTimeColsModel);\n        this.buildSlatMetas = memoize(buildSlatMetas);\n    }\n    render() {\n        let { options, dateEnv, dateProfileGenerator } = this.context;\n        let { props } = this;\n        let { dateProfile } = props;\n        let dayTableModel = this.buildTimeColsModel(dateProfile, dateProfileGenerator);\n        let splitProps = this.allDaySplitter.splitProps(props);\n        let slatMetas = this.buildSlatMetas(dateProfile.slotMinTime, dateProfile.slotMaxTime, options.slotLabelInterval, options.slotDuration, dateEnv);\n        let { dayMinWidth } = options;\n        let hasAttachedAxis = !dayMinWidth;\n        let hasDetachedAxis = dayMinWidth;\n        let headerContent = options.dayHeaders && (createElement(DayHeader, { dates: dayTableModel.headerDates, dateProfile: dateProfile, datesRepDistinctDays: true, renderIntro: hasAttachedAxis ? this.renderHeadAxis : null }));\n        let allDayContent = (options.allDaySlot !== false) && ((contentArg) => (createElement(DayTable, Object.assign({}, splitProps.allDay, { dateProfile: dateProfile, dayTableModel: dayTableModel, nextDayThreshold: options.nextDayThreshold, tableMinWidth: contentArg.tableMinWidth, colGroupNode: contentArg.tableColGroupNode, renderRowIntro: hasAttachedAxis ? this.renderTableRowAxis : null, showWeekNumbers: false, expandRows: false, headerAlignElRef: this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint }, this.getAllDayMaxEventProps()))));\n        let timeGridContent = (contentArg) => (createElement(DayTimeCols, Object.assign({}, splitProps.timed, { dayTableModel: dayTableModel, dateProfile: dateProfile, axis: hasAttachedAxis, slotDuration: options.slotDuration, slatMetas: slatMetas, forPrint: props.forPrint, tableColGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, onSlatCoords: this.handleSlatCoords, expandRows: contentArg.expandRows, onScrollTopRequest: this.handleScrollTopRequest })));\n        return hasDetachedAxis\n            ? this.renderHScrollLayout(headerContent, allDayContent, timeGridContent, dayTableModel.colCnt, dayMinWidth, slatMetas, this.state.slatCoords)\n            : this.renderSimpleLayout(headerContent, allDayContent, timeGridContent);\n    }\n}\nfunction buildTimeColsModel(dateProfile, dateProfileGenerator) {\n    let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTableModel(daySeries, false);\n}\n\nexport { DayTimeCols, DayTimeColsSlicer, DayTimeColsView, TimeCols, TimeColsSlatsCoords, TimeColsView, buildDayRanges, buildSlatMetas, buildTimeColsModel };\n","import { createPlugin } from '@fullcalendar/core/index.js';\nimport { DayTimeColsView } from './internal.js';\nimport '@fullcalendar/core/internal.js';\nimport '@fullcalendar/core/preact.js';\nimport '@fullcalendar/daygrid/internal.js';\n\nconst OPTION_REFINERS = {\n    allDaySlot: Boolean,\n};\n\nvar index = createPlugin({\n    name: '@fullcalendar/timegrid',\n    initialView: 'timeGridWeek',\n    optionRefiners: OPTION_REFINERS,\n    views: {\n        timeGrid: {\n            component: DayTimeColsView,\n            usesMinMaxTime: true,\n            allDaySlot: true,\n            slotDuration: '00:30:00',\n            slotEventOverlap: true, // a bad name. confused with overlap/constraint system\n        },\n        timeGridDay: {\n            type: 'timeGrid',\n            duration: { days: 1 },\n        },\n        timeGridWeek: {\n            type: 'timeGrid',\n            duration: { weeks: 1 },\n        },\n    },\n});\n\nexport { index as default };\n","import { BaseComponent, getUniqueDomId, getDateMeta, buildNavLinkAttrs, ContentContainer, getDayClassNames, formatDayString, createFormatter, EventContainer, getSegAnchorAttrs, isMultiDayRange, buildSegTimeText, DateComponent, memoize, ViewContainer, Scroller, NowTimer, sortEventSegs, getSegMeta, sliceEventStore, intersectRanges, startOfDay, addDays, injectStyles } from '@fullcalendar/core/internal.js';\nimport { createElement, Fragment } from '@fullcalendar/core/preact.js';\n\nclass ListViewHeaderRow extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            textId: getUniqueDomId(),\n        };\n    }\n    render() {\n        let { theme, dateEnv, options, viewApi } = this.context;\n        let { cellId, dayDate, todayRange } = this.props;\n        let { textId } = this.state;\n        let dayMeta = getDateMeta(dayDate, todayRange);\n        // will ever be falsy?\n        let text = options.listDayFormat ? dateEnv.format(dayDate, options.listDayFormat) : '';\n        // will ever be falsy? also, BAD NAME \"alt\"\n        let sideText = options.listDaySideFormat ? dateEnv.format(dayDate, options.listDaySideFormat) : '';\n        let renderProps = Object.assign({ date: dateEnv.toDate(dayDate), view: viewApi, textId,\n            text,\n            sideText, navLinkAttrs: buildNavLinkAttrs(this.context, dayDate), sideNavLinkAttrs: buildNavLinkAttrs(this.context, dayDate, 'day', false) }, dayMeta);\n        // TODO: make a reusable HOC for dayHeader (used in daygrid/timegrid too)\n        return (createElement(ContentContainer, { elTag: \"tr\", elClasses: [\n                'fc-list-day',\n                ...getDayClassNames(dayMeta, theme),\n            ], elAttrs: {\n                'data-date': formatDayString(dayDate),\n            }, renderProps: renderProps, generatorName: \"dayHeaderContent\", customGenerator: options.dayHeaderContent, defaultGenerator: renderInnerContent, classNameGenerator: options.dayHeaderClassNames, didMount: options.dayHeaderDidMount, willUnmount: options.dayHeaderWillUnmount }, (InnerContent) => ( // TODO: force-hide top border based on :first-child\n        createElement(\"th\", { scope: \"colgroup\", colSpan: 3, id: cellId, \"aria-labelledby\": textId },\n            createElement(InnerContent, { elTag: \"div\", elClasses: [\n                    'fc-list-day-cushion',\n                    theme.getClass('tableCellShaded'),\n                ] })))));\n    }\n}\nfunction renderInnerContent(props) {\n    return (createElement(Fragment, null,\n        props.text && (createElement(\"a\", Object.assign({ id: props.textId, className: \"fc-list-day-text\" }, props.navLinkAttrs), props.text)),\n        props.sideText && ( /* not keyboard tabbable */createElement(\"a\", Object.assign({ \"aria-hidden\": true, className: \"fc-list-day-side-text\" }, props.sideNavLinkAttrs), props.sideText))));\n}\n\nconst DEFAULT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    meridiem: 'short',\n});\nclass ListViewEventRow extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { seg, timeHeaderId, eventHeaderId, dateHeaderId } = props;\n        let timeFormat = options.eventTimeFormat || DEFAULT_TIME_FORMAT;\n        return (createElement(EventContainer, Object.assign({}, props, { elTag: \"tr\", elClasses: [\n                'fc-list-event',\n                seg.eventRange.def.url && 'fc-event-forced-url',\n            ], defaultGenerator: () => renderEventInnerContent(seg, context) /* weird */, seg: seg, timeText: \"\", disableDragging: true, disableResizing: true }), (InnerContent, eventContentArg) => (createElement(Fragment, null,\n            buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId),\n            createElement(\"td\", { \"aria-hidden\": true, className: \"fc-list-event-graphic\" },\n                createElement(\"span\", { className: \"fc-list-event-dot\", style: {\n                        borderColor: eventContentArg.borderColor || eventContentArg.backgroundColor,\n                    } })),\n            createElement(InnerContent, { elTag: \"td\", elClasses: ['fc-list-event-title'], elAttrs: { headers: `${eventHeaderId} ${dateHeaderId}` } })))));\n    }\n}\nfunction renderEventInnerContent(seg, context) {\n    let interactiveAttrs = getSegAnchorAttrs(seg, context);\n    return (createElement(\"a\", Object.assign({}, interactiveAttrs), seg.eventRange.def.title));\n}\nfunction buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId) {\n    let { options } = context;\n    if (options.displayEventTime !== false) {\n        let eventDef = seg.eventRange.def;\n        let eventInstance = seg.eventRange.instance;\n        let doAllDay = false;\n        let timeText;\n        if (eventDef.allDay) {\n            doAllDay = true;\n        }\n        else if (isMultiDayRange(seg.eventRange.range)) { // TODO: use (!isStart || !isEnd) instead?\n            if (seg.isStart) {\n                timeText = buildSegTimeText(seg, timeFormat, context, null, null, eventInstance.range.start, seg.end);\n            }\n            else if (seg.isEnd) {\n                timeText = buildSegTimeText(seg, timeFormat, context, null, null, seg.start, eventInstance.range.end);\n            }\n            else {\n                doAllDay = true;\n            }\n        }\n        else {\n            timeText = buildSegTimeText(seg, timeFormat, context);\n        }\n        if (doAllDay) {\n            let renderProps = {\n                text: context.options.allDayText,\n                view: context.viewApi,\n            };\n            return (createElement(ContentContainer, { elTag: \"td\", elClasses: ['fc-list-event-time'], elAttrs: {\n                    headers: `${timeHeaderId} ${dateHeaderId}`,\n                }, renderProps: renderProps, generatorName: \"allDayContent\", customGenerator: options.allDayContent, defaultGenerator: renderAllDayInner, classNameGenerator: options.allDayClassNames, didMount: options.allDayDidMount, willUnmount: options.allDayWillUnmount }));\n        }\n        return (createElement(\"td\", { className: \"fc-list-event-time\" }, timeText));\n    }\n    return null;\n}\nfunction renderAllDayInner(renderProps) {\n    return renderProps.text;\n}\n\n/*\nResponsible for the scroller, and forwarding event-related actions into the \"grid\".\n*/\nclass ListView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.computeDateVars = memoize(computeDateVars);\n        this.eventStoreToSegs = memoize(this._eventStoreToSegs);\n        this.state = {\n            timeHeaderId: getUniqueDomId(),\n            eventHeaderId: getUniqueDomId(),\n            dateHeaderIdRoot: getUniqueDomId(),\n        };\n        this.setRootEl = (rootEl) => {\n            if (rootEl) {\n                this.context.registerInteractiveComponent(this, {\n                    el: rootEl,\n                });\n            }\n            else {\n                this.context.unregisterInteractiveComponent(this);\n            }\n        };\n    }\n    render() {\n        let { props, context } = this;\n        let { dayDates, dayRanges } = this.computeDateVars(props.dateProfile);\n        let eventSegs = this.eventStoreToSegs(props.eventStore, props.eventUiBases, dayRanges);\n        return (createElement(ViewContainer, { elRef: this.setRootEl, elClasses: [\n                'fc-list',\n                context.theme.getClass('table'),\n                context.options.stickyHeaderDates !== false ?\n                    'fc-list-sticky' :\n                    '',\n            ], viewSpec: context.viewSpec },\n            createElement(Scroller, { liquid: !props.isHeightAuto, overflowX: props.isHeightAuto ? 'visible' : 'hidden', overflowY: props.isHeightAuto ? 'visible' : 'auto' }, eventSegs.length > 0 ?\n                this.renderSegList(eventSegs, dayDates) :\n                this.renderEmptyMessage())));\n    }\n    renderEmptyMessage() {\n        let { options, viewApi } = this.context;\n        let renderProps = {\n            text: options.noEventsText,\n            view: viewApi,\n        };\n        return (createElement(ContentContainer, { elTag: \"div\", elClasses: ['fc-list-empty'], renderProps: renderProps, generatorName: \"noEventsContent\", customGenerator: options.noEventsContent, defaultGenerator: renderNoEventsInner, classNameGenerator: options.noEventsClassNames, didMount: options.noEventsDidMount, willUnmount: options.noEventsWillUnmount }, (InnerContent) => (createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-list-empty-cushion'] }))));\n    }\n    renderSegList(allSegs, dayDates) {\n        let { theme, options } = this.context;\n        let { timeHeaderId, eventHeaderId, dateHeaderIdRoot } = this.state;\n        let segsByDay = groupSegsByDay(allSegs); // sparse array\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => {\n            let innerNodes = [];\n            for (let dayIndex = 0; dayIndex < segsByDay.length; dayIndex += 1) {\n                let daySegs = segsByDay[dayIndex];\n                if (daySegs) { // sparse array, so might be undefined\n                    let dayStr = formatDayString(dayDates[dayIndex]);\n                    let dateHeaderId = dateHeaderIdRoot + '-' + dayStr;\n                    // append a day header\n                    innerNodes.push(createElement(ListViewHeaderRow, { key: dayStr, cellId: dateHeaderId, dayDate: dayDates[dayIndex], todayRange: todayRange }));\n                    daySegs = sortEventSegs(daySegs, options.eventOrder);\n                    for (let seg of daySegs) {\n                        innerNodes.push(createElement(ListViewEventRow, Object.assign({ key: dayStr + ':' + seg.eventRange.instance.instanceId /* are multiple segs for an instanceId */, seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: false, timeHeaderId: timeHeaderId, eventHeaderId: eventHeaderId, dateHeaderId: dateHeaderId }, getSegMeta(seg, todayRange, nowDate))));\n                    }\n                }\n            }\n            return (createElement(\"table\", { className: 'fc-list-table ' + theme.getClass('table') },\n                createElement(\"thead\", null,\n                    createElement(\"tr\", null,\n                        createElement(\"th\", { scope: \"col\", id: timeHeaderId }, options.timeHint),\n                        createElement(\"th\", { scope: \"col\", \"aria-hidden\": true }),\n                        createElement(\"th\", { scope: \"col\", id: eventHeaderId }, options.eventHint))),\n                createElement(\"tbody\", null, innerNodes)));\n        }));\n    }\n    _eventStoreToSegs(eventStore, eventUiBases, dayRanges) {\n        return this.eventRangesToSegs(sliceEventStore(eventStore, eventUiBases, this.props.dateProfile.activeRange, this.context.options.nextDayThreshold).fg, dayRanges);\n    }\n    eventRangesToSegs(eventRanges, dayRanges) {\n        let segs = [];\n        for (let eventRange of eventRanges) {\n            segs.push(...this.eventRangeToSegs(eventRange, dayRanges));\n        }\n        return segs;\n    }\n    eventRangeToSegs(eventRange, dayRanges) {\n        let { dateEnv } = this.context;\n        let { nextDayThreshold } = this.context.options;\n        let range = eventRange.range;\n        let allDay = eventRange.def.allDay;\n        let dayIndex;\n        let segRange;\n        let seg;\n        let segs = [];\n        for (dayIndex = 0; dayIndex < dayRanges.length; dayIndex += 1) {\n            segRange = intersectRanges(range, dayRanges[dayIndex]);\n            if (segRange) {\n                seg = {\n                    component: this,\n                    eventRange,\n                    start: segRange.start,\n                    end: segRange.end,\n                    isStart: eventRange.isStart && segRange.start.valueOf() === range.start.valueOf(),\n                    isEnd: eventRange.isEnd && segRange.end.valueOf() === range.end.valueOf(),\n                    dayIndex,\n                };\n                segs.push(seg);\n                // detect when range won't go fully into the next day,\n                // and mutate the latest seg to the be the end.\n                if (!seg.isEnd && !allDay &&\n                    dayIndex + 1 < dayRanges.length &&\n                    range.end <\n                        dateEnv.add(dayRanges[dayIndex + 1].start, nextDayThreshold)) {\n                    seg.end = range.end;\n                    seg.isEnd = true;\n                    break;\n                }\n            }\n        }\n        return segs;\n    }\n}\nfunction renderNoEventsInner(renderProps) {\n    return renderProps.text;\n}\nfunction computeDateVars(dateProfile) {\n    let dayStart = startOfDay(dateProfile.renderRange.start);\n    let viewEnd = dateProfile.renderRange.end;\n    let dayDates = [];\n    let dayRanges = [];\n    while (dayStart < viewEnd) {\n        dayDates.push(dayStart);\n        dayRanges.push({\n            start: dayStart,\n            end: addDays(dayStart, 1),\n        });\n        dayStart = addDays(dayStart, 1);\n    }\n    return { dayDates, dayRanges };\n}\n// Returns a sparse array of arrays, segs grouped by their dayIndex\nfunction groupSegsByDay(segs) {\n    let segsByDay = []; // sparse array\n    let i;\n    let seg;\n    for (i = 0; i < segs.length; i += 1) {\n        seg = segs[i];\n        (segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = []))\n            .push(seg);\n    }\n    return segsByDay;\n}\n\nvar css_248z = \":root{--fc-list-event-dot-width:10px;--fc-list-event-hover-bg-color:#f5f5f5}.fc-theme-standard .fc-list{border:1px solid var(--fc-border-color)}.fc .fc-list-empty{align-items:center;background-color:var(--fc-neutral-bg-color);display:flex;height:100%;justify-content:center}.fc .fc-list-empty-cushion{margin:5em 0}.fc .fc-list-table{border-style:hidden;width:100%}.fc .fc-list-table tr>*{border-left:0;border-right:0}.fc .fc-list-sticky .fc-list-day>*{background:var(--fc-page-bg-color);position:sticky;top:0}.fc .fc-list-table thead{left:-10000px;position:absolute}.fc .fc-list-table tbody>tr:first-child th{border-top:0}.fc .fc-list-table th{padding:0}.fc .fc-list-day-cushion,.fc .fc-list-table td{padding:8px 14px}.fc .fc-list-day-cushion:after{clear:both;content:\\\"\\\";display:table}.fc-theme-standard .fc-list-day-cushion{background-color:var(--fc-neutral-bg-color)}.fc-direction-ltr .fc-list-day-text,.fc-direction-rtl .fc-list-day-side-text{float:left}.fc-direction-ltr .fc-list-day-side-text,.fc-direction-rtl .fc-list-day-text{float:right}.fc-direction-ltr .fc-list-table .fc-list-event-graphic{padding-right:0}.fc-direction-rtl .fc-list-table .fc-list-event-graphic{padding-left:0}.fc .fc-list-event.fc-event-forced-url{cursor:pointer}.fc .fc-list-event:hover td{background-color:var(--fc-list-event-hover-bg-color)}.fc .fc-list-event-graphic,.fc .fc-list-event-time{white-space:nowrap;width:1px}.fc .fc-list-event-dot{border:calc(var(--fc-list-event-dot-width)/2) solid var(--fc-event-border-color);border-radius:calc(var(--fc-list-event-dot-width)/2);box-sizing:content-box;display:inline-block;height:0;width:0}.fc .fc-list-event-title a{color:inherit;text-decoration:none}.fc .fc-list-event.fc-event-forced-url:hover a{text-decoration:underline}\";\ninjectStyles(css_248z);\n\nexport { ListView };\n","import { createPlugin } from '@fullcalendar/core/index.js';\nimport { ListView } from './internal.js';\nimport { identity, createFormatter } from '@fullcalendar/core/internal.js';\nimport '@fullcalendar/core/preact.js';\n\nconst OPTION_REFINERS = {\n    listDayFormat: createFalsableFormatter,\n    listDaySideFormat: createFalsableFormatter,\n    noEventsClassNames: identity,\n    noEventsContent: identity,\n    noEventsDidMount: identity,\n    noEventsWillUnmount: identity,\n    // noEventsText is defined in base options\n};\nfunction createFalsableFormatter(input) {\n    return input === false ? null : createFormatter(input);\n}\n\nvar index = createPlugin({\n    name: '@fullcalendar/list',\n    optionRefiners: OPTION_REFINERS,\n    views: {\n        list: {\n            component: ListView,\n            buttonTextKey: 'list',\n            listDayFormat: { month: 'long', day: 'numeric', year: 'numeric' }, // like \"January 1, 2016\"\n        },\n        listDay: {\n            type: 'list',\n            duration: { days: 1 },\n            listDayFormat: { weekday: 'long' }, // day-of-week is all we need. full date is probably in headerToolbar\n        },\n        listWeek: {\n            type: 'list',\n            duration: { weeks: 1 },\n            listDayFormat: { weekday: 'long' },\n            listDaySideFormat: { month: 'long', day: 'numeric', year: 'numeric' },\n        },\n        listMonth: {\n            type: 'list',\n            duration: { month: 1 },\n            listDaySideFormat: { weekday: 'long' }, // day-of-week is nice-to-have\n        },\n        listYear: {\n            type: 'list',\n            duration: { year: 1 },\n            listDaySideFormat: { weekday: 'long' }, // day-of-week is nice-to-have\n        },\n    },\n});\n\nexport { index as default };\n","var n,l,u,i,t,o,r,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function s(n,l){for(var u in l)n[u]=l[u];return n}function a(n){var l=n.parentNode;l&&l.removeChild(n)}function h(l,u,i){var t,o,r,f={};for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return v(l,f,t,o,null)}function v(n,i,t,o,r){var f={type:n,props:i,key:t,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==r?++u:r};return null==r&&null!=l.vnode&&l.vnode(f),f}function y(){return{current:null}}function p(n){return n.children}function d(n,l){this.props=n,this.context=l}function _(n,l){if(null==l)return n.__?_(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?_(n):null}function k(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return k(n)}}function b(n){(!n.__d&&(n.__d=!0)&&t.push(n)&&!g.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||setTimeout)(g)}function g(){for(var n;g.__r=t.length;)n=t.sort(function(n,l){return n.__v.__b-l.__v.__b}),t=[],n.some(function(n){var l,u,i,t,o,r;n.__d&&(o=(t=(l=n).__v).__e,(r=l.__P)&&(u=[],(i=s({},t)).__v=t.__v+1,j(r,t,i,l.__n,void 0!==r.ownerSVGElement,null!=t.__h?[o]:null,u,null==o?_(t):o,t.__h),z(u,t),t.__e!=o&&k(t)))})}function w(n,l,u,i,t,o,r,c,s,a){var h,y,d,k,b,g,w,x=i&&i.__k||e,C=x.length;for(u.__k=[],h=0;h<l.length;h++)if(null!=(k=u.__k[h]=null==(k=l[h])||\"boolean\"==typeof k?null:\"string\"==typeof k||\"number\"==typeof k||\"bigint\"==typeof k?v(null,k,null,null,k):Array.isArray(k)?v(p,{children:k},null,null,null):k.__b>0?v(k.type,k.props,k.key,k.ref?k.ref:null,k.__v):k)){if(k.__=u,k.__b=u.__b+1,null===(d=x[h])||d&&k.key==d.key&&k.type===d.type)x[h]=void 0;else for(y=0;y<C;y++){if((d=x[y])&&k.key==d.key&&k.type===d.type){x[y]=void 0;break}d=null}j(n,k,d=d||f,t,o,r,c,s,a),b=k.__e,(y=k.ref)&&d.ref!=y&&(w||(w=[]),d.ref&&w.push(d.ref,null,k),w.push(y,k.__c||b,k)),null!=b?(null==g&&(g=b),\"function\"==typeof k.type&&k.__k===d.__k?k.__d=s=m(k,s,n):s=A(n,k,d,x,b,s),\"function\"==typeof u.type&&(u.__d=s)):s&&d.__e==s&&s.parentNode!=n&&(s=_(d))}for(u.__e=g,h=C;h--;)null!=x[h]&&N(x[h],x[h]);if(w)for(h=0;h<w.length;h++)M(w[h],w[++h],w[++h])}function m(n,l,u){for(var i,t=n.__k,o=0;t&&o<t.length;o++)(i=t[o])&&(i.__=n,l=\"function\"==typeof i.type?m(i,l,u):A(u,i,i,t,i.__e,l));return l}function x(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(Array.isArray(n)?n.some(function(n){x(n,l)}):l.push(n)),l}function A(n,l,u,i,t,o){var r,f,e;if(void 0!==l.__d)r=l.__d,l.__d=void 0;else if(null==u||t!=o||null==t.parentNode)n:if(null==o||o.parentNode!==n)n.appendChild(t),r=null;else{for(f=o,e=0;(f=f.nextSibling)&&e<i.length;e+=1)if(f==t)break n;n.insertBefore(t,o),r=o}return void 0!==r?r:t.nextSibling}function C(n,l,u,i,t){var o;for(o in u)\"children\"===o||\"key\"===o||o in l||H(n,o,null,u[o],i);for(o in l)t&&\"function\"!=typeof l[o]||\"children\"===o||\"key\"===o||\"value\"===o||\"checked\"===o||u[o]===l[o]||H(n,o,l[o],u[o],i)}function $(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=null==u?\"\":\"number\"!=typeof u||c.test(l)?u:u+\"px\"}function H(n,l,u,i,t){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof i&&(n.style.cssText=i=\"\"),i)for(l in i)u&&l in u||$(n.style,l,\"\");if(u)for(l in u)i&&u[l]===i[l]||$(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/Capture$/,\"\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?i||n.addEventListener(l,o?T:I,o):n.removeEventListener(l,o?T:I,o);else if(\"dangerouslySetInnerHTML\"!==l){if(t)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null==u||!1===u&&-1==l.indexOf(\"-\")?n.removeAttribute(l):n.setAttribute(l,u))}}function I(n){this.l[n.type+!1](l.event?l.event(n):n)}function T(n){this.l[n.type+!0](l.event?l.event(n):n)}function j(n,u,i,t,o,r,f,e,c){var a,h,v,y,_,k,b,g,m,x,A,C,$,H,I,T=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(c=i.__h,e=u.__e=i.__e,u.__h=null,r=[e]),(a=l.__b)&&a(u);try{n:if(\"function\"==typeof T){if(g=u.props,m=(a=T.contextType)&&t[a.__c],x=a?m?m.props.value:a.__:t,i.__c?b=(h=u.__c=i.__c).__=h.__E:(\"prototype\"in T&&T.prototype.render?u.__c=h=new T(g,x):(u.__c=h=new d(g,x),h.constructor=T,h.render=O),m&&m.sub(h),h.props=g,h.state||(h.state={}),h.context=x,h.__n=t,v=h.__d=!0,h.__h=[],h._sb=[]),null==h.__s&&(h.__s=h.state),null!=T.getDerivedStateFromProps&&(h.__s==h.state&&(h.__s=s({},h.__s)),s(h.__s,T.getDerivedStateFromProps(g,h.__s))),y=h.props,_=h.state,v)null==T.getDerivedStateFromProps&&null!=h.componentWillMount&&h.componentWillMount(),null!=h.componentDidMount&&h.__h.push(h.componentDidMount);else{if(null==T.getDerivedStateFromProps&&g!==y&&null!=h.componentWillReceiveProps&&h.componentWillReceiveProps(g,x),!h.__e&&null!=h.shouldComponentUpdate&&!1===h.shouldComponentUpdate(g,h.__s,x)||u.__v===i.__v){for(h.props=g,h.state=h.__s,u.__v!==i.__v&&(h.__d=!1),h.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u)}),A=0;A<h._sb.length;A++)h.__h.push(h._sb[A]);h._sb=[],h.__h.length&&f.push(h);break n}null!=h.componentWillUpdate&&h.componentWillUpdate(g,h.__s,x),null!=h.componentDidUpdate&&h.__h.push(function(){h.componentDidUpdate(y,_,k)})}if(h.context=x,h.props=g,h.__v=u,h.__P=n,C=l.__r,$=0,\"prototype\"in T&&T.prototype.render){for(h.state=h.__s,h.__d=!1,C&&C(u),a=h.render(h.props,h.state,h.context),H=0;H<h._sb.length;H++)h.__h.push(h._sb[H]);h._sb=[]}else do{h.__d=!1,C&&C(u),a=h.render(h.props,h.state,h.context),h.state=h.__s}while(h.__d&&++$<25);h.state=h.__s,null!=h.getChildContext&&(t=s(s({},t),h.getChildContext())),v||null==h.getSnapshotBeforeUpdate||(k=h.getSnapshotBeforeUpdate(y,_)),I=null!=a&&a.type===p&&null==a.key?a.props.children:a,w(n,Array.isArray(I)?I:[I],u,i,t,o,r,f,e,c),h.base=u.__e,u.__h=null,h.__h.length&&f.push(h),b&&(h.__E=h.__=null),h.__e=!1}else null==r&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=L(i.__e,u,i,t,o,r,f,c);(a=l.diffed)&&a(u)}catch(n){u.__v=null,(c||null!=r)&&(u.__e=e,u.__h=!!c,r[r.indexOf(e)]=null),l.__e(n,u,i)}}function z(n,u){l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function L(l,u,i,t,o,r,e,c){var s,h,v,y=i.props,p=u.props,d=u.type,k=0;if(\"svg\"===d&&(o=!0),null!=r)for(;k<r.length;k++)if((s=r[k])&&\"setAttribute\"in s==!!d&&(d?s.localName===d:3===s.nodeType)){l=s,r[k]=null;break}if(null==l){if(null===d)return document.createTextNode(p);l=o?document.createElementNS(\"http://www.w3.org/2000/svg\",d):document.createElement(d,p.is&&p),r=null,c=!1}if(null===d)y===p||c&&l.data===p||(l.data=p);else{if(r=r&&n.call(l.childNodes),h=(y=i.props||f).dangerouslySetInnerHTML,v=p.dangerouslySetInnerHTML,!c){if(null!=r)for(y={},k=0;k<l.attributes.length;k++)y[l.attributes[k].name]=l.attributes[k].value;(v||h)&&(v&&(h&&v.__html==h.__html||v.__html===l.innerHTML)||(l.innerHTML=v&&v.__html||\"\"))}if(C(l,p,y,o,c),v)u.__k=[];else if(k=u.props.children,w(l,Array.isArray(k)?k:[k],u,i,t,o&&\"foreignObject\"!==d,r,e,r?r[0]:i.__k&&_(i,0),c),null!=r)for(k=r.length;k--;)null!=r[k]&&a(r[k]);c||(\"value\"in p&&void 0!==(k=p.value)&&(k!==l.value||\"progress\"===d&&!k||\"option\"===d&&k!==y.value)&&H(l,\"value\",k,y.value,!1),\"checked\"in p&&void 0!==(k=p.checked)&&k!==l.checked&&H(l,\"checked\",k,y.checked,!1))}return l}function M(n,u,i){try{\"function\"==typeof n?n(u):n.current=u}catch(n){l.__e(n,i)}}function N(n,u,i){var t,o;if(l.unmount&&l.unmount(n),(t=n.ref)&&(t.current&&t.current!==n.__e||M(t,null,u)),null!=(t=n.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(n){l.__e(n,u)}t.base=t.__P=null,n.__c=void 0}if(t=n.__k)for(o=0;o<t.length;o++)t[o]&&N(t[o],u,i||\"function\"!=typeof n.type);i||null==n.__e||a(n.__e),n.__=n.__e=n.__d=void 0}function O(n,l,u){return this.constructor(n,u)}function P(u,i,t){var o,r,e;l.__&&l.__(u,i),r=(o=\"function\"==typeof t)?null:t&&t.__k||i.__k,e=[],j(i,u=(!o&&t||i).__k=h(p,null,[u]),r||f,f,void 0!==i.ownerSVGElement,!o&&t?[t]:r?null:i.firstChild?n.call(i.childNodes):null,e,!o&&t?t:r?r.__e:i.firstChild,o),z(e,u)}function S(n,l){P(n,l,S)}function q(l,u,i){var t,o,r,f=s({},l.props);for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];return arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),v(l.type,f,t||l.key,o||l.ref,null)}function B(n,l){var u={__c:l=\"__cC\"+r++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(b)},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=e.slice,l={__e:function(n,l,u,i){for(var t,o,r;l=l.__;)if((t=l.__c)&&!t.__)try{if((o=t.constructor)&&null!=o.getDerivedStateFromError&&(t.setState(o.getDerivedStateFromError(n)),r=t.__d),null!=t.componentDidCatch&&(t.componentDidCatch(n,i||{}),r=t.__d),r)return t.__E=t}catch(l){n=l}throw n}},u=0,i=function(n){return null!=n&&void 0===n.constructor},d.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=s({},this.state),\"function\"==typeof n&&(n=n(s({},u),this.props)),n&&s(u,n),null!=n&&this.__v&&(l&&this._sb.push(l),b(this))},d.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),b(this))},d.prototype.render=p,t=[],g.__r=0,r=0;export{d as Component,p as Fragment,q as cloneElement,B as createContext,h as createElement,y as createRef,h,S as hydrate,i as isValidElement,l as options,P as render,x as toChildArray};\n//# sourceMappingURL=preact.module.js.map\n","import{options as n}from\"preact\";var t,r,u,i,o=0,f=[],c=[],e=n.__b,a=n.__r,v=n.diffed,l=n.__c,m=n.unmount;function d(t,u){n.__h&&n.__h(r,t,o||u),o=0;var i=r.__H||(r.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({__V:c}),i.__[t]}function p(n){return o=1,y(B,n)}function y(n,u,i){var o=d(t++,2);if(o.t=n,!o.__c&&(o.__=[i?i(u):B(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=r,!r.u)){r.u=!0;var f=r.shouldComponentUpdate;r.shouldComponentUpdate=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return n.__c});if(u.every(function(n){return!n.__N}))return!f||f.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0)}}),!(!i&&o.__c.props===n)&&(!f||f.call(this,n,t,r))}}return o.__N||o.__}function h(u,i){var o=d(t++,3);!n.__s&&z(o.__H,i)&&(o.__=u,o.i=i,r.__H.__h.push(o))}function s(u,i){var o=d(t++,4);!n.__s&&z(o.__H,i)&&(o.__=u,o.i=i,r.__h.push(o))}function _(n){return o=5,F(function(){return{current:n}},[])}function A(n,t,r){o=6,s(function(){return\"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function F(n,r){var u=d(t++,7);return z(u.__H,r)?(u.__V=n(),u.i=r,u.__h=n,u.__V):u.__}function T(n,t){return o=8,F(function(){return n},t)}function q(n){var u=r.context[n.__c],i=d(t++,9);return i.c=n,u?(null==i.__&&(i.__=!0,u.sub(r)),u.props.value):n.__}function x(t,r){n.useDebugValue&&n.useDebugValue(r?r(t):t)}function P(n){var u=d(t++,10),i=p();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n,t){u.__&&u.__(n,t),i[1](n)}),[i[0],function(){i[1](void 0)}]}function V(){var n=d(t++,11);if(!n.__){for(var u=r.__v;null!==u&&!u.__m&&null!==u.__;)u=u.__;var i=u.__m||(u.__m=[0,0]);n.__=\"P\"+i[0]+\"-\"+i[1]++}return n.__}function b(){for(var t;t=f.shift();)if(t.__P&&t.__H)try{t.__H.__h.forEach(k),t.__H.__h.forEach(w),t.__H.__h=[]}catch(r){t.__H.__h=[],n.__e(r,t.__v)}}n.__b=function(n){r=null,e&&e(n)},n.__r=function(n){a&&a(n),t=0;var i=(r=n.__c).__H;i&&(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&&(n.__=n.__N),n.__V=c,n.__N=n.i=void 0})):(i.__h.forEach(k),i.__h.forEach(w),i.__h=[])),u=r},n.diffed=function(t){v&&v(t);var o=t.__c;o&&o.__H&&(o.__H.__h.length&&(1!==f.push(o)&&i===n.requestAnimationFrame||((i=n.requestAnimationFrame)||j)(b)),o.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.__V!==c&&(n.__=n.__V),n.i=void 0,n.__V=c})),u=r=null},n.__c=function(t,r){r.some(function(t){try{t.__h.forEach(k),t.__h=t.__h.filter(function(n){return!n.__||w(n)})}catch(u){r.some(function(n){n.__h&&(n.__h=[])}),r=[],n.__e(u,t.__v)}}),l&&l(t,r)},n.unmount=function(t){m&&m(t);var r,u=t.__c;u&&u.__H&&(u.__H.__.forEach(function(n){try{k(n)}catch(n){r=n}}),u.__H=void 0,r&&n.__e(r,u.__v))};var g=\"function\"==typeof requestAnimationFrame;function j(n){var t,r=function(){clearTimeout(u),g&&cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);g&&(t=requestAnimationFrame(r))}function k(n){var t=r,u=n.__c;\"function\"==typeof u&&(n.__c=void 0,u()),r=t}function w(n){var t=r;n.__c=n.__(),r=t}function z(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function B(n,t){return\"function\"==typeof t?t(n):t}export{T as useCallback,q as useContext,x as useDebugValue,h as useEffect,P as useErrorBoundary,V as useId,A as useImperativeHandle,s as useLayoutEffect,F as useMemo,y as useReducer,_ as useRef,p as useState};\n//# sourceMappingURL=hooks.module.js.map\n","import{Component as n,createElement as t,options as e,toChildArray as r,Fragment as u,render as o,hydrate as i,createContext as l,createRef as c,cloneElement as f}from\"preact\";export{Component,Fragment,createContext,createElement,createRef}from\"preact\";import{useState as a,useId as s,useReducer as h,useEffect as v,useLayoutEffect as d,useRef as p,useImperativeHandle as m,useMemo as y,useCallback as _,useContext as b,useDebugValue as S}from\"preact/hooks\";export*from\"preact/hooks\";function g(n,t){for(var e in t)n[e]=t[e];return n}function C(n,t){for(var e in n)if(\"__source\"!==e&&!(e in t))return!0;for(var r in t)if(\"__source\"!==r&&n[r]!==t[r])return!0;return!1}function E(n,t){return n===t&&(0!==n||1/n==1/t)||n!=n&&t!=t}function w(n){this.props=n}function R(n,e){function r(n){var t=this.props.ref,r=t==n.ref;return!r&&t&&(t.call?t(null):t.current=null),e?!e(this.props,n)||!r:C(this.props,n)}function u(e){return this.shouldComponentUpdate=r,t(n,e)}return u.displayName=\"Memo(\"+(n.displayName||n.name)+\")\",u.prototype.isReactComponent=!0,u.__f=!0,u}(w.prototype=new n).isPureReactComponent=!0,w.prototype.shouldComponentUpdate=function(n,t){return C(this.props,n)||C(this.state,t)};var x=e.__b;e.__b=function(n){n.type&&n.type.__f&&n.ref&&(n.props.ref=n.ref,n.ref=null),x&&x(n)};var N=\"undefined\"!=typeof Symbol&&Symbol.for&&Symbol.for(\"react.forward_ref\")||3911;function k(n){function t(t){var e=g({},t);return delete e.ref,n(e,t.ref||null)}return t.$$typeof=N,t.render=t,t.prototype.isReactComponent=t.__f=!0,t.displayName=\"ForwardRef(\"+(n.displayName||n.name)+\")\",t}var A=function(n,t){return null==n?null:r(r(n).map(t))},O={map:A,forEach:A,count:function(n){return n?r(n).length:0},only:function(n){var t=r(n);if(1!==t.length)throw\"Children.only\";return t[0]},toArray:r},T=e.__e;e.__e=function(n,t,e,r){if(n.then)for(var u,o=t;o=o.__;)if((u=o.__c)&&u.__c)return null==t.__e&&(t.__e=e.__e,t.__k=e.__k),u.__c(n,t);T(n,t,e,r)};var I=e.unmount;function L(n,t,e){return n&&(n.__c&&n.__c.__H&&(n.__c.__H.__.forEach(function(n){\"function\"==typeof n.__c&&n.__c()}),n.__c.__H=null),null!=(n=g({},n)).__c&&(n.__c.__P===e&&(n.__c.__P=t),n.__c=null),n.__k=n.__k&&n.__k.map(function(n){return L(n,t,e)})),n}function U(n,t,e){return n&&(n.__v=null,n.__k=n.__k&&n.__k.map(function(n){return U(n,t,e)}),n.__c&&n.__c.__P===t&&(n.__e&&e.insertBefore(n.__e,n.__d),n.__c.__e=!0,n.__c.__P=e)),n}function D(){this.__u=0,this.t=null,this.__b=null}function F(n){var t=n.__.__c;return t&&t.__a&&t.__a(n)}function M(n){var e,r,u;function o(o){if(e||(e=n()).then(function(n){r=n.default||n},function(n){u=n}),u)throw u;if(!r)throw e;return t(r,o)}return o.displayName=\"Lazy\",o.__f=!0,o}function V(){this.u=null,this.o=null}e.unmount=function(n){var t=n.__c;t&&t.__R&&t.__R(),t&&!0===n.__h&&(n.type=null),I&&I(n)},(D.prototype=new n).__c=function(n,t){var e=t.__c,r=this;null==r.t&&(r.t=[]),r.t.push(e);var u=F(r.__v),o=!1,i=function(){o||(o=!0,e.__R=null,u?u(l):l())};e.__R=i;var l=function(){if(!--r.__u){if(r.state.__a){var n=r.state.__a;r.__v.__k[0]=U(n,n.__c.__P,n.__c.__O)}var t;for(r.setState({__a:r.__b=null});t=r.t.pop();)t.forceUpdate()}},c=!0===t.__h;r.__u++||c||r.setState({__a:r.__b=r.__v.__k[0]}),n.then(i,i)},D.prototype.componentWillUnmount=function(){this.t=[]},D.prototype.render=function(n,e){if(this.__b){if(this.__v.__k){var r=document.createElement(\"div\"),o=this.__v.__k[0].__c;this.__v.__k[0]=L(this.__b,r,o.__O=o.__P)}this.__b=null}var i=e.__a&&t(u,null,n.fallback);return i&&(i.__h=null),[t(u,null,e.__a?null:n.children),i]};var W=function(n,t,e){if(++e[1]===e[0]&&n.o.delete(t),n.props.revealOrder&&(\"t\"!==n.props.revealOrder[0]||!n.o.size))for(e=n.u;e;){for(;e.length>3;)e.pop()();if(e[1]<e[0])break;n.u=e=e[2]}};function P(n){return this.getChildContext=function(){return n.context},n.children}function $(n){var e=this,r=n.i;e.componentWillUnmount=function(){o(null,e.l),e.l=null,e.i=null},e.i&&e.i!==r&&e.componentWillUnmount(),n.__v?(e.l||(e.i=r,e.l={nodeType:1,parentNode:r,childNodes:[],appendChild:function(n){this.childNodes.push(n),e.i.appendChild(n)},insertBefore:function(n,t){this.childNodes.push(n),e.i.appendChild(n)},removeChild:function(n){this.childNodes.splice(this.childNodes.indexOf(n)>>>1,1),e.i.removeChild(n)}}),o(t(P,{context:e.context},n.__v),e.l)):e.l&&e.componentWillUnmount()}function j(n,e){var r=t($,{__v:n,i:e});return r.containerInfo=e,r}(V.prototype=new n).__a=function(n){var t=this,e=F(t.__v),r=t.o.get(n);return r[0]++,function(u){var o=function(){t.props.revealOrder?(r.push(u),W(t,n,r)):u()};e?e(o):o()}},V.prototype.render=function(n){this.u=null,this.o=new Map;var t=r(n.children);n.revealOrder&&\"b\"===n.revealOrder[0]&&t.reverse();for(var e=t.length;e--;)this.o.set(t[e],this.u=[1,0,this.u]);return n.children},V.prototype.componentDidUpdate=V.prototype.componentDidMount=function(){var n=this;this.o.forEach(function(t,e){W(n,e,t)})};var z=\"undefined\"!=typeof Symbol&&Symbol.for&&Symbol.for(\"react.element\")||60103,B=/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,H=\"undefined\"!=typeof document,Z=function(n){return(\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol()?/fil|che|rad/i:/fil|che|ra/i).test(n)};function Y(n,t,e){return null==t.__k&&(t.textContent=\"\"),o(n,t),\"function\"==typeof e&&e(),n?n.__c:null}function q(n,t,e){return i(n,t),\"function\"==typeof e&&e(),n?n.__c:null}n.prototype.isReactComponent={},[\"componentWillMount\",\"componentWillReceiveProps\",\"componentWillUpdate\"].forEach(function(t){Object.defineProperty(n.prototype,t,{configurable:!0,get:function(){return this[\"UNSAFE_\"+t]},set:function(n){Object.defineProperty(this,t,{configurable:!0,writable:!0,value:n})}})});var G=e.event;function J(){}function K(){return this.cancelBubble}function Q(){return this.defaultPrevented}e.event=function(n){return G&&(n=G(n)),n.persist=J,n.isPropagationStopped=K,n.isDefaultPrevented=Q,n.nativeEvent=n};var X,nn={configurable:!0,get:function(){return this.class}},tn=e.vnode;e.vnode=function(n){var t=n.type,e=n.props,u=e;if(\"string\"==typeof t){var o=-1===t.indexOf(\"-\");for(var i in u={},e){var l=e[i];H&&\"children\"===i&&\"noscript\"===t||\"value\"===i&&\"defaultValue\"in e&&null==l||(\"defaultValue\"===i&&\"value\"in e&&null==e.value?i=\"value\":\"download\"===i&&!0===l?l=\"\":/ondoubleclick/i.test(i)?i=\"ondblclick\":/^onchange(textarea|input)/i.test(i+t)&&!Z(e.type)?i=\"oninput\":/^onfocus$/i.test(i)?i=\"onfocusin\":/^onblur$/i.test(i)?i=\"onfocusout\":/^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(i)?i=i.toLowerCase():o&&B.test(i)?i=i.replace(/[A-Z0-9]/g,\"-$&\").toLowerCase():null===l&&(l=void 0),/^oninput$/i.test(i)&&(i=i.toLowerCase(),u[i]&&(i=\"oninputCapture\")),u[i]=l)}\"select\"==t&&u.multiple&&Array.isArray(u.value)&&(u.value=r(e.children).forEach(function(n){n.props.selected=-1!=u.value.indexOf(n.props.value)})),\"select\"==t&&null!=u.defaultValue&&(u.value=r(e.children).forEach(function(n){n.props.selected=u.multiple?-1!=u.defaultValue.indexOf(n.props.value):u.defaultValue==n.props.value})),n.props=u,e.class!=e.className&&(nn.enumerable=\"className\"in e,null!=e.className&&(u.class=e.className),Object.defineProperty(u,\"className\",nn))}n.$$typeof=z,tn&&tn(n)};var en=e.__r;e.__r=function(n){en&&en(n),X=n.__c};var rn={ReactCurrentDispatcher:{current:{readContext:function(n){return X.__n[n.__c].props.value}}}},un=\"17.0.2\";function on(n){return t.bind(null,n)}function ln(n){return!!n&&n.$$typeof===z}function cn(n){return ln(n)?f.apply(null,arguments):n}function fn(n){return!!n.__k&&(o(null,n),!0)}function an(n){return n&&(n.base||1===n.nodeType&&n)||null}var sn=function(n,t){return n(t)},hn=function(n,t){return n(t)},vn=u;function dn(n){n()}function pn(n){return n}function mn(){return[!1,dn]}var yn=d;function _n(n,t){var e=t(),r=a({h:{__:e,v:t}}),u=r[0].h,o=r[1];return d(function(){u.__=e,u.v=t,E(u.__,t())||o({h:u})},[n,e,t]),v(function(){return E(u.__,u.v())||o({h:u}),n(function(){E(u.__,u.v())||o({h:u})})},[n]),e}var bn={useState:a,useId:s,useReducer:h,useEffect:v,useLayoutEffect:d,useInsertionEffect:yn,useTransition:mn,useDeferredValue:pn,useSyncExternalStore:_n,startTransition:dn,useRef:p,useImperativeHandle:m,useMemo:y,useCallback:_,useContext:b,useDebugValue:S,version:\"17.0.2\",Children:O,render:Y,hydrate:q,unmountComponentAtNode:fn,createPortal:j,createElement:t,createContext:l,createFactory:on,cloneElement:cn,createRef:c,Fragment:u,isValidElement:ln,findDOMNode:an,Component:n,PureComponent:w,memo:R,forwardRef:k,flushSync:hn,unstable_batchedUpdates:sn,StrictMode:vn,Suspense:D,SuspenseList:V,lazy:M,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:rn};export{O as Children,w as PureComponent,vn as StrictMode,D as Suspense,V as SuspenseList,rn as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,cn as cloneElement,on as createFactory,j as createPortal,bn as default,an as findDOMNode,hn as flushSync,k as forwardRef,q as hydrate,ln as isValidElement,M as lazy,R as memo,Y as render,dn as startTransition,fn as unmountComponentAtNode,sn as unstable_batchedUpdates,pn as useDeferredValue,yn as useInsertionEffect,_n as useSyncExternalStore,mn as useTransition,un as version};\n//# sourceMappingURL=compat.module.js.map\n","import * as preact from 'preact';\nimport { Component, createElement, isValidElement, Fragment, createRef } from 'preact';\nimport { createPortal } from 'preact/compat';\n\nfunction injectStyles(css) {\n    if (!css || typeof document === 'undefined') {\n        return;\n    }\n    const head = document.head || document.getElementsByTagName('head')[0];\n    const style = document.createElement('style');\n    style.type = 'text/css';\n    head.appendChild(style);\n    if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    }\n    else {\n        style.appendChild(document.createTextNode(css));\n    }\n}\n\nclass DelayedRunner {\n    constructor(drainedOption) {\n        this.drainedOption = drainedOption;\n        this.isRunning = false;\n        this.isDirty = false;\n        this.pauseDepths = {};\n        this.timeoutId = 0;\n    }\n    request(delay) {\n        this.isDirty = true;\n        if (!this.isPaused()) {\n            this.clearTimeout();\n            if (delay == null) {\n                this.tryDrain();\n            }\n            else {\n                this.timeoutId = setTimeout(// NOT OPTIMAL! TODO: look at debounce\n                this.tryDrain.bind(this), delay);\n            }\n        }\n    }\n    pause(scope = '') {\n        let { pauseDepths } = this;\n        pauseDepths[scope] = (pauseDepths[scope] || 0) + 1;\n        this.clearTimeout();\n    }\n    resume(scope = '', force) {\n        let { pauseDepths } = this;\n        if (scope in pauseDepths) {\n            if (force) {\n                delete pauseDepths[scope];\n            }\n            else {\n                pauseDepths[scope] -= 1;\n                let depth = pauseDepths[scope];\n                if (depth <= 0) {\n                    delete pauseDepths[scope];\n                }\n            }\n            this.tryDrain();\n        }\n    }\n    isPaused() {\n        return Object.keys(this.pauseDepths).length;\n    }\n    tryDrain() {\n        if (!this.isRunning && !this.isPaused()) {\n            this.isRunning = true;\n            while (this.isDirty) {\n                this.isDirty = false;\n                this.drained(); // might set isDirty to true again\n            }\n            this.isRunning = false;\n        }\n    }\n    clear() {\n        this.clearTimeout();\n        this.isDirty = false;\n        this.pauseDepths = {};\n    }\n    clearTimeout() {\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = 0;\n        }\n    }\n    drained() {\n        if (this.drainedOption) {\n            this.drainedOption();\n        }\n    }\n}\n\nconst { hasOwnProperty } = Object.prototype;\n// Merges an array of objects into a single object.\n// The second argument allows for an array of property names who's object values will be merged together.\nfunction mergeProps(propObjs, complexPropsMap) {\n    let dest = {};\n    if (complexPropsMap) {\n        for (let name in complexPropsMap) {\n            let complexObjs = [];\n            // collect the trailing object values, stopping when a non-object is discovered\n            for (let i = propObjs.length - 1; i >= 0; i -= 1) {\n                let val = propObjs[i][name];\n                if (typeof val === 'object' && val) { // non-null object\n                    complexObjs.unshift(val);\n                }\n                else if (val !== undefined) {\n                    dest[name] = val; // if there were no objects, this value will be used\n                    break;\n                }\n            }\n            // if the trailing values were objects, use the merged value\n            if (complexObjs.length) {\n                dest[name] = mergeProps(complexObjs);\n            }\n        }\n    }\n    // copy values into the destination, going from last to first\n    for (let i = propObjs.length - 1; i >= 0; i -= 1) {\n        let props = propObjs[i];\n        for (let name in props) {\n            if (!(name in dest)) { // if already assigned by previous props or complex props, don't reassign\n                dest[name] = props[name];\n            }\n        }\n    }\n    return dest;\n}\nfunction filterHash(hash, func) {\n    let filtered = {};\n    for (let key in hash) {\n        if (func(hash[key], key)) {\n            filtered[key] = hash[key];\n        }\n    }\n    return filtered;\n}\nfunction mapHash(hash, func) {\n    let newHash = {};\n    for (let key in hash) {\n        newHash[key] = func(hash[key], key);\n    }\n    return newHash;\n}\nfunction arrayToHash(a) {\n    let hash = {};\n    for (let item of a) {\n        hash[item] = true;\n    }\n    return hash;\n}\n// TODO: reassess browser support\n// https://caniuse.com/?search=object.values\nfunction hashValuesToArray(obj) {\n    let a = [];\n    for (let key in obj) {\n        a.push(obj[key]);\n    }\n    return a;\n}\nfunction isPropsEqual(obj0, obj1) {\n    if (obj0 === obj1) {\n        return true;\n    }\n    for (let key in obj0) {\n        if (hasOwnProperty.call(obj0, key)) {\n            if (!(key in obj1)) {\n                return false;\n            }\n        }\n    }\n    for (let key in obj1) {\n        if (hasOwnProperty.call(obj1, key)) {\n            if (obj0[key] !== obj1[key]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nfunction getUnequalProps(obj0, obj1) {\n    let keys = [];\n    for (let key in obj0) {\n        if (hasOwnProperty.call(obj0, key)) {\n            if (!(key in obj1)) {\n                keys.push(key);\n            }\n        }\n    }\n    for (let key in obj1) {\n        if (hasOwnProperty.call(obj1, key)) {\n            if (obj0[key] !== obj1[key]) {\n                keys.push(key);\n            }\n        }\n    }\n    return keys;\n}\nfunction compareObjs(oldProps, newProps, equalityFuncs = {}) {\n    if (oldProps === newProps) {\n        return true;\n    }\n    for (let key in newProps) {\n        if (key in oldProps && isObjValsEqual(oldProps[key], newProps[key], equalityFuncs[key])) ;\n        else {\n            return false;\n        }\n    }\n    // check for props that were omitted in the new\n    for (let key in oldProps) {\n        if (!(key in newProps)) {\n            return false;\n        }\n    }\n    return true;\n}\n/*\nassumed \"true\" equality for handler names like \"onReceiveSomething\"\n*/\nfunction isObjValsEqual(val0, val1, comparator) {\n    if (val0 === val1 || comparator === true) {\n        return true;\n    }\n    if (comparator) {\n        return comparator(val0, val1);\n    }\n    return false;\n}\nfunction collectFromHash(hash, startIndex = 0, endIndex, step = 1) {\n    let res = [];\n    if (endIndex == null) {\n        endIndex = Object.keys(hash).length;\n    }\n    for (let i = startIndex; i < endIndex; i += step) {\n        let val = hash[i];\n        if (val !== undefined) { // will disregard undefined for sparse arrays\n            res.push(val);\n        }\n    }\n    return res;\n}\n\nconst globalLocales = [];\n\n// TODO: new util arrayify?\nfunction removeExact(array, exactVal) {\n    let removeCnt = 0;\n    let i = 0;\n    while (i < array.length) {\n        if (array[i] === exactVal) {\n            array.splice(i, 1);\n            removeCnt += 1;\n        }\n        else {\n            i += 1;\n        }\n    }\n    return removeCnt;\n}\nfunction isArraysEqual(a0, a1, equalityFunc) {\n    if (a0 === a1) {\n        return true;\n    }\n    let len = a0.length;\n    let i;\n    if (len !== a1.length) { // not array? or not same length?\n        return false;\n    }\n    for (i = 0; i < len; i += 1) {\n        if (!(equalityFunc ? equalityFunc(a0[i], a1[i]) : a0[i] === a1[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoize(workerFunc, resEquality, teardownFunc) {\n    let currentArgs;\n    let currentRes;\n    return function (...newArgs) {\n        if (!currentArgs) {\n            currentRes = workerFunc.apply(this, newArgs);\n        }\n        else if (!isArraysEqual(currentArgs, newArgs)) {\n            if (teardownFunc) {\n                teardownFunc(currentRes);\n            }\n            let res = workerFunc.apply(this, newArgs);\n            if (!resEquality || !resEquality(res, currentRes)) {\n                currentRes = res;\n            }\n        }\n        currentArgs = newArgs;\n        return currentRes;\n    };\n}\nfunction memoizeObjArg(workerFunc, resEquality, teardownFunc) {\n    let currentArg;\n    let currentRes;\n    return (newArg) => {\n        if (!currentArg) {\n            currentRes = workerFunc.call(this, newArg);\n        }\n        else if (!isPropsEqual(currentArg, newArg)) {\n            if (teardownFunc) {\n                teardownFunc(currentRes);\n            }\n            let res = workerFunc.call(this, newArg);\n            if (!resEquality || !resEquality(res, currentRes)) {\n                currentRes = res;\n            }\n        }\n        currentArg = newArg;\n        return currentRes;\n    };\n}\nfunction memoizeArraylike(// used at all?\nworkerFunc, resEquality, teardownFunc) {\n    let currentArgSets = [];\n    let currentResults = [];\n    return (newArgSets) => {\n        let currentLen = currentArgSets.length;\n        let newLen = newArgSets.length;\n        let i = 0;\n        for (; i < currentLen; i += 1) {\n            if (!newArgSets[i]) { // one of the old sets no longer exists\n                if (teardownFunc) {\n                    teardownFunc(currentResults[i]);\n                }\n            }\n            else if (!isArraysEqual(currentArgSets[i], newArgSets[i])) {\n                if (teardownFunc) {\n                    teardownFunc(currentResults[i]);\n                }\n                let res = workerFunc.apply(this, newArgSets[i]);\n                if (!resEquality || !resEquality(res, currentResults[i])) {\n                    currentResults[i] = res;\n                }\n            }\n        }\n        for (; i < newLen; i += 1) {\n            currentResults[i] = workerFunc.apply(this, newArgSets[i]);\n        }\n        currentArgSets = newArgSets;\n        currentResults.splice(newLen); // remove excess\n        return currentResults;\n    };\n}\nfunction memoizeHashlike(workerFunc, resEquality, teardownFunc) {\n    let currentArgHash = {};\n    let currentResHash = {};\n    return (newArgHash) => {\n        let newResHash = {};\n        for (let key in newArgHash) {\n            if (!currentResHash[key]) {\n                newResHash[key] = workerFunc.apply(this, newArgHash[key]);\n            }\n            else if (!isArraysEqual(currentArgHash[key], newArgHash[key])) {\n                if (teardownFunc) {\n                    teardownFunc(currentResHash[key]);\n                }\n                let res = workerFunc.apply(this, newArgHash[key]);\n                newResHash[key] = (resEquality && resEquality(res, currentResHash[key]))\n                    ? currentResHash[key]\n                    : res;\n            }\n            else {\n                newResHash[key] = currentResHash[key];\n            }\n        }\n        currentArgHash = newArgHash;\n        currentResHash = newResHash;\n        return newResHash;\n    };\n}\n\nfunction removeElement(el) {\n    if (el.parentNode) {\n        el.parentNode.removeChild(el);\n    }\n}\n// Querying\n// ----------------------------------------------------------------------------------------------------------------\nfunction elementClosest(el, selector) {\n    if (el.closest) {\n        return el.closest(selector);\n        // really bad fallback for IE\n        // from https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n    }\n    if (!document.documentElement.contains(el)) {\n        return null;\n    }\n    do {\n        if (elementMatches(el, selector)) {\n            return el;\n        }\n        el = (el.parentElement || el.parentNode);\n    } while (el !== null && el.nodeType === 1);\n    return null;\n}\nfunction elementMatches(el, selector) {\n    let method = el.matches || el.matchesSelector || el.msMatchesSelector;\n    return method.call(el, selector);\n}\n// accepts multiple subject els\n// returns a real array. good for methods like forEach\n// TODO: accept the document\nfunction findElements(container, selector) {\n    let containers = container instanceof HTMLElement ? [container] : container;\n    let allMatches = [];\n    for (let i = 0; i < containers.length; i += 1) {\n        let matches = containers[i].querySelectorAll(selector);\n        for (let j = 0; j < matches.length; j += 1) {\n            allMatches.push(matches[j]);\n        }\n    }\n    return allMatches;\n}\n// accepts multiple subject els\n// only queries direct child elements // TODO: rename to findDirectChildren!\nfunction findDirectChildren(parent, selector) {\n    let parents = parent instanceof HTMLElement ? [parent] : parent;\n    let allMatches = [];\n    for (let i = 0; i < parents.length; i += 1) {\n        let childNodes = parents[i].children; // only ever elements\n        for (let j = 0; j < childNodes.length; j += 1) {\n            let childNode = childNodes[j];\n            if (!selector || elementMatches(childNode, selector)) {\n                allMatches.push(childNode);\n            }\n        }\n    }\n    return allMatches;\n}\n// Style\n// ----------------------------------------------------------------------------------------------------------------\nconst PIXEL_PROP_RE = /(top|left|right|bottom|width|height)$/i;\nfunction applyStyle(el, props) {\n    for (let propName in props) {\n        applyStyleProp(el, propName, props[propName]);\n    }\n}\nfunction applyStyleProp(el, name, val) {\n    if (val == null) {\n        el.style[name] = '';\n    }\n    else if (typeof val === 'number' && PIXEL_PROP_RE.test(name)) {\n        el.style[name] = `${val}px`;\n    }\n    else {\n        el.style[name] = val;\n    }\n}\n// Event Handling\n// ----------------------------------------------------------------------------------------------------------------\n// if intercepting bubbled events at the document/window/body level,\n// and want to see originating element (the 'target'), use this util instead\n// of `ev.target` because it goes within web-component boundaries.\nfunction getEventTargetViaRoot(ev) {\n    var _a, _b;\n    return (_b = (_a = ev.composedPath) === null || _a === void 0 ? void 0 : _a.call(ev)[0]) !== null && _b !== void 0 ? _b : ev.target;\n}\n// Shadow DOM consuderations\n// ----------------------------------------------------------------------------------------------------------------\nfunction getElRoot(el) {\n    return el.getRootNode ? el.getRootNode() : document;\n}\n// Unique ID for DOM attribute\nlet guid$1 = 0;\nfunction getUniqueDomId() {\n    guid$1 += 1;\n    return 'fc-dom-' + guid$1;\n}\n\n// Stops a mouse/touch event from doing it's native browser action\nfunction preventDefault(ev) {\n    ev.preventDefault();\n}\n// Event Delegation\n// ----------------------------------------------------------------------------------------------------------------\nfunction buildDelegationHandler(selector, handler) {\n    return (ev) => {\n        let matchedChild = elementClosest(ev.target, selector);\n        if (matchedChild) {\n            handler.call(matchedChild, ev, matchedChild);\n        }\n    };\n}\nfunction listenBySelector(container, eventType, selector, handler) {\n    let attachedHandler = buildDelegationHandler(selector, handler);\n    container.addEventListener(eventType, attachedHandler);\n    return () => {\n        container.removeEventListener(eventType, attachedHandler);\n    };\n}\nfunction listenToHoverBySelector(container, selector, onMouseEnter, onMouseLeave) {\n    let currentMatchedChild;\n    return listenBySelector(container, 'mouseover', selector, (mouseOverEv, matchedChild) => {\n        if (matchedChild !== currentMatchedChild) {\n            currentMatchedChild = matchedChild;\n            onMouseEnter(mouseOverEv, matchedChild);\n            let realOnMouseLeave = (mouseLeaveEv) => {\n                currentMatchedChild = null;\n                onMouseLeave(mouseLeaveEv, matchedChild);\n                matchedChild.removeEventListener('mouseleave', realOnMouseLeave);\n            };\n            // listen to the next mouseleave, and then unattach\n            matchedChild.addEventListener('mouseleave', realOnMouseLeave);\n        }\n    });\n}\n// Animation\n// ----------------------------------------------------------------------------------------------------------------\nconst transitionEventNames = [\n    'webkitTransitionEnd',\n    'otransitionend',\n    'oTransitionEnd',\n    'msTransitionEnd',\n    'transitionend',\n];\n// triggered only when the next single subsequent transition finishes\nfunction whenTransitionDone(el, callback) {\n    let realCallback = (ev) => {\n        callback(ev);\n        transitionEventNames.forEach((eventName) => {\n            el.removeEventListener(eventName, realCallback);\n        });\n    };\n    transitionEventNames.forEach((eventName) => {\n        el.addEventListener(eventName, realCallback); // cross-browser way to determine when the transition finishes\n    });\n}\n// ARIA workarounds\n// ----------------------------------------------------------------------------------------------------------------\nfunction createAriaClickAttrs(handler) {\n    return Object.assign({ onClick: handler }, createAriaKeyboardAttrs(handler));\n}\nfunction createAriaKeyboardAttrs(handler) {\n    return {\n        tabIndex: 0,\n        onKeyDown(ev) {\n            if (ev.key === 'Enter' || ev.key === ' ') {\n                handler(ev);\n                ev.preventDefault(); // if space, don't scroll down page\n            }\n        },\n    };\n}\n\nlet guidNumber = 0;\nfunction guid() {\n    guidNumber += 1;\n    return String(guidNumber);\n}\n/* FullCalendar-specific DOM Utilities\n----------------------------------------------------------------------------------------------------------------------*/\n// Make the mouse cursor express that an event is not allowed in the current area\nfunction disableCursor() {\n    document.body.classList.add('fc-not-allowed');\n}\n// Returns the mouse cursor to its original look\nfunction enableCursor() {\n    document.body.classList.remove('fc-not-allowed');\n}\n/* Selection\n----------------------------------------------------------------------------------------------------------------------*/\nfunction preventSelection(el) {\n    el.classList.add('fc-unselectable');\n    el.addEventListener('selectstart', preventDefault);\n}\nfunction allowSelection(el) {\n    el.classList.remove('fc-unselectable');\n    el.removeEventListener('selectstart', preventDefault);\n}\n/* Context Menu\n----------------------------------------------------------------------------------------------------------------------*/\nfunction preventContextMenu(el) {\n    el.addEventListener('contextmenu', preventDefault);\n}\nfunction allowContextMenu(el) {\n    el.removeEventListener('contextmenu', preventDefault);\n}\nfunction parseFieldSpecs(input) {\n    let specs = [];\n    let tokens = [];\n    let i;\n    let token;\n    if (typeof input === 'string') {\n        tokens = input.split(/\\s*,\\s*/);\n    }\n    else if (typeof input === 'function') {\n        tokens = [input];\n    }\n    else if (Array.isArray(input)) {\n        tokens = input;\n    }\n    for (i = 0; i < tokens.length; i += 1) {\n        token = tokens[i];\n        if (typeof token === 'string') {\n            specs.push(token.charAt(0) === '-' ?\n                { field: token.substring(1), order: -1 } :\n                { field: token, order: 1 });\n        }\n        else if (typeof token === 'function') {\n            specs.push({ func: token });\n        }\n    }\n    return specs;\n}\nfunction compareByFieldSpecs(obj0, obj1, fieldSpecs) {\n    let i;\n    let cmp;\n    for (i = 0; i < fieldSpecs.length; i += 1) {\n        cmp = compareByFieldSpec(obj0, obj1, fieldSpecs[i]);\n        if (cmp) {\n            return cmp;\n        }\n    }\n    return 0;\n}\nfunction compareByFieldSpec(obj0, obj1, fieldSpec) {\n    if (fieldSpec.func) {\n        return fieldSpec.func(obj0, obj1);\n    }\n    return flexibleCompare(obj0[fieldSpec.field], obj1[fieldSpec.field])\n        * (fieldSpec.order || 1);\n}\nfunction flexibleCompare(a, b) {\n    if (!a && !b) {\n        return 0;\n    }\n    if (b == null) {\n        return -1;\n    }\n    if (a == null) {\n        return 1;\n    }\n    if (typeof a === 'string' || typeof b === 'string') {\n        return String(a).localeCompare(String(b));\n    }\n    return a - b;\n}\n/* String Utilities\n----------------------------------------------------------------------------------------------------------------------*/\nfunction padStart(val, len) {\n    let s = String(val);\n    return '000'.substr(0, len - s.length) + s;\n}\nfunction formatWithOrdinals(formatter, args, fallbackText) {\n    if (typeof formatter === 'function') {\n        return formatter(...args);\n    }\n    if (typeof formatter === 'string') { // non-blank string\n        return args.reduce((str, arg, index) => (str.replace('$' + index, arg || '')), formatter);\n    }\n    return fallbackText;\n}\n/* Number Utilities\n----------------------------------------------------------------------------------------------------------------------*/\nfunction compareNumbers(a, b) {\n    return a - b;\n}\nfunction isInt(n) {\n    return n % 1 === 0;\n}\n/* FC-specific DOM dimension stuff\n----------------------------------------------------------------------------------------------------------------------*/\nfunction computeSmallestCellWidth(cellEl) {\n    let allWidthEl = cellEl.querySelector('.fc-scrollgrid-shrink-frame');\n    let contentWidthEl = cellEl.querySelector('.fc-scrollgrid-shrink-cushion');\n    if (!allWidthEl) {\n        throw new Error('needs fc-scrollgrid-shrink-frame className'); // TODO: use const\n    }\n    if (!contentWidthEl) {\n        throw new Error('needs fc-scrollgrid-shrink-cushion className');\n    }\n    return cellEl.getBoundingClientRect().width - allWidthEl.getBoundingClientRect().width + // the cell padding+border\n        contentWidthEl.getBoundingClientRect().width;\n}\n\n// TODO: easier way to add new hooks? need to update a million things\nfunction createPlugin(input) {\n    return {\n        id: guid(),\n        name: input.name,\n        premiumReleaseDate: input.premiumReleaseDate ? new Date(input.premiumReleaseDate) : undefined,\n        deps: input.deps || [],\n        reducers: input.reducers || [],\n        isLoadingFuncs: input.isLoadingFuncs || [],\n        contextInit: [].concat(input.contextInit || []),\n        eventRefiners: input.eventRefiners || {},\n        eventDefMemberAdders: input.eventDefMemberAdders || [],\n        eventSourceRefiners: input.eventSourceRefiners || {},\n        isDraggableTransformers: input.isDraggableTransformers || [],\n        eventDragMutationMassagers: input.eventDragMutationMassagers || [],\n        eventDefMutationAppliers: input.eventDefMutationAppliers || [],\n        dateSelectionTransformers: input.dateSelectionTransformers || [],\n        datePointTransforms: input.datePointTransforms || [],\n        dateSpanTransforms: input.dateSpanTransforms || [],\n        views: input.views || {},\n        viewPropsTransformers: input.viewPropsTransformers || [],\n        isPropsValid: input.isPropsValid || null,\n        externalDefTransforms: input.externalDefTransforms || [],\n        viewContainerAppends: input.viewContainerAppends || [],\n        eventDropTransformers: input.eventDropTransformers || [],\n        componentInteractions: input.componentInteractions || [],\n        calendarInteractions: input.calendarInteractions || [],\n        themeClasses: input.themeClasses || {},\n        eventSourceDefs: input.eventSourceDefs || [],\n        cmdFormatter: input.cmdFormatter,\n        recurringTypes: input.recurringTypes || [],\n        namedTimeZonedImpl: input.namedTimeZonedImpl,\n        initialView: input.initialView || '',\n        elementDraggingImpl: input.elementDraggingImpl,\n        optionChangeHandlers: input.optionChangeHandlers || {},\n        scrollGridImpl: input.scrollGridImpl || null,\n        listenerRefiners: input.listenerRefiners || {},\n        optionRefiners: input.optionRefiners || {},\n        propSetHandlers: input.propSetHandlers || {},\n    };\n}\nfunction buildPluginHooks(pluginDefs, globalDefs) {\n    let currentPluginIds = {};\n    let hooks = {\n        premiumReleaseDate: undefined,\n        reducers: [],\n        isLoadingFuncs: [],\n        contextInit: [],\n        eventRefiners: {},\n        eventDefMemberAdders: [],\n        eventSourceRefiners: {},\n        isDraggableTransformers: [],\n        eventDragMutationMassagers: [],\n        eventDefMutationAppliers: [],\n        dateSelectionTransformers: [],\n        datePointTransforms: [],\n        dateSpanTransforms: [],\n        views: {},\n        viewPropsTransformers: [],\n        isPropsValid: null,\n        externalDefTransforms: [],\n        viewContainerAppends: [],\n        eventDropTransformers: [],\n        componentInteractions: [],\n        calendarInteractions: [],\n        themeClasses: {},\n        eventSourceDefs: [],\n        cmdFormatter: null,\n        recurringTypes: [],\n        namedTimeZonedImpl: null,\n        initialView: '',\n        elementDraggingImpl: null,\n        optionChangeHandlers: {},\n        scrollGridImpl: null,\n        listenerRefiners: {},\n        optionRefiners: {},\n        propSetHandlers: {},\n    };\n    function addDefs(defs) {\n        for (let def of defs) {\n            const pluginName = def.name;\n            const currentId = currentPluginIds[pluginName];\n            if (currentId === undefined) {\n                currentPluginIds[pluginName] = def.id;\n                addDefs(def.deps);\n                hooks = combineHooks(hooks, def);\n            }\n            else if (currentId !== def.id) {\n                // different ID than the one already added\n                console.warn(`Duplicate plugin '${pluginName}'`);\n            }\n        }\n    }\n    if (pluginDefs) {\n        addDefs(pluginDefs);\n    }\n    addDefs(globalDefs);\n    return hooks;\n}\nfunction buildBuildPluginHooks() {\n    let currentOverrideDefs = [];\n    let currentGlobalDefs = [];\n    let currentHooks;\n    return (overrideDefs, globalDefs) => {\n        if (!currentHooks || !isArraysEqual(overrideDefs, currentOverrideDefs) || !isArraysEqual(globalDefs, currentGlobalDefs)) {\n            currentHooks = buildPluginHooks(overrideDefs, globalDefs);\n        }\n        currentOverrideDefs = overrideDefs;\n        currentGlobalDefs = globalDefs;\n        return currentHooks;\n    };\n}\nfunction combineHooks(hooks0, hooks1) {\n    return {\n        premiumReleaseDate: compareOptionalDates(hooks0.premiumReleaseDate, hooks1.premiumReleaseDate),\n        reducers: hooks0.reducers.concat(hooks1.reducers),\n        isLoadingFuncs: hooks0.isLoadingFuncs.concat(hooks1.isLoadingFuncs),\n        contextInit: hooks0.contextInit.concat(hooks1.contextInit),\n        eventRefiners: Object.assign(Object.assign({}, hooks0.eventRefiners), hooks1.eventRefiners),\n        eventDefMemberAdders: hooks0.eventDefMemberAdders.concat(hooks1.eventDefMemberAdders),\n        eventSourceRefiners: Object.assign(Object.assign({}, hooks0.eventSourceRefiners), hooks1.eventSourceRefiners),\n        isDraggableTransformers: hooks0.isDraggableTransformers.concat(hooks1.isDraggableTransformers),\n        eventDragMutationMassagers: hooks0.eventDragMutationMassagers.concat(hooks1.eventDragMutationMassagers),\n        eventDefMutationAppliers: hooks0.eventDefMutationAppliers.concat(hooks1.eventDefMutationAppliers),\n        dateSelectionTransformers: hooks0.dateSelectionTransformers.concat(hooks1.dateSelectionTransformers),\n        datePointTransforms: hooks0.datePointTransforms.concat(hooks1.datePointTransforms),\n        dateSpanTransforms: hooks0.dateSpanTransforms.concat(hooks1.dateSpanTransforms),\n        views: Object.assign(Object.assign({}, hooks0.views), hooks1.views),\n        viewPropsTransformers: hooks0.viewPropsTransformers.concat(hooks1.viewPropsTransformers),\n        isPropsValid: hooks1.isPropsValid || hooks0.isPropsValid,\n        externalDefTransforms: hooks0.externalDefTransforms.concat(hooks1.externalDefTransforms),\n        viewContainerAppends: hooks0.viewContainerAppends.concat(hooks1.viewContainerAppends),\n        eventDropTransformers: hooks0.eventDropTransformers.concat(hooks1.eventDropTransformers),\n        calendarInteractions: hooks0.calendarInteractions.concat(hooks1.calendarInteractions),\n        componentInteractions: hooks0.componentInteractions.concat(hooks1.componentInteractions),\n        themeClasses: Object.assign(Object.assign({}, hooks0.themeClasses), hooks1.themeClasses),\n        eventSourceDefs: hooks0.eventSourceDefs.concat(hooks1.eventSourceDefs),\n        cmdFormatter: hooks1.cmdFormatter || hooks0.cmdFormatter,\n        recurringTypes: hooks0.recurringTypes.concat(hooks1.recurringTypes),\n        namedTimeZonedImpl: hooks1.namedTimeZonedImpl || hooks0.namedTimeZonedImpl,\n        initialView: hooks0.initialView || hooks1.initialView,\n        elementDraggingImpl: hooks0.elementDraggingImpl || hooks1.elementDraggingImpl,\n        optionChangeHandlers: Object.assign(Object.assign({}, hooks0.optionChangeHandlers), hooks1.optionChangeHandlers),\n        scrollGridImpl: hooks1.scrollGridImpl || hooks0.scrollGridImpl,\n        listenerRefiners: Object.assign(Object.assign({}, hooks0.listenerRefiners), hooks1.listenerRefiners),\n        optionRefiners: Object.assign(Object.assign({}, hooks0.optionRefiners), hooks1.optionRefiners),\n        propSetHandlers: Object.assign(Object.assign({}, hooks0.propSetHandlers), hooks1.propSetHandlers),\n    };\n}\nfunction compareOptionalDates(date0, date1) {\n    if (date0 === undefined) {\n        return date1;\n    }\n    if (date1 === undefined) {\n        return date0;\n    }\n    return new Date(Math.max(date0.valueOf(), date1.valueOf()));\n}\n\nconst DAY_IDS = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n// Adding\nfunction addWeeks(m, n) {\n    let a = dateToUtcArray(m);\n    a[2] += n * 7;\n    return arrayToUtcDate(a);\n}\nfunction addDays(m, n) {\n    let a = dateToUtcArray(m);\n    a[2] += n;\n    return arrayToUtcDate(a);\n}\nfunction addMs(m, n) {\n    let a = dateToUtcArray(m);\n    a[6] += n;\n    return arrayToUtcDate(a);\n}\n// Diffing (all return floats)\n// TODO: why not use ranges?\nfunction diffWeeks(m0, m1) {\n    return diffDays(m0, m1) / 7;\n}\nfunction diffDays(m0, m1) {\n    return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60 * 24);\n}\nfunction diffHours(m0, m1) {\n    return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60);\n}\nfunction diffMinutes(m0, m1) {\n    return (m1.valueOf() - m0.valueOf()) / (1000 * 60);\n}\nfunction diffSeconds(m0, m1) {\n    return (m1.valueOf() - m0.valueOf()) / 1000;\n}\nfunction diffDayAndTime(m0, m1) {\n    let m0day = startOfDay(m0);\n    let m1day = startOfDay(m1);\n    return {\n        years: 0,\n        months: 0,\n        days: Math.round(diffDays(m0day, m1day)),\n        milliseconds: (m1.valueOf() - m1day.valueOf()) - (m0.valueOf() - m0day.valueOf()),\n    };\n}\n// Diffing Whole Units\nfunction diffWholeWeeks(m0, m1) {\n    let d = diffWholeDays(m0, m1);\n    if (d !== null && d % 7 === 0) {\n        return d / 7;\n    }\n    return null;\n}\nfunction diffWholeDays(m0, m1) {\n    if (timeAsMs(m0) === timeAsMs(m1)) {\n        return Math.round(diffDays(m0, m1));\n    }\n    return null;\n}\n// Start-Of\nfunction startOfDay(m) {\n    return arrayToUtcDate([\n        m.getUTCFullYear(),\n        m.getUTCMonth(),\n        m.getUTCDate(),\n    ]);\n}\nfunction startOfHour(m) {\n    return arrayToUtcDate([\n        m.getUTCFullYear(),\n        m.getUTCMonth(),\n        m.getUTCDate(),\n        m.getUTCHours(),\n    ]);\n}\nfunction startOfMinute(m) {\n    return arrayToUtcDate([\n        m.getUTCFullYear(),\n        m.getUTCMonth(),\n        m.getUTCDate(),\n        m.getUTCHours(),\n        m.getUTCMinutes(),\n    ]);\n}\nfunction startOfSecond(m) {\n    return arrayToUtcDate([\n        m.getUTCFullYear(),\n        m.getUTCMonth(),\n        m.getUTCDate(),\n        m.getUTCHours(),\n        m.getUTCMinutes(),\n        m.getUTCSeconds(),\n    ]);\n}\n// Week Computation\nfunction weekOfYear(marker, dow, doy) {\n    let y = marker.getUTCFullYear();\n    let w = weekOfGivenYear(marker, y, dow, doy);\n    if (w < 1) {\n        return weekOfGivenYear(marker, y - 1, dow, doy);\n    }\n    let nextW = weekOfGivenYear(marker, y + 1, dow, doy);\n    if (nextW >= 1) {\n        return Math.min(w, nextW);\n    }\n    return w;\n}\nfunction weekOfGivenYear(marker, year, dow, doy) {\n    let firstWeekStart = arrayToUtcDate([year, 0, 1 + firstWeekOffset(year, dow, doy)]);\n    let dayStart = startOfDay(marker);\n    let days = Math.round(diffDays(firstWeekStart, dayStart));\n    return Math.floor(days / 7) + 1; // zero-indexed\n}\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    let fwd = 7 + dow - doy;\n    // first-week day local weekday -- which local weekday is fwd\n    let fwdlw = (7 + arrayToUtcDate([year, 0, fwd]).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n}\n// Array Conversion\nfunction dateToLocalArray(date) {\n    return [\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate(),\n        date.getHours(),\n        date.getMinutes(),\n        date.getSeconds(),\n        date.getMilliseconds(),\n    ];\n}\nfunction arrayToLocalDate(a) {\n    return new Date(a[0], a[1] || 0, a[2] == null ? 1 : a[2], // day of month\n    a[3] || 0, a[4] || 0, a[5] || 0);\n}\nfunction dateToUtcArray(date) {\n    return [\n        date.getUTCFullYear(),\n        date.getUTCMonth(),\n        date.getUTCDate(),\n        date.getUTCHours(),\n        date.getUTCMinutes(),\n        date.getUTCSeconds(),\n        date.getUTCMilliseconds(),\n    ];\n}\nfunction arrayToUtcDate(a) {\n    // according to web standards (and Safari), a month index is required.\n    // massage if only given a year.\n    if (a.length === 1) {\n        a = a.concat([0]);\n    }\n    return new Date(Date.UTC(...a));\n}\n// Other Utils\nfunction isValidDate(m) {\n    return !isNaN(m.valueOf());\n}\nfunction timeAsMs(m) {\n    return m.getUTCHours() * 1000 * 60 * 60 +\n        m.getUTCMinutes() * 1000 * 60 +\n        m.getUTCSeconds() * 1000 +\n        m.getUTCMilliseconds();\n}\n\nlet calendarSystemClassMap = {};\nfunction registerCalendarSystem(name, theClass) {\n    calendarSystemClassMap[name] = theClass;\n}\nfunction createCalendarSystem(name) {\n    return new calendarSystemClassMap[name]();\n}\nclass GregorianCalendarSystem {\n    getMarkerYear(d) {\n        return d.getUTCFullYear();\n    }\n    getMarkerMonth(d) {\n        return d.getUTCMonth();\n    }\n    getMarkerDay(d) {\n        return d.getUTCDate();\n    }\n    arrayToMarker(arr) {\n        return arrayToUtcDate(arr);\n    }\n    markerToArray(marker) {\n        return dateToUtcArray(marker);\n    }\n}\nregisterCalendarSystem('gregory', GregorianCalendarSystem);\n\nconst INTERNAL_UNITS = ['years', 'months', 'days', 'milliseconds'];\nconst PARSE_RE = /^(-?)(?:(\\d+)\\.)?(\\d+):(\\d\\d)(?::(\\d\\d)(?:\\.(\\d\\d\\d))?)?/;\n// Parsing and Creation\nfunction createDuration(input, unit) {\n    if (typeof input === 'string') {\n        return parseString(input);\n    }\n    if (typeof input === 'object' && input) { // non-null object\n        return parseObject(input);\n    }\n    if (typeof input === 'number') {\n        return parseObject({ [unit || 'milliseconds']: input });\n    }\n    return null;\n}\nfunction parseString(s) {\n    let m = PARSE_RE.exec(s);\n    if (m) {\n        let sign = m[1] ? -1 : 1;\n        return {\n            years: 0,\n            months: 0,\n            days: sign * (m[2] ? parseInt(m[2], 10) : 0),\n            milliseconds: sign * ((m[3] ? parseInt(m[3], 10) : 0) * 60 * 60 * 1000 + // hours\n                (m[4] ? parseInt(m[4], 10) : 0) * 60 * 1000 + // minutes\n                (m[5] ? parseInt(m[5], 10) : 0) * 1000 + // seconds\n                (m[6] ? parseInt(m[6], 10) : 0) // ms\n            ),\n        };\n    }\n    return null;\n}\nfunction parseObject(obj) {\n    let duration = {\n        years: obj.years || obj.year || 0,\n        months: obj.months || obj.month || 0,\n        days: obj.days || obj.day || 0,\n        milliseconds: (obj.hours || obj.hour || 0) * 60 * 60 * 1000 + // hours\n            (obj.minutes || obj.minute || 0) * 60 * 1000 + // minutes\n            (obj.seconds || obj.second || 0) * 1000 + // seconds\n            (obj.milliseconds || obj.millisecond || obj.ms || 0), // ms\n    };\n    let weeks = obj.weeks || obj.week;\n    if (weeks) {\n        duration.days += weeks * 7;\n        duration.specifiedWeeks = true;\n    }\n    return duration;\n}\n// Equality\nfunction durationsEqual(d0, d1) {\n    return d0.years === d1.years &&\n        d0.months === d1.months &&\n        d0.days === d1.days &&\n        d0.milliseconds === d1.milliseconds;\n}\nfunction asCleanDays(dur) {\n    if (!dur.years && !dur.months && !dur.milliseconds) {\n        return dur.days;\n    }\n    return 0;\n}\n// Simple Math\nfunction addDurations(d0, d1) {\n    return {\n        years: d0.years + d1.years,\n        months: d0.months + d1.months,\n        days: d0.days + d1.days,\n        milliseconds: d0.milliseconds + d1.milliseconds,\n    };\n}\nfunction subtractDurations(d1, d0) {\n    return {\n        years: d1.years - d0.years,\n        months: d1.months - d0.months,\n        days: d1.days - d0.days,\n        milliseconds: d1.milliseconds - d0.milliseconds,\n    };\n}\nfunction multiplyDuration(d, n) {\n    return {\n        years: d.years * n,\n        months: d.months * n,\n        days: d.days * n,\n        milliseconds: d.milliseconds * n,\n    };\n}\n// Conversions\n// \"Rough\" because they are based on average-case Gregorian months/years\nfunction asRoughYears(dur) {\n    return asRoughDays(dur) / 365;\n}\nfunction asRoughMonths(dur) {\n    return asRoughDays(dur) / 30;\n}\nfunction asRoughDays(dur) {\n    return asRoughMs(dur) / 864e5;\n}\nfunction asRoughMinutes(dur) {\n    return asRoughMs(dur) / (1000 * 60);\n}\nfunction asRoughSeconds(dur) {\n    return asRoughMs(dur) / 1000;\n}\nfunction asRoughMs(dur) {\n    return dur.years * (365 * 864e5) +\n        dur.months * (30 * 864e5) +\n        dur.days * 864e5 +\n        dur.milliseconds;\n}\n// Advanced Math\nfunction wholeDivideDurations(numerator, denominator) {\n    let res = null;\n    for (let i = 0; i < INTERNAL_UNITS.length; i += 1) {\n        let unit = INTERNAL_UNITS[i];\n        if (denominator[unit]) {\n            let localRes = numerator[unit] / denominator[unit];\n            if (!isInt(localRes) || (res !== null && res !== localRes)) {\n                return null;\n            }\n            res = localRes;\n        }\n        else if (numerator[unit]) {\n            // needs to divide by something but can't!\n            return null;\n        }\n    }\n    return res;\n}\nfunction greatestDurationDenominator(dur) {\n    let ms = dur.milliseconds;\n    if (ms) {\n        if (ms % 1000 !== 0) {\n            return { unit: 'millisecond', value: ms };\n        }\n        if (ms % (1000 * 60) !== 0) {\n            return { unit: 'second', value: ms / 1000 };\n        }\n        if (ms % (1000 * 60 * 60) !== 0) {\n            return { unit: 'minute', value: ms / (1000 * 60) };\n        }\n        if (ms) {\n            return { unit: 'hour', value: ms / (1000 * 60 * 60) };\n        }\n    }\n    if (dur.days) {\n        if (dur.specifiedWeeks && dur.days % 7 === 0) {\n            return { unit: 'week', value: dur.days / 7 };\n        }\n        return { unit: 'day', value: dur.days };\n    }\n    if (dur.months) {\n        return { unit: 'month', value: dur.months };\n    }\n    if (dur.years) {\n        return { unit: 'year', value: dur.years };\n    }\n    return { unit: 'millisecond', value: 0 };\n}\n\n// timeZoneOffset is in minutes\nfunction buildIsoString(marker, timeZoneOffset, stripZeroTime = false) {\n    let s = marker.toISOString();\n    s = s.replace('.000', '');\n    if (stripZeroTime) {\n        s = s.replace('T00:00:00Z', '');\n    }\n    if (s.length > 10) { // time part wasn't stripped, can add timezone info\n        if (timeZoneOffset == null) {\n            s = s.replace('Z', '');\n        }\n        else if (timeZoneOffset !== 0) {\n            s = s.replace('Z', formatTimeZoneOffset(timeZoneOffset, true));\n        }\n        // otherwise, its UTC-0 and we want to keep the Z\n    }\n    return s;\n}\n// formats the date, but with no time part\n// TODO: somehow merge with buildIsoString and stripZeroTime\n// TODO: rename. omit \"string\"\nfunction formatDayString(marker) {\n    return marker.toISOString().replace(/T.*$/, '');\n}\n// TODO: use Date::toISOString and use everything after the T?\nfunction formatIsoTimeString(marker) {\n    return padStart(marker.getUTCHours(), 2) + ':' +\n        padStart(marker.getUTCMinutes(), 2) + ':' +\n        padStart(marker.getUTCSeconds(), 2);\n}\nfunction formatTimeZoneOffset(minutes, doIso = false) {\n    let sign = minutes < 0 ? '-' : '+';\n    let abs = Math.abs(minutes);\n    let hours = Math.floor(abs / 60);\n    let mins = Math.round(abs % 60);\n    if (doIso) {\n        return `${sign + padStart(hours, 2)}:${padStart(mins, 2)}`;\n    }\n    return `GMT${sign}${hours}${mins ? `:${padStart(mins, 2)}` : ''}`;\n}\n\nconst ISO_RE = /^\\s*(\\d{4})(-?(\\d{2})(-?(\\d{2})([T ](\\d{2}):?(\\d{2})(:?(\\d{2})(\\.(\\d+))?)?(Z|(([-+])(\\d{2})(:?(\\d{2}))?))?)?)?)?$/;\nfunction parse(str) {\n    let m = ISO_RE.exec(str);\n    if (m) {\n        let marker = new Date(Date.UTC(Number(m[1]), m[3] ? Number(m[3]) - 1 : 0, Number(m[5] || 1), Number(m[7] || 0), Number(m[8] || 0), Number(m[10] || 0), m[12] ? Number(`0.${m[12]}`) * 1000 : 0));\n        if (isValidDate(marker)) {\n            let timeZoneOffset = null;\n            if (m[13]) {\n                timeZoneOffset = (m[15] === '-' ? -1 : 1) * (Number(m[16] || 0) * 60 +\n                    Number(m[18] || 0));\n            }\n            return {\n                marker,\n                isTimeUnspecified: !m[6],\n                timeZoneOffset,\n            };\n        }\n    }\n    return null;\n}\n\nclass DateEnv {\n    constructor(settings) {\n        let timeZone = this.timeZone = settings.timeZone;\n        let isNamedTimeZone = timeZone !== 'local' && timeZone !== 'UTC';\n        if (settings.namedTimeZoneImpl && isNamedTimeZone) {\n            this.namedTimeZoneImpl = new settings.namedTimeZoneImpl(timeZone);\n        }\n        this.canComputeOffset = Boolean(!isNamedTimeZone || this.namedTimeZoneImpl);\n        this.calendarSystem = createCalendarSystem(settings.calendarSystem);\n        this.locale = settings.locale;\n        this.weekDow = settings.locale.week.dow;\n        this.weekDoy = settings.locale.week.doy;\n        if (settings.weekNumberCalculation === 'ISO') {\n            this.weekDow = 1;\n            this.weekDoy = 4;\n        }\n        if (typeof settings.firstDay === 'number') {\n            this.weekDow = settings.firstDay;\n        }\n        if (typeof settings.weekNumberCalculation === 'function') {\n            this.weekNumberFunc = settings.weekNumberCalculation;\n        }\n        this.weekText = settings.weekText != null ? settings.weekText : settings.locale.options.weekText;\n        this.weekTextLong = (settings.weekTextLong != null ? settings.weekTextLong : settings.locale.options.weekTextLong) || this.weekText;\n        this.cmdFormatter = settings.cmdFormatter;\n        this.defaultSeparator = settings.defaultSeparator;\n    }\n    // Creating / Parsing\n    createMarker(input) {\n        let meta = this.createMarkerMeta(input);\n        if (meta === null) {\n            return null;\n        }\n        return meta.marker;\n    }\n    createNowMarker() {\n        if (this.canComputeOffset) {\n            return this.timestampToMarker(new Date().valueOf());\n        }\n        // if we can't compute the current date val for a timezone,\n        // better to give the current local date vals than UTC\n        return arrayToUtcDate(dateToLocalArray(new Date()));\n    }\n    createMarkerMeta(input) {\n        if (typeof input === 'string') {\n            return this.parse(input);\n        }\n        let marker = null;\n        if (typeof input === 'number') {\n            marker = this.timestampToMarker(input);\n        }\n        else if (input instanceof Date) {\n            input = input.valueOf();\n            if (!isNaN(input)) {\n                marker = this.timestampToMarker(input);\n            }\n        }\n        else if (Array.isArray(input)) {\n            marker = arrayToUtcDate(input);\n        }\n        if (marker === null || !isValidDate(marker)) {\n            return null;\n        }\n        return { marker, isTimeUnspecified: false, forcedTzo: null };\n    }\n    parse(s) {\n        let parts = parse(s);\n        if (parts === null) {\n            return null;\n        }\n        let { marker } = parts;\n        let forcedTzo = null;\n        if (parts.timeZoneOffset !== null) {\n            if (this.canComputeOffset) {\n                marker = this.timestampToMarker(marker.valueOf() - parts.timeZoneOffset * 60 * 1000);\n            }\n            else {\n                forcedTzo = parts.timeZoneOffset;\n            }\n        }\n        return { marker, isTimeUnspecified: parts.isTimeUnspecified, forcedTzo };\n    }\n    // Accessors\n    getYear(marker) {\n        return this.calendarSystem.getMarkerYear(marker);\n    }\n    getMonth(marker) {\n        return this.calendarSystem.getMarkerMonth(marker);\n    }\n    // Adding / Subtracting\n    add(marker, dur) {\n        let a = this.calendarSystem.markerToArray(marker);\n        a[0] += dur.years;\n        a[1] += dur.months;\n        a[2] += dur.days;\n        a[6] += dur.milliseconds;\n        return this.calendarSystem.arrayToMarker(a);\n    }\n    subtract(marker, dur) {\n        let a = this.calendarSystem.markerToArray(marker);\n        a[0] -= dur.years;\n        a[1] -= dur.months;\n        a[2] -= dur.days;\n        a[6] -= dur.milliseconds;\n        return this.calendarSystem.arrayToMarker(a);\n    }\n    addYears(marker, n) {\n        let a = this.calendarSystem.markerToArray(marker);\n        a[0] += n;\n        return this.calendarSystem.arrayToMarker(a);\n    }\n    addMonths(marker, n) {\n        let a = this.calendarSystem.markerToArray(marker);\n        a[1] += n;\n        return this.calendarSystem.arrayToMarker(a);\n    }\n    // Diffing Whole Units\n    diffWholeYears(m0, m1) {\n        let { calendarSystem } = this;\n        if (timeAsMs(m0) === timeAsMs(m1) &&\n            calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1) &&\n            calendarSystem.getMarkerMonth(m0) === calendarSystem.getMarkerMonth(m1)) {\n            return calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0);\n        }\n        return null;\n    }\n    diffWholeMonths(m0, m1) {\n        let { calendarSystem } = this;\n        if (timeAsMs(m0) === timeAsMs(m1) &&\n            calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1)) {\n            return (calendarSystem.getMarkerMonth(m1) - calendarSystem.getMarkerMonth(m0)) +\n                (calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0)) * 12;\n        }\n        return null;\n    }\n    // Range / Duration\n    greatestWholeUnit(m0, m1) {\n        let n = this.diffWholeYears(m0, m1);\n        if (n !== null) {\n            return { unit: 'year', value: n };\n        }\n        n = this.diffWholeMonths(m0, m1);\n        if (n !== null) {\n            return { unit: 'month', value: n };\n        }\n        n = diffWholeWeeks(m0, m1);\n        if (n !== null) {\n            return { unit: 'week', value: n };\n        }\n        n = diffWholeDays(m0, m1);\n        if (n !== null) {\n            return { unit: 'day', value: n };\n        }\n        n = diffHours(m0, m1);\n        if (isInt(n)) {\n            return { unit: 'hour', value: n };\n        }\n        n = diffMinutes(m0, m1);\n        if (isInt(n)) {\n            return { unit: 'minute', value: n };\n        }\n        n = diffSeconds(m0, m1);\n        if (isInt(n)) {\n            return { unit: 'second', value: n };\n        }\n        return { unit: 'millisecond', value: m1.valueOf() - m0.valueOf() };\n    }\n    countDurationsBetween(m0, m1, d) {\n        // TODO: can use greatestWholeUnit\n        let diff;\n        if (d.years) {\n            diff = this.diffWholeYears(m0, m1);\n            if (diff !== null) {\n                return diff / asRoughYears(d);\n            }\n        }\n        if (d.months) {\n            diff = this.diffWholeMonths(m0, m1);\n            if (diff !== null) {\n                return diff / asRoughMonths(d);\n            }\n        }\n        if (d.days) {\n            diff = diffWholeDays(m0, m1);\n            if (diff !== null) {\n                return diff / asRoughDays(d);\n            }\n        }\n        return (m1.valueOf() - m0.valueOf()) / asRoughMs(d);\n    }\n    // Start-Of\n    // these DON'T return zoned-dates. only UTC start-of dates\n    startOf(m, unit) {\n        if (unit === 'year') {\n            return this.startOfYear(m);\n        }\n        if (unit === 'month') {\n            return this.startOfMonth(m);\n        }\n        if (unit === 'week') {\n            return this.startOfWeek(m);\n        }\n        if (unit === 'day') {\n            return startOfDay(m);\n        }\n        if (unit === 'hour') {\n            return startOfHour(m);\n        }\n        if (unit === 'minute') {\n            return startOfMinute(m);\n        }\n        if (unit === 'second') {\n            return startOfSecond(m);\n        }\n        return null;\n    }\n    startOfYear(m) {\n        return this.calendarSystem.arrayToMarker([\n            this.calendarSystem.getMarkerYear(m),\n        ]);\n    }\n    startOfMonth(m) {\n        return this.calendarSystem.arrayToMarker([\n            this.calendarSystem.getMarkerYear(m),\n            this.calendarSystem.getMarkerMonth(m),\n        ]);\n    }\n    startOfWeek(m) {\n        return this.calendarSystem.arrayToMarker([\n            this.calendarSystem.getMarkerYear(m),\n            this.calendarSystem.getMarkerMonth(m),\n            m.getUTCDate() - ((m.getUTCDay() - this.weekDow + 7) % 7),\n        ]);\n    }\n    // Week Number\n    computeWeekNumber(marker) {\n        if (this.weekNumberFunc) {\n            return this.weekNumberFunc(this.toDate(marker));\n        }\n        return weekOfYear(marker, this.weekDow, this.weekDoy);\n    }\n    // TODO: choke on timeZoneName: long\n    format(marker, formatter, dateOptions = {}) {\n        return formatter.format({\n            marker,\n            timeZoneOffset: dateOptions.forcedTzo != null ?\n                dateOptions.forcedTzo :\n                this.offsetForMarker(marker),\n        }, this);\n    }\n    formatRange(start, end, formatter, dateOptions = {}) {\n        if (dateOptions.isEndExclusive) {\n            end = addMs(end, -1);\n        }\n        return formatter.formatRange({\n            marker: start,\n            timeZoneOffset: dateOptions.forcedStartTzo != null ?\n                dateOptions.forcedStartTzo :\n                this.offsetForMarker(start),\n        }, {\n            marker: end,\n            timeZoneOffset: dateOptions.forcedEndTzo != null ?\n                dateOptions.forcedEndTzo :\n                this.offsetForMarker(end),\n        }, this, dateOptions.defaultSeparator);\n    }\n    /*\n    DUMB: the omitTime arg is dumb. if we omit the time, we want to omit the timezone offset. and if we do that,\n    might as well use buildIsoString or some other util directly\n    */\n    formatIso(marker, extraOptions = {}) {\n        let timeZoneOffset = null;\n        if (!extraOptions.omitTimeZoneOffset) {\n            if (extraOptions.forcedTzo != null) {\n                timeZoneOffset = extraOptions.forcedTzo;\n            }\n            else {\n                timeZoneOffset = this.offsetForMarker(marker);\n            }\n        }\n        return buildIsoString(marker, timeZoneOffset, extraOptions.omitTime);\n    }\n    // TimeZone\n    timestampToMarker(ms) {\n        if (this.timeZone === 'local') {\n            return arrayToUtcDate(dateToLocalArray(new Date(ms)));\n        }\n        if (this.timeZone === 'UTC' || !this.namedTimeZoneImpl) {\n            return new Date(ms);\n        }\n        return arrayToUtcDate(this.namedTimeZoneImpl.timestampToArray(ms));\n    }\n    offsetForMarker(m) {\n        if (this.timeZone === 'local') {\n            return -arrayToLocalDate(dateToUtcArray(m)).getTimezoneOffset(); // convert \"inverse\" offset to \"normal\" offset\n        }\n        if (this.timeZone === 'UTC') {\n            return 0;\n        }\n        if (this.namedTimeZoneImpl) {\n            return this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m));\n        }\n        return null;\n    }\n    // Conversion\n    toDate(m, forcedTzo) {\n        if (this.timeZone === 'local') {\n            return arrayToLocalDate(dateToUtcArray(m));\n        }\n        if (this.timeZone === 'UTC') {\n            return new Date(m.valueOf()); // make sure it's a copy\n        }\n        if (!this.namedTimeZoneImpl) {\n            return new Date(m.valueOf() - (forcedTzo || 0));\n        }\n        return new Date(m.valueOf() -\n            this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m)) * 1000 * 60);\n    }\n}\n\nclass Theme {\n    constructor(calendarOptions) {\n        if (this.iconOverrideOption) {\n            this.setIconOverride(calendarOptions[this.iconOverrideOption]);\n        }\n    }\n    setIconOverride(iconOverrideHash) {\n        let iconClassesCopy;\n        let buttonName;\n        if (typeof iconOverrideHash === 'object' && iconOverrideHash) { // non-null object\n            iconClassesCopy = Object.assign({}, this.iconClasses);\n            for (buttonName in iconOverrideHash) {\n                iconClassesCopy[buttonName] = this.applyIconOverridePrefix(iconOverrideHash[buttonName]);\n            }\n            this.iconClasses = iconClassesCopy;\n        }\n        else if (iconOverrideHash === false) {\n            this.iconClasses = {};\n        }\n    }\n    applyIconOverridePrefix(className) {\n        let prefix = this.iconOverridePrefix;\n        if (prefix && className.indexOf(prefix) !== 0) { // if not already present\n            className = prefix + className;\n        }\n        return className;\n    }\n    getClass(key) {\n        return this.classes[key] || '';\n    }\n    getIconClass(buttonName, isRtl) {\n        let className;\n        if (isRtl && this.rtlIconClasses) {\n            className = this.rtlIconClasses[buttonName] || this.iconClasses[buttonName];\n        }\n        else {\n            className = this.iconClasses[buttonName];\n        }\n        if (className) {\n            return `${this.baseIconClass} ${className}`;\n        }\n        return '';\n    }\n    getCustomButtonIconClass(customButtonProps) {\n        let className;\n        if (this.iconOverrideCustomButtonOption) {\n            className = customButtonProps[this.iconOverrideCustomButtonOption];\n            if (className) {\n                return `${this.baseIconClass} ${this.applyIconOverridePrefix(className)}`;\n            }\n        }\n        return '';\n    }\n}\nTheme.prototype.classes = {};\nTheme.prototype.iconClasses = {};\nTheme.prototype.baseIconClass = '';\nTheme.prototype.iconOverridePrefix = '';\n\nconst EXTENDED_SETTINGS_AND_SEVERITIES = {\n    week: 3,\n    separator: 0,\n    omitZeroMinute: 0,\n    meridiem: 0,\n    omitCommas: 0,\n};\nconst STANDARD_DATE_PROP_SEVERITIES = {\n    timeZoneName: 7,\n    era: 6,\n    year: 5,\n    month: 4,\n    day: 2,\n    weekday: 2,\n    hour: 1,\n    minute: 1,\n    second: 1,\n};\nconst MERIDIEM_RE = /\\s*([ap])\\.?m\\.?/i; // eats up leading spaces too\nconst COMMA_RE = /,/g; // we need re for globalness\nconst MULTI_SPACE_RE = /\\s+/g;\nconst LTR_RE = /\\u200e/g; // control character\nconst UTC_RE = /UTC|GMT/;\nclass NativeFormatter {\n    constructor(formatSettings) {\n        let standardDateProps = {};\n        let extendedSettings = {};\n        let severity = 0;\n        for (let name in formatSettings) {\n            if (name in EXTENDED_SETTINGS_AND_SEVERITIES) {\n                extendedSettings[name] = formatSettings[name];\n                severity = Math.max(EXTENDED_SETTINGS_AND_SEVERITIES[name], severity);\n            }\n            else {\n                standardDateProps[name] = formatSettings[name];\n                if (name in STANDARD_DATE_PROP_SEVERITIES) { // TODO: what about hour12? no severity\n                    severity = Math.max(STANDARD_DATE_PROP_SEVERITIES[name], severity);\n                }\n            }\n        }\n        this.standardDateProps = standardDateProps;\n        this.extendedSettings = extendedSettings;\n        this.severity = severity;\n        this.buildFormattingFunc = memoize(buildFormattingFunc);\n    }\n    format(date, context) {\n        return this.buildFormattingFunc(this.standardDateProps, this.extendedSettings, context)(date);\n    }\n    formatRange(start, end, context, betterDefaultSeparator) {\n        let { standardDateProps, extendedSettings } = this;\n        let diffSeverity = computeMarkerDiffSeverity(start.marker, end.marker, context.calendarSystem);\n        if (!diffSeverity) {\n            return this.format(start, context);\n        }\n        let biggestUnitForPartial = diffSeverity;\n        if (biggestUnitForPartial > 1 && // the two dates are different in a way that's larger scale than time\n            (standardDateProps.year === 'numeric' || standardDateProps.year === '2-digit') &&\n            (standardDateProps.month === 'numeric' || standardDateProps.month === '2-digit') &&\n            (standardDateProps.day === 'numeric' || standardDateProps.day === '2-digit')) {\n            biggestUnitForPartial = 1; // make it look like the dates are only different in terms of time\n        }\n        let full0 = this.format(start, context);\n        let full1 = this.format(end, context);\n        if (full0 === full1) {\n            return full0;\n        }\n        let partialDateProps = computePartialFormattingOptions(standardDateProps, biggestUnitForPartial);\n        let partialFormattingFunc = buildFormattingFunc(partialDateProps, extendedSettings, context);\n        let partial0 = partialFormattingFunc(start);\n        let partial1 = partialFormattingFunc(end);\n        let insertion = findCommonInsertion(full0, partial0, full1, partial1);\n        let separator = extendedSettings.separator || betterDefaultSeparator || context.defaultSeparator || '';\n        if (insertion) {\n            return insertion.before + partial0 + separator + partial1 + insertion.after;\n        }\n        return full0 + separator + full1;\n    }\n    getLargestUnit() {\n        switch (this.severity) {\n            case 7:\n            case 6:\n            case 5:\n                return 'year';\n            case 4:\n                return 'month';\n            case 3:\n                return 'week';\n            case 2:\n                return 'day';\n            default:\n                return 'time'; // really?\n        }\n    }\n}\nfunction buildFormattingFunc(standardDateProps, extendedSettings, context) {\n    let standardDatePropCnt = Object.keys(standardDateProps).length;\n    if (standardDatePropCnt === 1 && standardDateProps.timeZoneName === 'short') {\n        return (date) => (formatTimeZoneOffset(date.timeZoneOffset));\n    }\n    if (standardDatePropCnt === 0 && extendedSettings.week) {\n        return (date) => (formatWeekNumber(context.computeWeekNumber(date.marker), context.weekText, context.weekTextLong, context.locale, extendedSettings.week));\n    }\n    return buildNativeFormattingFunc(standardDateProps, extendedSettings, context);\n}\nfunction buildNativeFormattingFunc(standardDateProps, extendedSettings, context) {\n    standardDateProps = Object.assign({}, standardDateProps); // copy\n    extendedSettings = Object.assign({}, extendedSettings); // copy\n    sanitizeSettings(standardDateProps, extendedSettings);\n    standardDateProps.timeZone = 'UTC'; // we leverage the only guaranteed timeZone for our UTC markers\n    let normalFormat = new Intl.DateTimeFormat(context.locale.codes, standardDateProps);\n    let zeroFormat; // needed?\n    if (extendedSettings.omitZeroMinute) {\n        let zeroProps = Object.assign({}, standardDateProps);\n        delete zeroProps.minute; // seconds and ms were already considered in sanitizeSettings\n        zeroFormat = new Intl.DateTimeFormat(context.locale.codes, zeroProps);\n    }\n    return (date) => {\n        let { marker } = date;\n        let format;\n        if (zeroFormat && !marker.getUTCMinutes()) {\n            format = zeroFormat;\n        }\n        else {\n            format = normalFormat;\n        }\n        let s = format.format(marker);\n        return postProcess(s, date, standardDateProps, extendedSettings, context);\n    };\n}\nfunction sanitizeSettings(standardDateProps, extendedSettings) {\n    // deal with a browser inconsistency where formatting the timezone\n    // requires that the hour/minute be present.\n    if (standardDateProps.timeZoneName) {\n        if (!standardDateProps.hour) {\n            standardDateProps.hour = '2-digit';\n        }\n        if (!standardDateProps.minute) {\n            standardDateProps.minute = '2-digit';\n        }\n    }\n    // only support short timezone names\n    if (standardDateProps.timeZoneName === 'long') {\n        standardDateProps.timeZoneName = 'short';\n    }\n    // if requesting to display seconds, MUST display minutes\n    if (extendedSettings.omitZeroMinute && (standardDateProps.second || standardDateProps.millisecond)) {\n        delete extendedSettings.omitZeroMinute;\n    }\n}\nfunction postProcess(s, date, standardDateProps, extendedSettings, context) {\n    s = s.replace(LTR_RE, ''); // remove left-to-right control chars. do first. good for other regexes\n    if (standardDateProps.timeZoneName === 'short') {\n        s = injectTzoStr(s, (context.timeZone === 'UTC' || date.timeZoneOffset == null) ?\n            'UTC' : // important to normalize for IE, which does \"GMT\"\n            formatTimeZoneOffset(date.timeZoneOffset));\n    }\n    if (extendedSettings.omitCommas) {\n        s = s.replace(COMMA_RE, '').trim();\n    }\n    if (extendedSettings.omitZeroMinute) {\n        s = s.replace(':00', ''); // zeroFormat doesn't always achieve this\n    }\n    // ^ do anything that might create adjacent spaces before this point,\n    // because MERIDIEM_RE likes to eat up loading spaces\n    if (extendedSettings.meridiem === false) {\n        s = s.replace(MERIDIEM_RE, '').trim();\n    }\n    else if (extendedSettings.meridiem === 'narrow') { // a/p\n        s = s.replace(MERIDIEM_RE, (m0, m1) => m1.toLocaleLowerCase());\n    }\n    else if (extendedSettings.meridiem === 'short') { // am/pm\n        s = s.replace(MERIDIEM_RE, (m0, m1) => `${m1.toLocaleLowerCase()}m`);\n    }\n    else if (extendedSettings.meridiem === 'lowercase') { // other meridiem transformers already converted to lowercase\n        s = s.replace(MERIDIEM_RE, (m0) => m0.toLocaleLowerCase());\n    }\n    s = s.replace(MULTI_SPACE_RE, ' ');\n    s = s.trim();\n    return s;\n}\nfunction injectTzoStr(s, tzoStr) {\n    let replaced = false;\n    s = s.replace(UTC_RE, () => {\n        replaced = true;\n        return tzoStr;\n    });\n    // IE11 doesn't include UTC/GMT in the original string, so append to end\n    if (!replaced) {\n        s += ` ${tzoStr}`;\n    }\n    return s;\n}\nfunction formatWeekNumber(num, weekText, weekTextLong, locale, display) {\n    let parts = [];\n    if (display === 'long') {\n        parts.push(weekTextLong);\n    }\n    else if (display === 'short' || display === 'narrow') {\n        parts.push(weekText);\n    }\n    if (display === 'long' || display === 'short') {\n        parts.push(' ');\n    }\n    parts.push(locale.simpleNumberFormat.format(num));\n    if (locale.options.direction === 'rtl') { // TODO: use control characters instead?\n        parts.reverse();\n    }\n    return parts.join('');\n}\n// Range Formatting Utils\n// 0 = exactly the same\n// 1 = different by time\n// and bigger\nfunction computeMarkerDiffSeverity(d0, d1, ca) {\n    if (ca.getMarkerYear(d0) !== ca.getMarkerYear(d1)) {\n        return 5;\n    }\n    if (ca.getMarkerMonth(d0) !== ca.getMarkerMonth(d1)) {\n        return 4;\n    }\n    if (ca.getMarkerDay(d0) !== ca.getMarkerDay(d1)) {\n        return 2;\n    }\n    if (timeAsMs(d0) !== timeAsMs(d1)) {\n        return 1;\n    }\n    return 0;\n}\nfunction computePartialFormattingOptions(options, biggestUnit) {\n    let partialOptions = {};\n    for (let name in options) {\n        if (!(name in STANDARD_DATE_PROP_SEVERITIES) || // not a date part prop (like timeZone)\n            STANDARD_DATE_PROP_SEVERITIES[name] <= biggestUnit) {\n            partialOptions[name] = options[name];\n        }\n    }\n    return partialOptions;\n}\nfunction findCommonInsertion(full0, partial0, full1, partial1) {\n    let i0 = 0;\n    while (i0 < full0.length) {\n        let found0 = full0.indexOf(partial0, i0);\n        if (found0 === -1) {\n            break;\n        }\n        let before0 = full0.substr(0, found0);\n        i0 = found0 + partial0.length;\n        let after0 = full0.substr(i0);\n        let i1 = 0;\n        while (i1 < full1.length) {\n            let found1 = full1.indexOf(partial1, i1);\n            if (found1 === -1) {\n                break;\n            }\n            let before1 = full1.substr(0, found1);\n            i1 = found1 + partial1.length;\n            let after1 = full1.substr(i1);\n            if (before0 === before1 && after0 === after1) {\n                return {\n                    before: before0,\n                    after: after0,\n                };\n            }\n        }\n    }\n    return null;\n}\n\nfunction expandZonedMarker(dateInfo, calendarSystem) {\n    let a = calendarSystem.markerToArray(dateInfo.marker);\n    return {\n        marker: dateInfo.marker,\n        timeZoneOffset: dateInfo.timeZoneOffset,\n        array: a,\n        year: a[0],\n        month: a[1],\n        day: a[2],\n        hour: a[3],\n        minute: a[4],\n        second: a[5],\n        millisecond: a[6],\n    };\n}\n\nfunction createVerboseFormattingArg(start, end, context, betterDefaultSeparator) {\n    let startInfo = expandZonedMarker(start, context.calendarSystem);\n    let endInfo = end ? expandZonedMarker(end, context.calendarSystem) : null;\n    return {\n        date: startInfo,\n        start: startInfo,\n        end: endInfo,\n        timeZone: context.timeZone,\n        localeCodes: context.locale.codes,\n        defaultSeparator: betterDefaultSeparator || context.defaultSeparator,\n    };\n}\n\n/*\nTODO: fix the terminology of \"formatter\" vs \"formatting func\"\n*/\n/*\nAt the time of instantiation, this object does not know which cmd-formatting system it will use.\nIt receives this at the time of formatting, as a setting.\n*/\nclass CmdFormatter {\n    constructor(cmdStr) {\n        this.cmdStr = cmdStr;\n    }\n    format(date, context, betterDefaultSeparator) {\n        return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(date, null, context, betterDefaultSeparator));\n    }\n    formatRange(start, end, context, betterDefaultSeparator) {\n        return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(start, end, context, betterDefaultSeparator));\n    }\n}\n\nclass FuncFormatter {\n    constructor(func) {\n        this.func = func;\n    }\n    format(date, context, betterDefaultSeparator) {\n        return this.func(createVerboseFormattingArg(date, null, context, betterDefaultSeparator));\n    }\n    formatRange(start, end, context, betterDefaultSeparator) {\n        return this.func(createVerboseFormattingArg(start, end, context, betterDefaultSeparator));\n    }\n}\n\nfunction createFormatter(input) {\n    if (typeof input === 'object' && input) { // non-null object\n        return new NativeFormatter(input);\n    }\n    if (typeof input === 'string') {\n        return new CmdFormatter(input);\n    }\n    if (typeof input === 'function') {\n        return new FuncFormatter(input);\n    }\n    return null;\n}\n\n// base options\n// ------------\nconst BASE_OPTION_REFINERS = {\n    navLinkDayClick: identity,\n    navLinkWeekClick: identity,\n    duration: createDuration,\n    bootstrapFontAwesome: identity,\n    buttonIcons: identity,\n    customButtons: identity,\n    defaultAllDayEventDuration: createDuration,\n    defaultTimedEventDuration: createDuration,\n    nextDayThreshold: createDuration,\n    scrollTime: createDuration,\n    scrollTimeReset: Boolean,\n    slotMinTime: createDuration,\n    slotMaxTime: createDuration,\n    dayPopoverFormat: createFormatter,\n    slotDuration: createDuration,\n    snapDuration: createDuration,\n    headerToolbar: identity,\n    footerToolbar: identity,\n    defaultRangeSeparator: String,\n    titleRangeSeparator: String,\n    forceEventDuration: Boolean,\n    dayHeaders: Boolean,\n    dayHeaderFormat: createFormatter,\n    dayHeaderClassNames: identity,\n    dayHeaderContent: identity,\n    dayHeaderDidMount: identity,\n    dayHeaderWillUnmount: identity,\n    dayCellClassNames: identity,\n    dayCellContent: identity,\n    dayCellDidMount: identity,\n    dayCellWillUnmount: identity,\n    initialView: String,\n    aspectRatio: Number,\n    weekends: Boolean,\n    weekNumberCalculation: identity,\n    weekNumbers: Boolean,\n    weekNumberClassNames: identity,\n    weekNumberContent: identity,\n    weekNumberDidMount: identity,\n    weekNumberWillUnmount: identity,\n    editable: Boolean,\n    viewClassNames: identity,\n    viewDidMount: identity,\n    viewWillUnmount: identity,\n    nowIndicator: Boolean,\n    nowIndicatorClassNames: identity,\n    nowIndicatorContent: identity,\n    nowIndicatorDidMount: identity,\n    nowIndicatorWillUnmount: identity,\n    showNonCurrentDates: Boolean,\n    lazyFetching: Boolean,\n    startParam: String,\n    endParam: String,\n    timeZoneParam: String,\n    timeZone: String,\n    locales: identity,\n    locale: identity,\n    themeSystem: String,\n    dragRevertDuration: Number,\n    dragScroll: Boolean,\n    allDayMaintainDuration: Boolean,\n    unselectAuto: Boolean,\n    dropAccept: identity,\n    eventOrder: parseFieldSpecs,\n    eventOrderStrict: Boolean,\n    handleWindowResize: Boolean,\n    windowResizeDelay: Number,\n    longPressDelay: Number,\n    eventDragMinDistance: Number,\n    expandRows: Boolean,\n    height: identity,\n    contentHeight: identity,\n    direction: String,\n    weekNumberFormat: createFormatter,\n    eventResizableFromStart: Boolean,\n    displayEventTime: Boolean,\n    displayEventEnd: Boolean,\n    weekText: String,\n    weekTextLong: String,\n    progressiveEventRendering: Boolean,\n    businessHours: identity,\n    initialDate: identity,\n    now: identity,\n    eventDataTransform: identity,\n    stickyHeaderDates: identity,\n    stickyFooterScrollbar: identity,\n    viewHeight: identity,\n    defaultAllDay: Boolean,\n    eventSourceFailure: identity,\n    eventSourceSuccess: identity,\n    eventDisplay: String,\n    eventStartEditable: Boolean,\n    eventDurationEditable: Boolean,\n    eventOverlap: identity,\n    eventConstraint: identity,\n    eventAllow: identity,\n    eventBackgroundColor: String,\n    eventBorderColor: String,\n    eventTextColor: String,\n    eventColor: String,\n    eventClassNames: identity,\n    eventContent: identity,\n    eventDidMount: identity,\n    eventWillUnmount: identity,\n    selectConstraint: identity,\n    selectOverlap: identity,\n    selectAllow: identity,\n    droppable: Boolean,\n    unselectCancel: String,\n    slotLabelFormat: identity,\n    slotLaneClassNames: identity,\n    slotLaneContent: identity,\n    slotLaneDidMount: identity,\n    slotLaneWillUnmount: identity,\n    slotLabelClassNames: identity,\n    slotLabelContent: identity,\n    slotLabelDidMount: identity,\n    slotLabelWillUnmount: identity,\n    dayMaxEvents: identity,\n    dayMaxEventRows: identity,\n    dayMinWidth: Number,\n    slotLabelInterval: createDuration,\n    allDayText: String,\n    allDayClassNames: identity,\n    allDayContent: identity,\n    allDayDidMount: identity,\n    allDayWillUnmount: identity,\n    slotMinWidth: Number,\n    navLinks: Boolean,\n    eventTimeFormat: createFormatter,\n    rerenderDelay: Number,\n    moreLinkText: identity,\n    moreLinkHint: identity,\n    selectMinDistance: Number,\n    selectable: Boolean,\n    selectLongPressDelay: Number,\n    eventLongPressDelay: Number,\n    selectMirror: Boolean,\n    eventMaxStack: Number,\n    eventMinHeight: Number,\n    eventMinWidth: Number,\n    eventShortHeight: Number,\n    slotEventOverlap: Boolean,\n    plugins: identity,\n    firstDay: Number,\n    dayCount: Number,\n    dateAlignment: String,\n    dateIncrement: createDuration,\n    hiddenDays: identity,\n    monthMode: Boolean,\n    fixedWeekCount: Boolean,\n    validRange: identity,\n    visibleRange: identity,\n    titleFormat: identity,\n    eventInteractive: Boolean,\n    // only used by list-view, but languages define the value, so we need it in base options\n    noEventsText: String,\n    viewHint: identity,\n    navLinkHint: identity,\n    closeHint: String,\n    timeHint: String,\n    eventHint: String,\n    moreLinkClick: identity,\n    moreLinkClassNames: identity,\n    moreLinkContent: identity,\n    moreLinkDidMount: identity,\n    moreLinkWillUnmount: identity,\n    // for connectors\n    // (can't be part of plugin system b/c must be provided at runtime)\n    handleCustomRendering: identity,\n    customRenderingMetaMap: identity,\n    customRenderingReplacesEl: Boolean,\n};\n// do NOT give a type here. need `typeof BASE_OPTION_DEFAULTS` to give real results.\n// raw values.\nconst BASE_OPTION_DEFAULTS = {\n    eventDisplay: 'auto',\n    defaultRangeSeparator: ' - ',\n    titleRangeSeparator: ' \\u2013 ',\n    defaultTimedEventDuration: '01:00:00',\n    defaultAllDayEventDuration: { day: 1 },\n    forceEventDuration: false,\n    nextDayThreshold: '00:00:00',\n    dayHeaders: true,\n    initialView: '',\n    aspectRatio: 1.35,\n    headerToolbar: {\n        start: 'title',\n        center: '',\n        end: 'today prev,next',\n    },\n    weekends: true,\n    weekNumbers: false,\n    weekNumberCalculation: 'local',\n    editable: false,\n    nowIndicator: false,\n    scrollTime: '06:00:00',\n    scrollTimeReset: true,\n    slotMinTime: '00:00:00',\n    slotMaxTime: '24:00:00',\n    showNonCurrentDates: true,\n    lazyFetching: true,\n    startParam: 'start',\n    endParam: 'end',\n    timeZoneParam: 'timeZone',\n    timeZone: 'local',\n    locales: [],\n    locale: '',\n    themeSystem: 'standard',\n    dragRevertDuration: 500,\n    dragScroll: true,\n    allDayMaintainDuration: false,\n    unselectAuto: true,\n    dropAccept: '*',\n    eventOrder: 'start,-duration,allDay,title',\n    dayPopoverFormat: { month: 'long', day: 'numeric', year: 'numeric' },\n    handleWindowResize: true,\n    windowResizeDelay: 100,\n    longPressDelay: 1000,\n    eventDragMinDistance: 5,\n    expandRows: false,\n    navLinks: false,\n    selectable: false,\n    eventMinHeight: 15,\n    eventMinWidth: 30,\n    eventShortHeight: 30,\n};\n// calendar listeners\n// ------------------\nconst CALENDAR_LISTENER_REFINERS = {\n    datesSet: identity,\n    eventsSet: identity,\n    eventAdd: identity,\n    eventChange: identity,\n    eventRemove: identity,\n    windowResize: identity,\n    eventClick: identity,\n    eventMouseEnter: identity,\n    eventMouseLeave: identity,\n    select: identity,\n    unselect: identity,\n    loading: identity,\n    // internal\n    _unmount: identity,\n    _beforeprint: identity,\n    _afterprint: identity,\n    _noEventDrop: identity,\n    _noEventResize: identity,\n    _resize: identity,\n    _scrollRequest: identity,\n};\n// calendar-specific options\n// -------------------------\nconst CALENDAR_OPTION_REFINERS = {\n    buttonText: identity,\n    buttonHints: identity,\n    views: identity,\n    plugins: identity,\n    initialEvents: identity,\n    events: identity,\n    eventSources: identity,\n};\nconst COMPLEX_OPTION_COMPARATORS = {\n    headerToolbar: isMaybeObjectsEqual,\n    footerToolbar: isMaybeObjectsEqual,\n    buttonText: isMaybeObjectsEqual,\n    buttonHints: isMaybeObjectsEqual,\n    buttonIcons: isMaybeObjectsEqual,\n    dateIncrement: isMaybeObjectsEqual,\n};\nfunction isMaybeObjectsEqual(a, b) {\n    if (typeof a === 'object' && typeof b === 'object' && a && b) { // both non-null objects\n        return isPropsEqual(a, b);\n    }\n    return a === b;\n}\n// view-specific options\n// ---------------------\nconst VIEW_OPTION_REFINERS = {\n    type: String,\n    component: identity,\n    buttonText: String,\n    buttonTextKey: String,\n    dateProfileGeneratorClass: identity,\n    usesMinMaxTime: Boolean,\n    classNames: identity,\n    content: identity,\n    didMount: identity,\n    willUnmount: identity,\n};\n// util funcs\n// ----------------------------------------------------------------------------------------------------\nfunction mergeRawOptions(optionSets) {\n    return mergeProps(optionSets, COMPLEX_OPTION_COMPARATORS);\n}\nfunction refineProps(input, refiners) {\n    let refined = {};\n    let extra = {};\n    for (let propName in refiners) {\n        if (propName in input) {\n            refined[propName] = refiners[propName](input[propName]);\n        }\n    }\n    for (let propName in input) {\n        if (!(propName in refiners)) {\n            extra[propName] = input[propName];\n        }\n    }\n    return { refined, extra };\n}\nfunction identity(raw) {\n    return raw;\n}\n\n/*\nNOTE: this can be a public API, especially createElement for hooks.\nSee examples/typescript-scheduler/src/index.ts\n*/\nfunction flushSync(runBeforeFlush) {\n    runBeforeFlush();\n    let oldDebounceRendering = preact.options.debounceRendering; // orig\n    let callbackQ = [];\n    function execCallbackSync(callback) {\n        callbackQ.push(callback);\n    }\n    preact.options.debounceRendering = execCallbackSync;\n    preact.render(preact.createElement(FakeComponent, {}), document.createElement('div'));\n    while (callbackQ.length) {\n        callbackQ.shift()();\n    }\n    preact.options.debounceRendering = oldDebounceRendering;\n}\nclass FakeComponent extends preact.Component {\n    render() { return preact.createElement('div', {}); }\n    componentDidMount() { this.setState({}); }\n}\n// TODO: use preact/compat instead?\nfunction createContext(defaultValue) {\n    let ContextType = preact.createContext(defaultValue);\n    let origProvider = ContextType.Provider;\n    ContextType.Provider = function () {\n        let isNew = !this.getChildContext;\n        let children = origProvider.apply(this, arguments); // eslint-disable-line prefer-rest-params\n        if (isNew) {\n            let subs = [];\n            this.shouldComponentUpdate = (_props) => {\n                if (this.props.value !== _props.value) {\n                    subs.forEach((c) => {\n                        c.context = _props.value;\n                        c.forceUpdate();\n                    });\n                }\n            };\n            this.sub = (c) => {\n                subs.push(c);\n                let old = c.componentWillUnmount;\n                c.componentWillUnmount = () => {\n                    subs.splice(subs.indexOf(c), 1);\n                    old && old.call(c);\n                };\n            };\n        }\n        return children;\n    };\n    return ContextType;\n}\n\nclass ScrollResponder {\n    constructor(execFunc, emitter, scrollTime, scrollTimeReset) {\n        this.execFunc = execFunc;\n        this.emitter = emitter;\n        this.scrollTime = scrollTime;\n        this.scrollTimeReset = scrollTimeReset;\n        this.handleScrollRequest = (request) => {\n            this.queuedRequest = Object.assign({}, this.queuedRequest || {}, request);\n            this.drain();\n        };\n        emitter.on('_scrollRequest', this.handleScrollRequest);\n        this.fireInitialScroll();\n    }\n    detach() {\n        this.emitter.off('_scrollRequest', this.handleScrollRequest);\n    }\n    update(isDatesNew) {\n        if (isDatesNew && this.scrollTimeReset) {\n            this.fireInitialScroll(); // will drain\n        }\n        else {\n            this.drain();\n        }\n    }\n    fireInitialScroll() {\n        this.handleScrollRequest({\n            time: this.scrollTime,\n        });\n    }\n    drain() {\n        if (this.queuedRequest && this.execFunc(this.queuedRequest)) {\n            this.queuedRequest = null;\n        }\n    }\n}\n\nconst ViewContextType = createContext({}); // for Components\nfunction buildViewContext(viewSpec, viewApi, viewOptions, dateProfileGenerator, dateEnv, theme, pluginHooks, dispatch, getCurrentData, emitter, calendarApi, registerInteractiveComponent, unregisterInteractiveComponent) {\n    return {\n        dateEnv,\n        options: viewOptions,\n        pluginHooks,\n        emitter,\n        dispatch,\n        getCurrentData,\n        calendarApi,\n        viewSpec,\n        viewApi,\n        dateProfileGenerator,\n        theme,\n        isRtl: viewOptions.direction === 'rtl',\n        addResizeHandler(handler) {\n            emitter.on('_resize', handler);\n        },\n        removeResizeHandler(handler) {\n            emitter.off('_resize', handler);\n        },\n        createScrollResponder(execFunc) {\n            return new ScrollResponder(execFunc, emitter, createDuration(viewOptions.scrollTime), viewOptions.scrollTimeReset);\n        },\n        registerInteractiveComponent,\n        unregisterInteractiveComponent,\n    };\n}\n\n/* eslint max-classes-per-file: off */\nclass PureComponent extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.debug) {\n            // eslint-disable-next-line no-console\n            console.log(getUnequalProps(nextProps, this.props), getUnequalProps(nextState, this.state));\n        }\n        return !compareObjs(this.props, nextProps, this.propEquality) ||\n            !compareObjs(this.state, nextState, this.stateEquality);\n    }\n    // HACK for freakin' React StrictMode\n    safeSetState(newState) {\n        if (!compareObjs(this.state, Object.assign(Object.assign({}, this.state), newState), this.stateEquality)) {\n            this.setState(newState);\n        }\n    }\n}\nPureComponent.addPropsEquality = addPropsEquality;\nPureComponent.addStateEquality = addStateEquality;\nPureComponent.contextType = ViewContextType;\nPureComponent.prototype.propEquality = {};\nPureComponent.prototype.stateEquality = {};\nclass BaseComponent extends PureComponent {\n}\nBaseComponent.contextType = ViewContextType;\nfunction addPropsEquality(propEquality) {\n    let hash = Object.create(this.prototype.propEquality);\n    Object.assign(hash, propEquality);\n    this.prototype.propEquality = hash;\n}\nfunction addStateEquality(stateEquality) {\n    let hash = Object.create(this.prototype.stateEquality);\n    Object.assign(hash, stateEquality);\n    this.prototype.stateEquality = hash;\n}\n// use other one\nfunction setRef(ref, current) {\n    if (typeof ref === 'function') {\n        ref(current);\n    }\n    else if (ref) {\n        // see https://github.com/facebook/react/issues/13029\n        ref.current = current;\n    }\n}\n\nclass ContentInjector extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.id = guid();\n        this.currentDomNodes = [];\n        this.queuedDomNodes = [];\n        this.handleEl = (el) => {\n            if (this.props.elRef) {\n                setRef(this.props.elRef, el);\n            }\n        };\n    }\n    render() {\n        const { props, context } = this;\n        const { options } = context;\n        const { generator, renderProps } = props;\n        const attrs = buildElAttrs(props);\n        let innerContent;\n        let queuedDomNodes = [];\n        if (hasCustomRenderingHandler(props.generatorName, options)) {\n            if (options.customRenderingReplacesEl) {\n                delete attrs.elRef; // because handleEl will be used\n            }\n        }\n        else {\n            const customContent = typeof generator === 'function' ?\n                generator(renderProps, createElement) :\n                generator;\n            if (typeof customContent === 'string' ||\n                isValidElement(customContent) ||\n                Array.isArray(customContent)) {\n                innerContent = customContent;\n            }\n            else if (typeof customContent === 'object') {\n                if ('html' in customContent) {\n                    attrs.dangerouslySetInnerHTML = { __html: customContent.html };\n                }\n                else if ('domNodes' in customContent) {\n                    queuedDomNodes = Array.prototype.slice.call(customContent.domNodes);\n                }\n            }\n        }\n        this.queuedDomNodes = queuedDomNodes;\n        return createElement(props.elTag, attrs, innerContent);\n    }\n    componentDidMount() {\n        this.applyQueueudDomNodes();\n        this.triggerCustomRendering(true);\n    }\n    componentDidUpdate() {\n        this.applyQueueudDomNodes();\n        this.triggerCustomRendering(true);\n    }\n    componentWillUnmount() {\n        this.triggerCustomRendering(false); // TODO: different API for removal?\n    }\n    triggerCustomRendering(isActive) {\n        const { props, context } = this;\n        const { handleCustomRendering, customRenderingMetaMap } = context.options;\n        if (handleCustomRendering) {\n            const customRenderingMeta = customRenderingMetaMap === null || customRenderingMetaMap === void 0 ? void 0 : customRenderingMetaMap[props.generatorName];\n            if (customRenderingMeta) {\n                handleCustomRendering(Object.assign({ id: this.id, isActive, containerEl: this.base, reportNewContainerEl: this.handleEl, generatorMeta: customRenderingMeta }, props));\n            }\n        }\n    }\n    applyQueueudDomNodes() {\n        const { queuedDomNodes, currentDomNodes } = this;\n        const el = this.base;\n        if (!isArraysEqual(queuedDomNodes, currentDomNodes)) {\n            currentDomNodes.forEach(removeElement);\n            for (let newNode of queuedDomNodes) {\n                el.appendChild(newNode);\n            }\n            this.currentDomNodes = queuedDomNodes;\n        }\n    }\n}\nContentInjector.addPropsEquality({\n    elClasses: isArraysEqual,\n    elStyle: isPropsEqual,\n    elAttrs: isPropsEqual,\n    renderProps: isPropsEqual,\n});\n// Util\nfunction hasCustomRenderingHandler(generatorName, options) {\n    var _a;\n    return Boolean(options.handleCustomRendering &&\n        generatorName &&\n        ((_a = options.customRenderingMetaMap) === null || _a === void 0 ? void 0 : _a[generatorName]));\n}\nfunction buildElAttrs(props, extraClassNames) {\n    const attrs = Object.assign(Object.assign({}, props.elAttrs), { ref: props.elRef });\n    if (props.elClasses || extraClassNames) {\n        attrs.className = (props.elClasses || [])\n            .concat(extraClassNames || [])\n            .concat(attrs.className || [])\n            .filter(Boolean)\n            .join(' ');\n    }\n    if (props.elStyle) {\n        attrs.style = props.elStyle;\n    }\n    return attrs;\n}\n\nconst RenderId = createContext(0);\n\nclass ContentContainer extends Component {\n    constructor() {\n        super(...arguments);\n        this.InnerContent = InnerContentInjector.bind(undefined, this);\n    }\n    render() {\n        const { props } = this;\n        const generatedClassNames = generateClassNames(props.classNameGenerator, props.renderProps);\n        if (props.children) {\n            const elAttrs = buildElAttrs(props, generatedClassNames);\n            const children = props.children(this.InnerContent, props.renderProps, elAttrs);\n            if (props.elTag) {\n                return createElement(props.elTag, elAttrs, children);\n            }\n            else {\n                return children;\n            }\n        }\n        else {\n            return createElement((ContentInjector), Object.assign(Object.assign({}, props), { elTag: props.elTag || 'div', elClasses: (props.elClasses || []).concat(generatedClassNames), renderId: this.context }));\n        }\n    }\n    componentDidMount() {\n        var _a, _b;\n        (_b = (_a = this.props).didMount) === null || _b === void 0 ? void 0 : _b.call(_a, Object.assign(Object.assign({}, this.props.renderProps), { el: this.base }));\n    }\n    componentWillUnmount() {\n        var _a, _b;\n        (_b = (_a = this.props).willUnmount) === null || _b === void 0 ? void 0 : _b.call(_a, Object.assign(Object.assign({}, this.props.renderProps), { el: this.base }));\n    }\n}\nContentContainer.contextType = RenderId;\nfunction InnerContentInjector(containerComponent, props) {\n    const parentProps = containerComponent.props;\n    return createElement((ContentInjector), Object.assign({ renderProps: parentProps.renderProps, generatorName: parentProps.generatorName, generator: parentProps.generator, renderId: containerComponent.context }, props));\n}\n// Utils\nfunction generateClassNames(classNameGenerator, renderProps) {\n    const classNames = typeof classNameGenerator === 'function' ?\n        classNameGenerator(renderProps) :\n        classNameGenerator || [];\n    return typeof classNames === 'string' ? [classNames] : classNames;\n}\n\nclass ViewContainer extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let renderProps = { view: context.viewApi };\n        return (createElement(ContentContainer, Object.assign({}, props, { elTag: props.elTag || 'div', elClasses: [\n                ...buildViewClassNames(props.viewSpec),\n                ...(props.elClasses || []),\n            ], renderProps: renderProps, classNameGenerator: options.viewClassNames, generatorName: undefined, generator: undefined, didMount: options.viewDidMount, willUnmount: options.viewWillUnmount }), () => props.children));\n    }\n}\nfunction buildViewClassNames(viewSpec) {\n    return [\n        `fc-${viewSpec.type}-view`,\n        'fc-view',\n    ];\n}\n\nfunction parseRange(input, dateEnv) {\n    let start = null;\n    let end = null;\n    if (input.start) {\n        start = dateEnv.createMarker(input.start);\n    }\n    if (input.end) {\n        end = dateEnv.createMarker(input.end);\n    }\n    if (!start && !end) {\n        return null;\n    }\n    if (start && end && end < start) {\n        return null;\n    }\n    return { start, end };\n}\n// SIDE-EFFECT: will mutate ranges.\n// Will return a new array result.\nfunction invertRanges(ranges, constraintRange) {\n    let invertedRanges = [];\n    let { start } = constraintRange; // the end of the previous range. the start of the new range\n    let i;\n    let dateRange;\n    // ranges need to be in order. required for our date-walking algorithm\n    ranges.sort(compareRanges);\n    for (i = 0; i < ranges.length; i += 1) {\n        dateRange = ranges[i];\n        // add the span of time before the event (if there is any)\n        if (dateRange.start > start) { // compare millisecond time (skip any ambig logic)\n            invertedRanges.push({ start, end: dateRange.start });\n        }\n        if (dateRange.end > start) {\n            start = dateRange.end;\n        }\n    }\n    // add the span of time after the last event (if there is any)\n    if (start < constraintRange.end) { // compare millisecond time (skip any ambig logic)\n        invertedRanges.push({ start, end: constraintRange.end });\n    }\n    return invertedRanges;\n}\nfunction compareRanges(range0, range1) {\n    return range0.start.valueOf() - range1.start.valueOf(); // earlier ranges go first\n}\nfunction intersectRanges(range0, range1) {\n    let { start, end } = range0;\n    let newRange = null;\n    if (range1.start !== null) {\n        if (start === null) {\n            start = range1.start;\n        }\n        else {\n            start = new Date(Math.max(start.valueOf(), range1.start.valueOf()));\n        }\n    }\n    if (range1.end != null) {\n        if (end === null) {\n            end = range1.end;\n        }\n        else {\n            end = new Date(Math.min(end.valueOf(), range1.end.valueOf()));\n        }\n    }\n    if (start === null || end === null || start < end) {\n        newRange = { start, end };\n    }\n    return newRange;\n}\nfunction rangesEqual(range0, range1) {\n    return (range0.start === null ? null : range0.start.valueOf()) === (range1.start === null ? null : range1.start.valueOf()) &&\n        (range0.end === null ? null : range0.end.valueOf()) === (range1.end === null ? null : range1.end.valueOf());\n}\nfunction rangesIntersect(range0, range1) {\n    return (range0.end === null || range1.start === null || range0.end > range1.start) &&\n        (range0.start === null || range1.end === null || range0.start < range1.end);\n}\nfunction rangeContainsRange(outerRange, innerRange) {\n    return (outerRange.start === null || (innerRange.start !== null && innerRange.start >= outerRange.start)) &&\n        (outerRange.end === null || (innerRange.end !== null && innerRange.end <= outerRange.end));\n}\nfunction rangeContainsMarker(range, date) {\n    return (range.start === null || date >= range.start) &&\n        (range.end === null || date < range.end);\n}\n// If the given date is not within the given range, move it inside.\n// (If it's past the end, make it one millisecond before the end).\nfunction constrainMarkerToRange(date, range) {\n    if (range.start != null && date < range.start) {\n        return range.start;\n    }\n    if (range.end != null && date >= range.end) {\n        return new Date(range.end.valueOf() - 1);\n    }\n    return date;\n}\n\n/* Date stuff that doesn't belong in datelib core\n----------------------------------------------------------------------------------------------------------------------*/\n// given a timed range, computes an all-day range that has the same exact duration,\n// but whose start time is aligned with the start of the day.\nfunction computeAlignedDayRange(timedRange) {\n    let dayCnt = Math.floor(diffDays(timedRange.start, timedRange.end)) || 1;\n    let start = startOfDay(timedRange.start);\n    let end = addDays(start, dayCnt);\n    return { start, end };\n}\n// given a timed range, computes an all-day range based on how for the end date bleeds into the next day\n// TODO: give nextDayThreshold a default arg\nfunction computeVisibleDayRange(timedRange, nextDayThreshold = createDuration(0)) {\n    let startDay = null;\n    let endDay = null;\n    if (timedRange.end) {\n        endDay = startOfDay(timedRange.end);\n        let endTimeMS = timedRange.end.valueOf() - endDay.valueOf(); // # of milliseconds into `endDay`\n        // If the end time is actually inclusively part of the next day and is equal to or\n        // beyond the next day threshold, adjust the end to be the exclusive end of `endDay`.\n        // Otherwise, leaving it as inclusive will cause it to exclude `endDay`.\n        if (endTimeMS && endTimeMS >= asRoughMs(nextDayThreshold)) {\n            endDay = addDays(endDay, 1);\n        }\n    }\n    if (timedRange.start) {\n        startDay = startOfDay(timedRange.start); // the beginning of the day the range starts\n        // If end is within `startDay` but not past nextDayThreshold, assign the default duration of one day.\n        if (endDay && endDay <= startDay) {\n            endDay = addDays(startDay, 1);\n        }\n    }\n    return { start: startDay, end: endDay };\n}\n// spans from one day into another?\nfunction isMultiDayRange(range) {\n    let visibleRange = computeVisibleDayRange(range);\n    return diffDays(visibleRange.start, visibleRange.end) > 1;\n}\nfunction diffDates(date0, date1, dateEnv, largeUnit) {\n    if (largeUnit === 'year') {\n        return createDuration(dateEnv.diffWholeYears(date0, date1), 'year');\n    }\n    if (largeUnit === 'month') {\n        return createDuration(dateEnv.diffWholeMonths(date0, date1), 'month');\n    }\n    return diffDayAndTime(date0, date1); // returns a duration\n}\n\nfunction reduceCurrentDate(currentDate, action) {\n    switch (action.type) {\n        case 'CHANGE_DATE':\n            return action.dateMarker;\n        default:\n            return currentDate;\n    }\n}\nfunction getInitialDate(options, dateEnv) {\n    let initialDateInput = options.initialDate;\n    // compute the initial ambig-timezone date\n    if (initialDateInput != null) {\n        return dateEnv.createMarker(initialDateInput);\n    }\n    return getNow(options.now, dateEnv); // getNow already returns unzoned\n}\nfunction getNow(nowInput, dateEnv) {\n    if (typeof nowInput === 'function') {\n        nowInput = nowInput();\n    }\n    if (nowInput == null) {\n        return dateEnv.createNowMarker();\n    }\n    return dateEnv.createMarker(nowInput);\n}\n\nclass DateProfileGenerator {\n    constructor(props) {\n        this.props = props;\n        this.nowDate = getNow(props.nowInput, props.dateEnv);\n        this.initHiddenDays();\n    }\n    /* Date Range Computation\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Builds a structure with info about what the dates/ranges will be for the \"prev\" view.\n    buildPrev(currentDateProfile, currentDate, forceToValid) {\n        let { dateEnv } = this.props;\n        let prevDate = dateEnv.subtract(dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month\n        currentDateProfile.dateIncrement);\n        return this.build(prevDate, -1, forceToValid);\n    }\n    // Builds a structure with info about what the dates/ranges will be for the \"next\" view.\n    buildNext(currentDateProfile, currentDate, forceToValid) {\n        let { dateEnv } = this.props;\n        let nextDate = dateEnv.add(dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month\n        currentDateProfile.dateIncrement);\n        return this.build(nextDate, 1, forceToValid);\n    }\n    // Builds a structure holding dates/ranges for rendering around the given date.\n    // Optional direction param indicates whether the date is being incremented/decremented\n    // from its previous value. decremented = -1, incremented = 1 (default).\n    build(currentDate, direction, forceToValid = true) {\n        let { props } = this;\n        let validRange;\n        let currentInfo;\n        let isRangeAllDay;\n        let renderRange;\n        let activeRange;\n        let isValid;\n        validRange = this.buildValidRange();\n        validRange = this.trimHiddenDays(validRange);\n        if (forceToValid) {\n            currentDate = constrainMarkerToRange(currentDate, validRange);\n        }\n        currentInfo = this.buildCurrentRangeInfo(currentDate, direction);\n        isRangeAllDay = /^(year|month|week|day)$/.test(currentInfo.unit);\n        renderRange = this.buildRenderRange(this.trimHiddenDays(currentInfo.range), currentInfo.unit, isRangeAllDay);\n        renderRange = this.trimHiddenDays(renderRange);\n        activeRange = renderRange;\n        if (!props.showNonCurrentDates) {\n            activeRange = intersectRanges(activeRange, currentInfo.range);\n        }\n        activeRange = this.adjustActiveRange(activeRange);\n        activeRange = intersectRanges(activeRange, validRange); // might return null\n        // it's invalid if the originally requested date is not contained,\n        // or if the range is completely outside of the valid range.\n        isValid = rangesIntersect(currentInfo.range, validRange);\n        return {\n            // constraint for where prev/next operations can go and where events can be dragged/resized to.\n            // an object with optional start and end properties.\n            validRange,\n            // range the view is formally responsible for.\n            // for example, a month view might have 1st-31st, excluding padded dates\n            currentRange: currentInfo.range,\n            // name of largest unit being displayed, like \"month\" or \"week\"\n            currentRangeUnit: currentInfo.unit,\n            isRangeAllDay,\n            // dates that display events and accept drag-n-drop\n            // will be `null` if no dates accept events\n            activeRange,\n            // date range with a rendered skeleton\n            // includes not-active days that need some sort of DOM\n            renderRange,\n            // Duration object that denotes the first visible time of any given day\n            slotMinTime: props.slotMinTime,\n            // Duration object that denotes the exclusive visible end time of any given day\n            slotMaxTime: props.slotMaxTime,\n            isValid,\n            // how far the current date will move for a prev/next operation\n            dateIncrement: this.buildDateIncrement(currentInfo.duration),\n            // pass a fallback (might be null) ^\n        };\n    }\n    // Builds an object with optional start/end properties.\n    // Indicates the minimum/maximum dates to display.\n    // not responsible for trimming hidden days.\n    buildValidRange() {\n        let input = this.props.validRangeInput;\n        let simpleInput = typeof input === 'function'\n            ? input.call(this.props.calendarApi, this.nowDate)\n            : input;\n        return this.refineRange(simpleInput) ||\n            { start: null, end: null }; // completely open-ended\n    }\n    // Builds a structure with info about the \"current\" range, the range that is\n    // highlighted as being the current month for example.\n    // See build() for a description of `direction`.\n    // Guaranteed to have `range` and `unit` properties. `duration` is optional.\n    buildCurrentRangeInfo(date, direction) {\n        let { props } = this;\n        let duration = null;\n        let unit = null;\n        let range = null;\n        let dayCount;\n        if (props.duration) {\n            duration = props.duration;\n            unit = props.durationUnit;\n            range = this.buildRangeFromDuration(date, direction, duration, unit);\n        }\n        else if ((dayCount = this.props.dayCount)) {\n            unit = 'day';\n            range = this.buildRangeFromDayCount(date, direction, dayCount);\n        }\n        else if ((range = this.buildCustomVisibleRange(date))) {\n            unit = props.dateEnv.greatestWholeUnit(range.start, range.end).unit;\n        }\n        else {\n            duration = this.getFallbackDuration();\n            unit = greatestDurationDenominator(duration).unit;\n            range = this.buildRangeFromDuration(date, direction, duration, unit);\n        }\n        return { duration, unit, range };\n    }\n    getFallbackDuration() {\n        return createDuration({ day: 1 });\n    }\n    // Returns a new activeRange to have time values (un-ambiguate)\n    // slotMinTime or slotMaxTime causes the range to expand.\n    adjustActiveRange(range) {\n        let { dateEnv, usesMinMaxTime, slotMinTime, slotMaxTime } = this.props;\n        let { start, end } = range;\n        if (usesMinMaxTime) {\n            // expand active range if slotMinTime is negative (why not when positive?)\n            if (asRoughDays(slotMinTime) < 0) {\n                start = startOfDay(start); // necessary?\n                start = dateEnv.add(start, slotMinTime);\n            }\n            // expand active range if slotMaxTime is beyond one day (why not when negative?)\n            if (asRoughDays(slotMaxTime) > 1) {\n                end = startOfDay(end); // necessary?\n                end = addDays(end, -1);\n                end = dateEnv.add(end, slotMaxTime);\n            }\n        }\n        return { start, end };\n    }\n    // Builds the \"current\" range when it is specified as an explicit duration.\n    // `unit` is the already-computed greatestDurationDenominator unit of duration.\n    buildRangeFromDuration(date, direction, duration, unit) {\n        let { dateEnv, dateAlignment } = this.props;\n        let start;\n        let end;\n        let res;\n        // compute what the alignment should be\n        if (!dateAlignment) {\n            let { dateIncrement } = this.props;\n            if (dateIncrement) {\n                // use the smaller of the two units\n                if (asRoughMs(dateIncrement) < asRoughMs(duration)) {\n                    dateAlignment = greatestDurationDenominator(dateIncrement).unit;\n                }\n                else {\n                    dateAlignment = unit;\n                }\n            }\n            else {\n                dateAlignment = unit;\n            }\n        }\n        // if the view displays a single day or smaller\n        if (asRoughDays(duration) <= 1) {\n            if (this.isHiddenDay(start)) {\n                start = this.skipHiddenDays(start, direction);\n                start = startOfDay(start);\n            }\n        }\n        function computeRes() {\n            start = dateEnv.startOf(date, dateAlignment);\n            end = dateEnv.add(start, duration);\n            res = { start, end };\n        }\n        computeRes();\n        // if range is completely enveloped by hidden days, go past the hidden days\n        if (!this.trimHiddenDays(res)) {\n            date = this.skipHiddenDays(date, direction);\n            computeRes();\n        }\n        return res;\n    }\n    // Builds the \"current\" range when a dayCount is specified.\n    buildRangeFromDayCount(date, direction, dayCount) {\n        let { dateEnv, dateAlignment } = this.props;\n        let runningCount = 0;\n        let start = date;\n        let end;\n        if (dateAlignment) {\n            start = dateEnv.startOf(start, dateAlignment);\n        }\n        start = startOfDay(start);\n        start = this.skipHiddenDays(start, direction);\n        end = start;\n        do {\n            end = addDays(end, 1);\n            if (!this.isHiddenDay(end)) {\n                runningCount += 1;\n            }\n        } while (runningCount < dayCount);\n        return { start, end };\n    }\n    // Builds a normalized range object for the \"visible\" range,\n    // which is a way to define the currentRange and activeRange at the same time.\n    buildCustomVisibleRange(date) {\n        let { props } = this;\n        let input = props.visibleRangeInput;\n        let simpleInput = typeof input === 'function'\n            ? input.call(props.calendarApi, props.dateEnv.toDate(date))\n            : input;\n        let range = this.refineRange(simpleInput);\n        if (range && (range.start == null || range.end == null)) {\n            return null;\n        }\n        return range;\n    }\n    // Computes the range that will represent the element/cells for *rendering*,\n    // but which may have voided days/times.\n    // not responsible for trimming hidden days.\n    buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay) {\n        return currentRange;\n    }\n    // Compute the duration value that should be added/substracted to the current date\n    // when a prev/next operation happens.\n    buildDateIncrement(fallback) {\n        let { dateIncrement } = this.props;\n        let customAlignment;\n        if (dateIncrement) {\n            return dateIncrement;\n        }\n        if ((customAlignment = this.props.dateAlignment)) {\n            return createDuration(1, customAlignment);\n        }\n        if (fallback) {\n            return fallback;\n        }\n        return createDuration({ days: 1 });\n    }\n    refineRange(rangeInput) {\n        if (rangeInput) {\n            let range = parseRange(rangeInput, this.props.dateEnv);\n            if (range) {\n                range = computeVisibleDayRange(range);\n            }\n            return range;\n        }\n        return null;\n    }\n    /* Hidden Days\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Initializes internal variables related to calculating hidden days-of-week\n    initHiddenDays() {\n        let hiddenDays = this.props.hiddenDays || []; // array of day-of-week indices that are hidden\n        let isHiddenDayHash = []; // is the day-of-week hidden? (hash with day-of-week-index -> bool)\n        let dayCnt = 0;\n        let i;\n        if (this.props.weekends === false) {\n            hiddenDays.push(0, 6); // 0=sunday, 6=saturday\n        }\n        for (i = 0; i < 7; i += 1) {\n            if (!(isHiddenDayHash[i] = hiddenDays.indexOf(i) !== -1)) {\n                dayCnt += 1;\n            }\n        }\n        if (!dayCnt) {\n            throw new Error('invalid hiddenDays'); // all days were hidden? bad.\n        }\n        this.isHiddenDayHash = isHiddenDayHash;\n    }\n    // Remove days from the beginning and end of the range that are computed as hidden.\n    // If the whole range is trimmed off, returns null\n    trimHiddenDays(range) {\n        let { start, end } = range;\n        if (start) {\n            start = this.skipHiddenDays(start);\n        }\n        if (end) {\n            end = this.skipHiddenDays(end, -1, true);\n        }\n        if (start == null || end == null || start < end) {\n            return { start, end };\n        }\n        return null;\n    }\n    // Is the current day hidden?\n    // `day` is a day-of-week index (0-6), or a Date (used for UTC)\n    isHiddenDay(day) {\n        if (day instanceof Date) {\n            day = day.getUTCDay();\n        }\n        return this.isHiddenDayHash[day];\n    }\n    // Incrementing the current day until it is no longer a hidden day, returning a copy.\n    // DOES NOT CONSIDER validRange!\n    // If the initial value of `date` is not a hidden day, don't do anything.\n    // Pass `isExclusive` as `true` if you are dealing with an end date.\n    // `inc` defaults to `1` (increment one day forward each time)\n    skipHiddenDays(date, inc = 1, isExclusive = false) {\n        while (this.isHiddenDayHash[(date.getUTCDay() + (isExclusive ? inc : 0) + 7) % 7]) {\n            date = addDays(date, inc);\n        }\n        return date;\n    }\n}\n\nfunction createEventInstance(defId, range, forcedStartTzo, forcedEndTzo) {\n    return {\n        instanceId: guid(),\n        defId,\n        range,\n        forcedStartTzo: forcedStartTzo == null ? null : forcedStartTzo,\n        forcedEndTzo: forcedEndTzo == null ? null : forcedEndTzo,\n    };\n}\n\nfunction parseRecurring(refined, defaultAllDay, dateEnv, recurringTypes) {\n    for (let i = 0; i < recurringTypes.length; i += 1) {\n        let parsed = recurringTypes[i].parse(refined, dateEnv);\n        if (parsed) {\n            let { allDay } = refined;\n            if (allDay == null) {\n                allDay = defaultAllDay;\n                if (allDay == null) {\n                    allDay = parsed.allDayGuess;\n                    if (allDay == null) {\n                        allDay = false;\n                    }\n                }\n            }\n            return {\n                allDay,\n                duration: parsed.duration,\n                typeData: parsed.typeData,\n                typeId: i,\n            };\n        }\n    }\n    return null;\n}\nfunction expandRecurring(eventStore, framingRange, context) {\n    let { dateEnv, pluginHooks, options } = context;\n    let { defs, instances } = eventStore;\n    // remove existing recurring instances\n    // TODO: bad. always expand events as a second step\n    instances = filterHash(instances, (instance) => !defs[instance.defId].recurringDef);\n    for (let defId in defs) {\n        let def = defs[defId];\n        if (def.recurringDef) {\n            let { duration } = def.recurringDef;\n            if (!duration) {\n                duration = def.allDay ?\n                    options.defaultAllDayEventDuration :\n                    options.defaultTimedEventDuration;\n            }\n            let starts = expandRecurringRanges(def, duration, framingRange, dateEnv, pluginHooks.recurringTypes);\n            for (let start of starts) {\n                let instance = createEventInstance(defId, {\n                    start,\n                    end: dateEnv.add(start, duration),\n                });\n                instances[instance.instanceId] = instance;\n            }\n        }\n    }\n    return { defs, instances };\n}\n/*\nEvent MUST have a recurringDef\n*/\nfunction expandRecurringRanges(eventDef, duration, framingRange, dateEnv, recurringTypes) {\n    let typeDef = recurringTypes[eventDef.recurringDef.typeId];\n    let markers = typeDef.expand(eventDef.recurringDef.typeData, {\n        start: dateEnv.subtract(framingRange.start, duration),\n        end: framingRange.end,\n    }, dateEnv);\n    // the recurrence plugins don't guarantee that all-day events are start-of-day, so we have to\n    if (eventDef.allDay) {\n        markers = markers.map(startOfDay);\n    }\n    return markers;\n}\n\nconst EVENT_NON_DATE_REFINERS = {\n    id: String,\n    groupId: String,\n    title: String,\n    url: String,\n    interactive: Boolean,\n};\nconst EVENT_DATE_REFINERS = {\n    start: identity,\n    end: identity,\n    date: identity,\n    allDay: Boolean,\n};\nconst EVENT_REFINERS = Object.assign(Object.assign(Object.assign({}, EVENT_NON_DATE_REFINERS), EVENT_DATE_REFINERS), { extendedProps: identity });\nfunction parseEvent(raw, eventSource, context, allowOpenRange, refiners = buildEventRefiners(context)) {\n    let { refined, extra } = refineEventDef(raw, context, refiners);\n    let defaultAllDay = computeIsDefaultAllDay(eventSource, context);\n    let recurringRes = parseRecurring(refined, defaultAllDay, context.dateEnv, context.pluginHooks.recurringTypes);\n    if (recurringRes) {\n        let def = parseEventDef(refined, extra, eventSource ? eventSource.sourceId : '', recurringRes.allDay, Boolean(recurringRes.duration), context);\n        def.recurringDef = {\n            typeId: recurringRes.typeId,\n            typeData: recurringRes.typeData,\n            duration: recurringRes.duration,\n        };\n        return { def, instance: null };\n    }\n    let singleRes = parseSingle(refined, defaultAllDay, context, allowOpenRange);\n    if (singleRes) {\n        let def = parseEventDef(refined, extra, eventSource ? eventSource.sourceId : '', singleRes.allDay, singleRes.hasEnd, context);\n        let instance = createEventInstance(def.defId, singleRes.range, singleRes.forcedStartTzo, singleRes.forcedEndTzo);\n        return { def, instance };\n    }\n    return null;\n}\nfunction refineEventDef(raw, context, refiners = buildEventRefiners(context)) {\n    return refineProps(raw, refiners);\n}\nfunction buildEventRefiners(context) {\n    return Object.assign(Object.assign(Object.assign({}, EVENT_UI_REFINERS), EVENT_REFINERS), context.pluginHooks.eventRefiners);\n}\n/*\nWill NOT populate extendedProps with the leftover properties.\nWill NOT populate date-related props.\n*/\nfunction parseEventDef(refined, extra, sourceId, allDay, hasEnd, context) {\n    let def = {\n        title: refined.title || '',\n        groupId: refined.groupId || '',\n        publicId: refined.id || '',\n        url: refined.url || '',\n        recurringDef: null,\n        defId: guid(),\n        sourceId,\n        allDay,\n        hasEnd,\n        interactive: refined.interactive,\n        ui: createEventUi(refined, context),\n        extendedProps: Object.assign(Object.assign({}, (refined.extendedProps || {})), extra),\n    };\n    for (let memberAdder of context.pluginHooks.eventDefMemberAdders) {\n        Object.assign(def, memberAdder(refined));\n    }\n    // help out EventImpl from having user modify props\n    Object.freeze(def.ui.classNames);\n    Object.freeze(def.extendedProps);\n    return def;\n}\nfunction parseSingle(refined, defaultAllDay, context, allowOpenRange) {\n    let { allDay } = refined;\n    let startMeta;\n    let startMarker = null;\n    let hasEnd = false;\n    let endMeta;\n    let endMarker = null;\n    let startInput = refined.start != null ? refined.start : refined.date;\n    startMeta = context.dateEnv.createMarkerMeta(startInput);\n    if (startMeta) {\n        startMarker = startMeta.marker;\n    }\n    else if (!allowOpenRange) {\n        return null;\n    }\n    if (refined.end != null) {\n        endMeta = context.dateEnv.createMarkerMeta(refined.end);\n    }\n    if (allDay == null) {\n        if (defaultAllDay != null) {\n            allDay = defaultAllDay;\n        }\n        else {\n            // fall back to the date props LAST\n            allDay = (!startMeta || startMeta.isTimeUnspecified) &&\n                (!endMeta || endMeta.isTimeUnspecified);\n        }\n    }\n    if (allDay && startMarker) {\n        startMarker = startOfDay(startMarker);\n    }\n    if (endMeta) {\n        endMarker = endMeta.marker;\n        if (allDay) {\n            endMarker = startOfDay(endMarker);\n        }\n        if (startMarker && endMarker <= startMarker) {\n            endMarker = null;\n        }\n    }\n    if (endMarker) {\n        hasEnd = true;\n    }\n    else if (!allowOpenRange) {\n        hasEnd = context.options.forceEventDuration || false;\n        endMarker = context.dateEnv.add(startMarker, allDay ?\n            context.options.defaultAllDayEventDuration :\n            context.options.defaultTimedEventDuration);\n    }\n    return {\n        allDay,\n        hasEnd,\n        range: { start: startMarker, end: endMarker },\n        forcedStartTzo: startMeta ? startMeta.forcedTzo : null,\n        forcedEndTzo: endMeta ? endMeta.forcedTzo : null,\n    };\n}\nfunction computeIsDefaultAllDay(eventSource, context) {\n    let res = null;\n    if (eventSource) {\n        res = eventSource.defaultAllDay;\n    }\n    if (res == null) {\n        res = context.options.defaultAllDay;\n    }\n    return res;\n}\n\nfunction parseEvents(rawEvents, eventSource, context, allowOpenRange) {\n    let eventStore = createEmptyEventStore();\n    let eventRefiners = buildEventRefiners(context);\n    for (let rawEvent of rawEvents) {\n        let tuple = parseEvent(rawEvent, eventSource, context, allowOpenRange, eventRefiners);\n        if (tuple) {\n            eventTupleToStore(tuple, eventStore);\n        }\n    }\n    return eventStore;\n}\nfunction eventTupleToStore(tuple, eventStore = createEmptyEventStore()) {\n    eventStore.defs[tuple.def.defId] = tuple.def;\n    if (tuple.instance) {\n        eventStore.instances[tuple.instance.instanceId] = tuple.instance;\n    }\n    return eventStore;\n}\n// retrieves events that have the same groupId as the instance specified by `instanceId`\n// or they are the same as the instance.\n// why might instanceId not be in the store? an event from another calendar?\nfunction getRelevantEvents(eventStore, instanceId) {\n    let instance = eventStore.instances[instanceId];\n    if (instance) {\n        let def = eventStore.defs[instance.defId];\n        // get events/instances with same group\n        let newStore = filterEventStoreDefs(eventStore, (lookDef) => isEventDefsGrouped(def, lookDef));\n        // add the original\n        // TODO: wish we could use eventTupleToStore or something like it\n        newStore.defs[def.defId] = def;\n        newStore.instances[instance.instanceId] = instance;\n        return newStore;\n    }\n    return createEmptyEventStore();\n}\nfunction isEventDefsGrouped(def0, def1) {\n    return Boolean(def0.groupId && def0.groupId === def1.groupId);\n}\nfunction createEmptyEventStore() {\n    return { defs: {}, instances: {} };\n}\nfunction mergeEventStores(store0, store1) {\n    return {\n        defs: Object.assign(Object.assign({}, store0.defs), store1.defs),\n        instances: Object.assign(Object.assign({}, store0.instances), store1.instances),\n    };\n}\nfunction filterEventStoreDefs(eventStore, filterFunc) {\n    let defs = filterHash(eventStore.defs, filterFunc);\n    let instances = filterHash(eventStore.instances, (instance) => (defs[instance.defId] // still exists?\n    ));\n    return { defs, instances };\n}\nfunction excludeSubEventStore(master, sub) {\n    let { defs, instances } = master;\n    let filteredDefs = {};\n    let filteredInstances = {};\n    for (let defId in defs) {\n        if (!sub.defs[defId]) { // not explicitly excluded\n            filteredDefs[defId] = defs[defId];\n        }\n    }\n    for (let instanceId in instances) {\n        if (!sub.instances[instanceId] && // not explicitly excluded\n            filteredDefs[instances[instanceId].defId] // def wasn't filtered away\n        ) {\n            filteredInstances[instanceId] = instances[instanceId];\n        }\n    }\n    return {\n        defs: filteredDefs,\n        instances: filteredInstances,\n    };\n}\n\nfunction normalizeConstraint(input, context) {\n    if (Array.isArray(input)) {\n        return parseEvents(input, null, context, true); // allowOpenRange=true\n    }\n    if (typeof input === 'object' && input) { // non-null object\n        return parseEvents([input], null, context, true); // allowOpenRange=true\n    }\n    if (input != null) {\n        return String(input);\n    }\n    return null;\n}\n\nfunction parseClassNames(raw) {\n    if (Array.isArray(raw)) {\n        return raw;\n    }\n    if (typeof raw === 'string') {\n        return raw.split(/\\s+/);\n    }\n    return [];\n}\n\n// TODO: better called \"EventSettings\" or \"EventConfig\"\n// TODO: move this file into structs\n// TODO: separate constraint/overlap/allow, because selection uses only that, not other props\nconst EVENT_UI_REFINERS = {\n    display: String,\n    editable: Boolean,\n    startEditable: Boolean,\n    durationEditable: Boolean,\n    constraint: identity,\n    overlap: identity,\n    allow: identity,\n    className: parseClassNames,\n    classNames: parseClassNames,\n    color: String,\n    backgroundColor: String,\n    borderColor: String,\n    textColor: String,\n};\nconst EMPTY_EVENT_UI = {\n    display: null,\n    startEditable: null,\n    durationEditable: null,\n    constraints: [],\n    overlap: null,\n    allows: [],\n    backgroundColor: '',\n    borderColor: '',\n    textColor: '',\n    classNames: [],\n};\nfunction createEventUi(refined, context) {\n    let constraint = normalizeConstraint(refined.constraint, context);\n    return {\n        display: refined.display || null,\n        startEditable: refined.startEditable != null ? refined.startEditable : refined.editable,\n        durationEditable: refined.durationEditable != null ? refined.durationEditable : refined.editable,\n        constraints: constraint != null ? [constraint] : [],\n        overlap: refined.overlap != null ? refined.overlap : null,\n        allows: refined.allow != null ? [refined.allow] : [],\n        backgroundColor: refined.backgroundColor || refined.color || '',\n        borderColor: refined.borderColor || refined.color || '',\n        textColor: refined.textColor || '',\n        classNames: (refined.className || []).concat(refined.classNames || []), // join singular and plural\n    };\n}\n// TODO: prevent against problems with <2 args!\nfunction combineEventUis(uis) {\n    return uis.reduce(combineTwoEventUis, EMPTY_EVENT_UI);\n}\nfunction combineTwoEventUis(item0, item1) {\n    return {\n        display: item1.display != null ? item1.display : item0.display,\n        startEditable: item1.startEditable != null ? item1.startEditable : item0.startEditable,\n        durationEditable: item1.durationEditable != null ? item1.durationEditable : item0.durationEditable,\n        constraints: item0.constraints.concat(item1.constraints),\n        overlap: typeof item1.overlap === 'boolean' ? item1.overlap : item0.overlap,\n        allows: item0.allows.concat(item1.allows),\n        backgroundColor: item1.backgroundColor || item0.backgroundColor,\n        borderColor: item1.borderColor || item0.borderColor,\n        textColor: item1.textColor || item0.textColor,\n        classNames: item0.classNames.concat(item1.classNames),\n    };\n}\n\nconst EVENT_SOURCE_REFINERS = {\n    id: String,\n    defaultAllDay: Boolean,\n    url: String,\n    format: String,\n    events: identity,\n    eventDataTransform: identity,\n    // for any network-related sources\n    success: identity,\n    failure: identity,\n};\nfunction parseEventSource(raw, context, refiners = buildEventSourceRefiners(context)) {\n    let rawObj;\n    if (typeof raw === 'string') {\n        rawObj = { url: raw };\n    }\n    else if (typeof raw === 'function' || Array.isArray(raw)) {\n        rawObj = { events: raw };\n    }\n    else if (typeof raw === 'object' && raw) { // not null\n        rawObj = raw;\n    }\n    if (rawObj) {\n        let { refined, extra } = refineProps(rawObj, refiners);\n        let metaRes = buildEventSourceMeta(refined, context);\n        if (metaRes) {\n            return {\n                _raw: raw,\n                isFetching: false,\n                latestFetchId: '',\n                fetchRange: null,\n                defaultAllDay: refined.defaultAllDay,\n                eventDataTransform: refined.eventDataTransform,\n                success: refined.success,\n                failure: refined.failure,\n                publicId: refined.id || '',\n                sourceId: guid(),\n                sourceDefId: metaRes.sourceDefId,\n                meta: metaRes.meta,\n                ui: createEventUi(refined, context),\n                extendedProps: extra,\n            };\n        }\n    }\n    return null;\n}\nfunction buildEventSourceRefiners(context) {\n    return Object.assign(Object.assign(Object.assign({}, EVENT_UI_REFINERS), EVENT_SOURCE_REFINERS), context.pluginHooks.eventSourceRefiners);\n}\nfunction buildEventSourceMeta(raw, context) {\n    let defs = context.pluginHooks.eventSourceDefs;\n    for (let i = defs.length - 1; i >= 0; i -= 1) { // later-added plugins take precedence\n        let def = defs[i];\n        let meta = def.parseMeta(raw);\n        if (meta) {\n            return { sourceDefId: i, meta };\n        }\n    }\n    return null;\n}\n\nfunction initEventSources(calendarOptions, dateProfile, context) {\n    let activeRange = dateProfile ? dateProfile.activeRange : null;\n    return addSources({}, parseInitialSources(calendarOptions, context), activeRange, context);\n}\nfunction reduceEventSources(eventSources, action, dateProfile, context) {\n    let activeRange = dateProfile ? dateProfile.activeRange : null; // need this check?\n    switch (action.type) {\n        case 'ADD_EVENT_SOURCES': // already parsed\n            return addSources(eventSources, action.sources, activeRange, context);\n        case 'REMOVE_EVENT_SOURCE':\n            return removeSource(eventSources, action.sourceId);\n        case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n        case 'NEXT':\n        case 'CHANGE_DATE':\n        case 'CHANGE_VIEW_TYPE':\n            if (dateProfile) {\n                return fetchDirtySources(eventSources, activeRange, context);\n            }\n            return eventSources;\n        case 'FETCH_EVENT_SOURCES':\n            return fetchSourcesByIds(eventSources, action.sourceIds ? // why no type?\n                arrayToHash(action.sourceIds) :\n                excludeStaticSources(eventSources, context), activeRange, action.isRefetch || false, context);\n        case 'RECEIVE_EVENTS':\n        case 'RECEIVE_EVENT_ERROR':\n            return receiveResponse(eventSources, action.sourceId, action.fetchId, action.fetchRange);\n        case 'REMOVE_ALL_EVENT_SOURCES':\n            return {};\n        default:\n            return eventSources;\n    }\n}\nfunction reduceEventSourcesNewTimeZone(eventSources, dateProfile, context) {\n    let activeRange = dateProfile ? dateProfile.activeRange : null; // need this check?\n    return fetchSourcesByIds(eventSources, excludeStaticSources(eventSources, context), activeRange, true, context);\n}\nfunction computeEventSourcesLoading(eventSources) {\n    for (let sourceId in eventSources) {\n        if (eventSources[sourceId].isFetching) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction addSources(eventSourceHash, sources, fetchRange, context) {\n    let hash = {};\n    for (let source of sources) {\n        hash[source.sourceId] = source;\n    }\n    if (fetchRange) {\n        hash = fetchDirtySources(hash, fetchRange, context);\n    }\n    return Object.assign(Object.assign({}, eventSourceHash), hash);\n}\nfunction removeSource(eventSourceHash, sourceId) {\n    return filterHash(eventSourceHash, (eventSource) => eventSource.sourceId !== sourceId);\n}\nfunction fetchDirtySources(sourceHash, fetchRange, context) {\n    return fetchSourcesByIds(sourceHash, filterHash(sourceHash, (eventSource) => isSourceDirty(eventSource, fetchRange, context)), fetchRange, false, context);\n}\nfunction isSourceDirty(eventSource, fetchRange, context) {\n    if (!doesSourceNeedRange(eventSource, context)) {\n        return !eventSource.latestFetchId;\n    }\n    return !context.options.lazyFetching ||\n        !eventSource.fetchRange ||\n        eventSource.isFetching || // always cancel outdated in-progress fetches\n        fetchRange.start < eventSource.fetchRange.start ||\n        fetchRange.end > eventSource.fetchRange.end;\n}\nfunction fetchSourcesByIds(prevSources, sourceIdHash, fetchRange, isRefetch, context) {\n    let nextSources = {};\n    for (let sourceId in prevSources) {\n        let source = prevSources[sourceId];\n        if (sourceIdHash[sourceId]) {\n            nextSources[sourceId] = fetchSource(source, fetchRange, isRefetch, context);\n        }\n        else {\n            nextSources[sourceId] = source;\n        }\n    }\n    return nextSources;\n}\nfunction fetchSource(eventSource, fetchRange, isRefetch, context) {\n    let { options, calendarApi } = context;\n    let sourceDef = context.pluginHooks.eventSourceDefs[eventSource.sourceDefId];\n    let fetchId = guid();\n    sourceDef.fetch({\n        eventSource,\n        range: fetchRange,\n        isRefetch,\n        context,\n    }, (res) => {\n        let { rawEvents } = res;\n        if (options.eventSourceSuccess) {\n            rawEvents = options.eventSourceSuccess.call(calendarApi, rawEvents, res.response) || rawEvents;\n        }\n        if (eventSource.success) {\n            rawEvents = eventSource.success.call(calendarApi, rawEvents, res.response) || rawEvents;\n        }\n        context.dispatch({\n            type: 'RECEIVE_EVENTS',\n            sourceId: eventSource.sourceId,\n            fetchId,\n            fetchRange,\n            rawEvents,\n        });\n    }, (error) => {\n        let errorHandled = false;\n        if (options.eventSourceFailure) {\n            options.eventSourceFailure.call(calendarApi, error);\n            errorHandled = true;\n        }\n        if (eventSource.failure) {\n            eventSource.failure(error);\n            errorHandled = true;\n        }\n        if (!errorHandled) {\n            console.warn(error.message, error);\n        }\n        context.dispatch({\n            type: 'RECEIVE_EVENT_ERROR',\n            sourceId: eventSource.sourceId,\n            fetchId,\n            fetchRange,\n            error,\n        });\n    });\n    return Object.assign(Object.assign({}, eventSource), { isFetching: true, latestFetchId: fetchId });\n}\nfunction receiveResponse(sourceHash, sourceId, fetchId, fetchRange) {\n    let eventSource = sourceHash[sourceId];\n    if (eventSource && // not already removed\n        fetchId === eventSource.latestFetchId) {\n        return Object.assign(Object.assign({}, sourceHash), { [sourceId]: Object.assign(Object.assign({}, eventSource), { isFetching: false, fetchRange }) });\n    }\n    return sourceHash;\n}\nfunction excludeStaticSources(eventSources, context) {\n    return filterHash(eventSources, (eventSource) => doesSourceNeedRange(eventSource, context));\n}\nfunction parseInitialSources(rawOptions, context) {\n    let refiners = buildEventSourceRefiners(context);\n    let rawSources = [].concat(rawOptions.eventSources || []);\n    let sources = []; // parsed\n    if (rawOptions.initialEvents) {\n        rawSources.unshift(rawOptions.initialEvents);\n    }\n    if (rawOptions.events) {\n        rawSources.unshift(rawOptions.events);\n    }\n    for (let rawSource of rawSources) {\n        let source = parseEventSource(rawSource, context, refiners);\n        if (source) {\n            sources.push(source);\n        }\n    }\n    return sources;\n}\nfunction doesSourceNeedRange(eventSource, context) {\n    let defs = context.pluginHooks.eventSourceDefs;\n    return !defs[eventSource.sourceDefId].ignoreRange;\n}\n\nfunction reduceEventStore(eventStore, action, eventSources, dateProfile, context) {\n    switch (action.type) {\n        case 'RECEIVE_EVENTS': // raw\n            return receiveRawEvents(eventStore, eventSources[action.sourceId], action.fetchId, action.fetchRange, action.rawEvents, context);\n        case 'ADD_EVENTS': // already parsed, but not expanded\n            return addEvent(eventStore, action.eventStore, // new ones\n            dateProfile ? dateProfile.activeRange : null, context);\n        case 'RESET_EVENTS':\n            return action.eventStore;\n        case 'MERGE_EVENTS': // already parsed and expanded\n            return mergeEventStores(eventStore, action.eventStore);\n        case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n        case 'NEXT':\n        case 'CHANGE_DATE':\n        case 'CHANGE_VIEW_TYPE':\n            if (dateProfile) {\n                return expandRecurring(eventStore, dateProfile.activeRange, context);\n            }\n            return eventStore;\n        case 'REMOVE_EVENTS':\n            return excludeSubEventStore(eventStore, action.eventStore);\n        case 'REMOVE_EVENT_SOURCE':\n            return excludeEventsBySourceId(eventStore, action.sourceId);\n        case 'REMOVE_ALL_EVENT_SOURCES':\n            return filterEventStoreDefs(eventStore, (eventDef) => (!eventDef.sourceId // only keep events with no source id\n            ));\n        case 'REMOVE_ALL_EVENTS':\n            return createEmptyEventStore();\n        default:\n            return eventStore;\n    }\n}\nfunction receiveRawEvents(eventStore, eventSource, fetchId, fetchRange, rawEvents, context) {\n    if (eventSource && // not already removed\n        fetchId === eventSource.latestFetchId // TODO: wish this logic was always in event-sources\n    ) {\n        let subset = parseEvents(transformRawEvents(rawEvents, eventSource, context), eventSource, context);\n        if (fetchRange) {\n            subset = expandRecurring(subset, fetchRange, context);\n        }\n        return mergeEventStores(excludeEventsBySourceId(eventStore, eventSource.sourceId), subset);\n    }\n    return eventStore;\n}\nfunction transformRawEvents(rawEvents, eventSource, context) {\n    let calEachTransform = context.options.eventDataTransform;\n    let sourceEachTransform = eventSource ? eventSource.eventDataTransform : null;\n    if (sourceEachTransform) {\n        rawEvents = transformEachRawEvent(rawEvents, sourceEachTransform);\n    }\n    if (calEachTransform) {\n        rawEvents = transformEachRawEvent(rawEvents, calEachTransform);\n    }\n    return rawEvents;\n}\nfunction transformEachRawEvent(rawEvents, func) {\n    let refinedEvents;\n    if (!func) {\n        refinedEvents = rawEvents;\n    }\n    else {\n        refinedEvents = [];\n        for (let rawEvent of rawEvents) {\n            let refinedEvent = func(rawEvent);\n            if (refinedEvent) {\n                refinedEvents.push(refinedEvent);\n            }\n            else if (refinedEvent == null) {\n                refinedEvents.push(rawEvent);\n            } // if a different falsy value, do nothing\n        }\n    }\n    return refinedEvents;\n}\nfunction addEvent(eventStore, subset, expandRange, context) {\n    if (expandRange) {\n        subset = expandRecurring(subset, expandRange, context);\n    }\n    return mergeEventStores(eventStore, subset);\n}\nfunction rezoneEventStoreDates(eventStore, oldDateEnv, newDateEnv) {\n    let { defs } = eventStore;\n    let instances = mapHash(eventStore.instances, (instance) => {\n        let def = defs[instance.defId];\n        if (def.allDay || def.recurringDef) {\n            return instance; // isn't dependent on timezone\n        }\n        return Object.assign(Object.assign({}, instance), { range: {\n                start: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.start, instance.forcedStartTzo)),\n                end: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.end, instance.forcedEndTzo)),\n            }, forcedStartTzo: newDateEnv.canComputeOffset ? null : instance.forcedStartTzo, forcedEndTzo: newDateEnv.canComputeOffset ? null : instance.forcedEndTzo });\n    });\n    return { defs, instances };\n}\nfunction excludeEventsBySourceId(eventStore, sourceId) {\n    return filterEventStoreDefs(eventStore, (eventDef) => eventDef.sourceId !== sourceId);\n}\n// QUESTION: why not just return instances? do a general object-property-exclusion util\nfunction excludeInstances(eventStore, removals) {\n    return {\n        defs: eventStore.defs,\n        instances: filterHash(eventStore.instances, (instance) => !removals[instance.instanceId]),\n    };\n}\n\nclass Emitter {\n    constructor() {\n        this.handlers = {};\n        this.thisContext = null;\n    }\n    setThisContext(thisContext) {\n        this.thisContext = thisContext;\n    }\n    setOptions(options) {\n        this.options = options;\n    }\n    on(type, handler) {\n        addToHash(this.handlers, type, handler);\n    }\n    off(type, handler) {\n        removeFromHash(this.handlers, type, handler);\n    }\n    trigger(type, ...args) {\n        let attachedHandlers = this.handlers[type] || [];\n        let optionHandler = this.options && this.options[type];\n        let handlers = [].concat(optionHandler || [], attachedHandlers);\n        for (let handler of handlers) {\n            handler.apply(this.thisContext, args);\n        }\n    }\n    hasHandlers(type) {\n        return Boolean((this.handlers[type] && this.handlers[type].length) ||\n            (this.options && this.options[type]));\n    }\n}\nfunction addToHash(hash, type, handler) {\n    (hash[type] || (hash[type] = []))\n        .push(handler);\n}\nfunction removeFromHash(hash, type, handler) {\n    if (handler) {\n        if (hash[type]) {\n            hash[type] = hash[type].filter((func) => func !== handler);\n        }\n    }\n    else {\n        delete hash[type]; // remove all handler funcs for this type\n    }\n}\n\nconst DEF_DEFAULTS = {\n    startTime: '09:00',\n    endTime: '17:00',\n    daysOfWeek: [1, 2, 3, 4, 5],\n    display: 'inverse-background',\n    classNames: 'fc-non-business',\n    groupId: '_businessHours', // so multiple defs get grouped\n};\n/*\nTODO: pass around as EventDefHash!!!\n*/\nfunction parseBusinessHours(input, context) {\n    return parseEvents(refineInputs(input), null, context);\n}\nfunction refineInputs(input) {\n    let rawDefs;\n    if (input === true) {\n        rawDefs = [{}]; // will get DEF_DEFAULTS verbatim\n    }\n    else if (Array.isArray(input)) {\n        // if specifying an array, every sub-definition NEEDS a day-of-week\n        rawDefs = input.filter((rawDef) => rawDef.daysOfWeek);\n    }\n    else if (typeof input === 'object' && input) { // non-null object\n        rawDefs = [input];\n    }\n    else { // is probably false\n        rawDefs = [];\n    }\n    rawDefs = rawDefs.map((rawDef) => (Object.assign(Object.assign({}, DEF_DEFAULTS), rawDef)));\n    return rawDefs;\n}\n\nlet eventSourceDef$2 = {\n    ignoreRange: true,\n    parseMeta(refined) {\n        if (Array.isArray(refined.events)) {\n            return refined.events;\n        }\n        return null;\n    },\n    fetch(arg, successCallback) {\n        successCallback({\n            rawEvents: arg.eventSource.meta,\n        });\n    },\n};\nconst arrayEventSourcePlugin = createPlugin({\n    name: 'array-event-source',\n    eventSourceDefs: [eventSourceDef$2],\n});\n\nfunction triggerDateSelect(selection, pev, context) {\n    context.emitter.trigger('select', Object.assign(Object.assign({}, buildDateSpanApiWithContext(selection, context)), { jsEvent: pev ? pev.origEvent : null, view: context.viewApi || context.calendarApi.view }));\n}\nfunction triggerDateUnselect(pev, context) {\n    context.emitter.trigger('unselect', {\n        jsEvent: pev ? pev.origEvent : null,\n        view: context.viewApi || context.calendarApi.view,\n    });\n}\nfunction buildDateSpanApiWithContext(dateSpan, context) {\n    let props = {};\n    for (let transform of context.pluginHooks.dateSpanTransforms) {\n        Object.assign(props, transform(dateSpan, context));\n    }\n    Object.assign(props, buildDateSpanApi(dateSpan, context.dateEnv));\n    return props;\n}\n// Given an event's allDay status and start date, return what its fallback end date should be.\n// TODO: rename to computeDefaultEventEnd\nfunction getDefaultEventEnd(allDay, marker, context) {\n    let { dateEnv, options } = context;\n    let end = marker;\n    if (allDay) {\n        end = startOfDay(end);\n        end = dateEnv.add(end, options.defaultAllDayEventDuration);\n    }\n    else {\n        end = dateEnv.add(end, options.defaultTimedEventDuration);\n    }\n    return end;\n}\n\n// applies the mutation to ALL defs/instances within the event store\nfunction applyMutationToEventStore(eventStore, eventConfigBase, mutation, context) {\n    let eventConfigs = compileEventUis(eventStore.defs, eventConfigBase);\n    let dest = createEmptyEventStore();\n    for (let defId in eventStore.defs) {\n        let def = eventStore.defs[defId];\n        dest.defs[defId] = applyMutationToEventDef(def, eventConfigs[defId], mutation, context);\n    }\n    for (let instanceId in eventStore.instances) {\n        let instance = eventStore.instances[instanceId];\n        let def = dest.defs[instance.defId]; // important to grab the newly modified def\n        dest.instances[instanceId] = applyMutationToEventInstance(instance, def, eventConfigs[instance.defId], mutation, context);\n    }\n    return dest;\n}\nfunction applyMutationToEventDef(eventDef, eventConfig, mutation, context) {\n    let standardProps = mutation.standardProps || {};\n    // if hasEnd has not been specified, guess a good value based on deltas.\n    // if duration will change, there's no way the default duration will persist,\n    // and thus, we need to mark the event as having a real end\n    if (standardProps.hasEnd == null &&\n        eventConfig.durationEditable &&\n        (mutation.startDelta || mutation.endDelta)) {\n        standardProps.hasEnd = true; // TODO: is this mutation okay?\n    }\n    let copy = Object.assign(Object.assign(Object.assign({}, eventDef), standardProps), { ui: Object.assign(Object.assign({}, eventDef.ui), standardProps.ui) });\n    if (mutation.extendedProps) {\n        copy.extendedProps = Object.assign(Object.assign({}, copy.extendedProps), mutation.extendedProps);\n    }\n    for (let applier of context.pluginHooks.eventDefMutationAppliers) {\n        applier(copy, mutation, context);\n    }\n    if (!copy.hasEnd && context.options.forceEventDuration) {\n        copy.hasEnd = true;\n    }\n    return copy;\n}\nfunction applyMutationToEventInstance(eventInstance, eventDef, // must first be modified by applyMutationToEventDef\neventConfig, mutation, context) {\n    let { dateEnv } = context;\n    let forceAllDay = mutation.standardProps && mutation.standardProps.allDay === true;\n    let clearEnd = mutation.standardProps && mutation.standardProps.hasEnd === false;\n    let copy = Object.assign({}, eventInstance);\n    if (forceAllDay) {\n        copy.range = computeAlignedDayRange(copy.range);\n    }\n    if (mutation.datesDelta && eventConfig.startEditable) {\n        copy.range = {\n            start: dateEnv.add(copy.range.start, mutation.datesDelta),\n            end: dateEnv.add(copy.range.end, mutation.datesDelta),\n        };\n    }\n    if (mutation.startDelta && eventConfig.durationEditable) {\n        copy.range = {\n            start: dateEnv.add(copy.range.start, mutation.startDelta),\n            end: copy.range.end,\n        };\n    }\n    if (mutation.endDelta && eventConfig.durationEditable) {\n        copy.range = {\n            start: copy.range.start,\n            end: dateEnv.add(copy.range.end, mutation.endDelta),\n        };\n    }\n    if (clearEnd) {\n        copy.range = {\n            start: copy.range.start,\n            end: getDefaultEventEnd(eventDef.allDay, copy.range.start, context),\n        };\n    }\n    // in case event was all-day but the supplied deltas were not\n    // better util for this?\n    if (eventDef.allDay) {\n        copy.range = {\n            start: startOfDay(copy.range.start),\n            end: startOfDay(copy.range.end),\n        };\n    }\n    // handle invalid durations\n    if (copy.range.end < copy.range.start) {\n        copy.range.end = getDefaultEventEnd(eventDef.allDay, copy.range.start, context);\n    }\n    return copy;\n}\n\nclass EventSourceImpl {\n    constructor(context, internalEventSource) {\n        this.context = context;\n        this.internalEventSource = internalEventSource;\n    }\n    remove() {\n        this.context.dispatch({\n            type: 'REMOVE_EVENT_SOURCE',\n            sourceId: this.internalEventSource.sourceId,\n        });\n    }\n    refetch() {\n        this.context.dispatch({\n            type: 'FETCH_EVENT_SOURCES',\n            sourceIds: [this.internalEventSource.sourceId],\n            isRefetch: true,\n        });\n    }\n    get id() {\n        return this.internalEventSource.publicId;\n    }\n    get url() {\n        return this.internalEventSource.meta.url;\n    }\n    get format() {\n        return this.internalEventSource.meta.format; // TODO: bad. not guaranteed\n    }\n}\n\nclass EventImpl {\n    // instance will be null if expressing a recurring event that has no current instances,\n    // OR if trying to validate an incoming external event that has no dates assigned\n    constructor(context, def, instance) {\n        this._context = context;\n        this._def = def;\n        this._instance = instance || null;\n    }\n    /*\n    TODO: make event struct more responsible for this\n    */\n    setProp(name, val) {\n        if (name in EVENT_DATE_REFINERS) {\n            console.warn('Could not set date-related prop \\'name\\'. Use one of the date-related methods instead.');\n            // TODO: make proper aliasing system?\n        }\n        else if (name === 'id') {\n            val = EVENT_NON_DATE_REFINERS[name](val);\n            this.mutate({\n                standardProps: { publicId: val }, // hardcoded internal name\n            });\n        }\n        else if (name in EVENT_NON_DATE_REFINERS) {\n            val = EVENT_NON_DATE_REFINERS[name](val);\n            this.mutate({\n                standardProps: { [name]: val },\n            });\n        }\n        else if (name in EVENT_UI_REFINERS) {\n            let ui = EVENT_UI_REFINERS[name](val);\n            if (name === 'color') {\n                ui = { backgroundColor: val, borderColor: val };\n            }\n            else if (name === 'editable') {\n                ui = { startEditable: val, durationEditable: val };\n            }\n            else {\n                ui = { [name]: val };\n            }\n            this.mutate({\n                standardProps: { ui },\n            });\n        }\n        else {\n            console.warn(`Could not set prop '${name}'. Use setExtendedProp instead.`);\n        }\n    }\n    setExtendedProp(name, val) {\n        this.mutate({\n            extendedProps: { [name]: val },\n        });\n    }\n    setStart(startInput, options = {}) {\n        let { dateEnv } = this._context;\n        let start = dateEnv.createMarker(startInput);\n        if (start && this._instance) { // TODO: warning if parsed bad\n            let instanceRange = this._instance.range;\n            let startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity); // what if parsed bad!?\n            if (options.maintainDuration) {\n                this.mutate({ datesDelta: startDelta });\n            }\n            else {\n                this.mutate({ startDelta });\n            }\n        }\n    }\n    setEnd(endInput, options = {}) {\n        let { dateEnv } = this._context;\n        let end;\n        if (endInput != null) {\n            end = dateEnv.createMarker(endInput);\n            if (!end) {\n                return; // TODO: warning if parsed bad\n            }\n        }\n        if (this._instance) {\n            if (end) {\n                let endDelta = diffDates(this._instance.range.end, end, dateEnv, options.granularity);\n                this.mutate({ endDelta });\n            }\n            else {\n                this.mutate({ standardProps: { hasEnd: false } });\n            }\n        }\n    }\n    setDates(startInput, endInput, options = {}) {\n        let { dateEnv } = this._context;\n        let standardProps = { allDay: options.allDay };\n        let start = dateEnv.createMarker(startInput);\n        let end;\n        if (!start) {\n            return; // TODO: warning if parsed bad\n        }\n        if (endInput != null) {\n            end = dateEnv.createMarker(endInput);\n            if (!end) { // TODO: warning if parsed bad\n                return;\n            }\n        }\n        if (this._instance) {\n            let instanceRange = this._instance.range;\n            // when computing the diff for an event being converted to all-day,\n            // compute diff off of the all-day values the way event-mutation does.\n            if (options.allDay === true) {\n                instanceRange = computeAlignedDayRange(instanceRange);\n            }\n            let startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity);\n            if (end) {\n                let endDelta = diffDates(instanceRange.end, end, dateEnv, options.granularity);\n                if (durationsEqual(startDelta, endDelta)) {\n                    this.mutate({ datesDelta: startDelta, standardProps });\n                }\n                else {\n                    this.mutate({ startDelta, endDelta, standardProps });\n                }\n            }\n            else { // means \"clear the end\"\n                standardProps.hasEnd = false;\n                this.mutate({ datesDelta: startDelta, standardProps });\n            }\n        }\n    }\n    moveStart(deltaInput) {\n        let delta = createDuration(deltaInput);\n        if (delta) { // TODO: warning if parsed bad\n            this.mutate({ startDelta: delta });\n        }\n    }\n    moveEnd(deltaInput) {\n        let delta = createDuration(deltaInput);\n        if (delta) { // TODO: warning if parsed bad\n            this.mutate({ endDelta: delta });\n        }\n    }\n    moveDates(deltaInput) {\n        let delta = createDuration(deltaInput);\n        if (delta) { // TODO: warning if parsed bad\n            this.mutate({ datesDelta: delta });\n        }\n    }\n    setAllDay(allDay, options = {}) {\n        let standardProps = { allDay };\n        let { maintainDuration } = options;\n        if (maintainDuration == null) {\n            maintainDuration = this._context.options.allDayMaintainDuration;\n        }\n        if (this._def.allDay !== allDay) {\n            standardProps.hasEnd = maintainDuration;\n        }\n        this.mutate({ standardProps });\n    }\n    formatRange(formatInput) {\n        let { dateEnv } = this._context;\n        let instance = this._instance;\n        let formatter = createFormatter(formatInput);\n        if (this._def.hasEnd) {\n            return dateEnv.formatRange(instance.range.start, instance.range.end, formatter, {\n                forcedStartTzo: instance.forcedStartTzo,\n                forcedEndTzo: instance.forcedEndTzo,\n            });\n        }\n        return dateEnv.format(instance.range.start, formatter, {\n            forcedTzo: instance.forcedStartTzo,\n        });\n    }\n    mutate(mutation) {\n        let instance = this._instance;\n        if (instance) {\n            let def = this._def;\n            let context = this._context;\n            let { eventStore } = context.getCurrentData();\n            let relevantEvents = getRelevantEvents(eventStore, instance.instanceId);\n            let eventConfigBase = {\n                '': {\n                    display: '',\n                    startEditable: true,\n                    durationEditable: true,\n                    constraints: [],\n                    overlap: null,\n                    allows: [],\n                    backgroundColor: '',\n                    borderColor: '',\n                    textColor: '',\n                    classNames: [],\n                },\n            };\n            relevantEvents = applyMutationToEventStore(relevantEvents, eventConfigBase, mutation, context);\n            let oldEvent = new EventImpl(context, def, instance); // snapshot\n            this._def = relevantEvents.defs[def.defId];\n            this._instance = relevantEvents.instances[instance.instanceId];\n            context.dispatch({\n                type: 'MERGE_EVENTS',\n                eventStore: relevantEvents,\n            });\n            context.emitter.trigger('eventChange', {\n                oldEvent,\n                event: this,\n                relatedEvents: buildEventApis(relevantEvents, context, instance),\n                revert() {\n                    context.dispatch({\n                        type: 'RESET_EVENTS',\n                        eventStore, // the ORIGINAL store\n                    });\n                },\n            });\n        }\n    }\n    remove() {\n        let context = this._context;\n        let asStore = eventApiToStore(this);\n        context.dispatch({\n            type: 'REMOVE_EVENTS',\n            eventStore: asStore,\n        });\n        context.emitter.trigger('eventRemove', {\n            event: this,\n            relatedEvents: [],\n            revert() {\n                context.dispatch({\n                    type: 'MERGE_EVENTS',\n                    eventStore: asStore,\n                });\n            },\n        });\n    }\n    get source() {\n        let { sourceId } = this._def;\n        if (sourceId) {\n            return new EventSourceImpl(this._context, this._context.getCurrentData().eventSources[sourceId]);\n        }\n        return null;\n    }\n    get start() {\n        return this._instance ?\n            this._context.dateEnv.toDate(this._instance.range.start) :\n            null;\n    }\n    get end() {\n        return (this._instance && this._def.hasEnd) ?\n            this._context.dateEnv.toDate(this._instance.range.end) :\n            null;\n    }\n    get startStr() {\n        let instance = this._instance;\n        if (instance) {\n            return this._context.dateEnv.formatIso(instance.range.start, {\n                omitTime: this._def.allDay,\n                forcedTzo: instance.forcedStartTzo,\n            });\n        }\n        return '';\n    }\n    get endStr() {\n        let instance = this._instance;\n        if (instance && this._def.hasEnd) {\n            return this._context.dateEnv.formatIso(instance.range.end, {\n                omitTime: this._def.allDay,\n                forcedTzo: instance.forcedEndTzo,\n            });\n        }\n        return '';\n    }\n    // computable props that all access the def\n    // TODO: find a TypeScript-compatible way to do this at scale\n    get id() { return this._def.publicId; }\n    get groupId() { return this._def.groupId; }\n    get allDay() { return this._def.allDay; }\n    get title() { return this._def.title; }\n    get url() { return this._def.url; }\n    get display() { return this._def.ui.display || 'auto'; } // bad. just normalize the type earlier\n    get startEditable() { return this._def.ui.startEditable; }\n    get durationEditable() { return this._def.ui.durationEditable; }\n    get constraint() { return this._def.ui.constraints[0] || null; }\n    get overlap() { return this._def.ui.overlap; }\n    get allow() { return this._def.ui.allows[0] || null; }\n    get backgroundColor() { return this._def.ui.backgroundColor; }\n    get borderColor() { return this._def.ui.borderColor; }\n    get textColor() { return this._def.ui.textColor; }\n    // NOTE: user can't modify these because Object.freeze was called in event-def parsing\n    get classNames() { return this._def.ui.classNames; }\n    get extendedProps() { return this._def.extendedProps; }\n    toPlainObject(settings = {}) {\n        let def = this._def;\n        let { ui } = def;\n        let { startStr, endStr } = this;\n        let res = {};\n        if (def.title) {\n            res.title = def.title;\n        }\n        if (startStr) {\n            res.start = startStr;\n        }\n        if (endStr) {\n            res.end = endStr;\n        }\n        if (def.publicId) {\n            res.id = def.publicId;\n        }\n        if (def.groupId) {\n            res.groupId = def.groupId;\n        }\n        if (def.url) {\n            res.url = def.url;\n        }\n        if (ui.display && ui.display !== 'auto') {\n            res.display = ui.display;\n        }\n        // TODO: what about recurring-event properties???\n        // TODO: include startEditable/durationEditable/constraint/overlap/allow\n        if (settings.collapseColor && ui.backgroundColor && ui.backgroundColor === ui.borderColor) {\n            res.color = ui.backgroundColor;\n        }\n        else {\n            if (ui.backgroundColor) {\n                res.backgroundColor = ui.backgroundColor;\n            }\n            if (ui.borderColor) {\n                res.borderColor = ui.borderColor;\n            }\n        }\n        if (ui.textColor) {\n            res.textColor = ui.textColor;\n        }\n        if (ui.classNames.length) {\n            res.classNames = ui.classNames;\n        }\n        if (Object.keys(def.extendedProps).length) {\n            if (settings.collapseExtendedProps) {\n                Object.assign(res, def.extendedProps);\n            }\n            else {\n                res.extendedProps = def.extendedProps;\n            }\n        }\n        return res;\n    }\n    toJSON() {\n        return this.toPlainObject();\n    }\n}\nfunction eventApiToStore(eventApi) {\n    let def = eventApi._def;\n    let instance = eventApi._instance;\n    return {\n        defs: { [def.defId]: def },\n        instances: instance\n            ? { [instance.instanceId]: instance }\n            : {},\n    };\n}\nfunction buildEventApis(eventStore, context, excludeInstance) {\n    let { defs, instances } = eventStore;\n    let eventApis = [];\n    let excludeInstanceId = excludeInstance ? excludeInstance.instanceId : '';\n    for (let id in instances) {\n        let instance = instances[id];\n        let def = defs[instance.defId];\n        if (instance.instanceId !== excludeInstanceId) {\n            eventApis.push(new EventImpl(context, def, instance));\n        }\n    }\n    return eventApis;\n}\n\n/*\nSpecifying nextDayThreshold signals that all-day ranges should be sliced.\n*/\nfunction sliceEventStore(eventStore, eventUiBases, framingRange, nextDayThreshold) {\n    let inverseBgByGroupId = {};\n    let inverseBgByDefId = {};\n    let defByGroupId = {};\n    let bgRanges = [];\n    let fgRanges = [];\n    let eventUis = compileEventUis(eventStore.defs, eventUiBases);\n    for (let defId in eventStore.defs) {\n        let def = eventStore.defs[defId];\n        let ui = eventUis[def.defId];\n        if (ui.display === 'inverse-background') {\n            if (def.groupId) {\n                inverseBgByGroupId[def.groupId] = [];\n                if (!defByGroupId[def.groupId]) {\n                    defByGroupId[def.groupId] = def;\n                }\n            }\n            else {\n                inverseBgByDefId[defId] = [];\n            }\n        }\n    }\n    for (let instanceId in eventStore.instances) {\n        let instance = eventStore.instances[instanceId];\n        let def = eventStore.defs[instance.defId];\n        let ui = eventUis[def.defId];\n        let origRange = instance.range;\n        let normalRange = (!def.allDay && nextDayThreshold) ?\n            computeVisibleDayRange(origRange, nextDayThreshold) :\n            origRange;\n        let slicedRange = intersectRanges(normalRange, framingRange);\n        if (slicedRange) {\n            if (ui.display === 'inverse-background') {\n                if (def.groupId) {\n                    inverseBgByGroupId[def.groupId].push(slicedRange);\n                }\n                else {\n                    inverseBgByDefId[instance.defId].push(slicedRange);\n                }\n            }\n            else if (ui.display !== 'none') {\n                (ui.display === 'background' ? bgRanges : fgRanges).push({\n                    def,\n                    ui,\n                    instance,\n                    range: slicedRange,\n                    isStart: normalRange.start && normalRange.start.valueOf() === slicedRange.start.valueOf(),\n                    isEnd: normalRange.end && normalRange.end.valueOf() === slicedRange.end.valueOf(),\n                });\n            }\n        }\n    }\n    for (let groupId in inverseBgByGroupId) { // BY GROUP\n        let ranges = inverseBgByGroupId[groupId];\n        let invertedRanges = invertRanges(ranges, framingRange);\n        for (let invertedRange of invertedRanges) {\n            let def = defByGroupId[groupId];\n            let ui = eventUis[def.defId];\n            bgRanges.push({\n                def,\n                ui,\n                instance: null,\n                range: invertedRange,\n                isStart: false,\n                isEnd: false,\n            });\n        }\n    }\n    for (let defId in inverseBgByDefId) {\n        let ranges = inverseBgByDefId[defId];\n        let invertedRanges = invertRanges(ranges, framingRange);\n        for (let invertedRange of invertedRanges) {\n            bgRanges.push({\n                def: eventStore.defs[defId],\n                ui: eventUis[defId],\n                instance: null,\n                range: invertedRange,\n                isStart: false,\n                isEnd: false,\n            });\n        }\n    }\n    return { bg: bgRanges, fg: fgRanges };\n}\nfunction hasBgRendering(def) {\n    return def.ui.display === 'background' || def.ui.display === 'inverse-background';\n}\nfunction setElSeg(el, seg) {\n    el.fcSeg = seg;\n}\nfunction getElSeg(el) {\n    return el.fcSeg ||\n        el.parentNode.fcSeg || // for the harness\n        null;\n}\n// event ui computation\nfunction compileEventUis(eventDefs, eventUiBases) {\n    return mapHash(eventDefs, (eventDef) => compileEventUi(eventDef, eventUiBases));\n}\nfunction compileEventUi(eventDef, eventUiBases) {\n    let uis = [];\n    if (eventUiBases['']) {\n        uis.push(eventUiBases['']);\n    }\n    if (eventUiBases[eventDef.defId]) {\n        uis.push(eventUiBases[eventDef.defId]);\n    }\n    uis.push(eventDef.ui);\n    return combineEventUis(uis);\n}\nfunction sortEventSegs(segs, eventOrderSpecs) {\n    let objs = segs.map(buildSegCompareObj);\n    objs.sort((obj0, obj1) => compareByFieldSpecs(obj0, obj1, eventOrderSpecs));\n    return objs.map((c) => c._seg);\n}\n// returns a object with all primitive props that can be compared\nfunction buildSegCompareObj(seg) {\n    let { eventRange } = seg;\n    let eventDef = eventRange.def;\n    let range = eventRange.instance ? eventRange.instance.range : eventRange.range;\n    let start = range.start ? range.start.valueOf() : 0; // TODO: better support for open-range events\n    let end = range.end ? range.end.valueOf() : 0; // \"\n    return Object.assign(Object.assign(Object.assign({}, eventDef.extendedProps), eventDef), { id: eventDef.publicId, start,\n        end, duration: end - start, allDay: Number(eventDef.allDay), _seg: seg });\n}\nfunction computeSegDraggable(seg, context) {\n    let { pluginHooks } = context;\n    let transformers = pluginHooks.isDraggableTransformers;\n    let { def, ui } = seg.eventRange;\n    let val = ui.startEditable;\n    for (let transformer of transformers) {\n        val = transformer(val, def, ui, context);\n    }\n    return val;\n}\nfunction computeSegStartResizable(seg, context) {\n    return seg.isStart && seg.eventRange.ui.durationEditable && context.options.eventResizableFromStart;\n}\nfunction computeSegEndResizable(seg, context) {\n    return seg.isEnd && seg.eventRange.ui.durationEditable;\n}\nfunction buildSegTimeText(seg, timeFormat, context, defaultDisplayEventTime, // defaults to true\ndefaultDisplayEventEnd, // defaults to true\nstartOverride, endOverride) {\n    let { dateEnv, options } = context;\n    let { displayEventTime, displayEventEnd } = options;\n    let eventDef = seg.eventRange.def;\n    let eventInstance = seg.eventRange.instance;\n    if (displayEventTime == null) {\n        displayEventTime = defaultDisplayEventTime !== false;\n    }\n    if (displayEventEnd == null) {\n        displayEventEnd = defaultDisplayEventEnd !== false;\n    }\n    let wholeEventStart = eventInstance.range.start;\n    let wholeEventEnd = eventInstance.range.end;\n    let segStart = startOverride || seg.start || seg.eventRange.range.start;\n    let segEnd = endOverride || seg.end || seg.eventRange.range.end;\n    let isStartDay = startOfDay(wholeEventStart).valueOf() === startOfDay(segStart).valueOf();\n    let isEndDay = startOfDay(addMs(wholeEventEnd, -1)).valueOf() === startOfDay(addMs(segEnd, -1)).valueOf();\n    if (displayEventTime && !eventDef.allDay && (isStartDay || isEndDay)) {\n        segStart = isStartDay ? wholeEventStart : segStart;\n        segEnd = isEndDay ? wholeEventEnd : segEnd;\n        if (displayEventEnd && eventDef.hasEnd) {\n            return dateEnv.formatRange(segStart, segEnd, timeFormat, {\n                forcedStartTzo: startOverride ? null : eventInstance.forcedStartTzo,\n                forcedEndTzo: endOverride ? null : eventInstance.forcedEndTzo,\n            });\n        }\n        return dateEnv.format(segStart, timeFormat, {\n            forcedTzo: startOverride ? null : eventInstance.forcedStartTzo, // nooooo, same\n        });\n    }\n    return '';\n}\nfunction getSegMeta(seg, todayRange, nowDate) {\n    let segRange = seg.eventRange.range;\n    return {\n        isPast: segRange.end < (nowDate || todayRange.start),\n        isFuture: segRange.start >= (nowDate || todayRange.end),\n        isToday: todayRange && rangeContainsMarker(todayRange, segRange.start),\n    };\n}\nfunction getEventClassNames(props) {\n    let classNames = ['fc-event'];\n    if (props.isMirror) {\n        classNames.push('fc-event-mirror');\n    }\n    if (props.isDraggable) {\n        classNames.push('fc-event-draggable');\n    }\n    if (props.isStartResizable || props.isEndResizable) {\n        classNames.push('fc-event-resizable');\n    }\n    if (props.isDragging) {\n        classNames.push('fc-event-dragging');\n    }\n    if (props.isResizing) {\n        classNames.push('fc-event-resizing');\n    }\n    if (props.isSelected) {\n        classNames.push('fc-event-selected');\n    }\n    if (props.isStart) {\n        classNames.push('fc-event-start');\n    }\n    if (props.isEnd) {\n        classNames.push('fc-event-end');\n    }\n    if (props.isPast) {\n        classNames.push('fc-event-past');\n    }\n    if (props.isToday) {\n        classNames.push('fc-event-today');\n    }\n    if (props.isFuture) {\n        classNames.push('fc-event-future');\n    }\n    return classNames;\n}\nfunction buildEventRangeKey(eventRange) {\n    return eventRange.instance\n        ? eventRange.instance.instanceId\n        : `${eventRange.def.defId}:${eventRange.range.start.toISOString()}`;\n    // inverse-background events don't have specific instances. TODO: better solution\n}\nfunction getSegAnchorAttrs(seg, context) {\n    let { def, instance } = seg.eventRange;\n    let { url } = def;\n    if (url) {\n        return { href: url };\n    }\n    let { emitter, options } = context;\n    let { eventInteractive } = options;\n    if (eventInteractive == null) {\n        eventInteractive = def.interactive;\n        if (eventInteractive == null) {\n            eventInteractive = Boolean(emitter.hasHandlers('eventClick'));\n        }\n    }\n    // mock what happens in EventClicking\n    if (eventInteractive) {\n        // only attach keyboard-related handlers because click handler is already done in EventClicking\n        return createAriaKeyboardAttrs((ev) => {\n            emitter.trigger('eventClick', {\n                el: ev.target,\n                event: new EventImpl(context, def, instance),\n                jsEvent: ev,\n                view: context.viewApi,\n            });\n        });\n    }\n    return {};\n}\n\nconst STANDARD_PROPS = {\n    start: identity,\n    end: identity,\n    allDay: Boolean,\n};\nfunction parseDateSpan(raw, dateEnv, defaultDuration) {\n    let span = parseOpenDateSpan(raw, dateEnv);\n    let { range } = span;\n    if (!range.start) {\n        return null;\n    }\n    if (!range.end) {\n        if (defaultDuration == null) {\n            return null;\n        }\n        range.end = dateEnv.add(range.start, defaultDuration);\n    }\n    return span;\n}\n/*\nTODO: somehow combine with parseRange?\nWill return null if the start/end props were present but parsed invalidly.\n*/\nfunction parseOpenDateSpan(raw, dateEnv) {\n    let { refined: standardProps, extra } = refineProps(raw, STANDARD_PROPS);\n    let startMeta = standardProps.start ? dateEnv.createMarkerMeta(standardProps.start) : null;\n    let endMeta = standardProps.end ? dateEnv.createMarkerMeta(standardProps.end) : null;\n    let { allDay } = standardProps;\n    if (allDay == null) {\n        allDay = (startMeta && startMeta.isTimeUnspecified) &&\n            (!endMeta || endMeta.isTimeUnspecified);\n    }\n    return Object.assign({ range: {\n            start: startMeta ? startMeta.marker : null,\n            end: endMeta ? endMeta.marker : null,\n        }, allDay }, extra);\n}\nfunction isDateSpansEqual(span0, span1) {\n    return rangesEqual(span0.range, span1.range) &&\n        span0.allDay === span1.allDay &&\n        isSpanPropsEqual(span0, span1);\n}\n// the NON-DATE-RELATED props\nfunction isSpanPropsEqual(span0, span1) {\n    for (let propName in span1) {\n        if (propName !== 'range' && propName !== 'allDay') {\n            if (span0[propName] !== span1[propName]) {\n                return false;\n            }\n        }\n    }\n    // are there any props that span0 has that span1 DOESN'T have?\n    // both have range/allDay, so no need to special-case.\n    for (let propName in span0) {\n        if (!(propName in span1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction buildDateSpanApi(span, dateEnv) {\n    return Object.assign(Object.assign({}, buildRangeApi(span.range, dateEnv, span.allDay)), { allDay: span.allDay });\n}\nfunction buildRangeApiWithTimeZone(range, dateEnv, omitTime) {\n    return Object.assign(Object.assign({}, buildRangeApi(range, dateEnv, omitTime)), { timeZone: dateEnv.timeZone });\n}\nfunction buildRangeApi(range, dateEnv, omitTime) {\n    return {\n        start: dateEnv.toDate(range.start),\n        end: dateEnv.toDate(range.end),\n        startStr: dateEnv.formatIso(range.start, { omitTime }),\n        endStr: dateEnv.formatIso(range.end, { omitTime }),\n    };\n}\nfunction fabricateEventRange(dateSpan, eventUiBases, context) {\n    let res = refineEventDef({ editable: false }, context);\n    let def = parseEventDef(res.refined, res.extra, '', // sourceId\n    dateSpan.allDay, true, // hasEnd\n    context);\n    return {\n        def,\n        ui: compileEventUi(def, eventUiBases),\n        instance: createEventInstance(def.defId, dateSpan.range),\n        range: dateSpan.range,\n        isStart: true,\n        isEnd: true,\n    };\n}\n\n/*\ngiven a function that resolves a result asynchronously.\nthe function can either call passed-in success and failure callbacks,\nor it can return a promise.\nif you need to pass additional params to func, bind them first.\n*/\nfunction unpromisify(func, normalizedSuccessCallback, normalizedFailureCallback) {\n    // guard against success/failure callbacks being called more than once\n    // and guard against a promise AND callback being used together.\n    let isResolved = false;\n    let wrappedSuccess = function (res) {\n        if (!isResolved) {\n            isResolved = true;\n            normalizedSuccessCallback(res);\n        }\n    };\n    let wrappedFailure = function (error) {\n        if (!isResolved) {\n            isResolved = true;\n            normalizedFailureCallback(error);\n        }\n    };\n    let res = func(wrappedSuccess, wrappedFailure);\n    if (res && typeof res.then === 'function') {\n        res.then(wrappedSuccess, wrappedFailure);\n    }\n}\n\nlet eventSourceDef$1 = {\n    parseMeta(refined) {\n        if (typeof refined.events === 'function') {\n            return refined.events;\n        }\n        return null;\n    },\n    fetch(arg, successCallback, errorCallback) {\n        const { dateEnv } = arg.context;\n        const func = arg.eventSource.meta;\n        unpromisify(func.bind(null, buildRangeApiWithTimeZone(arg.range, dateEnv)), (rawEvents) => successCallback({ rawEvents }), errorCallback);\n    },\n};\nconst funcEventSourcePlugin = createPlugin({\n    name: 'func-event-source',\n    eventSourceDefs: [eventSourceDef$1],\n});\n\nclass JsonRequestError extends Error {\n    constructor(message, response) {\n        super(message);\n        this.response = response;\n    }\n}\nfunction requestJson(method, url, params) {\n    method = method.toUpperCase();\n    const fetchOptions = {\n        method,\n    };\n    if (method === 'GET') {\n        url += (url.indexOf('?') === -1 ? '?' : '&') +\n            new URLSearchParams(params);\n    }\n    else {\n        fetchOptions.body = new URLSearchParams(params);\n        fetchOptions.headers = {\n            'Content-Type': 'application/x-www-form-urlencoded',\n        };\n    }\n    return fetch(url, fetchOptions).then((fetchRes) => {\n        if (fetchRes.ok) {\n            return fetchRes.json().then((parsedResponse) => {\n                return [parsedResponse, fetchRes];\n            }, () => {\n                throw new JsonRequestError('Failure parsing JSON', fetchRes);\n            });\n        }\n        else {\n            throw new JsonRequestError('Request failed', fetchRes);\n        }\n    });\n}\n\nconst JSON_FEED_EVENT_SOURCE_REFINERS = {\n    method: String,\n    extraParams: identity,\n    startParam: String,\n    endParam: String,\n    timeZoneParam: String,\n};\n\nlet eventSourceDef = {\n    parseMeta(refined) {\n        if (refined.url && (refined.format === 'json' || !refined.format)) {\n            return {\n                url: refined.url,\n                format: 'json',\n                method: (refined.method || 'GET').toUpperCase(),\n                extraParams: refined.extraParams,\n                startParam: refined.startParam,\n                endParam: refined.endParam,\n                timeZoneParam: refined.timeZoneParam,\n            };\n        }\n        return null;\n    },\n    fetch(arg, successCallback, errorCallback) {\n        const { meta } = arg.eventSource;\n        const requestParams = buildRequestParams(meta, arg.range, arg.context);\n        requestJson(meta.method, meta.url, requestParams).then(([rawEvents, response]) => {\n            successCallback({ rawEvents, response });\n        }, errorCallback);\n    },\n};\nconst jsonFeedEventSourcePlugin = createPlugin({\n    name: 'json-event-source',\n    eventSourceRefiners: JSON_FEED_EVENT_SOURCE_REFINERS,\n    eventSourceDefs: [eventSourceDef],\n});\nfunction buildRequestParams(meta, range, context) {\n    let { dateEnv, options } = context;\n    let startParam;\n    let endParam;\n    let timeZoneParam;\n    let customRequestParams;\n    let params = {};\n    startParam = meta.startParam;\n    if (startParam == null) {\n        startParam = options.startParam;\n    }\n    endParam = meta.endParam;\n    if (endParam == null) {\n        endParam = options.endParam;\n    }\n    timeZoneParam = meta.timeZoneParam;\n    if (timeZoneParam == null) {\n        timeZoneParam = options.timeZoneParam;\n    }\n    // retrieve any outbound GET/POST data from the options\n    if (typeof meta.extraParams === 'function') {\n        // supplied as a function that returns a key/value object\n        customRequestParams = meta.extraParams();\n    }\n    else {\n        // probably supplied as a straight key/value object\n        customRequestParams = meta.extraParams || {};\n    }\n    Object.assign(params, customRequestParams);\n    params[startParam] = dateEnv.formatIso(range.start);\n    params[endParam] = dateEnv.formatIso(range.end);\n    if (dateEnv.timeZone !== 'local') {\n        params[timeZoneParam] = dateEnv.timeZone;\n    }\n    return params;\n}\n\nconst SIMPLE_RECURRING_REFINERS = {\n    daysOfWeek: identity,\n    startTime: createDuration,\n    endTime: createDuration,\n    duration: createDuration,\n    startRecur: identity,\n    endRecur: identity,\n};\n\nlet recurring = {\n    parse(refined, dateEnv) {\n        if (refined.daysOfWeek || refined.startTime || refined.endTime || refined.startRecur || refined.endRecur) {\n            let recurringData = {\n                daysOfWeek: refined.daysOfWeek || null,\n                startTime: refined.startTime || null,\n                endTime: refined.endTime || null,\n                startRecur: refined.startRecur ? dateEnv.createMarker(refined.startRecur) : null,\n                endRecur: refined.endRecur ? dateEnv.createMarker(refined.endRecur) : null,\n            };\n            let duration;\n            if (refined.duration) {\n                duration = refined.duration;\n            }\n            if (!duration && refined.startTime && refined.endTime) {\n                duration = subtractDurations(refined.endTime, refined.startTime);\n            }\n            return {\n                allDayGuess: Boolean(!refined.startTime && !refined.endTime),\n                duration,\n                typeData: recurringData, // doesn't need endTime anymore but oh well\n            };\n        }\n        return null;\n    },\n    expand(typeData, framingRange, dateEnv) {\n        let clippedFramingRange = intersectRanges(framingRange, { start: typeData.startRecur, end: typeData.endRecur });\n        if (clippedFramingRange) {\n            return expandRanges(typeData.daysOfWeek, typeData.startTime, clippedFramingRange, dateEnv);\n        }\n        return [];\n    },\n};\nconst simpleRecurringEventsPlugin = createPlugin({\n    name: 'simple-recurring-event',\n    recurringTypes: [recurring],\n    eventRefiners: SIMPLE_RECURRING_REFINERS,\n});\nfunction expandRanges(daysOfWeek, startTime, framingRange, dateEnv) {\n    let dowHash = daysOfWeek ? arrayToHash(daysOfWeek) : null;\n    let dayMarker = startOfDay(framingRange.start);\n    let endMarker = framingRange.end;\n    let instanceStarts = [];\n    while (dayMarker < endMarker) {\n        let instanceStart;\n        // if everyday, or this particular day-of-week\n        if (!dowHash || dowHash[dayMarker.getUTCDay()]) {\n            if (startTime) {\n                instanceStart = dateEnv.add(dayMarker, startTime);\n            }\n            else {\n                instanceStart = dayMarker;\n            }\n            instanceStarts.push(instanceStart);\n        }\n        dayMarker = addDays(dayMarker, 1);\n    }\n    return instanceStarts;\n}\n\nconst changeHandlerPlugin = createPlugin({\n    name: 'change-handler',\n    optionChangeHandlers: {\n        events(events, context) {\n            handleEventSources([events], context);\n        },\n        eventSources: handleEventSources,\n    },\n});\n/*\nBUG: if `event` was supplied, all previously-given `eventSources` will be wiped out\n*/\nfunction handleEventSources(inputs, context) {\n    let unfoundSources = hashValuesToArray(context.getCurrentData().eventSources);\n    let newInputs = [];\n    for (let input of inputs) {\n        let inputFound = false;\n        for (let i = 0; i < unfoundSources.length; i += 1) {\n            if (unfoundSources[i]._raw === input) {\n                unfoundSources.splice(i, 1); // delete\n                inputFound = true;\n                break;\n            }\n        }\n        if (!inputFound) {\n            newInputs.push(input);\n        }\n    }\n    for (let unfoundSource of unfoundSources) {\n        context.dispatch({\n            type: 'REMOVE_EVENT_SOURCE',\n            sourceId: unfoundSource.sourceId,\n        });\n    }\n    for (let newInput of newInputs) {\n        context.calendarApi.addEventSource(newInput);\n    }\n}\n\nfunction handleDateProfile(dateProfile, context) {\n    context.emitter.trigger('datesSet', Object.assign(Object.assign({}, buildRangeApiWithTimeZone(dateProfile.activeRange, context.dateEnv)), { view: context.viewApi }));\n}\n\nfunction handleEventStore(eventStore, context) {\n    let { emitter } = context;\n    if (emitter.hasHandlers('eventsSet')) {\n        emitter.trigger('eventsSet', buildEventApis(eventStore, context));\n    }\n}\n\n/*\nthis array is exposed on the root namespace so that UMD plugins can add to it.\nsee the rollup-bundles script.\n*/\nconst globalPlugins = [\n    arrayEventSourcePlugin,\n    funcEventSourcePlugin,\n    jsonFeedEventSourcePlugin,\n    simpleRecurringEventsPlugin,\n    changeHandlerPlugin,\n    createPlugin({\n        name: 'misc',\n        isLoadingFuncs: [\n            (state) => computeEventSourcesLoading(state.eventSources),\n        ],\n        propSetHandlers: {\n            dateProfile: handleDateProfile,\n            eventStore: handleEventStore,\n        },\n    }),\n];\n\nlet canVGrowWithinCell;\nfunction getCanVGrowWithinCell() {\n    if (canVGrowWithinCell == null) {\n        canVGrowWithinCell = computeCanVGrowWithinCell();\n    }\n    return canVGrowWithinCell;\n}\nfunction computeCanVGrowWithinCell() {\n    // for SSR, because this function is call immediately at top-level\n    // TODO: just make this logic execute top-level, immediately, instead of doing lazily\n    if (typeof document === 'undefined') {\n        return true;\n    }\n    let el = document.createElement('div');\n    el.style.position = 'absolute';\n    el.style.top = '0px';\n    el.style.left = '0px';\n    el.innerHTML = '<table><tr><td><div></div></td></tr></table>';\n    el.querySelector('table').style.height = '100px';\n    el.querySelector('div').style.height = '100%';\n    document.body.appendChild(el);\n    let div = el.querySelector('div');\n    let possible = div.offsetHeight > 0;\n    document.body.removeChild(el);\n    return possible;\n}\n\nclass CalendarRoot extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            forPrint: false,\n        };\n        this.handleBeforePrint = () => {\n            this.setState({ forPrint: true });\n        };\n        this.handleAfterPrint = () => {\n            this.setState({ forPrint: false });\n        };\n    }\n    render() {\n        let { props } = this;\n        let { options } = props;\n        let { forPrint } = this.state;\n        let isHeightAuto = forPrint || options.height === 'auto' || options.contentHeight === 'auto';\n        let height = (!isHeightAuto && options.height != null) ? options.height : '';\n        let classNames = [\n            'fc',\n            forPrint ? 'fc-media-print' : 'fc-media-screen',\n            `fc-direction-${options.direction}`,\n            props.theme.getClass('root'),\n        ];\n        if (!getCanVGrowWithinCell()) {\n            classNames.push('fc-liquid-hack');\n        }\n        return props.children(classNames, height, isHeightAuto, forPrint);\n    }\n    componentDidMount() {\n        let { emitter } = this.props;\n        emitter.on('_beforeprint', this.handleBeforePrint);\n        emitter.on('_afterprint', this.handleAfterPrint);\n    }\n    componentWillUnmount() {\n        let { emitter } = this.props;\n        emitter.off('_beforeprint', this.handleBeforePrint);\n        emitter.off('_afterprint', this.handleAfterPrint);\n    }\n}\n\nclass Interaction {\n    constructor(settings) {\n        this.component = settings.component;\n        this.isHitComboAllowed = settings.isHitComboAllowed || null;\n    }\n    destroy() {\n    }\n}\nfunction parseInteractionSettings(component, input) {\n    return {\n        component,\n        el: input.el,\n        useEventCenter: input.useEventCenter != null ? input.useEventCenter : true,\n        isHitComboAllowed: input.isHitComboAllowed || null,\n    };\n}\nfunction interactionSettingsToStore(settings) {\n    return {\n        [settings.component.uid]: settings,\n    };\n}\n// global state\nconst interactionSettingsStore = {};\n\nclass CalendarImpl {\n    getCurrentData() {\n        return this.currentDataManager.getCurrentData();\n    }\n    dispatch(action) {\n        this.currentDataManager.dispatch(action);\n    }\n    get view() { return this.getCurrentData().viewApi; }\n    batchRendering(callback) {\n        callback();\n    }\n    updateSize() {\n        this.trigger('_resize', true);\n    }\n    // Options\n    // -----------------------------------------------------------------------------------------------------------------\n    setOption(name, val) {\n        this.dispatch({\n            type: 'SET_OPTION',\n            optionName: name,\n            rawOptionValue: val,\n        });\n    }\n    getOption(name) {\n        return this.currentDataManager.currentCalendarOptionsInput[name];\n    }\n    getAvailableLocaleCodes() {\n        return Object.keys(this.getCurrentData().availableRawLocales);\n    }\n    // Trigger\n    // -----------------------------------------------------------------------------------------------------------------\n    on(handlerName, handler) {\n        let { currentDataManager } = this;\n        if (currentDataManager.currentCalendarOptionsRefiners[handlerName]) {\n            currentDataManager.emitter.on(handlerName, handler);\n        }\n        else {\n            console.warn(`Unknown listener name '${handlerName}'`);\n        }\n    }\n    off(handlerName, handler) {\n        this.currentDataManager.emitter.off(handlerName, handler);\n    }\n    // not meant for public use\n    trigger(handlerName, ...args) {\n        this.currentDataManager.emitter.trigger(handlerName, ...args);\n    }\n    // View\n    // -----------------------------------------------------------------------------------------------------------------\n    changeView(viewType, dateOrRange) {\n        this.batchRendering(() => {\n            this.unselect();\n            if (dateOrRange) {\n                if (dateOrRange.start && dateOrRange.end) { // a range\n                    this.dispatch({\n                        type: 'CHANGE_VIEW_TYPE',\n                        viewType,\n                    });\n                    this.dispatch({\n                        type: 'SET_OPTION',\n                        optionName: 'visibleRange',\n                        rawOptionValue: dateOrRange,\n                    });\n                }\n                else {\n                    let { dateEnv } = this.getCurrentData();\n                    this.dispatch({\n                        type: 'CHANGE_VIEW_TYPE',\n                        viewType,\n                        dateMarker: dateEnv.createMarker(dateOrRange),\n                    });\n                }\n            }\n            else {\n                this.dispatch({\n                    type: 'CHANGE_VIEW_TYPE',\n                    viewType,\n                });\n            }\n        });\n    }\n    // Forces navigation to a view for the given date.\n    // `viewType` can be a specific view name or a generic one like \"week\" or \"day\".\n    // needs to change\n    zoomTo(dateMarker, viewType) {\n        let state = this.getCurrentData();\n        let spec;\n        viewType = viewType || 'day'; // day is default zoom\n        spec = state.viewSpecs[viewType] || this.getUnitViewSpec(viewType);\n        this.unselect();\n        if (spec) {\n            this.dispatch({\n                type: 'CHANGE_VIEW_TYPE',\n                viewType: spec.type,\n                dateMarker,\n            });\n        }\n        else {\n            this.dispatch({\n                type: 'CHANGE_DATE',\n                dateMarker,\n            });\n        }\n    }\n    // Given a duration singular unit, like \"week\" or \"day\", finds a matching view spec.\n    // Preference is given to views that have corresponding buttons.\n    getUnitViewSpec(unit) {\n        let { viewSpecs, toolbarConfig } = this.getCurrentData();\n        let viewTypes = [].concat(toolbarConfig.header ? toolbarConfig.header.viewsWithButtons : [], toolbarConfig.footer ? toolbarConfig.footer.viewsWithButtons : []);\n        let i;\n        let spec;\n        for (let viewType in viewSpecs) {\n            viewTypes.push(viewType);\n        }\n        for (i = 0; i < viewTypes.length; i += 1) {\n            spec = viewSpecs[viewTypes[i]];\n            if (spec) {\n                if (spec.singleUnit === unit) {\n                    return spec;\n                }\n            }\n        }\n        return null;\n    }\n    // Current Date\n    // -----------------------------------------------------------------------------------------------------------------\n    prev() {\n        this.unselect();\n        this.dispatch({ type: 'PREV' });\n    }\n    next() {\n        this.unselect();\n        this.dispatch({ type: 'NEXT' });\n    }\n    prevYear() {\n        let state = this.getCurrentData();\n        this.unselect();\n        this.dispatch({\n            type: 'CHANGE_DATE',\n            dateMarker: state.dateEnv.addYears(state.currentDate, -1),\n        });\n    }\n    nextYear() {\n        let state = this.getCurrentData();\n        this.unselect();\n        this.dispatch({\n            type: 'CHANGE_DATE',\n            dateMarker: state.dateEnv.addYears(state.currentDate, 1),\n        });\n    }\n    today() {\n        let state = this.getCurrentData();\n        this.unselect();\n        this.dispatch({\n            type: 'CHANGE_DATE',\n            dateMarker: getNow(state.calendarOptions.now, state.dateEnv),\n        });\n    }\n    gotoDate(zonedDateInput) {\n        let state = this.getCurrentData();\n        this.unselect();\n        this.dispatch({\n            type: 'CHANGE_DATE',\n            dateMarker: state.dateEnv.createMarker(zonedDateInput),\n        });\n    }\n    incrementDate(deltaInput) {\n        let state = this.getCurrentData();\n        let delta = createDuration(deltaInput);\n        if (delta) { // else, warn about invalid input?\n            this.unselect();\n            this.dispatch({\n                type: 'CHANGE_DATE',\n                dateMarker: state.dateEnv.add(state.currentDate, delta),\n            });\n        }\n    }\n    getDate() {\n        let state = this.getCurrentData();\n        return state.dateEnv.toDate(state.currentDate);\n    }\n    // Date Formatting Utils\n    // -----------------------------------------------------------------------------------------------------------------\n    formatDate(d, formatter) {\n        let { dateEnv } = this.getCurrentData();\n        return dateEnv.format(dateEnv.createMarker(d), createFormatter(formatter));\n    }\n    // `settings` is for formatter AND isEndExclusive\n    formatRange(d0, d1, settings) {\n        let { dateEnv } = this.getCurrentData();\n        return dateEnv.formatRange(dateEnv.createMarker(d0), dateEnv.createMarker(d1), createFormatter(settings), settings);\n    }\n    formatIso(d, omitTime) {\n        let { dateEnv } = this.getCurrentData();\n        return dateEnv.formatIso(dateEnv.createMarker(d), { omitTime });\n    }\n    // Date Selection / Event Selection / DayClick\n    // -----------------------------------------------------------------------------------------------------------------\n    select(dateOrObj, endDate) {\n        let selectionInput;\n        if (endDate == null) {\n            if (dateOrObj.start != null) {\n                selectionInput = dateOrObj;\n            }\n            else {\n                selectionInput = {\n                    start: dateOrObj,\n                    end: null,\n                };\n            }\n        }\n        else {\n            selectionInput = {\n                start: dateOrObj,\n                end: endDate,\n            };\n        }\n        let state = this.getCurrentData();\n        let selection = parseDateSpan(selectionInput, state.dateEnv, createDuration({ days: 1 }));\n        if (selection) { // throw parse error otherwise?\n            this.dispatch({ type: 'SELECT_DATES', selection });\n            triggerDateSelect(selection, null, state);\n        }\n    }\n    unselect(pev) {\n        let state = this.getCurrentData();\n        if (state.dateSelection) {\n            this.dispatch({ type: 'UNSELECT_DATES' });\n            triggerDateUnselect(pev, state);\n        }\n    }\n    // Public Events API\n    // -----------------------------------------------------------------------------------------------------------------\n    addEvent(eventInput, sourceInput) {\n        if (eventInput instanceof EventImpl) {\n            let def = eventInput._def;\n            let instance = eventInput._instance;\n            let currentData = this.getCurrentData();\n            // not already present? don't want to add an old snapshot\n            if (!currentData.eventStore.defs[def.defId]) {\n                this.dispatch({\n                    type: 'ADD_EVENTS',\n                    eventStore: eventTupleToStore({ def, instance }), // TODO: better util for two args?\n                });\n                this.triggerEventAdd(eventInput);\n            }\n            return eventInput;\n        }\n        let state = this.getCurrentData();\n        let eventSource;\n        if (sourceInput instanceof EventSourceImpl) {\n            eventSource = sourceInput.internalEventSource;\n        }\n        else if (typeof sourceInput === 'boolean') {\n            if (sourceInput) { // true. part of the first event source\n                [eventSource] = hashValuesToArray(state.eventSources);\n            }\n        }\n        else if (sourceInput != null) { // an ID. accepts a number too\n            let sourceApi = this.getEventSourceById(sourceInput); // TODO: use an internal function\n            if (!sourceApi) {\n                console.warn(`Could not find an event source with ID \"${sourceInput}\"`); // TODO: test\n                return null;\n            }\n            eventSource = sourceApi.internalEventSource;\n        }\n        let tuple = parseEvent(eventInput, eventSource, state, false);\n        if (tuple) {\n            let newEventApi = new EventImpl(state, tuple.def, tuple.def.recurringDef ? null : tuple.instance);\n            this.dispatch({\n                type: 'ADD_EVENTS',\n                eventStore: eventTupleToStore(tuple),\n            });\n            this.triggerEventAdd(newEventApi);\n            return newEventApi;\n        }\n        return null;\n    }\n    triggerEventAdd(eventApi) {\n        let { emitter } = this.getCurrentData();\n        emitter.trigger('eventAdd', {\n            event: eventApi,\n            relatedEvents: [],\n            revert: () => {\n                this.dispatch({\n                    type: 'REMOVE_EVENTS',\n                    eventStore: eventApiToStore(eventApi),\n                });\n            },\n        });\n    }\n    // TODO: optimize\n    getEventById(id) {\n        let state = this.getCurrentData();\n        let { defs, instances } = state.eventStore;\n        id = String(id);\n        for (let defId in defs) {\n            let def = defs[defId];\n            if (def.publicId === id) {\n                if (def.recurringDef) {\n                    return new EventImpl(state, def, null);\n                }\n                for (let instanceId in instances) {\n                    let instance = instances[instanceId];\n                    if (instance.defId === def.defId) {\n                        return new EventImpl(state, def, instance);\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    getEvents() {\n        let currentData = this.getCurrentData();\n        return buildEventApis(currentData.eventStore, currentData);\n    }\n    removeAllEvents() {\n        this.dispatch({ type: 'REMOVE_ALL_EVENTS' });\n    }\n    // Public Event Sources API\n    // -----------------------------------------------------------------------------------------------------------------\n    getEventSources() {\n        let state = this.getCurrentData();\n        let sourceHash = state.eventSources;\n        let sourceApis = [];\n        for (let internalId in sourceHash) {\n            sourceApis.push(new EventSourceImpl(state, sourceHash[internalId]));\n        }\n        return sourceApis;\n    }\n    getEventSourceById(id) {\n        let state = this.getCurrentData();\n        let sourceHash = state.eventSources;\n        id = String(id);\n        for (let sourceId in sourceHash) {\n            if (sourceHash[sourceId].publicId === id) {\n                return new EventSourceImpl(state, sourceHash[sourceId]);\n            }\n        }\n        return null;\n    }\n    addEventSource(sourceInput) {\n        let state = this.getCurrentData();\n        if (sourceInput instanceof EventSourceImpl) {\n            // not already present? don't want to add an old snapshot\n            if (!state.eventSources[sourceInput.internalEventSource.sourceId]) {\n                this.dispatch({\n                    type: 'ADD_EVENT_SOURCES',\n                    sources: [sourceInput.internalEventSource],\n                });\n            }\n            return sourceInput;\n        }\n        let eventSource = parseEventSource(sourceInput, state);\n        if (eventSource) { // TODO: error otherwise?\n            this.dispatch({ type: 'ADD_EVENT_SOURCES', sources: [eventSource] });\n            return new EventSourceImpl(state, eventSource);\n        }\n        return null;\n    }\n    removeAllEventSources() {\n        this.dispatch({ type: 'REMOVE_ALL_EVENT_SOURCES' });\n    }\n    refetchEvents() {\n        this.dispatch({ type: 'FETCH_EVENT_SOURCES', isRefetch: true });\n    }\n    // Scroll\n    // -----------------------------------------------------------------------------------------------------------------\n    scrollToTime(timeInput) {\n        let time = createDuration(timeInput);\n        if (time) {\n            this.trigger('_scrollRequest', { time });\n        }\n    }\n}\n\nfunction pointInsideRect(point, rect) {\n    return point.left >= rect.left &&\n        point.left < rect.right &&\n        point.top >= rect.top &&\n        point.top < rect.bottom;\n}\n// Returns a new rectangle that is the intersection of the two rectangles. If they don't intersect, returns false\nfunction intersectRects(rect1, rect2) {\n    let res = {\n        left: Math.max(rect1.left, rect2.left),\n        right: Math.min(rect1.right, rect2.right),\n        top: Math.max(rect1.top, rect2.top),\n        bottom: Math.min(rect1.bottom, rect2.bottom),\n    };\n    if (res.left < res.right && res.top < res.bottom) {\n        return res;\n    }\n    return false;\n}\nfunction translateRect(rect, deltaX, deltaY) {\n    return {\n        left: rect.left + deltaX,\n        right: rect.right + deltaX,\n        top: rect.top + deltaY,\n        bottom: rect.bottom + deltaY,\n    };\n}\n// Returns a new point that will have been moved to reside within the given rectangle\nfunction constrainPoint(point, rect) {\n    return {\n        left: Math.min(Math.max(point.left, rect.left), rect.right),\n        top: Math.min(Math.max(point.top, rect.top), rect.bottom),\n    };\n}\n// Returns a point that is the center of the given rectangle\nfunction getRectCenter(rect) {\n    return {\n        left: (rect.left + rect.right) / 2,\n        top: (rect.top + rect.bottom) / 2,\n    };\n}\n// Subtracts point2's coordinates from point1's coordinates, returning a delta\nfunction diffPoints(point1, point2) {\n    return {\n        left: point1.left - point2.left,\n        top: point1.top - point2.top,\n    };\n}\n\nconst EMPTY_EVENT_STORE = createEmptyEventStore(); // for purecomponents. TODO: keep elsewhere\nclass Splitter {\n    constructor() {\n        this.getKeysForEventDefs = memoize(this._getKeysForEventDefs);\n        this.splitDateSelection = memoize(this._splitDateSpan);\n        this.splitEventStore = memoize(this._splitEventStore);\n        this.splitIndividualUi = memoize(this._splitIndividualUi);\n        this.splitEventDrag = memoize(this._splitInteraction);\n        this.splitEventResize = memoize(this._splitInteraction);\n        this.eventUiBuilders = {}; // TODO: typescript protection\n    }\n    splitProps(props) {\n        let keyInfos = this.getKeyInfo(props);\n        let defKeys = this.getKeysForEventDefs(props.eventStore);\n        let dateSelections = this.splitDateSelection(props.dateSelection);\n        let individualUi = this.splitIndividualUi(props.eventUiBases, defKeys); // the individual *bases*\n        let eventStores = this.splitEventStore(props.eventStore, defKeys);\n        let eventDrags = this.splitEventDrag(props.eventDrag);\n        let eventResizes = this.splitEventResize(props.eventResize);\n        let splitProps = {};\n        this.eventUiBuilders = mapHash(keyInfos, (info, key) => this.eventUiBuilders[key] || memoize(buildEventUiForKey));\n        for (let key in keyInfos) {\n            let keyInfo = keyInfos[key];\n            let eventStore = eventStores[key] || EMPTY_EVENT_STORE;\n            let buildEventUi = this.eventUiBuilders[key];\n            splitProps[key] = {\n                businessHours: keyInfo.businessHours || props.businessHours,\n                dateSelection: dateSelections[key] || null,\n                eventStore,\n                eventUiBases: buildEventUi(props.eventUiBases[''], keyInfo.ui, individualUi[key]),\n                eventSelection: eventStore.instances[props.eventSelection] ? props.eventSelection : '',\n                eventDrag: eventDrags[key] || null,\n                eventResize: eventResizes[key] || null,\n            };\n        }\n        return splitProps;\n    }\n    _splitDateSpan(dateSpan) {\n        let dateSpans = {};\n        if (dateSpan) {\n            let keys = this.getKeysForDateSpan(dateSpan);\n            for (let key of keys) {\n                dateSpans[key] = dateSpan;\n            }\n        }\n        return dateSpans;\n    }\n    _getKeysForEventDefs(eventStore) {\n        return mapHash(eventStore.defs, (eventDef) => this.getKeysForEventDef(eventDef));\n    }\n    _splitEventStore(eventStore, defKeys) {\n        let { defs, instances } = eventStore;\n        let splitStores = {};\n        for (let defId in defs) {\n            for (let key of defKeys[defId]) {\n                if (!splitStores[key]) {\n                    splitStores[key] = createEmptyEventStore();\n                }\n                splitStores[key].defs[defId] = defs[defId];\n            }\n        }\n        for (let instanceId in instances) {\n            let instance = instances[instanceId];\n            for (let key of defKeys[instance.defId]) {\n                if (splitStores[key]) { // must have already been created\n                    splitStores[key].instances[instanceId] = instance;\n                }\n            }\n        }\n        return splitStores;\n    }\n    _splitIndividualUi(eventUiBases, defKeys) {\n        let splitHashes = {};\n        for (let defId in eventUiBases) {\n            if (defId) { // not the '' key\n                for (let key of defKeys[defId]) {\n                    if (!splitHashes[key]) {\n                        splitHashes[key] = {};\n                    }\n                    splitHashes[key][defId] = eventUiBases[defId];\n                }\n            }\n        }\n        return splitHashes;\n    }\n    _splitInteraction(interaction) {\n        let splitStates = {};\n        if (interaction) {\n            let affectedStores = this._splitEventStore(interaction.affectedEvents, this._getKeysForEventDefs(interaction.affectedEvents));\n            // can't rely on defKeys because event data is mutated\n            let mutatedKeysByDefId = this._getKeysForEventDefs(interaction.mutatedEvents);\n            let mutatedStores = this._splitEventStore(interaction.mutatedEvents, mutatedKeysByDefId);\n            let populate = (key) => {\n                if (!splitStates[key]) {\n                    splitStates[key] = {\n                        affectedEvents: affectedStores[key] || EMPTY_EVENT_STORE,\n                        mutatedEvents: mutatedStores[key] || EMPTY_EVENT_STORE,\n                        isEvent: interaction.isEvent,\n                    };\n                }\n            };\n            for (let key in affectedStores) {\n                populate(key);\n            }\n            for (let key in mutatedStores) {\n                populate(key);\n            }\n        }\n        return splitStates;\n    }\n}\nfunction buildEventUiForKey(allUi, eventUiForKey, individualUi) {\n    let baseParts = [];\n    if (allUi) {\n        baseParts.push(allUi);\n    }\n    if (eventUiForKey) {\n        baseParts.push(eventUiForKey);\n    }\n    let stuff = {\n        '': combineEventUis(baseParts),\n    };\n    if (individualUi) {\n        Object.assign(stuff, individualUi);\n    }\n    return stuff;\n}\n\nfunction getDateMeta(date, todayRange, nowDate, dateProfile) {\n    return {\n        dow: date.getUTCDay(),\n        isDisabled: Boolean(dateProfile && !rangeContainsMarker(dateProfile.activeRange, date)),\n        isOther: Boolean(dateProfile && !rangeContainsMarker(dateProfile.currentRange, date)),\n        isToday: Boolean(todayRange && rangeContainsMarker(todayRange, date)),\n        isPast: Boolean(nowDate ? (date < nowDate) : todayRange ? (date < todayRange.start) : false),\n        isFuture: Boolean(nowDate ? (date > nowDate) : todayRange ? (date >= todayRange.end) : false),\n    };\n}\nfunction getDayClassNames(meta, theme) {\n    let classNames = [\n        'fc-day',\n        `fc-day-${DAY_IDS[meta.dow]}`,\n    ];\n    if (meta.isDisabled) {\n        classNames.push('fc-day-disabled');\n    }\n    else {\n        if (meta.isToday) {\n            classNames.push('fc-day-today');\n            classNames.push(theme.getClass('today'));\n        }\n        if (meta.isPast) {\n            classNames.push('fc-day-past');\n        }\n        if (meta.isFuture) {\n            classNames.push('fc-day-future');\n        }\n        if (meta.isOther) {\n            classNames.push('fc-day-other');\n        }\n    }\n    return classNames;\n}\nfunction getSlotClassNames(meta, theme) {\n    let classNames = [\n        'fc-slot',\n        `fc-slot-${DAY_IDS[meta.dow]}`,\n    ];\n    if (meta.isDisabled) {\n        classNames.push('fc-slot-disabled');\n    }\n    else {\n        if (meta.isToday) {\n            classNames.push('fc-slot-today');\n            classNames.push(theme.getClass('today'));\n        }\n        if (meta.isPast) {\n            classNames.push('fc-slot-past');\n        }\n        if (meta.isFuture) {\n            classNames.push('fc-slot-future');\n        }\n    }\n    return classNames;\n}\n\nconst DAY_FORMAT = createFormatter({ year: 'numeric', month: 'long', day: 'numeric' });\nconst WEEK_FORMAT = createFormatter({ week: 'long' });\nfunction buildNavLinkAttrs(context, dateMarker, viewType = 'day', isTabbable = true) {\n    const { dateEnv, options, calendarApi } = context;\n    let dateStr = dateEnv.format(dateMarker, viewType === 'week' ? WEEK_FORMAT : DAY_FORMAT);\n    if (options.navLinks) {\n        let zonedDate = dateEnv.toDate(dateMarker);\n        const handleInteraction = (ev) => {\n            let customAction = viewType === 'day' ? options.navLinkDayClick :\n                viewType === 'week' ? options.navLinkWeekClick : null;\n            if (typeof customAction === 'function') {\n                customAction.call(calendarApi, dateEnv.toDate(dateMarker), ev);\n            }\n            else {\n                if (typeof customAction === 'string') {\n                    viewType = customAction;\n                }\n                calendarApi.zoomTo(dateMarker, viewType);\n            }\n        };\n        return Object.assign({ title: formatWithOrdinals(options.navLinkHint, [dateStr, zonedDate], dateStr), 'data-navlink': '' }, (isTabbable\n            ? createAriaClickAttrs(handleInteraction)\n            : { onClick: handleInteraction }));\n    }\n    return { 'aria-label': dateStr };\n}\n\nlet _isRtlScrollbarOnLeft = null;\nfunction getIsRtlScrollbarOnLeft() {\n    if (_isRtlScrollbarOnLeft === null) {\n        _isRtlScrollbarOnLeft = computeIsRtlScrollbarOnLeft();\n    }\n    return _isRtlScrollbarOnLeft;\n}\nfunction computeIsRtlScrollbarOnLeft() {\n    let outerEl = document.createElement('div');\n    applyStyle(outerEl, {\n        position: 'absolute',\n        top: -1000,\n        left: 0,\n        border: 0,\n        padding: 0,\n        overflow: 'scroll',\n        direction: 'rtl',\n    });\n    outerEl.innerHTML = '<div></div>';\n    document.body.appendChild(outerEl);\n    let innerEl = outerEl.firstChild;\n    let res = innerEl.getBoundingClientRect().left > outerEl.getBoundingClientRect().left;\n    removeElement(outerEl);\n    return res;\n}\n\nlet _scrollbarWidths;\nfunction getScrollbarWidths() {\n    if (!_scrollbarWidths) {\n        _scrollbarWidths = computeScrollbarWidths();\n    }\n    return _scrollbarWidths;\n}\nfunction computeScrollbarWidths() {\n    let el = document.createElement('div');\n    el.style.overflow = 'scroll';\n    el.style.position = 'absolute';\n    el.style.top = '-9999px';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    let res = computeScrollbarWidthsForEl(el);\n    document.body.removeChild(el);\n    return res;\n}\n// WARNING: will include border\nfunction computeScrollbarWidthsForEl(el) {\n    return {\n        x: el.offsetHeight - el.clientHeight,\n        y: el.offsetWidth - el.clientWidth,\n    };\n}\n\nfunction computeEdges(el, getPadding = false) {\n    let computedStyle = window.getComputedStyle(el);\n    let borderLeft = parseInt(computedStyle.borderLeftWidth, 10) || 0;\n    let borderRight = parseInt(computedStyle.borderRightWidth, 10) || 0;\n    let borderTop = parseInt(computedStyle.borderTopWidth, 10) || 0;\n    let borderBottom = parseInt(computedStyle.borderBottomWidth, 10) || 0;\n    let badScrollbarWidths = computeScrollbarWidthsForEl(el); // includes border!\n    let scrollbarLeftRight = badScrollbarWidths.y - borderLeft - borderRight;\n    let scrollbarBottom = badScrollbarWidths.x - borderTop - borderBottom;\n    let res = {\n        borderLeft,\n        borderRight,\n        borderTop,\n        borderBottom,\n        scrollbarBottom,\n        scrollbarLeft: 0,\n        scrollbarRight: 0,\n    };\n    if (getIsRtlScrollbarOnLeft() && computedStyle.direction === 'rtl') { // is the scrollbar on the left side?\n        res.scrollbarLeft = scrollbarLeftRight;\n    }\n    else {\n        res.scrollbarRight = scrollbarLeftRight;\n    }\n    if (getPadding) {\n        res.paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0;\n        res.paddingRight = parseInt(computedStyle.paddingRight, 10) || 0;\n        res.paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;\n        res.paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;\n    }\n    return res;\n}\nfunction computeInnerRect(el, goWithinPadding = false, doFromWindowViewport) {\n    let outerRect = doFromWindowViewport ? el.getBoundingClientRect() : computeRect(el);\n    let edges = computeEdges(el, goWithinPadding);\n    let res = {\n        left: outerRect.left + edges.borderLeft + edges.scrollbarLeft,\n        right: outerRect.right - edges.borderRight - edges.scrollbarRight,\n        top: outerRect.top + edges.borderTop,\n        bottom: outerRect.bottom - edges.borderBottom - edges.scrollbarBottom,\n    };\n    if (goWithinPadding) {\n        res.left += edges.paddingLeft;\n        res.right -= edges.paddingRight;\n        res.top += edges.paddingTop;\n        res.bottom -= edges.paddingBottom;\n    }\n    return res;\n}\nfunction computeRect(el) {\n    let rect = el.getBoundingClientRect();\n    return {\n        left: rect.left + window.pageXOffset,\n        top: rect.top + window.pageYOffset,\n        right: rect.right + window.pageXOffset,\n        bottom: rect.bottom + window.pageYOffset,\n    };\n}\nfunction computeClippedClientRect(el) {\n    let clippingParents = getClippingParents(el);\n    let rect = el.getBoundingClientRect();\n    for (let clippingParent of clippingParents) {\n        let intersection = intersectRects(rect, clippingParent.getBoundingClientRect());\n        if (intersection) {\n            rect = intersection;\n        }\n        else {\n            return null;\n        }\n    }\n    return rect;\n}\n// does not return window\nfunction getClippingParents(el) {\n    let parents = [];\n    while (el instanceof HTMLElement) { // will stop when gets to document or null\n        let computedStyle = window.getComputedStyle(el);\n        if (computedStyle.position === 'fixed') {\n            break;\n        }\n        if ((/(auto|scroll)/).test(computedStyle.overflow + computedStyle.overflowY + computedStyle.overflowX)) {\n            parents.push(el);\n        }\n        el = el.parentNode;\n    }\n    return parents;\n}\n\n/*\nRecords offset information for a set of elements, relative to an origin element.\nCan record the left/right OR the top/bottom OR both.\nProvides methods for querying the cache by position.\n*/\nclass PositionCache {\n    constructor(originEl, els, isHorizontal, isVertical) {\n        this.els = els;\n        let originClientRect = this.originClientRect = originEl.getBoundingClientRect(); // relative to viewport top-left\n        if (isHorizontal) {\n            this.buildElHorizontals(originClientRect.left);\n        }\n        if (isVertical) {\n            this.buildElVerticals(originClientRect.top);\n        }\n    }\n    // Populates the left/right internal coordinate arrays\n    buildElHorizontals(originClientLeft) {\n        let lefts = [];\n        let rights = [];\n        for (let el of this.els) {\n            let rect = el.getBoundingClientRect();\n            lefts.push(rect.left - originClientLeft);\n            rights.push(rect.right - originClientLeft);\n        }\n        this.lefts = lefts;\n        this.rights = rights;\n    }\n    // Populates the top/bottom internal coordinate arrays\n    buildElVerticals(originClientTop) {\n        let tops = [];\n        let bottoms = [];\n        for (let el of this.els) {\n            let rect = el.getBoundingClientRect();\n            tops.push(rect.top - originClientTop);\n            bottoms.push(rect.bottom - originClientTop);\n        }\n        this.tops = tops;\n        this.bottoms = bottoms;\n    }\n    // Given a left offset (from document left), returns the index of the el that it horizontally intersects.\n    // If no intersection is made, returns undefined.\n    leftToIndex(leftPosition) {\n        let { lefts, rights } = this;\n        let len = lefts.length;\n        let i;\n        for (i = 0; i < len; i += 1) {\n            if (leftPosition >= lefts[i] && leftPosition < rights[i]) {\n                return i;\n            }\n        }\n        return undefined; // TODO: better\n    }\n    // Given a top offset (from document top), returns the index of the el that it vertically intersects.\n    // If no intersection is made, returns undefined.\n    topToIndex(topPosition) {\n        let { tops, bottoms } = this;\n        let len = tops.length;\n        let i;\n        for (i = 0; i < len; i += 1) {\n            if (topPosition >= tops[i] && topPosition < bottoms[i]) {\n                return i;\n            }\n        }\n        return undefined; // TODO: better\n    }\n    // Gets the width of the element at the given index\n    getWidth(leftIndex) {\n        return this.rights[leftIndex] - this.lefts[leftIndex];\n    }\n    // Gets the height of the element at the given index\n    getHeight(topIndex) {\n        return this.bottoms[topIndex] - this.tops[topIndex];\n    }\n}\n\n/* eslint max-classes-per-file: \"off\" */\n/*\nAn object for getting/setting scroll-related information for an element.\nInternally, this is done very differently for window versus DOM element,\nso this object serves as a common interface.\n*/\nclass ScrollController {\n    getMaxScrollTop() {\n        return this.getScrollHeight() - this.getClientHeight();\n    }\n    getMaxScrollLeft() {\n        return this.getScrollWidth() - this.getClientWidth();\n    }\n    canScrollVertically() {\n        return this.getMaxScrollTop() > 0;\n    }\n    canScrollHorizontally() {\n        return this.getMaxScrollLeft() > 0;\n    }\n    canScrollUp() {\n        return this.getScrollTop() > 0;\n    }\n    canScrollDown() {\n        return this.getScrollTop() < this.getMaxScrollTop();\n    }\n    canScrollLeft() {\n        return this.getScrollLeft() > 0;\n    }\n    canScrollRight() {\n        return this.getScrollLeft() < this.getMaxScrollLeft();\n    }\n}\nclass ElementScrollController extends ScrollController {\n    constructor(el) {\n        super();\n        this.el = el;\n    }\n    getScrollTop() {\n        return this.el.scrollTop;\n    }\n    getScrollLeft() {\n        return this.el.scrollLeft;\n    }\n    setScrollTop(top) {\n        this.el.scrollTop = top;\n    }\n    setScrollLeft(left) {\n        this.el.scrollLeft = left;\n    }\n    getScrollWidth() {\n        return this.el.scrollWidth;\n    }\n    getScrollHeight() {\n        return this.el.scrollHeight;\n    }\n    getClientHeight() {\n        return this.el.clientHeight;\n    }\n    getClientWidth() {\n        return this.el.clientWidth;\n    }\n}\nclass WindowScrollController extends ScrollController {\n    getScrollTop() {\n        return window.pageYOffset;\n    }\n    getScrollLeft() {\n        return window.pageXOffset;\n    }\n    setScrollTop(n) {\n        window.scroll(window.pageXOffset, n);\n    }\n    setScrollLeft(n) {\n        window.scroll(n, window.pageYOffset);\n    }\n    getScrollWidth() {\n        return document.documentElement.scrollWidth;\n    }\n    getScrollHeight() {\n        return document.documentElement.scrollHeight;\n    }\n    getClientHeight() {\n        return document.documentElement.clientHeight;\n    }\n    getClientWidth() {\n        return document.documentElement.clientWidth;\n    }\n}\n\n/*\nan INTERACTABLE date component\n\nPURPOSES:\n- hook up to fg, fill, and mirror renderers\n- interface for dragging and hits\n*/\nclass DateComponent extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.uid = guid();\n    }\n    // Hit System\n    // -----------------------------------------------------------------------------------------------------------------\n    prepareHits() {\n    }\n    queryHit(positionLeft, positionTop, elWidth, elHeight) {\n        return null; // this should be abstract\n    }\n    // Pointer Interaction Utils\n    // -----------------------------------------------------------------------------------------------------------------\n    isValidSegDownEl(el) {\n        return !this.props.eventDrag && // HACK\n            !this.props.eventResize && // HACK\n            !elementClosest(el, '.fc-event-mirror');\n    }\n    isValidDateDownEl(el) {\n        return !elementClosest(el, '.fc-event:not(.fc-bg-event)') &&\n            !elementClosest(el, '.fc-more-link') && // a \"more..\" link\n            !elementClosest(el, 'a[data-navlink]') && // a clickable nav link\n            !elementClosest(el, '.fc-popover'); // hack\n    }\n}\n\nclass NamedTimeZoneImpl {\n    constructor(timeZoneName) {\n        this.timeZoneName = timeZoneName;\n    }\n}\n\nclass SegHierarchy {\n    constructor() {\n        // settings\n        this.strictOrder = false;\n        this.allowReslicing = false;\n        this.maxCoord = -1; // -1 means no max\n        this.maxStackCnt = -1; // -1 means no max\n        this.levelCoords = []; // ordered\n        this.entriesByLevel = []; // parallel with levelCoords\n        this.stackCnts = {}; // TODO: use better technique!?\n    }\n    addSegs(inputs) {\n        let hiddenEntries = [];\n        for (let input of inputs) {\n            this.insertEntry(input, hiddenEntries);\n        }\n        return hiddenEntries;\n    }\n    insertEntry(entry, hiddenEntries) {\n        let insertion = this.findInsertion(entry);\n        if (this.isInsertionValid(insertion, entry)) {\n            this.insertEntryAt(entry, insertion);\n            return 1;\n        }\n        return this.handleInvalidInsertion(insertion, entry, hiddenEntries);\n    }\n    isInsertionValid(insertion, entry) {\n        return (this.maxCoord === -1 || insertion.levelCoord + entry.thickness <= this.maxCoord) &&\n            (this.maxStackCnt === -1 || insertion.stackCnt < this.maxStackCnt);\n    }\n    // returns number of new entries inserted\n    handleInvalidInsertion(insertion, entry, hiddenEntries) {\n        if (this.allowReslicing && insertion.touchingEntry) {\n            return this.splitEntry(entry, insertion.touchingEntry, hiddenEntries);\n        }\n        hiddenEntries.push(entry);\n        return 0;\n    }\n    splitEntry(entry, barrier, hiddenEntries) {\n        let partCnt = 0;\n        let splitHiddenEntries = [];\n        let entrySpan = entry.span;\n        let barrierSpan = barrier.span;\n        if (entrySpan.start < barrierSpan.start) {\n            partCnt += this.insertEntry({\n                index: entry.index,\n                thickness: entry.thickness,\n                span: { start: entrySpan.start, end: barrierSpan.start },\n            }, splitHiddenEntries);\n        }\n        if (entrySpan.end > barrierSpan.end) {\n            partCnt += this.insertEntry({\n                index: entry.index,\n                thickness: entry.thickness,\n                span: { start: barrierSpan.end, end: entrySpan.end },\n            }, splitHiddenEntries);\n        }\n        if (partCnt) {\n            hiddenEntries.push({\n                index: entry.index,\n                thickness: entry.thickness,\n                span: intersectSpans(barrierSpan, entrySpan), // guaranteed to intersect\n            }, ...splitHiddenEntries);\n            return partCnt;\n        }\n        hiddenEntries.push(entry);\n        return 0;\n    }\n    insertEntryAt(entry, insertion) {\n        let { entriesByLevel, levelCoords } = this;\n        if (insertion.lateral === -1) {\n            // create a new level\n            insertAt(levelCoords, insertion.level, insertion.levelCoord);\n            insertAt(entriesByLevel, insertion.level, [entry]);\n        }\n        else {\n            // insert into existing level\n            insertAt(entriesByLevel[insertion.level], insertion.lateral, entry);\n        }\n        this.stackCnts[buildEntryKey(entry)] = insertion.stackCnt;\n    }\n    findInsertion(newEntry) {\n        let { levelCoords, entriesByLevel, strictOrder, stackCnts } = this;\n        let levelCnt = levelCoords.length;\n        let candidateCoord = 0;\n        let touchingLevel = -1;\n        let touchingLateral = -1;\n        let touchingEntry = null;\n        let stackCnt = 0;\n        for (let trackingLevel = 0; trackingLevel < levelCnt; trackingLevel += 1) {\n            let trackingCoord = levelCoords[trackingLevel];\n            // if the current level is past the placed entry, we have found a good empty space and can stop.\n            // if strictOrder, keep finding more lateral intersections.\n            if (!strictOrder && trackingCoord >= candidateCoord + newEntry.thickness) {\n                break;\n            }\n            let trackingEntries = entriesByLevel[trackingLevel];\n            let trackingEntry;\n            let searchRes = binarySearch(trackingEntries, newEntry.span.start, getEntrySpanEnd); // find first entry after newEntry's end\n            let lateralIndex = searchRes[0] + searchRes[1]; // if exact match (which doesn't collide), go to next one\n            while ( // loop through entries that horizontally intersect\n            (trackingEntry = trackingEntries[lateralIndex]) && // but not past the whole entry list\n                trackingEntry.span.start < newEntry.span.end // and not entirely past newEntry\n            ) {\n                let trackingEntryBottom = trackingCoord + trackingEntry.thickness;\n                // intersects into the top of the candidate?\n                if (trackingEntryBottom > candidateCoord) {\n                    candidateCoord = trackingEntryBottom;\n                    touchingEntry = trackingEntry;\n                    touchingLevel = trackingLevel;\n                    touchingLateral = lateralIndex;\n                }\n                // butts up against top of candidate? (will happen if just intersected as well)\n                if (trackingEntryBottom === candidateCoord) {\n                    // accumulate the highest possible stackCnt of the trackingEntries that butt up\n                    stackCnt = Math.max(stackCnt, stackCnts[buildEntryKey(trackingEntry)] + 1);\n                }\n                lateralIndex += 1;\n            }\n        }\n        // the destination level will be after touchingEntry's level. find it\n        let destLevel = 0;\n        if (touchingEntry) {\n            destLevel = touchingLevel + 1;\n            while (destLevel < levelCnt && levelCoords[destLevel] < candidateCoord) {\n                destLevel += 1;\n            }\n        }\n        // if adding to an existing level, find where to insert\n        let destLateral = -1;\n        if (destLevel < levelCnt && levelCoords[destLevel] === candidateCoord) {\n            destLateral = binarySearch(entriesByLevel[destLevel], newEntry.span.end, getEntrySpanEnd)[0];\n        }\n        return {\n            touchingLevel,\n            touchingLateral,\n            touchingEntry,\n            stackCnt,\n            levelCoord: candidateCoord,\n            level: destLevel,\n            lateral: destLateral,\n        };\n    }\n    // sorted by levelCoord (lowest to highest)\n    toRects() {\n        let { entriesByLevel, levelCoords } = this;\n        let levelCnt = entriesByLevel.length;\n        let rects = [];\n        for (let level = 0; level < levelCnt; level += 1) {\n            let entries = entriesByLevel[level];\n            let levelCoord = levelCoords[level];\n            for (let entry of entries) {\n                rects.push(Object.assign(Object.assign({}, entry), { levelCoord }));\n            }\n        }\n        return rects;\n    }\n}\nfunction getEntrySpanEnd(entry) {\n    return entry.span.end;\n}\nfunction buildEntryKey(entry) {\n    return entry.index + ':' + entry.span.start;\n}\n// returns groups with entries sorted by input order\nfunction groupIntersectingEntries(entries) {\n    let merges = [];\n    for (let entry of entries) {\n        let filteredMerges = [];\n        let hungryMerge = {\n            span: entry.span,\n            entries: [entry],\n        };\n        for (let merge of merges) {\n            if (intersectSpans(merge.span, hungryMerge.span)) {\n                hungryMerge = {\n                    entries: merge.entries.concat(hungryMerge.entries),\n                    span: joinSpans(merge.span, hungryMerge.span),\n                };\n            }\n            else {\n                filteredMerges.push(merge);\n            }\n        }\n        filteredMerges.push(hungryMerge);\n        merges = filteredMerges;\n    }\n    return merges;\n}\nfunction joinSpans(span0, span1) {\n    return {\n        start: Math.min(span0.start, span1.start),\n        end: Math.max(span0.end, span1.end),\n    };\n}\nfunction intersectSpans(span0, span1) {\n    let start = Math.max(span0.start, span1.start);\n    let end = Math.min(span0.end, span1.end);\n    if (start < end) {\n        return { start, end };\n    }\n    return null;\n}\n// general util\n// ---------------------------------------------------------------------------------------------------------------------\nfunction insertAt(arr, index, item) {\n    arr.splice(index, 0, item);\n}\nfunction binarySearch(a, searchVal, getItemVal) {\n    let startIndex = 0;\n    let endIndex = a.length; // exclusive\n    if (!endIndex || searchVal < getItemVal(a[startIndex])) { // no items OR before first item\n        return [0, 0];\n    }\n    if (searchVal > getItemVal(a[endIndex - 1])) { // after last item\n        return [endIndex, 0];\n    }\n    while (startIndex < endIndex) {\n        let middleIndex = Math.floor(startIndex + (endIndex - startIndex) / 2);\n        let middleVal = getItemVal(a[middleIndex]);\n        if (searchVal < middleVal) {\n            endIndex = middleIndex;\n        }\n        else if (searchVal > middleVal) {\n            startIndex = middleIndex + 1;\n        }\n        else { // equal!\n            return [middleIndex, 1];\n        }\n    }\n    return [startIndex, 0];\n}\n\n/*\nAn abstraction for a dragging interaction originating on an event.\nDoes higher-level things than PointerDragger, such as possibly:\n- a \"mirror\" that moves with the pointer\n- a minimum number of pixels or other criteria for a true drag to begin\n\nsubclasses must emit:\n- pointerdown\n- dragstart\n- dragmove\n- pointerup\n- dragend\n*/\nclass ElementDragging {\n    constructor(el, selector) {\n        this.emitter = new Emitter();\n    }\n    destroy() {\n    }\n    setMirrorIsVisible(bool) {\n        // optional if subclass doesn't want to support a mirror\n    }\n    setMirrorNeedsRevert(bool) {\n        // optional if subclass doesn't want to support a mirror\n    }\n    setAutoScrollEnabled(bool) {\n        // optional\n    }\n}\n\n// TODO: get rid of this in favor of options system,\n// tho it's really easy to access this globally rather than pass thru options.\nconst config = {};\n\n/*\nInformation about what will happen when an external element is dragged-and-dropped\nonto a calendar. Contains information for creating an event.\n*/\nconst DRAG_META_REFINERS = {\n    startTime: createDuration,\n    duration: createDuration,\n    create: Boolean,\n    sourceId: String,\n};\nfunction parseDragMeta(raw) {\n    let { refined, extra } = refineProps(raw, DRAG_META_REFINERS);\n    return {\n        startTime: refined.startTime || null,\n        duration: refined.duration || null,\n        create: refined.create != null ? refined.create : true,\n        sourceId: refined.sourceId,\n        leftoverProps: extra,\n    };\n}\n\n// Computes a default column header formatting string if `colFormat` is not explicitly defined\nfunction computeFallbackHeaderFormat(datesRepDistinctDays, dayCnt) {\n    // if more than one week row, or if there are a lot of columns with not much space,\n    // put just the day numbers will be in each cell\n    if (!datesRepDistinctDays || dayCnt > 10) {\n        return createFormatter({ weekday: 'short' }); // \"Sat\"\n    }\n    if (dayCnt > 1) {\n        return createFormatter({ weekday: 'short', month: 'numeric', day: 'numeric', omitCommas: true }); // \"Sat 11/12\"\n    }\n    return createFormatter({ weekday: 'long' }); // \"Saturday\"\n}\n\nconst CLASS_NAME = 'fc-col-header-cell'; // do the cushion too? no\nfunction renderInner$1(renderProps) {\n    return renderProps.text;\n}\n\n// BAD name for this class now. used in the Header\nclass TableDateCell extends BaseComponent {\n    render() {\n        let { dateEnv, options, theme, viewApi } = this.context;\n        let { props } = this;\n        let { date, dateProfile } = props;\n        let dayMeta = getDateMeta(date, props.todayRange, null, dateProfile);\n        let classNames = [CLASS_NAME].concat(getDayClassNames(dayMeta, theme));\n        let text = dateEnv.format(date, props.dayHeaderFormat);\n        // if colCnt is 1, we are already in a day-view and don't need a navlink\n        let navLinkAttrs = (!dayMeta.isDisabled && props.colCnt > 1)\n            ? buildNavLinkAttrs(this.context, date)\n            : {};\n        let renderProps = Object.assign(Object.assign(Object.assign({ date: dateEnv.toDate(date), view: viewApi }, props.extraRenderProps), { text }), dayMeta);\n        return (createElement(ContentContainer, { elTag: \"th\", elClasses: classNames, elAttrs: Object.assign({ role: 'columnheader', colSpan: props.colSpan, 'data-date': !dayMeta.isDisabled ? formatDayString(date) : undefined }, props.extraDataAttrs), renderProps: renderProps, generatorName: \"dayHeaderContent\", generator: options.dayHeaderContent || renderInner$1, classNameGenerator: options.dayHeaderClassNames, didMount: options.dayHeaderDidMount, willUnmount: options.dayHeaderWillUnmount }, (InnerContainer) => (createElement(\"div\", { className: \"fc-scrollgrid-sync-inner\" }, !dayMeta.isDisabled && (createElement(InnerContainer, { elTag: \"a\", elAttrs: navLinkAttrs, elClasses: [\n                'fc-col-header-cell-cushion',\n                props.isSticky && 'fc-sticky',\n            ] }))))));\n    }\n}\n\nconst WEEKDAY_FORMAT = createFormatter({ weekday: 'long' });\nclass TableDowCell extends BaseComponent {\n    render() {\n        let { props } = this;\n        let { dateEnv, theme, viewApi, options } = this.context;\n        let date = addDays(new Date(259200000), props.dow); // start with Sun, 04 Jan 1970 00:00:00 GMT\n        let dateMeta = {\n            dow: props.dow,\n            isDisabled: false,\n            isFuture: false,\n            isPast: false,\n            isToday: false,\n            isOther: false,\n        };\n        let text = dateEnv.format(date, props.dayHeaderFormat);\n        let renderProps = Object.assign(Object.assign(Object.assign(Object.assign({ // TODO: make this public?\n            date }, dateMeta), { view: viewApi }), props.extraRenderProps), { text });\n        return (createElement(ContentContainer, { elTag: \"th\", elClasses: [\n                CLASS_NAME,\n                ...getDayClassNames(dateMeta, theme),\n                ...(props.extraClassNames || []),\n            ], elAttrs: Object.assign({ role: 'columnheader', colSpan: props.colSpan }, props.extraDataAttrs), renderProps: renderProps, generatorName: \"dayHeaderContent\", generator: options.dayHeaderContent || renderInner$1, classNameGenerator: options.dayHeaderClassNames, didMount: options.dayHeaderDidMount, willUnmount: options.dayHeaderWillUnmount }, (InnerContent) => (createElement(\"div\", { className: \"fc-scrollgrid-sync-inner\" },\n            createElement(InnerContent, { elTag: \"a\", elClasses: [\n                    'fc-col-header-cell-cushion',\n                    props.isSticky && 'fc-sticky',\n                ], elAttrs: {\n                    'aria-label': dateEnv.format(date, WEEKDAY_FORMAT),\n                } })))));\n    }\n}\n\nclass NowTimer extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.initialNowDate = getNow(context.options.now, context.dateEnv);\n        this.initialNowQueriedMs = new Date().valueOf();\n        this.state = this.computeTiming().currentState;\n    }\n    render() {\n        let { props, state } = this;\n        return props.children(state.nowDate, state.todayRange);\n    }\n    componentDidMount() {\n        this.setTimeout();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.unit !== this.props.unit) {\n            this.clearTimeout();\n            this.setTimeout();\n        }\n    }\n    componentWillUnmount() {\n        this.clearTimeout();\n    }\n    computeTiming() {\n        let { props, context } = this;\n        let unroundedNow = addMs(this.initialNowDate, new Date().valueOf() - this.initialNowQueriedMs);\n        let currentUnitStart = context.dateEnv.startOf(unroundedNow, props.unit);\n        let nextUnitStart = context.dateEnv.add(currentUnitStart, createDuration(1, props.unit));\n        let waitMs = nextUnitStart.valueOf() - unroundedNow.valueOf();\n        // there is a max setTimeout ms value (https://stackoverflow.com/a/3468650/96342)\n        // ensure no longer than a day\n        waitMs = Math.min(1000 * 60 * 60 * 24, waitMs);\n        return {\n            currentState: { nowDate: currentUnitStart, todayRange: buildDayRange(currentUnitStart) },\n            nextState: { nowDate: nextUnitStart, todayRange: buildDayRange(nextUnitStart) },\n            waitMs,\n        };\n    }\n    setTimeout() {\n        let { nextState, waitMs } = this.computeTiming();\n        this.timeoutId = setTimeout(() => {\n            this.setState(nextState, () => {\n                this.setTimeout();\n            });\n        }, waitMs);\n    }\n    clearTimeout() {\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n        }\n    }\n}\nNowTimer.contextType = ViewContextType;\nfunction buildDayRange(date) {\n    let start = startOfDay(date);\n    let end = addDays(start, 1);\n    return { start, end };\n}\n\nclass DayHeader extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.createDayHeaderFormatter = memoize(createDayHeaderFormatter);\n    }\n    render() {\n        let { context } = this;\n        let { dates, dateProfile, datesRepDistinctDays, renderIntro } = this.props;\n        let dayHeaderFormat = this.createDayHeaderFormatter(context.options.dayHeaderFormat, datesRepDistinctDays, dates.length);\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => (createElement(\"tr\", { role: \"row\" },\n            renderIntro && renderIntro('day'),\n            dates.map((date) => (datesRepDistinctDays ? (createElement(TableDateCell, { key: date.toISOString(), date: date, dateProfile: dateProfile, todayRange: todayRange, colCnt: dates.length, dayHeaderFormat: dayHeaderFormat })) : (createElement(TableDowCell, { key: date.getUTCDay(), dow: date.getUTCDay(), dayHeaderFormat: dayHeaderFormat }))))))));\n    }\n}\nfunction createDayHeaderFormatter(explicitFormat, datesRepDistinctDays, dateCnt) {\n    return explicitFormat || computeFallbackHeaderFormat(datesRepDistinctDays, dateCnt);\n}\n\nclass DaySeriesModel {\n    constructor(range, dateProfileGenerator) {\n        let date = range.start;\n        let { end } = range;\n        let indices = [];\n        let dates = [];\n        let dayIndex = -1;\n        while (date < end) { // loop each day from start to end\n            if (dateProfileGenerator.isHiddenDay(date)) {\n                indices.push(dayIndex + 0.5); // mark that it's between indices\n            }\n            else {\n                dayIndex += 1;\n                indices.push(dayIndex);\n                dates.push(date);\n            }\n            date = addDays(date, 1);\n        }\n        this.dates = dates;\n        this.indices = indices;\n        this.cnt = dates.length;\n    }\n    sliceRange(range) {\n        let firstIndex = this.getDateDayIndex(range.start); // inclusive first index\n        let lastIndex = this.getDateDayIndex(addDays(range.end, -1)); // inclusive last index\n        let clippedFirstIndex = Math.max(0, firstIndex);\n        let clippedLastIndex = Math.min(this.cnt - 1, lastIndex);\n        // deal with in-between indices\n        clippedFirstIndex = Math.ceil(clippedFirstIndex); // in-between starts round to next cell\n        clippedLastIndex = Math.floor(clippedLastIndex); // in-between ends round to prev cell\n        if (clippedFirstIndex <= clippedLastIndex) {\n            return {\n                firstIndex: clippedFirstIndex,\n                lastIndex: clippedLastIndex,\n                isStart: firstIndex === clippedFirstIndex,\n                isEnd: lastIndex === clippedLastIndex,\n            };\n        }\n        return null;\n    }\n    // Given a date, returns its chronolocial cell-index from the first cell of the grid.\n    // If the date lies between cells (because of hiddenDays), returns a floating-point value between offsets.\n    // If before the first offset, returns a negative number.\n    // If after the last offset, returns an offset past the last cell offset.\n    // Only works for *start* dates of cells. Will not work for exclusive end dates for cells.\n    getDateDayIndex(date) {\n        let { indices } = this;\n        let dayOffset = Math.floor(diffDays(this.dates[0], date));\n        if (dayOffset < 0) {\n            return indices[0] - 1;\n        }\n        if (dayOffset >= indices.length) {\n            return indices[indices.length - 1] + 1;\n        }\n        return indices[dayOffset];\n    }\n}\n\nclass DayTableModel {\n    constructor(daySeries, breakOnWeeks) {\n        let { dates } = daySeries;\n        let daysPerRow;\n        let firstDay;\n        let rowCnt;\n        if (breakOnWeeks) {\n            // count columns until the day-of-week repeats\n            firstDay = dates[0].getUTCDay();\n            for (daysPerRow = 1; daysPerRow < dates.length; daysPerRow += 1) {\n                if (dates[daysPerRow].getUTCDay() === firstDay) {\n                    break;\n                }\n            }\n            rowCnt = Math.ceil(dates.length / daysPerRow);\n        }\n        else {\n            rowCnt = 1;\n            daysPerRow = dates.length;\n        }\n        this.rowCnt = rowCnt;\n        this.colCnt = daysPerRow;\n        this.daySeries = daySeries;\n        this.cells = this.buildCells();\n        this.headerDates = this.buildHeaderDates();\n    }\n    buildCells() {\n        let rows = [];\n        for (let row = 0; row < this.rowCnt; row += 1) {\n            let cells = [];\n            for (let col = 0; col < this.colCnt; col += 1) {\n                cells.push(this.buildCell(row, col));\n            }\n            rows.push(cells);\n        }\n        return rows;\n    }\n    buildCell(row, col) {\n        let date = this.daySeries.dates[row * this.colCnt + col];\n        return {\n            key: date.toISOString(),\n            date,\n        };\n    }\n    buildHeaderDates() {\n        let dates = [];\n        for (let col = 0; col < this.colCnt; col += 1) {\n            dates.push(this.cells[0][col].date);\n        }\n        return dates;\n    }\n    sliceRange(range) {\n        let { colCnt } = this;\n        let seriesSeg = this.daySeries.sliceRange(range);\n        let segs = [];\n        if (seriesSeg) {\n            let { firstIndex, lastIndex } = seriesSeg;\n            let index = firstIndex;\n            while (index <= lastIndex) {\n                let row = Math.floor(index / colCnt);\n                let nextIndex = Math.min((row + 1) * colCnt, lastIndex + 1);\n                segs.push({\n                    row,\n                    firstCol: index % colCnt,\n                    lastCol: (nextIndex - 1) % colCnt,\n                    isStart: seriesSeg.isStart && index === firstIndex,\n                    isEnd: seriesSeg.isEnd && (nextIndex - 1) === lastIndex,\n                });\n                index = nextIndex;\n            }\n        }\n        return segs;\n    }\n}\n\nclass Slicer {\n    constructor() {\n        this.sliceBusinessHours = memoize(this._sliceBusinessHours);\n        this.sliceDateSelection = memoize(this._sliceDateSpan);\n        this.sliceEventStore = memoize(this._sliceEventStore);\n        this.sliceEventDrag = memoize(this._sliceInteraction);\n        this.sliceEventResize = memoize(this._sliceInteraction);\n        this.forceDayIfListItem = false; // hack\n    }\n    sliceProps(props, dateProfile, nextDayThreshold, context, ...extraArgs) {\n        let { eventUiBases } = props;\n        let eventSegs = this.sliceEventStore(props.eventStore, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs);\n        return {\n            dateSelectionSegs: this.sliceDateSelection(props.dateSelection, eventUiBases, context, ...extraArgs),\n            businessHourSegs: this.sliceBusinessHours(props.businessHours, dateProfile, nextDayThreshold, context, ...extraArgs),\n            fgEventSegs: eventSegs.fg,\n            bgEventSegs: eventSegs.bg,\n            eventDrag: this.sliceEventDrag(props.eventDrag, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs),\n            eventResize: this.sliceEventResize(props.eventResize, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs),\n            eventSelection: props.eventSelection,\n        }; // TODO: give interactionSegs?\n    }\n    sliceNowDate(// does not memoize\n    date, context, ...extraArgs) {\n        return this._sliceDateSpan({ range: { start: date, end: addMs(date, 1) }, allDay: false }, // add 1 ms, protect against null range\n        {}, context, ...extraArgs);\n    }\n    _sliceBusinessHours(businessHours, dateProfile, nextDayThreshold, context, ...extraArgs) {\n        if (!businessHours) {\n            return [];\n        }\n        return this._sliceEventStore(expandRecurring(businessHours, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), context), {}, dateProfile, nextDayThreshold, ...extraArgs).bg;\n    }\n    _sliceEventStore(eventStore, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs) {\n        if (eventStore) {\n            let rangeRes = sliceEventStore(eventStore, eventUiBases, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), nextDayThreshold);\n            return {\n                bg: this.sliceEventRanges(rangeRes.bg, extraArgs),\n                fg: this.sliceEventRanges(rangeRes.fg, extraArgs),\n            };\n        }\n        return { bg: [], fg: [] };\n    }\n    _sliceInteraction(interaction, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs) {\n        if (!interaction) {\n            return null;\n        }\n        let rangeRes = sliceEventStore(interaction.mutatedEvents, eventUiBases, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), nextDayThreshold);\n        return {\n            segs: this.sliceEventRanges(rangeRes.fg, extraArgs),\n            affectedInstances: interaction.affectedEvents.instances,\n            isEvent: interaction.isEvent,\n        };\n    }\n    _sliceDateSpan(dateSpan, eventUiBases, context, ...extraArgs) {\n        if (!dateSpan) {\n            return [];\n        }\n        let eventRange = fabricateEventRange(dateSpan, eventUiBases, context);\n        let segs = this.sliceRange(dateSpan.range, ...extraArgs);\n        for (let seg of segs) {\n            seg.eventRange = eventRange;\n        }\n        return segs;\n    }\n    /*\n    \"complete\" seg means it has component and eventRange\n    */\n    sliceEventRanges(eventRanges, extraArgs) {\n        let segs = [];\n        for (let eventRange of eventRanges) {\n            segs.push(...this.sliceEventRange(eventRange, extraArgs));\n        }\n        return segs;\n    }\n    /*\n    \"complete\" seg means it has component and eventRange\n    */\n    sliceEventRange(eventRange, extraArgs) {\n        let dateRange = eventRange.range;\n        // hack to make multi-day events that are being force-displayed as list-items to take up only one day\n        if (this.forceDayIfListItem && eventRange.ui.display === 'list-item') {\n            dateRange = {\n                start: dateRange.start,\n                end: addDays(dateRange.start, 1),\n            };\n        }\n        let segs = this.sliceRange(dateRange, ...extraArgs);\n        for (let seg of segs) {\n            seg.eventRange = eventRange;\n            seg.isStart = eventRange.isStart && seg.isStart;\n            seg.isEnd = eventRange.isEnd && seg.isEnd;\n        }\n        return segs;\n    }\n}\n/*\nfor incorporating slotMinTime/slotMaxTime if appropriate\nTODO: should be part of DateProfile!\nTimelineDateProfile already does this btw\n*/\nfunction computeActiveRange(dateProfile, isComponentAllDay) {\n    let range = dateProfile.activeRange;\n    if (isComponentAllDay) {\n        return range;\n    }\n    return {\n        start: addMs(range.start, dateProfile.slotMinTime.milliseconds),\n        end: addMs(range.end, dateProfile.slotMaxTime.milliseconds - 864e5), // 864e5 = ms in a day\n    };\n}\n\n// high-level segmenting-aware tester functions\n// ------------------------------------------------------------------------------------------------------------------------\nfunction isInteractionValid(interaction, dateProfile, context) {\n    let { instances } = interaction.mutatedEvents;\n    for (let instanceId in instances) {\n        if (!rangeContainsRange(dateProfile.validRange, instances[instanceId].range)) {\n            return false;\n        }\n    }\n    return isNewPropsValid({ eventDrag: interaction }, context); // HACK: the eventDrag props is used for ALL interactions\n}\nfunction isDateSelectionValid(dateSelection, dateProfile, context) {\n    if (!rangeContainsRange(dateProfile.validRange, dateSelection.range)) {\n        return false;\n    }\n    return isNewPropsValid({ dateSelection }, context);\n}\nfunction isNewPropsValid(newProps, context) {\n    let calendarState = context.getCurrentData();\n    let props = Object.assign({ businessHours: calendarState.businessHours, dateSelection: '', eventStore: calendarState.eventStore, eventUiBases: calendarState.eventUiBases, eventSelection: '', eventDrag: null, eventResize: null }, newProps);\n    return (context.pluginHooks.isPropsValid || isPropsValid)(props, context);\n}\nfunction isPropsValid(state, context, dateSpanMeta = {}, filterConfig) {\n    if (state.eventDrag && !isInteractionPropsValid(state, context, dateSpanMeta, filterConfig)) {\n        return false;\n    }\n    if (state.dateSelection && !isDateSelectionPropsValid(state, context, dateSpanMeta, filterConfig)) {\n        return false;\n    }\n    return true;\n}\n// Moving Event Validation\n// ------------------------------------------------------------------------------------------------------------------------\nfunction isInteractionPropsValid(state, context, dateSpanMeta, filterConfig) {\n    let currentState = context.getCurrentData();\n    let interaction = state.eventDrag; // HACK: the eventDrag props is used for ALL interactions\n    let subjectEventStore = interaction.mutatedEvents;\n    let subjectDefs = subjectEventStore.defs;\n    let subjectInstances = subjectEventStore.instances;\n    let subjectConfigs = compileEventUis(subjectDefs, interaction.isEvent ?\n        state.eventUiBases :\n        { '': currentState.selectionConfig });\n    if (filterConfig) {\n        subjectConfigs = mapHash(subjectConfigs, filterConfig);\n    }\n    // exclude the subject events. TODO: exclude defs too?\n    let otherEventStore = excludeInstances(state.eventStore, interaction.affectedEvents.instances);\n    let otherDefs = otherEventStore.defs;\n    let otherInstances = otherEventStore.instances;\n    let otherConfigs = compileEventUis(otherDefs, state.eventUiBases);\n    for (let subjectInstanceId in subjectInstances) {\n        let subjectInstance = subjectInstances[subjectInstanceId];\n        let subjectRange = subjectInstance.range;\n        let subjectConfig = subjectConfigs[subjectInstance.defId];\n        let subjectDef = subjectDefs[subjectInstance.defId];\n        // constraint\n        if (!allConstraintsPass(subjectConfig.constraints, subjectRange, otherEventStore, state.businessHours, context)) {\n            return false;\n        }\n        // overlap\n        let { eventOverlap } = context.options;\n        let eventOverlapFunc = typeof eventOverlap === 'function' ? eventOverlap : null;\n        for (let otherInstanceId in otherInstances) {\n            let otherInstance = otherInstances[otherInstanceId];\n            // intersect! evaluate\n            if (rangesIntersect(subjectRange, otherInstance.range)) {\n                let otherOverlap = otherConfigs[otherInstance.defId].overlap;\n                // consider the other event's overlap. only do this if the subject event is a \"real\" event\n                if (otherOverlap === false && interaction.isEvent) {\n                    return false;\n                }\n                if (subjectConfig.overlap === false) {\n                    return false;\n                }\n                if (eventOverlapFunc && !eventOverlapFunc(new EventImpl(context, otherDefs[otherInstance.defId], otherInstance), // still event\n                new EventImpl(context, subjectDef, subjectInstance))) {\n                    return false;\n                }\n            }\n        }\n        // allow (a function)\n        let calendarEventStore = currentState.eventStore; // need global-to-calendar, not local to component (splittable)state\n        for (let subjectAllow of subjectConfig.allows) {\n            let subjectDateSpan = Object.assign(Object.assign({}, dateSpanMeta), { range: subjectInstance.range, allDay: subjectDef.allDay });\n            let origDef = calendarEventStore.defs[subjectDef.defId];\n            let origInstance = calendarEventStore.instances[subjectInstanceId];\n            let eventApi;\n            if (origDef) { // was previously in the calendar\n                eventApi = new EventImpl(context, origDef, origInstance);\n            }\n            else { // was an external event\n                eventApi = new EventImpl(context, subjectDef); // no instance, because had no dates\n            }\n            if (!subjectAllow(buildDateSpanApiWithContext(subjectDateSpan, context), eventApi)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n// Date Selection Validation\n// ------------------------------------------------------------------------------------------------------------------------\nfunction isDateSelectionPropsValid(state, context, dateSpanMeta, filterConfig) {\n    let relevantEventStore = state.eventStore;\n    let relevantDefs = relevantEventStore.defs;\n    let relevantInstances = relevantEventStore.instances;\n    let selection = state.dateSelection;\n    let selectionRange = selection.range;\n    let { selectionConfig } = context.getCurrentData();\n    if (filterConfig) {\n        selectionConfig = filterConfig(selectionConfig);\n    }\n    // constraint\n    if (!allConstraintsPass(selectionConfig.constraints, selectionRange, relevantEventStore, state.businessHours, context)) {\n        return false;\n    }\n    // overlap\n    let { selectOverlap } = context.options;\n    let selectOverlapFunc = typeof selectOverlap === 'function' ? selectOverlap : null;\n    for (let relevantInstanceId in relevantInstances) {\n        let relevantInstance = relevantInstances[relevantInstanceId];\n        // intersect! evaluate\n        if (rangesIntersect(selectionRange, relevantInstance.range)) {\n            if (selectionConfig.overlap === false) {\n                return false;\n            }\n            if (selectOverlapFunc && !selectOverlapFunc(new EventImpl(context, relevantDefs[relevantInstance.defId], relevantInstance), null)) {\n                return false;\n            }\n        }\n    }\n    // allow (a function)\n    for (let selectionAllow of selectionConfig.allows) {\n        let fullDateSpan = Object.assign(Object.assign({}, dateSpanMeta), selection);\n        if (!selectionAllow(buildDateSpanApiWithContext(fullDateSpan, context), null)) {\n            return false;\n        }\n    }\n    return true;\n}\n// Constraint Utils\n// ------------------------------------------------------------------------------------------------------------------------\nfunction allConstraintsPass(constraints, subjectRange, otherEventStore, businessHoursUnexpanded, context) {\n    for (let constraint of constraints) {\n        if (!anyRangesContainRange(constraintToRanges(constraint, subjectRange, otherEventStore, businessHoursUnexpanded, context), subjectRange)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction constraintToRanges(constraint, subjectRange, // for expanding a recurring constraint, or expanding business hours\notherEventStore, // for if constraint is an even group ID\nbusinessHoursUnexpanded, // for if constraint is 'businessHours'\ncontext) {\n    if (constraint === 'businessHours') {\n        return eventStoreToRanges(expandRecurring(businessHoursUnexpanded, subjectRange, context));\n    }\n    if (typeof constraint === 'string') { // an group ID\n        return eventStoreToRanges(filterEventStoreDefs(otherEventStore, (eventDef) => eventDef.groupId === constraint));\n    }\n    if (typeof constraint === 'object' && constraint) { // non-null object\n        return eventStoreToRanges(expandRecurring(constraint, subjectRange, context));\n    }\n    return []; // if it's false\n}\n// TODO: move to event-store file?\nfunction eventStoreToRanges(eventStore) {\n    let { instances } = eventStore;\n    let ranges = [];\n    for (let instanceId in instances) {\n        ranges.push(instances[instanceId].range);\n    }\n    return ranges;\n}\n// TODO: move to geom file?\nfunction anyRangesContainRange(outerRanges, innerRange) {\n    for (let outerRange of outerRanges) {\n        if (rangeContainsRange(outerRange, innerRange)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconst VISIBLE_HIDDEN_RE = /^(visible|hidden)$/;\nclass Scroller extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.handleEl = (el) => {\n            this.el = el;\n            setRef(this.props.elRef, el);\n        };\n    }\n    render() {\n        let { props } = this;\n        let { liquid, liquidIsAbsolute } = props;\n        let isAbsolute = liquid && liquidIsAbsolute;\n        let className = ['fc-scroller'];\n        if (liquid) {\n            if (liquidIsAbsolute) {\n                className.push('fc-scroller-liquid-absolute');\n            }\n            else {\n                className.push('fc-scroller-liquid');\n            }\n        }\n        return (createElement(\"div\", { ref: this.handleEl, className: className.join(' '), style: {\n                overflowX: props.overflowX,\n                overflowY: props.overflowY,\n                left: (isAbsolute && -(props.overcomeLeft || 0)) || '',\n                right: (isAbsolute && -(props.overcomeRight || 0)) || '',\n                bottom: (isAbsolute && -(props.overcomeBottom || 0)) || '',\n                marginLeft: (!isAbsolute && -(props.overcomeLeft || 0)) || '',\n                marginRight: (!isAbsolute && -(props.overcomeRight || 0)) || '',\n                marginBottom: (!isAbsolute && -(props.overcomeBottom || 0)) || '',\n                maxHeight: props.maxHeight || '',\n            } }, props.children));\n    }\n    needsXScrolling() {\n        if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {\n            return false;\n        }\n        // testing scrollWidth>clientWidth is unreliable cross-browser when pixel heights aren't integers.\n        // much more reliable to see if children are taller than the scroller, even tho doesn't account for\n        // inner-child margins and absolute positioning\n        let { el } = this;\n        let realClientWidth = this.el.getBoundingClientRect().width - this.getYScrollbarWidth();\n        let { children } = el;\n        for (let i = 0; i < children.length; i += 1) {\n            let childEl = children[i];\n            if (childEl.getBoundingClientRect().width > realClientWidth) {\n                return true;\n            }\n        }\n        return false;\n    }\n    needsYScrolling() {\n        if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {\n            return false;\n        }\n        // testing scrollHeight>clientHeight is unreliable cross-browser when pixel heights aren't integers.\n        // much more reliable to see if children are taller than the scroller, even tho doesn't account for\n        // inner-child margins and absolute positioning\n        let { el } = this;\n        let realClientHeight = this.el.getBoundingClientRect().height - this.getXScrollbarWidth();\n        let { children } = el;\n        for (let i = 0; i < children.length; i += 1) {\n            let childEl = children[i];\n            if (childEl.getBoundingClientRect().height > realClientHeight) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getXScrollbarWidth() {\n        if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {\n            return 0;\n        }\n        return this.el.offsetHeight - this.el.clientHeight; // only works because we guarantee no borders. TODO: add to CSS with important?\n    }\n    getYScrollbarWidth() {\n        if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {\n            return 0;\n        }\n        return this.el.offsetWidth - this.el.clientWidth; // only works because we guarantee no borders. TODO: add to CSS with important?\n    }\n}\n\n/*\nTODO: somehow infer OtherArgs from masterCallback?\nTODO: infer RefType from masterCallback if provided\n*/\nclass RefMap {\n    constructor(masterCallback) {\n        this.masterCallback = masterCallback;\n        this.currentMap = {};\n        this.depths = {};\n        this.callbackMap = {};\n        this.handleValue = (val, key) => {\n            let { depths, currentMap } = this;\n            let removed = false;\n            let added = false;\n            if (val !== null) {\n                // for bug... ACTUALLY: can probably do away with this now that callers don't share numeric indices anymore\n                removed = (key in currentMap);\n                currentMap[key] = val;\n                depths[key] = (depths[key] || 0) + 1;\n                added = true;\n            }\n            else {\n                depths[key] -= 1;\n                if (!depths[key]) {\n                    delete currentMap[key];\n                    delete this.callbackMap[key];\n                    removed = true;\n                }\n            }\n            if (this.masterCallback) {\n                if (removed) {\n                    this.masterCallback(null, String(key));\n                }\n                if (added) {\n                    this.masterCallback(val, String(key));\n                }\n            }\n        };\n    }\n    createRef(key) {\n        let refCallback = this.callbackMap[key];\n        if (!refCallback) {\n            refCallback = this.callbackMap[key] = (val) => {\n                this.handleValue(val, String(key));\n            };\n        }\n        return refCallback;\n    }\n    // TODO: check callers that don't care about order. should use getAll instead\n    // NOTE: this method has become less valuable now that we are encouraged to map order by some other index\n    // TODO: provide ONE array-export function, buildArray, which fails on non-numeric indexes. caller can manipulate and \"collect\"\n    collect(startIndex, endIndex, step) {\n        return collectFromHash(this.currentMap, startIndex, endIndex, step);\n    }\n    getAll() {\n        return hashValuesToArray(this.currentMap);\n    }\n}\n\nfunction computeShrinkWidth(chunkEls) {\n    let shrinkCells = findElements(chunkEls, '.fc-scrollgrid-shrink');\n    let largestWidth = 0;\n    for (let shrinkCell of shrinkCells) {\n        largestWidth = Math.max(largestWidth, computeSmallestCellWidth(shrinkCell));\n    }\n    return Math.ceil(largestWidth); // <table> elements work best with integers. round up to ensure contents fits\n}\nfunction getSectionHasLiquidHeight(props, sectionConfig) {\n    return props.liquid && sectionConfig.liquid; // does the section do liquid-height? (need to have whole scrollgrid liquid-height as well)\n}\nfunction getAllowYScrolling(props, sectionConfig) {\n    return sectionConfig.maxHeight != null || // if its possible for the height to max out, we might need scrollbars\n        getSectionHasLiquidHeight(props, sectionConfig); // if the section is liquid height, it might condense enough to require scrollbars\n}\n// TODO: ONLY use `arg`. force out internal function to use same API\nfunction renderChunkContent(sectionConfig, chunkConfig, arg, isHeader) {\n    let { expandRows } = arg;\n    let content = typeof chunkConfig.content === 'function' ?\n        chunkConfig.content(arg) :\n        createElement('table', {\n            role: 'presentation',\n            className: [\n                chunkConfig.tableClassName,\n                sectionConfig.syncRowHeights ? 'fc-scrollgrid-sync-table' : '',\n            ].join(' '),\n            style: {\n                minWidth: arg.tableMinWidth,\n                width: arg.clientWidth,\n                height: expandRows ? arg.clientHeight : '', // css `height` on a <table> serves as a min-height\n            },\n        }, arg.tableColGroupNode, createElement(isHeader ? 'thead' : 'tbody', {\n            role: 'presentation',\n        }, typeof chunkConfig.rowContent === 'function'\n            ? chunkConfig.rowContent(arg)\n            : chunkConfig.rowContent));\n    return content;\n}\nfunction isColPropsEqual(cols0, cols1) {\n    return isArraysEqual(cols0, cols1, isPropsEqual);\n}\nfunction renderMicroColGroup(cols, shrinkWidth) {\n    let colNodes = [];\n    /*\n    for ColProps with spans, it would have been great to make a single <col span=\"\">\n    HOWEVER, Chrome was getting messing up distributing the width to <td>/<th> elements with colspans.\n    SOLUTION: making individual <col> elements makes Chrome behave.\n    */\n    for (let colProps of cols) {\n        let span = colProps.span || 1;\n        for (let i = 0; i < span; i += 1) {\n            colNodes.push(createElement(\"col\", { style: {\n                    width: colProps.width === 'shrink' ? sanitizeShrinkWidth(shrinkWidth) : (colProps.width || ''),\n                    minWidth: colProps.minWidth || '',\n                } }));\n        }\n    }\n    return createElement('colgroup', {}, ...colNodes);\n}\nfunction sanitizeShrinkWidth(shrinkWidth) {\n    /* why 4? if we do 0, it will kill any border, which are needed for computeSmallestCellWidth\n    4 accounts for 2 2-pixel borders. TODO: better solution? */\n    return shrinkWidth == null ? 4 : shrinkWidth;\n}\nfunction hasShrinkWidth(cols) {\n    for (let col of cols) {\n        if (col.width === 'shrink') {\n            return true;\n        }\n    }\n    return false;\n}\nfunction getScrollGridClassNames(liquid, context) {\n    let classNames = [\n        'fc-scrollgrid',\n        context.theme.getClass('table'),\n    ];\n    if (liquid) {\n        classNames.push('fc-scrollgrid-liquid');\n    }\n    return classNames;\n}\nfunction getSectionClassNames(sectionConfig, wholeTableVGrow) {\n    let classNames = [\n        'fc-scrollgrid-section',\n        `fc-scrollgrid-section-${sectionConfig.type}`,\n        sectionConfig.className, // used?\n    ];\n    if (wholeTableVGrow && sectionConfig.liquid && sectionConfig.maxHeight == null) {\n        classNames.push('fc-scrollgrid-section-liquid');\n    }\n    if (sectionConfig.isSticky) {\n        classNames.push('fc-scrollgrid-section-sticky');\n    }\n    return classNames;\n}\nfunction renderScrollShim(arg) {\n    return (createElement(\"div\", { className: \"fc-scrollgrid-sticky-shim\", style: {\n            width: arg.clientWidth,\n            minWidth: arg.tableMinWidth,\n        } }));\n}\nfunction getStickyHeaderDates(options) {\n    let { stickyHeaderDates } = options;\n    if (stickyHeaderDates == null || stickyHeaderDates === 'auto') {\n        stickyHeaderDates = options.height === 'auto' || options.viewHeight === 'auto';\n    }\n    return stickyHeaderDates;\n}\nfunction getStickyFooterScrollbar(options) {\n    let { stickyFooterScrollbar } = options;\n    if (stickyFooterScrollbar == null || stickyFooterScrollbar === 'auto') {\n        stickyFooterScrollbar = options.height === 'auto' || options.viewHeight === 'auto';\n    }\n    return stickyFooterScrollbar;\n}\n\nclass SimpleScrollGrid extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.processCols = memoize((a) => a, isColPropsEqual); // so we get same `cols` props every time\n        // yucky to memoize VNodes, but much more efficient for consumers\n        this.renderMicroColGroup = memoize(renderMicroColGroup);\n        this.scrollerRefs = new RefMap();\n        this.scrollerElRefs = new RefMap(this._handleScrollerEl.bind(this));\n        this.state = {\n            shrinkWidth: null,\n            forceYScrollbars: false,\n            scrollerClientWidths: {},\n            scrollerClientHeights: {},\n        };\n        // TODO: can do a really simple print-view. dont need to join rows\n        this.handleSizing = () => {\n            this.safeSetState(Object.assign({ shrinkWidth: this.computeShrinkWidth() }, this.computeScrollerDims()));\n        };\n    }\n    render() {\n        let { props, state, context } = this;\n        let sectionConfigs = props.sections || [];\n        let cols = this.processCols(props.cols);\n        let microColGroupNode = this.renderMicroColGroup(cols, state.shrinkWidth);\n        let classNames = getScrollGridClassNames(props.liquid, context);\n        if (props.collapsibleWidth) {\n            classNames.push('fc-scrollgrid-collapsible');\n        }\n        // TODO: make DRY\n        let configCnt = sectionConfigs.length;\n        let configI = 0;\n        let currentConfig;\n        let headSectionNodes = [];\n        let bodySectionNodes = [];\n        let footSectionNodes = [];\n        while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'header') {\n            headSectionNodes.push(this.renderSection(currentConfig, microColGroupNode, true));\n            configI += 1;\n        }\n        while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'body') {\n            bodySectionNodes.push(this.renderSection(currentConfig, microColGroupNode, false));\n            configI += 1;\n        }\n        while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'footer') {\n            footSectionNodes.push(this.renderSection(currentConfig, microColGroupNode, true));\n            configI += 1;\n        }\n        // firefox bug: when setting height on table and there is a thead or tfoot,\n        // the necessary height:100% on the liquid-height body section forces the *whole* table to be taller. (bug #5524)\n        // use getCanVGrowWithinCell as a way to detect table-stupid firefox.\n        // if so, use a simpler dom structure, jam everything into a lone tbody.\n        let isBuggy = !getCanVGrowWithinCell();\n        const roleAttrs = { role: 'rowgroup' };\n        return createElement('table', {\n            role: 'grid',\n            className: classNames.join(' '),\n            style: { height: props.height },\n        }, Boolean(!isBuggy && headSectionNodes.length) && createElement('thead', roleAttrs, ...headSectionNodes), Boolean(!isBuggy && bodySectionNodes.length) && createElement('tbody', roleAttrs, ...bodySectionNodes), Boolean(!isBuggy && footSectionNodes.length) && createElement('tfoot', roleAttrs, ...footSectionNodes), isBuggy && createElement('tbody', roleAttrs, ...headSectionNodes, ...bodySectionNodes, ...footSectionNodes));\n    }\n    renderSection(sectionConfig, microColGroupNode, isHeader) {\n        if ('outerContent' in sectionConfig) {\n            return (createElement(Fragment, { key: sectionConfig.key }, sectionConfig.outerContent));\n        }\n        return (createElement(\"tr\", { key: sectionConfig.key, role: \"presentation\", className: getSectionClassNames(sectionConfig, this.props.liquid).join(' ') }, this.renderChunkTd(sectionConfig, microColGroupNode, sectionConfig.chunk, isHeader)));\n    }\n    renderChunkTd(sectionConfig, microColGroupNode, chunkConfig, isHeader) {\n        if ('outerContent' in chunkConfig) {\n            return chunkConfig.outerContent;\n        }\n        let { props } = this;\n        let { forceYScrollbars, scrollerClientWidths, scrollerClientHeights } = this.state;\n        let needsYScrolling = getAllowYScrolling(props, sectionConfig); // TODO: do lazily. do in section config?\n        let isLiquid = getSectionHasLiquidHeight(props, sectionConfig);\n        // for `!props.liquid` - is WHOLE scrollgrid natural height?\n        // TODO: do same thing in advanced scrollgrid? prolly not b/c always has horizontal scrollbars\n        let overflowY = !props.liquid ? 'visible' :\n            forceYScrollbars ? 'scroll' :\n                !needsYScrolling ? 'hidden' :\n                    'auto';\n        let sectionKey = sectionConfig.key;\n        let content = renderChunkContent(sectionConfig, chunkConfig, {\n            tableColGroupNode: microColGroupNode,\n            tableMinWidth: '',\n            clientWidth: (!props.collapsibleWidth && scrollerClientWidths[sectionKey] !== undefined) ? scrollerClientWidths[sectionKey] : null,\n            clientHeight: scrollerClientHeights[sectionKey] !== undefined ? scrollerClientHeights[sectionKey] : null,\n            expandRows: sectionConfig.expandRows,\n            syncRowHeights: false,\n            rowSyncHeights: [],\n            reportRowHeightChange: () => { },\n        }, isHeader);\n        return createElement(isHeader ? 'th' : 'td', {\n            ref: chunkConfig.elRef,\n            role: 'presentation',\n        }, createElement(\"div\", { className: `fc-scroller-harness${isLiquid ? ' fc-scroller-harness-liquid' : ''}` },\n            createElement(Scroller, { ref: this.scrollerRefs.createRef(sectionKey), elRef: this.scrollerElRefs.createRef(sectionKey), overflowY: overflowY, overflowX: !props.liquid ? 'visible' : 'hidden' /* natural height? */, maxHeight: sectionConfig.maxHeight, liquid: isLiquid, liquidIsAbsolute // because its within a harness\n                : true }, content)));\n    }\n    _handleScrollerEl(scrollerEl, key) {\n        let section = getSectionByKey(this.props.sections, key);\n        if (section) {\n            setRef(section.chunk.scrollerElRef, scrollerEl);\n        }\n    }\n    componentDidMount() {\n        this.handleSizing();\n        this.context.addResizeHandler(this.handleSizing);\n    }\n    componentDidUpdate() {\n        // TODO: need better solution when state contains non-sizing things\n        this.handleSizing();\n    }\n    componentWillUnmount() {\n        this.context.removeResizeHandler(this.handleSizing);\n    }\n    computeShrinkWidth() {\n        return hasShrinkWidth(this.props.cols)\n            ? computeShrinkWidth(this.scrollerElRefs.getAll())\n            : 0;\n    }\n    computeScrollerDims() {\n        let scrollbarWidth = getScrollbarWidths();\n        let { scrollerRefs, scrollerElRefs } = this;\n        let forceYScrollbars = false;\n        let scrollerClientWidths = {};\n        let scrollerClientHeights = {};\n        for (let sectionKey in scrollerRefs.currentMap) {\n            let scroller = scrollerRefs.currentMap[sectionKey];\n            if (scroller && scroller.needsYScrolling()) {\n                forceYScrollbars = true;\n                break;\n            }\n        }\n        for (let section of this.props.sections) {\n            let sectionKey = section.key;\n            let scrollerEl = scrollerElRefs.currentMap[sectionKey];\n            if (scrollerEl) {\n                let harnessEl = scrollerEl.parentNode; // TODO: weird way to get this. need harness b/c doesn't include table borders\n                scrollerClientWidths[sectionKey] = Math.floor(harnessEl.getBoundingClientRect().width - (forceYScrollbars\n                    ? scrollbarWidth.y // use global because scroller might not have scrollbars yet but will need them in future\n                    : 0));\n                scrollerClientHeights[sectionKey] = Math.floor(harnessEl.getBoundingClientRect().height);\n            }\n        }\n        return { forceYScrollbars, scrollerClientWidths, scrollerClientHeights };\n    }\n}\nSimpleScrollGrid.addStateEquality({\n    scrollerClientWidths: isPropsEqual,\n    scrollerClientHeights: isPropsEqual,\n});\nfunction getSectionByKey(sections, key) {\n    for (let section of sections) {\n        if (section.key === key) {\n            return section;\n        }\n    }\n    return null;\n}\n\nclass EventContainer extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.handleEl = (el) => {\n            if (el) {\n                setElSeg(el, this.props.seg);\n            }\n            // TODO: when null, should unset to avoid memory leaks?\n        };\n    }\n    render() {\n        const { props, context } = this;\n        const { options } = context;\n        const { seg } = props;\n        const { eventRange } = seg;\n        const { ui } = eventRange;\n        const renderProps = {\n            event: new EventImpl(context, eventRange.def, eventRange.instance),\n            view: context.viewApi,\n            timeText: props.timeText,\n            textColor: ui.textColor,\n            backgroundColor: ui.backgroundColor,\n            borderColor: ui.borderColor,\n            isDraggable: !props.disableDragging && computeSegDraggable(seg, context),\n            isStartResizable: !props.disableResizing && computeSegStartResizable(seg, context),\n            isEndResizable: !props.disableResizing && computeSegEndResizable(seg),\n            isMirror: Boolean(props.isDragging || props.isResizing || props.isDateSelecting),\n            isStart: Boolean(seg.isStart),\n            isEnd: Boolean(seg.isEnd),\n            isPast: Boolean(props.isPast),\n            isFuture: Boolean(props.isFuture),\n            isToday: Boolean(props.isToday),\n            isSelected: Boolean(props.isSelected),\n            isDragging: Boolean(props.isDragging),\n            isResizing: Boolean(props.isResizing),\n        };\n        return (createElement(ContentContainer, Object.assign({}, props /* contains children */, { elRef: this.handleEl, elClasses: [\n                ...getEventClassNames(renderProps),\n                ...seg.eventRange.ui.classNames,\n                ...(props.elClasses || []),\n            ], renderProps: renderProps, generatorName: \"eventContent\", generator: options.eventContent || props.defaultGenerator, classNameGenerator: options.eventClassNames, didMount: options.eventDidMount, willUnmount: options.eventWillUnmount })));\n    }\n}\n\n// should not be a purecomponent\nclass StandardEvent extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { seg } = props;\n        let { ui } = seg.eventRange;\n        let timeFormat = options.eventTimeFormat || props.defaultTimeFormat;\n        let timeText = buildSegTimeText(seg, timeFormat, context, props.defaultDisplayEventTime, props.defaultDisplayEventEnd);\n        return (createElement(EventContainer, Object.assign({}, props /* includes elRef */, { elTag: \"a\", elStyle: {\n                borderColor: ui.borderColor,\n                backgroundColor: ui.backgroundColor,\n            }, elAttrs: getSegAnchorAttrs(seg, context), defaultGenerator: renderInnerContent$1, timeText: timeText }), (InnerContent, eventContentArg) => (createElement(Fragment, null,\n            createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-event-main'], elStyle: { color: eventContentArg.textColor } }),\n            Boolean(eventContentArg.isStartResizable) && (createElement(\"div\", { className: \"fc-event-resizer fc-event-resizer-start\" })),\n            Boolean(eventContentArg.isEndResizable) && (createElement(\"div\", { className: \"fc-event-resizer fc-event-resizer-end\" }))))));\n    }\n}\nfunction renderInnerContent$1(innerProps) {\n    return (createElement(\"div\", { className: \"fc-event-main-frame\" },\n        innerProps.timeText && (createElement(\"div\", { className: \"fc-event-time\" }, innerProps.timeText)),\n        createElement(\"div\", { className: \"fc-event-title-container\" },\n            createElement(\"div\", { className: \"fc-event-title fc-sticky\" }, innerProps.event.title || createElement(Fragment, null, \"\\u00A0\")))));\n}\n\nconst NowIndicatorContainer = (props) => (createElement(ViewContextType.Consumer, null, (context) => {\n    let { options } = context;\n    let renderProps = {\n        isAxis: props.isAxis,\n        date: context.dateEnv.toDate(props.date),\n        view: context.viewApi,\n    };\n    return (createElement(ContentContainer, Object.assign({}, props /* includes children */, { elTag: props.elTag || 'div', renderProps: renderProps, generatorName: \"nowIndicatorContent\", generator: options.nowIndicatorContent, classNameGenerator: options.nowIndicatorClassNames, didMount: options.nowIndicatorDidMount, willUnmount: options.nowIndicatorWillUnmount })));\n}));\n\nconst DAY_NUM_FORMAT = createFormatter({ day: 'numeric' });\nclass DayCellContainer extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.refineRenderProps = memoizeObjArg(refineRenderProps);\n    }\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let renderProps = this.refineRenderProps({\n            date: props.date,\n            dateProfile: props.dateProfile,\n            todayRange: props.todayRange,\n            showDayNumber: props.showDayNumber,\n            extraRenderProps: props.extraRenderProps,\n            viewApi: context.viewApi,\n            dateEnv: context.dateEnv,\n        });\n        return (createElement(ContentContainer, Object.assign({}, props /* includes children */, { elClasses: [\n                ...getDayClassNames(renderProps, context.theme),\n                ...(props.elClasses || []),\n            ], elAttrs: Object.assign(Object.assign({}, props.elAttrs), (renderProps.isDisabled ? {} : { 'data-date': formatDayString(props.date) })), renderProps: renderProps, generatorName: \"dayCellContent\", generator: options.dayCellContent || props.defaultGenerator, classNameGenerator: \n            // don't use custom classNames if disabled\n            renderProps.isDisabled ? undefined : options.dayCellClassNames, didMount: options.dayCellDidMount, willUnmount: options.dayCellWillUnmount })));\n    }\n}\nfunction hasCustomDayCellContent(options) {\n    return Boolean(options.dayCellContent || hasCustomRenderingHandler('dayCellContent', options));\n}\nfunction refineRenderProps(raw) {\n    let { date, dateEnv } = raw;\n    let dayMeta = getDateMeta(date, raw.todayRange, null, raw.dateProfile);\n    return Object.assign(Object.assign(Object.assign({ date: dateEnv.toDate(date), view: raw.viewApi }, dayMeta), { dayNumberText: raw.showDayNumber ? dateEnv.format(date, DAY_NUM_FORMAT) : '' }), raw.extraRenderProps);\n}\n\nclass BgEvent extends BaseComponent {\n    render() {\n        let { props } = this;\n        let { seg } = props;\n        return (createElement(EventContainer, { elTag: \"div\", elClasses: ['fc-bg-event'], elStyle: { backgroundColor: seg.eventRange.ui.backgroundColor }, defaultGenerator: renderInnerContent, seg: seg, timeText: \"\", isDragging: false, isResizing: false, isDateSelecting: false, isSelected: false, isPast: props.isPast, isFuture: props.isFuture, isToday: props.isToday, disableDragging: true, disableResizing: true }));\n    }\n}\nfunction renderInnerContent(props) {\n    let { title } = props.event;\n    return title && (createElement(\"div\", { className: \"fc-event-title\" }, props.event.title));\n}\nfunction renderFill(fillType) {\n    return (createElement(\"div\", { className: `fc-${fillType}` }));\n}\n\nconst WeekNumberContainer = (props) => (createElement(ViewContextType.Consumer, null, (context) => {\n    let { dateEnv, options } = context;\n    let { date } = props;\n    let format = options.weekNumberFormat || props.defaultFormat;\n    let num = dateEnv.computeWeekNumber(date); // TODO: somehow use for formatting as well?\n    let text = dateEnv.format(date, format);\n    let renderProps = { num, text, date };\n    return (createElement(ContentContainer // why isn't WeekNumberContentArg being auto-detected?\n    , Object.assign({}, props /* includes children */, { renderProps: renderProps, generatorName: \"weekNumberContent\", generator: options.weekNumberContent || renderInner, classNameGenerator: options.weekNumberClassNames, didMount: options.weekNumberDidMount, willUnmount: options.weekNumberWillUnmount })));\n}));\nfunction renderInner(innerProps) {\n    return innerProps.text;\n}\n\nconst PADDING_FROM_VIEWPORT = 10;\nclass Popover extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            titleId: getUniqueDomId(),\n        };\n        this.handleRootEl = (el) => {\n            this.rootEl = el;\n            if (this.props.elRef) {\n                setRef(this.props.elRef, el);\n            }\n        };\n        // Triggered when the user clicks *anywhere* in the document, for the autoHide feature\n        this.handleDocumentMouseDown = (ev) => {\n            // only hide the popover if the click happened outside the popover\n            const target = getEventTargetViaRoot(ev);\n            if (!this.rootEl.contains(target)) {\n                this.handleCloseClick();\n            }\n        };\n        this.handleDocumentKeyDown = (ev) => {\n            if (ev.key === 'Escape') {\n                this.handleCloseClick();\n            }\n        };\n        this.handleCloseClick = () => {\n            let { onClose } = this.props;\n            if (onClose) {\n                onClose();\n            }\n        };\n    }\n    render() {\n        let { theme, options } = this.context;\n        let { props, state } = this;\n        let classNames = [\n            'fc-popover',\n            theme.getClass('popover'),\n        ].concat(props.extraClassNames || []);\n        return createPortal(createElement(\"div\", Object.assign({}, props.extraAttrs, { id: props.id, className: classNames.join(' '), \"aria-labelledby\": state.titleId, ref: this.handleRootEl }),\n            createElement(\"div\", { className: 'fc-popover-header ' + theme.getClass('popoverHeader') },\n                createElement(\"span\", { className: \"fc-popover-title\", id: state.titleId }, props.title),\n                createElement(\"span\", { className: 'fc-popover-close ' + theme.getIconClass('close'), title: options.closeHint, onClick: this.handleCloseClick })),\n            createElement(\"div\", { className: 'fc-popover-body ' + theme.getClass('popoverContent') }, props.children)), props.parentEl);\n    }\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleDocumentMouseDown);\n        document.addEventListener('keydown', this.handleDocumentKeyDown);\n        this.updateSize();\n    }\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleDocumentMouseDown);\n        document.removeEventListener('keydown', this.handleDocumentKeyDown);\n    }\n    updateSize() {\n        let { isRtl } = this.context;\n        let { alignmentEl, alignGridTop } = this.props;\n        let { rootEl } = this;\n        let alignmentRect = computeClippedClientRect(alignmentEl);\n        if (alignmentRect) {\n            let popoverDims = rootEl.getBoundingClientRect();\n            // position relative to viewport\n            let popoverTop = alignGridTop\n                ? elementClosest(alignmentEl, '.fc-scrollgrid').getBoundingClientRect().top\n                : alignmentRect.top;\n            let popoverLeft = isRtl ? alignmentRect.right - popoverDims.width : alignmentRect.left;\n            // constrain\n            popoverTop = Math.max(popoverTop, PADDING_FROM_VIEWPORT);\n            popoverLeft = Math.min(popoverLeft, document.documentElement.clientWidth - PADDING_FROM_VIEWPORT - popoverDims.width);\n            popoverLeft = Math.max(popoverLeft, PADDING_FROM_VIEWPORT);\n            let origin = rootEl.offsetParent.getBoundingClientRect();\n            applyStyle(rootEl, {\n                top: popoverTop - origin.top,\n                left: popoverLeft - origin.left,\n            });\n        }\n    }\n}\n\nclass MorePopover extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.handleRootEl = (rootEl) => {\n            this.rootEl = rootEl;\n            if (rootEl) {\n                this.context.registerInteractiveComponent(this, {\n                    el: rootEl,\n                    useEventCenter: false,\n                });\n            }\n            else {\n                this.context.unregisterInteractiveComponent(this);\n            }\n        };\n    }\n    render() {\n        let { options, dateEnv } = this.context;\n        let { props } = this;\n        let { startDate, todayRange, dateProfile } = props;\n        let title = dateEnv.format(startDate, options.dayPopoverFormat);\n        return (createElement(DayCellContainer, { elRef: this.handleRootEl, date: startDate, dateProfile: dateProfile, todayRange: todayRange }, (InnerContent, renderProps, elAttrs) => (createElement(Popover, { elRef: elAttrs.ref, id: props.id, title: title, extraClassNames: ['fc-more-popover'].concat(elAttrs.className || []), extraAttrs: elAttrs /* TODO: make these time-based when not whole-day? */, parentEl: props.parentEl, alignmentEl: props.alignmentEl, alignGridTop: props.alignGridTop, onClose: props.onClose },\n            hasCustomDayCellContent(options) && (createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-more-popover-misc'] })),\n            props.children))));\n    }\n    queryHit(positionLeft, positionTop, elWidth, elHeight) {\n        let { rootEl, props } = this;\n        if (positionLeft >= 0 && positionLeft < elWidth &&\n            positionTop >= 0 && positionTop < elHeight) {\n            return {\n                dateProfile: props.dateProfile,\n                dateSpan: Object.assign({ allDay: true, range: {\n                        start: props.startDate,\n                        end: props.endDate,\n                    } }, props.extraDateSpan),\n                dayEl: rootEl,\n                rect: {\n                    left: 0,\n                    top: 0,\n                    right: elWidth,\n                    bottom: elHeight,\n                },\n                layer: 1, // important when comparing with hits from other components\n            };\n        }\n        return null;\n    }\n}\n\nclass MoreLinkContainer extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.linkElRef = createRef();\n        this.state = {\n            isPopoverOpen: false,\n            popoverId: getUniqueDomId(),\n        };\n        this.handleClick = (ev) => {\n            let { props, context } = this;\n            let { moreLinkClick } = context.options;\n            let date = computeRange(props).start;\n            function buildPublicSeg(seg) {\n                let { def, instance, range } = seg.eventRange;\n                return {\n                    event: new EventImpl(context, def, instance),\n                    start: context.dateEnv.toDate(range.start),\n                    end: context.dateEnv.toDate(range.end),\n                    isStart: seg.isStart,\n                    isEnd: seg.isEnd,\n                };\n            }\n            if (typeof moreLinkClick === 'function') {\n                moreLinkClick = moreLinkClick({\n                    date,\n                    allDay: Boolean(props.allDayDate),\n                    allSegs: props.allSegs.map(buildPublicSeg),\n                    hiddenSegs: props.hiddenSegs.map(buildPublicSeg),\n                    jsEvent: ev,\n                    view: context.viewApi,\n                });\n            }\n            if (!moreLinkClick || moreLinkClick === 'popover') {\n                this.setState({ isPopoverOpen: true });\n            }\n            else if (typeof moreLinkClick === 'string') { // a view name\n                context.calendarApi.zoomTo(date, moreLinkClick);\n            }\n        };\n        this.handlePopoverClose = () => {\n            this.setState({ isPopoverOpen: false });\n        };\n    }\n    render() {\n        let { props, state } = this;\n        return (createElement(ViewContextType.Consumer, null, (context) => {\n            let { viewApi, options, calendarApi } = context;\n            let { moreLinkText } = options;\n            let { moreCnt } = props;\n            let range = computeRange(props);\n            let text = typeof moreLinkText === 'function' // TODO: eventually use formatWithOrdinals\n                ? moreLinkText.call(calendarApi, moreCnt)\n                : `+${moreCnt} ${moreLinkText}`;\n            let hint = formatWithOrdinals(options.moreLinkHint, [moreCnt], text);\n            let renderProps = {\n                num: moreCnt,\n                shortText: `+${moreCnt}`,\n                text,\n                view: viewApi,\n            };\n            return (createElement(Fragment, null,\n                Boolean(props.moreCnt) && (createElement(ContentContainer, { elTag: props.elTag || 'a', elRef: this.linkElRef, elClasses: [\n                        ...(props.elClasses || []),\n                        'fc-more-link',\n                    ], elAttrs: Object.assign(Object.assign(Object.assign({}, props.elAttrs), createAriaClickAttrs(this.handleClick)), { title: hint, 'aria-expanded': state.isPopoverOpen, 'aria-controls': state.isPopoverOpen ? state.popoverId : '' }), renderProps: renderProps, generatorName: \"moreLinkContent\", generator: options.moreLinkContent || props.defaultGenerator || renderMoreLinkInner, classNameGenerator: options.moreLinkClassNames, didMount: options.moreLinkDidMount, willUnmount: options.moreLinkWillUnmount }, props.children)),\n                state.isPopoverOpen && (createElement(MorePopover, { id: state.popoverId, startDate: range.start, endDate: range.end, dateProfile: props.dateProfile, todayRange: props.todayRange, extraDateSpan: props.extraDateSpan, parentEl: this.parentEl, alignmentEl: props.alignmentElRef ?\n                        props.alignmentElRef.current :\n                        this.linkElRef.current, alignGridTop: props.alignGridTop, onClose: this.handlePopoverClose }, props.popoverContent()))));\n        }));\n    }\n    componentDidMount() {\n        this.updateParentEl();\n    }\n    componentDidUpdate() {\n        this.updateParentEl();\n    }\n    updateParentEl() {\n        if (this.linkElRef.current) {\n            this.parentEl = elementClosest(this.linkElRef.current, '.fc-view-harness');\n        }\n    }\n}\nfunction renderMoreLinkInner(props) {\n    return props.text;\n}\nfunction computeRange(props) {\n    if (props.allDayDate) {\n        return {\n            start: props.allDayDate,\n            end: addDays(props.allDayDate, 1),\n        };\n    }\n    let { hiddenSegs } = props;\n    return {\n        start: computeEarliestSegStart(hiddenSegs),\n        end: computeLatestSegEnd(hiddenSegs),\n    };\n}\nfunction computeEarliestSegStart(segs) {\n    return segs.reduce(pickEarliestStart).eventRange.range.start;\n}\nfunction pickEarliestStart(seg0, seg1) {\n    return seg0.eventRange.range.start < seg1.eventRange.range.start ? seg0 : seg1;\n}\nfunction computeLatestSegEnd(segs) {\n    return segs.reduce(pickLatestEnd).eventRange.range.end;\n}\nfunction pickLatestEnd(seg0, seg1) {\n    return seg0.eventRange.range.end > seg1.eventRange.range.end ? seg0 : seg1;\n}\n\nclass Store {\n    constructor() {\n        this.handlers = [];\n    }\n    set(value) {\n        this.currentValue = value;\n        for (let handler of this.handlers) {\n            handler(value);\n        }\n    }\n    subscribe(handler) {\n        this.handlers.push(handler);\n        if (this.currentValue !== undefined) {\n            handler(this.currentValue);\n        }\n    }\n}\n\n/*\nSubscribers will get a LIST of CustomRenderings\n*/\nclass CustomRenderingStore extends Store {\n    constructor() {\n        super(...arguments);\n        this.map = new Map();\n    }\n    // for consistent order\n    handle(customRendering) {\n        const { map } = this;\n        let updated = false;\n        if (customRendering.isActive) {\n            map.set(customRendering.id, customRendering);\n            updated = true;\n        }\n        else if (map.has(customRendering.id)) {\n            map.delete(customRendering.id);\n            updated = true;\n        }\n        if (updated) {\n            this.set(map);\n        }\n    }\n}\n\nexport { interactionSettingsStore as $, BASE_OPTION_REFINERS as A, BASE_OPTION_DEFAULTS as B, ContentContainer as C, DelayedRunner as D, Emitter as E, CALENDAR_LISTENER_REFINERS as F, CALENDAR_OPTION_REFINERS as G, COMPLEX_OPTION_COMPARATORS as H, VIEW_OPTION_REFINERS as I, DateEnv as J, DateProfileGenerator as K, createEventUi as L, parseBusinessHours as M, BaseComponent as N, setRef as O, Interaction as P, getElSeg as Q, elementClosest as R, EventImpl as S, Theme as T, listenBySelector as U, ViewContextType as V, listenToHoverBySelector as W, PureComponent as X, buildViewContext as Y, getUniqueDomId as Z, parseInteractionSettings as _, mapHash as a, whenTransitionDone as a$, getNow as a0, CalendarImpl as a1, flushSync as a2, CalendarRoot as a3, RenderId as a4, isArraysEqual as a5, applyStyleProp as a6, sliceEventStore as a7, createPlugin as a8, JsonRequestError as a9, pointInsideRect as aA, constrainPoint as aB, getRectCenter as aC, diffPoints as aD, translateRect as aE, filterHash as aF, compareObjs as aG, collectFromHash as aH, findElements as aI, findDirectChildren as aJ, removeElement as aK, applyStyle as aL, elementMatches as aM, getElRoot as aN, getEventTargetViaRoot as aO, parseClassNames as aP, getCanVGrowWithinCell as aQ, mergeEventStores as aR, getRelevantEvents as aS, eventTupleToStore as aT, combineEventUis as aU, Splitter as aV, getDayClassNames as aW, getDateMeta as aX, getSlotClassNames as aY, buildNavLinkAttrs as aZ, preventDefault as a_, createContext as aa, identity as ab, refineProps as ac, createEventInstance as ad, parseEventDef as ae, refineEventDef as af, padStart as ag, isInt as ah, parseFieldSpecs as ai, compareByFieldSpecs as aj, flexibleCompare as ak, preventSelection as al, allowSelection as am, preventContextMenu as an, allowContextMenu as ao, compareNumbers as ap, enableCursor as aq, disableCursor as ar, guid as as, computeVisibleDayRange as at, isMultiDayRange as au, diffDates as av, removeExact as aw, memoizeArraylike as ax, memoizeHashlike as ay, intersectRects as az, buildViewClassNames as b, requestJson as b$, computeInnerRect as b0, computeEdges as b1, getClippingParents as b2, computeRect as b3, unpromisify as b4, intersectRanges as b5, rangesEqual as b6, rangesIntersect as b7, rangeContainsRange as b8, PositionCache as b9, SegHierarchy as bA, buildEntryKey as bB, getEntrySpanEnd as bC, binarySearch as bD, groupIntersectingEntries as bE, intersectSpans as bF, interactionSettingsToStore as bG, ElementDragging as bH, config as bI, parseDragMeta as bJ, DayHeader as bK, computeFallbackHeaderFormat as bL, TableDateCell as bM, TableDowCell as bN, DaySeriesModel as bO, hasBgRendering as bP, buildSegTimeText as bQ, sortEventSegs as bR, getSegMeta as bS, buildEventRangeKey as bT, getSegAnchorAttrs as bU, DayTableModel as bV, Slicer as bW, applyMutationToEventStore as bX, isPropsValid as bY, isInteractionValid as bZ, isDateSelectionValid as b_, ScrollController as ba, ElementScrollController as bb, WindowScrollController as bc, DateComponent as bd, isDateSpansEqual as be, addDays as bf, startOfDay as bg, addMs as bh, addWeeks as bi, diffWeeks as bj, diffWholeWeeks as bk, diffDayAndTime as bl, diffDays as bm, isValidDate as bn, asCleanDays as bo, multiplyDuration as bp, addDurations as bq, asRoughMinutes as br, asRoughSeconds as bs, asRoughMs as bt, wholeDivideDurations as bu, formatIsoTimeString as bv, formatDayString as bw, buildIsoString as bx, NamedTimeZoneImpl as by, parse as bz, greatestDurationDenominator as c, SimpleScrollGrid as c0, hasShrinkWidth as c1, renderMicroColGroup as c2, getScrollGridClassNames as c3, getSectionClassNames as c4, getSectionHasLiquidHeight as c5, getAllowYScrolling as c6, renderChunkContent as c7, computeShrinkWidth as c8, sanitizeShrinkWidth as c9, isColPropsEqual as ca, renderScrollShim as cb, getStickyFooterScrollbar as cc, getStickyHeaderDates as cd, Scroller as ce, getScrollbarWidths as cf, RefMap as cg, getIsRtlScrollbarOnLeft as ch, NowTimer as ci, ScrollResponder as cj, StandardEvent as ck, NowIndicatorContainer as cl, DayCellContainer as cm, hasCustomDayCellContent as cn, EventContainer as co, renderFill as cp, BgEvent as cq, WeekNumberContainer as cr, MoreLinkContainer as cs, computeEarliestSegStart as ct, ViewContainer as cu, triggerDateSelect as cv, getDefaultEventEnd as cw, buildEventApis as cx, buildElAttrs as cy, CustomRenderingStore as cz, createDuration as d, createFormatter as e, formatWithOrdinals as f, globalLocales as g, diffWholeDays as h, injectStyles as i, memoize as j, buildBuildPluginHooks as k, memoizeObjArg as l, mergeProps as m, isPropsEqual as n, getInitialDate as o, initEventSources as p, createEmptyEventStore as q, rangeContainsMarker as r, reduceCurrentDate as s, reduceEventSources as t, reduceEventStore as u, computeEventSourcesLoading as v, reduceEventSourcesNewTimeZone as w, rezoneEventStoreDates as x, mergeRawOptions as y, globalPlugins as z };\n","// these aren't really private, but nor are they really useful to document\n\n/**\n * @private\n */\nclass LuxonError extends Error {}\n\n/**\n * @private\n */\nexport class InvalidDateTimeError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid DateTime: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidIntervalError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid Interval: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidDurationError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid Duration: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class ConflictingSpecificationError extends LuxonError {}\n\n/**\n * @private\n */\nexport class InvalidUnitError extends LuxonError {\n  constructor(unit) {\n    super(`Invalid unit ${unit}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidArgumentError extends LuxonError {}\n\n/**\n * @private\n */\nexport class ZoneIsAbstractError extends LuxonError {\n  constructor() {\n    super(\"Zone is an abstract class\");\n  }\n}\n","/**\n * @private\n */\n\nconst n = \"numeric\",\n  s = \"short\",\n  l = \"long\";\n\nexport const DATE_SHORT = {\n  year: n,\n  month: n,\n  day: n,\n};\n\nexport const DATE_MED = {\n  year: n,\n  month: s,\n  day: n,\n};\n\nexport const DATE_MED_WITH_WEEKDAY = {\n  year: n,\n  month: s,\n  day: n,\n  weekday: s,\n};\n\nexport const DATE_FULL = {\n  year: n,\n  month: l,\n  day: n,\n};\n\nexport const DATE_HUGE = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n};\n\nexport const TIME_SIMPLE = {\n  hour: n,\n  minute: n,\n};\n\nexport const TIME_WITH_SECONDS = {\n  hour: n,\n  minute: n,\n  second: n,\n};\n\nexport const TIME_WITH_SHORT_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: s,\n};\n\nexport const TIME_WITH_LONG_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: l,\n};\n\nexport const TIME_24_SIMPLE = {\n  hour: n,\n  minute: n,\n  hourCycle: \"h23\",\n};\n\nexport const TIME_24_WITH_SECONDS = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\",\n};\n\nexport const TIME_24_WITH_SHORT_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\",\n  timeZoneName: s,\n};\n\nexport const TIME_24_WITH_LONG_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\",\n  timeZoneName: l,\n};\n\nexport const DATETIME_SHORT = {\n  year: n,\n  month: n,\n  day: n,\n  hour: n,\n  minute: n,\n};\n\nexport const DATETIME_SHORT_WITH_SECONDS = {\n  year: n,\n  month: n,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n,\n};\n\nexport const DATETIME_MED = {\n  year: n,\n  month: s,\n  day: n,\n  hour: n,\n  minute: n,\n};\n\nexport const DATETIME_MED_WITH_SECONDS = {\n  year: n,\n  month: s,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n,\n};\n\nexport const DATETIME_MED_WITH_WEEKDAY = {\n  year: n,\n  month: s,\n  day: n,\n  weekday: s,\n  hour: n,\n  minute: n,\n};\n\nexport const DATETIME_FULL = {\n  year: n,\n  month: l,\n  day: n,\n  hour: n,\n  minute: n,\n  timeZoneName: s,\n};\n\nexport const DATETIME_FULL_WITH_SECONDS = {\n  year: n,\n  month: l,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: s,\n};\n\nexport const DATETIME_HUGE = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n  hour: n,\n  minute: n,\n  timeZoneName: l,\n};\n\nexport const DATETIME_HUGE_WITH_SECONDS = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: l,\n};\n","/*\n  This is just a junk drawer, containing anything used across multiple classes.\n  Because Luxon is small(ish), this should stay small and we won't worry about splitting\n  it up into, say, parsingUtil.js and basicUtil.js and so on. But they are divided up by feature area.\n*/\n\nimport { InvalidArgumentError } from \"../errors.js\";\n\n/**\n * @private\n */\n\n// TYPES\n\nexport function isUndefined(o) {\n  return typeof o === \"undefined\";\n}\n\nexport function isNumber(o) {\n  return typeof o === \"number\";\n}\n\nexport function isInteger(o) {\n  return typeof o === \"number\" && o % 1 === 0;\n}\n\nexport function isString(o) {\n  return typeof o === \"string\";\n}\n\nexport function isDate(o) {\n  return Object.prototype.toString.call(o) === \"[object Date]\";\n}\n\n// CAPABILITIES\n\nexport function hasRelative() {\n  try {\n    return typeof Intl !== \"undefined\" && !!Intl.RelativeTimeFormat;\n  } catch (e) {\n    return false;\n  }\n}\n\n// OBJECTS AND ARRAYS\n\nexport function maybeArray(thing) {\n  return Array.isArray(thing) ? thing : [thing];\n}\n\nexport function bestBy(arr, by, compare) {\n  if (arr.length === 0) {\n    return undefined;\n  }\n  return arr.reduce((best, next) => {\n    const pair = [by(next), next];\n    if (!best) {\n      return pair;\n    } else if (compare(best[0], pair[0]) === best[0]) {\n      return best;\n    } else {\n      return pair;\n    }\n  }, null)[1];\n}\n\nexport function pick(obj, keys) {\n  return keys.reduce((a, k) => {\n    a[k] = obj[k];\n    return a;\n  }, {});\n}\n\nexport function hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n// NUMBERS AND STRINGS\n\nexport function integerBetween(thing, bottom, top) {\n  return isInteger(thing) && thing >= bottom && thing <= top;\n}\n\n// x % n but takes the sign of n instead of x\nexport function floorMod(x, n) {\n  return x - n * Math.floor(x / n);\n}\n\nexport function padStart(input, n = 2) {\n  const isNeg = input < 0;\n  let padded;\n  if (isNeg) {\n    padded = \"-\" + (\"\" + -input).padStart(n, \"0\");\n  } else {\n    padded = (\"\" + input).padStart(n, \"0\");\n  }\n  return padded;\n}\n\nexport function parseInteger(string) {\n  if (isUndefined(string) || string === null || string === \"\") {\n    return undefined;\n  } else {\n    return parseInt(string, 10);\n  }\n}\n\nexport function parseFloating(string) {\n  if (isUndefined(string) || string === null || string === \"\") {\n    return undefined;\n  } else {\n    return parseFloat(string);\n  }\n}\n\nexport function parseMillis(fraction) {\n  // Return undefined (instead of 0) in these cases, where fraction is not set\n  if (isUndefined(fraction) || fraction === null || fraction === \"\") {\n    return undefined;\n  } else {\n    const f = parseFloat(\"0.\" + fraction) * 1000;\n    return Math.floor(f);\n  }\n}\n\nexport function roundTo(number, digits, towardZero = false) {\n  const factor = 10 ** digits,\n    rounder = towardZero ? Math.trunc : Math.round;\n  return rounder(number * factor) / factor;\n}\n\n// DATE BASICS\n\nexport function isLeapYear(year) {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nexport function daysInYear(year) {\n  return isLeapYear(year) ? 366 : 365;\n}\n\nexport function daysInMonth(year, month) {\n  const modMonth = floorMod(month - 1, 12) + 1,\n    modYear = year + (month - modMonth) / 12;\n\n  if (modMonth === 2) {\n    return isLeapYear(modYear) ? 29 : 28;\n  } else {\n    return [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][modMonth - 1];\n  }\n}\n\n// covert a calendar object to a local timestamp (epoch, but with the offset baked in)\nexport function objToLocalTS(obj) {\n  let d = Date.UTC(\n    obj.year,\n    obj.month - 1,\n    obj.day,\n    obj.hour,\n    obj.minute,\n    obj.second,\n    obj.millisecond\n  );\n\n  // for legacy reasons, years between 0 and 99 are interpreted as 19XX; revert that\n  if (obj.year < 100 && obj.year >= 0) {\n    d = new Date(d);\n    d.setUTCFullYear(d.getUTCFullYear() - 1900);\n  }\n  return +d;\n}\n\nexport function weeksInWeekYear(weekYear) {\n  const p1 =\n      (weekYear +\n        Math.floor(weekYear / 4) -\n        Math.floor(weekYear / 100) +\n        Math.floor(weekYear / 400)) %\n      7,\n    last = weekYear - 1,\n    p2 = (last + Math.floor(last / 4) - Math.floor(last / 100) + Math.floor(last / 400)) % 7;\n  return p1 === 4 || p2 === 3 ? 53 : 52;\n}\n\nexport function untruncateYear(year) {\n  if (year > 99) {\n    return year;\n  } else return year > 60 ? 1900 + year : 2000 + year;\n}\n\n// PARSING\n\nexport function parseZoneInfo(ts, offsetFormat, locale, timeZone = null) {\n  const date = new Date(ts),\n    intlOpts = {\n      hourCycle: \"h23\",\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    };\n\n  if (timeZone) {\n    intlOpts.timeZone = timeZone;\n  }\n\n  const modified = { timeZoneName: offsetFormat, ...intlOpts };\n\n  const parsed = new Intl.DateTimeFormat(locale, modified)\n    .formatToParts(date)\n    .find((m) => m.type.toLowerCase() === \"timezonename\");\n  return parsed ? parsed.value : null;\n}\n\n// signedOffset('-5', '30') -> -330\nexport function signedOffset(offHourStr, offMinuteStr) {\n  let offHour = parseInt(offHourStr, 10);\n\n  // don't || this because we want to preserve -0\n  if (Number.isNaN(offHour)) {\n    offHour = 0;\n  }\n\n  const offMin = parseInt(offMinuteStr, 10) || 0,\n    offMinSigned = offHour < 0 || Object.is(offHour, -0) ? -offMin : offMin;\n  return offHour * 60 + offMinSigned;\n}\n\n// COERCION\n\nexport function asNumber(value) {\n  const numericValue = Number(value);\n  if (typeof value === \"boolean\" || value === \"\" || Number.isNaN(numericValue))\n    throw new InvalidArgumentError(`Invalid unit value ${value}`);\n  return numericValue;\n}\n\nexport function normalizeObject(obj, normalizer) {\n  const normalized = {};\n  for (const u in obj) {\n    if (hasOwnProperty(obj, u)) {\n      const v = obj[u];\n      if (v === undefined || v === null) continue;\n      normalized[normalizer(u)] = asNumber(v);\n    }\n  }\n  return normalized;\n}\n\nexport function formatOffset(offset, format) {\n  const hours = Math.trunc(Math.abs(offset / 60)),\n    minutes = Math.trunc(Math.abs(offset % 60)),\n    sign = offset >= 0 ? \"+\" : \"-\";\n\n  switch (format) {\n    case \"short\":\n      return `${sign}${padStart(hours, 2)}:${padStart(minutes, 2)}`;\n    case \"narrow\":\n      return `${sign}${hours}${minutes > 0 ? `:${minutes}` : \"\"}`;\n    case \"techie\":\n      return `${sign}${padStart(hours, 2)}${padStart(minutes, 2)}`;\n    default:\n      throw new RangeError(`Value format ${format} is out of range for property format`);\n  }\n}\n\nexport function timeObject(obj) {\n  return pick(obj, [\"hour\", \"minute\", \"second\", \"millisecond\"]);\n}\n\nexport const ianaRegex =\n  /[A-Za-z_+-]{1,256}(?::?\\/[A-Za-z0-9_+-]{1,256}(?:\\/[A-Za-z0-9_+-]{1,256})?)?/;\n","import * as Formats from \"./formats.js\";\nimport { pick } from \"./util.js\";\n\nfunction stringify(obj) {\n  return JSON.stringify(obj, Object.keys(obj).sort());\n}\n\n/**\n * @private\n */\n\nexport const monthsLong = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport const monthsShort = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n\nexport const monthsNarrow = [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"];\n\nexport function months(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...monthsNarrow];\n    case \"short\":\n      return [...monthsShort];\n    case \"long\":\n      return [...monthsLong];\n    case \"numeric\":\n      return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"];\n    case \"2-digit\":\n      return [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\n    default:\n      return null;\n  }\n}\n\nexport const weekdaysLong = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n];\n\nexport const weekdaysShort = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n\nexport const weekdaysNarrow = [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"];\n\nexport function weekdays(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...weekdaysNarrow];\n    case \"short\":\n      return [...weekdaysShort];\n    case \"long\":\n      return [...weekdaysLong];\n    case \"numeric\":\n      return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\n    default:\n      return null;\n  }\n}\n\nexport const meridiems = [\"AM\", \"PM\"];\n\nexport const erasLong = [\"Before Christ\", \"Anno Domini\"];\n\nexport const erasShort = [\"BC\", \"AD\"];\n\nexport const erasNarrow = [\"B\", \"A\"];\n\nexport function eras(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...erasNarrow];\n    case \"short\":\n      return [...erasShort];\n    case \"long\":\n      return [...erasLong];\n    default:\n      return null;\n  }\n}\n\nexport function meridiemForDateTime(dt) {\n  return meridiems[dt.hour < 12 ? 0 : 1];\n}\n\nexport function weekdayForDateTime(dt, length) {\n  return weekdays(length)[dt.weekday - 1];\n}\n\nexport function monthForDateTime(dt, length) {\n  return months(length)[dt.month - 1];\n}\n\nexport function eraForDateTime(dt, length) {\n  return eras(length)[dt.year < 0 ? 0 : 1];\n}\n\nexport function formatRelativeTime(unit, count, numeric = \"always\", narrow = false) {\n  const units = {\n    years: [\"year\", \"yr.\"],\n    quarters: [\"quarter\", \"qtr.\"],\n    months: [\"month\", \"mo.\"],\n    weeks: [\"week\", \"wk.\"],\n    days: [\"day\", \"day\", \"days\"],\n    hours: [\"hour\", \"hr.\"],\n    minutes: [\"minute\", \"min.\"],\n    seconds: [\"second\", \"sec.\"],\n  };\n\n  const lastable = [\"hours\", \"minutes\", \"seconds\"].indexOf(unit) === -1;\n\n  if (numeric === \"auto\" && lastable) {\n    const isDay = unit === \"days\";\n    switch (count) {\n      case 1:\n        return isDay ? \"tomorrow\" : `next ${units[unit][0]}`;\n      case -1:\n        return isDay ? \"yesterday\" : `last ${units[unit][0]}`;\n      case 0:\n        return isDay ? \"today\" : `this ${units[unit][0]}`;\n      default: // fall through\n    }\n  }\n\n  const isInPast = Object.is(count, -0) || count < 0,\n    fmtValue = Math.abs(count),\n    singular = fmtValue === 1,\n    lilUnits = units[unit],\n    fmtUnit = narrow\n      ? singular\n        ? lilUnits[1]\n        : lilUnits[2] || lilUnits[1]\n      : singular\n      ? units[unit][0]\n      : unit;\n  return isInPast ? `${fmtValue} ${fmtUnit} ago` : `in ${fmtValue} ${fmtUnit}`;\n}\n\nexport function formatString(knownFormat) {\n  // these all have the offsets removed because we don't have access to them\n  // without all the intl stuff this is backfilling\n  const filtered = pick(knownFormat, [\n      \"weekday\",\n      \"era\",\n      \"year\",\n      \"month\",\n      \"day\",\n      \"hour\",\n      \"minute\",\n      \"second\",\n      \"timeZoneName\",\n      \"hourCycle\",\n    ]),\n    key = stringify(filtered),\n    dateTimeHuge = \"EEEE, LLLL d, yyyy, h:mm a\";\n  switch (key) {\n    case stringify(Formats.DATE_SHORT):\n      return \"M/d/yyyy\";\n    case stringify(Formats.DATE_MED):\n      return \"LLL d, yyyy\";\n    case stringify(Formats.DATE_MED_WITH_WEEKDAY):\n      return \"EEE, LLL d, yyyy\";\n    case stringify(Formats.DATE_FULL):\n      return \"LLLL d, yyyy\";\n    case stringify(Formats.DATE_HUGE):\n      return \"EEEE, LLLL d, yyyy\";\n    case stringify(Formats.TIME_SIMPLE):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_WITH_SECONDS):\n      return \"h:mm:ss a\";\n    case stringify(Formats.TIME_WITH_SHORT_OFFSET):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_WITH_LONG_OFFSET):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_24_SIMPLE):\n      return \"HH:mm\";\n    case stringify(Formats.TIME_24_WITH_SECONDS):\n      return \"HH:mm:ss\";\n    case stringify(Formats.TIME_24_WITH_SHORT_OFFSET):\n      return \"HH:mm\";\n    case stringify(Formats.TIME_24_WITH_LONG_OFFSET):\n      return \"HH:mm\";\n    case stringify(Formats.DATETIME_SHORT):\n      return \"M/d/yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_MED):\n      return \"LLL d, yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_FULL):\n      return \"LLLL d, yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_HUGE):\n      return dateTimeHuge;\n    case stringify(Formats.DATETIME_SHORT_WITH_SECONDS):\n      return \"M/d/yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_MED_WITH_SECONDS):\n      return \"LLL d, yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_MED_WITH_WEEKDAY):\n      return \"EEE, d LLL yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_FULL_WITH_SECONDS):\n      return \"LLLL d, yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_HUGE_WITH_SECONDS):\n      return \"EEEE, LLLL d, yyyy, h:mm:ss a\";\n    default:\n      return dateTimeHuge;\n  }\n}\n","import * as English from \"./english.js\";\nimport * as Formats from \"./formats.js\";\nimport { padStart } from \"./util.js\";\n\nfunction stringifyTokens(splits, tokenToString) {\n  let s = \"\";\n  for (const token of splits) {\n    if (token.literal) {\n      s += token.val;\n    } else {\n      s += tokenToString(token.val);\n    }\n  }\n  return s;\n}\n\nconst macroTokenToFormatOpts = {\n  D: Formats.DATE_SHORT,\n  DD: Formats.DATE_MED,\n  DDD: Formats.DATE_FULL,\n  DDDD: Formats.DATE_HUGE,\n  t: Formats.TIME_SIMPLE,\n  tt: Formats.TIME_WITH_SECONDS,\n  ttt: Formats.TIME_WITH_SHORT_OFFSET,\n  tttt: Formats.TIME_WITH_LONG_OFFSET,\n  T: Formats.TIME_24_SIMPLE,\n  TT: Formats.TIME_24_WITH_SECONDS,\n  TTT: Formats.TIME_24_WITH_SHORT_OFFSET,\n  TTTT: Formats.TIME_24_WITH_LONG_OFFSET,\n  f: Formats.DATETIME_SHORT,\n  ff: Formats.DATETIME_MED,\n  fff: Formats.DATETIME_FULL,\n  ffff: Formats.DATETIME_HUGE,\n  F: Formats.DATETIME_SHORT_WITH_SECONDS,\n  FF: Formats.DATETIME_MED_WITH_SECONDS,\n  FFF: Formats.DATETIME_FULL_WITH_SECONDS,\n  FFFF: Formats.DATETIME_HUGE_WITH_SECONDS,\n};\n\n/**\n * @private\n */\n\nexport default class Formatter {\n  static create(locale, opts = {}) {\n    return new Formatter(locale, opts);\n  }\n\n  static parseFormat(fmt) {\n    let current = null,\n      currentFull = \"\",\n      bracketed = false;\n    const splits = [];\n    for (let i = 0; i < fmt.length; i++) {\n      const c = fmt.charAt(i);\n      if (c === \"'\") {\n        if (currentFull.length > 0) {\n          splits.push({ literal: bracketed, val: currentFull });\n        }\n        current = null;\n        currentFull = \"\";\n        bracketed = !bracketed;\n      } else if (bracketed) {\n        currentFull += c;\n      } else if (c === current) {\n        currentFull += c;\n      } else {\n        if (currentFull.length > 0) {\n          splits.push({ literal: false, val: currentFull });\n        }\n        currentFull = c;\n        current = c;\n      }\n    }\n\n    if (currentFull.length > 0) {\n      splits.push({ literal: bracketed, val: currentFull });\n    }\n\n    return splits;\n  }\n\n  static macroTokenToFormatOpts(token) {\n    return macroTokenToFormatOpts[token];\n  }\n\n  constructor(locale, formatOpts) {\n    this.opts = formatOpts;\n    this.loc = locale;\n    this.systemLoc = null;\n  }\n\n  formatWithSystemDefault(dt, opts) {\n    if (this.systemLoc === null) {\n      this.systemLoc = this.loc.redefaultToSystem();\n    }\n    const df = this.systemLoc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.format();\n  }\n\n  formatDateTime(dt, opts = {}) {\n    const df = this.loc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.format();\n  }\n\n  formatDateTimeParts(dt, opts = {}) {\n    const df = this.loc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.formatToParts();\n  }\n\n  resolvedOptions(dt, opts = {}) {\n    const df = this.loc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.resolvedOptions();\n  }\n\n  num(n, p = 0) {\n    // we get some perf out of doing this here, annoyingly\n    if (this.opts.forceSimple) {\n      return padStart(n, p);\n    }\n\n    const opts = { ...this.opts };\n\n    if (p > 0) {\n      opts.padTo = p;\n    }\n\n    return this.loc.numberFormatter(opts).format(n);\n  }\n\n  formatDateTimeFromString(dt, fmt) {\n    const knownEnglish = this.loc.listingMode() === \"en\",\n      useDateTimeFormatter = this.loc.outputCalendar && this.loc.outputCalendar !== \"gregory\",\n      string = (opts, extract) => this.loc.extract(dt, opts, extract),\n      formatOffset = (opts) => {\n        if (dt.isOffsetFixed && dt.offset === 0 && opts.allowZ) {\n          return \"Z\";\n        }\n\n        return dt.isValid ? dt.zone.formatOffset(dt.ts, opts.format) : \"\";\n      },\n      meridiem = () =>\n        knownEnglish\n          ? English.meridiemForDateTime(dt)\n          : string({ hour: \"numeric\", hourCycle: \"h12\" }, \"dayperiod\"),\n      month = (length, standalone) =>\n        knownEnglish\n          ? English.monthForDateTime(dt, length)\n          : string(standalone ? { month: length } : { month: length, day: \"numeric\" }, \"month\"),\n      weekday = (length, standalone) =>\n        knownEnglish\n          ? English.weekdayForDateTime(dt, length)\n          : string(\n              standalone ? { weekday: length } : { weekday: length, month: \"long\", day: \"numeric\" },\n              \"weekday\"\n            ),\n      maybeMacro = (token) => {\n        const formatOpts = Formatter.macroTokenToFormatOpts(token);\n        if (formatOpts) {\n          return this.formatWithSystemDefault(dt, formatOpts);\n        } else {\n          return token;\n        }\n      },\n      era = (length) =>\n        knownEnglish ? English.eraForDateTime(dt, length) : string({ era: length }, \"era\"),\n      tokenToString = (token) => {\n        // Where possible: http://cldr.unicode.org/translation/date-time-1/date-time#TOC-Standalone-vs.-Format-Styles\n        switch (token) {\n          // ms\n          case \"S\":\n            return this.num(dt.millisecond);\n          case \"u\":\n          // falls through\n          case \"SSS\":\n            return this.num(dt.millisecond, 3);\n          // seconds\n          case \"s\":\n            return this.num(dt.second);\n          case \"ss\":\n            return this.num(dt.second, 2);\n          // fractional seconds\n          case \"uu\":\n            return this.num(Math.floor(dt.millisecond / 10), 2);\n          case \"uuu\":\n            return this.num(Math.floor(dt.millisecond / 100));\n          // minutes\n          case \"m\":\n            return this.num(dt.minute);\n          case \"mm\":\n            return this.num(dt.minute, 2);\n          // hours\n          case \"h\":\n            return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12);\n          case \"hh\":\n            return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12, 2);\n          case \"H\":\n            return this.num(dt.hour);\n          case \"HH\":\n            return this.num(dt.hour, 2);\n          // offset\n          case \"Z\":\n            // like +6\n            return formatOffset({ format: \"narrow\", allowZ: this.opts.allowZ });\n          case \"ZZ\":\n            // like +06:00\n            return formatOffset({ format: \"short\", allowZ: this.opts.allowZ });\n          case \"ZZZ\":\n            // like +0600\n            return formatOffset({ format: \"techie\", allowZ: this.opts.allowZ });\n          case \"ZZZZ\":\n            // like EST\n            return dt.zone.offsetName(dt.ts, { format: \"short\", locale: this.loc.locale });\n          case \"ZZZZZ\":\n            // like Eastern Standard Time\n            return dt.zone.offsetName(dt.ts, { format: \"long\", locale: this.loc.locale });\n          // zone\n          case \"z\":\n            // like America/New_York\n            return dt.zoneName;\n          // meridiems\n          case \"a\":\n            return meridiem();\n          // dates\n          case \"d\":\n            return useDateTimeFormatter ? string({ day: \"numeric\" }, \"day\") : this.num(dt.day);\n          case \"dd\":\n            return useDateTimeFormatter ? string({ day: \"2-digit\" }, \"day\") : this.num(dt.day, 2);\n          // weekdays - standalone\n          case \"c\":\n            // like 1\n            return this.num(dt.weekday);\n          case \"ccc\":\n            // like 'Tues'\n            return weekday(\"short\", true);\n          case \"cccc\":\n            // like 'Tuesday'\n            return weekday(\"long\", true);\n          case \"ccccc\":\n            // like 'T'\n            return weekday(\"narrow\", true);\n          // weekdays - format\n          case \"E\":\n            // like 1\n            return this.num(dt.weekday);\n          case \"EEE\":\n            // like 'Tues'\n            return weekday(\"short\", false);\n          case \"EEEE\":\n            // like 'Tuesday'\n            return weekday(\"long\", false);\n          case \"EEEEE\":\n            // like 'T'\n            return weekday(\"narrow\", false);\n          // months - standalone\n          case \"L\":\n            // like 1\n            return useDateTimeFormatter\n              ? string({ month: \"numeric\", day: \"numeric\" }, \"month\")\n              : this.num(dt.month);\n          case \"LL\":\n            // like 01, doesn't seem to work\n            return useDateTimeFormatter\n              ? string({ month: \"2-digit\", day: \"numeric\" }, \"month\")\n              : this.num(dt.month, 2);\n          case \"LLL\":\n            // like Jan\n            return month(\"short\", true);\n          case \"LLLL\":\n            // like January\n            return month(\"long\", true);\n          case \"LLLLL\":\n            // like J\n            return month(\"narrow\", true);\n          // months - format\n          case \"M\":\n            // like 1\n            return useDateTimeFormatter\n              ? string({ month: \"numeric\" }, \"month\")\n              : this.num(dt.month);\n          case \"MM\":\n            // like 01\n            return useDateTimeFormatter\n              ? string({ month: \"2-digit\" }, \"month\")\n              : this.num(dt.month, 2);\n          case \"MMM\":\n            // like Jan\n            return month(\"short\", false);\n          case \"MMMM\":\n            // like January\n            return month(\"long\", false);\n          case \"MMMMM\":\n            // like J\n            return month(\"narrow\", false);\n          // years\n          case \"y\":\n            // like 2014\n            return useDateTimeFormatter ? string({ year: \"numeric\" }, \"year\") : this.num(dt.year);\n          case \"yy\":\n            // like 14\n            return useDateTimeFormatter\n              ? string({ year: \"2-digit\" }, \"year\")\n              : this.num(dt.year.toString().slice(-2), 2);\n          case \"yyyy\":\n            // like 0012\n            return useDateTimeFormatter\n              ? string({ year: \"numeric\" }, \"year\")\n              : this.num(dt.year, 4);\n          case \"yyyyyy\":\n            // like 000012\n            return useDateTimeFormatter\n              ? string({ year: \"numeric\" }, \"year\")\n              : this.num(dt.year, 6);\n          // eras\n          case \"G\":\n            // like AD\n            return era(\"short\");\n          case \"GG\":\n            // like Anno Domini\n            return era(\"long\");\n          case \"GGGGG\":\n            return era(\"narrow\");\n          case \"kk\":\n            return this.num(dt.weekYear.toString().slice(-2), 2);\n          case \"kkkk\":\n            return this.num(dt.weekYear, 4);\n          case \"W\":\n            return this.num(dt.weekNumber);\n          case \"WW\":\n            return this.num(dt.weekNumber, 2);\n          case \"o\":\n            return this.num(dt.ordinal);\n          case \"ooo\":\n            return this.num(dt.ordinal, 3);\n          case \"q\":\n            // like 1\n            return this.num(dt.quarter);\n          case \"qq\":\n            // like 01\n            return this.num(dt.quarter, 2);\n          case \"X\":\n            return this.num(Math.floor(dt.ts / 1000));\n          case \"x\":\n            return this.num(dt.ts);\n          default:\n            return maybeMacro(token);\n        }\n      };\n\n    return stringifyTokens(Formatter.parseFormat(fmt), tokenToString);\n  }\n\n  formatDurationFromString(dur, fmt) {\n    const tokenToField = (token) => {\n        switch (token[0]) {\n          case \"S\":\n            return \"millisecond\";\n          case \"s\":\n            return \"second\";\n          case \"m\":\n            return \"minute\";\n          case \"h\":\n            return \"hour\";\n          case \"d\":\n            return \"day\";\n          case \"w\":\n            return \"week\";\n          case \"M\":\n            return \"month\";\n          case \"y\":\n            return \"year\";\n          default:\n            return null;\n        }\n      },\n      tokenToString = (lildur) => (token) => {\n        const mapped = tokenToField(token);\n        if (mapped) {\n          return this.num(lildur.get(mapped), token.length);\n        } else {\n          return token;\n        }\n      },\n      tokens = Formatter.parseFormat(fmt),\n      realTokens = tokens.reduce(\n        (found, { literal, val }) => (literal ? found : found.concat(val)),\n        []\n      ),\n      collapsed = dur.shiftTo(...realTokens.map(tokenToField).filter((t) => t));\n    return stringifyTokens(tokens, tokenToString(collapsed));\n  }\n}\n","export default class Invalid {\n  constructor(reason, explanation) {\n    this.reason = reason;\n    this.explanation = explanation;\n  }\n\n  toMessage() {\n    if (this.explanation) {\n      return `${this.reason}: ${this.explanation}`;\n    } else {\n      return this.reason;\n    }\n  }\n}\n","import { ZoneIsAbstractError } from \"./errors.js\";\n\n/**\n * @interface\n */\nexport default class Zone {\n  /**\n   * The type of zone\n   * @abstract\n   * @type {string}\n   */\n  get type() {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * The name of this zone.\n   * @abstract\n   * @type {string}\n   */\n  get name() {\n    throw new ZoneIsAbstractError();\n  }\n\n  get ianaName() {\n    return this.name;\n  }\n\n  /**\n   * Returns whether the offset is known to be fixed for the whole year.\n   * @abstract\n   * @type {boolean}\n   */\n  get isUniversal() {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Returns the offset's common name (such as EST) at the specified timestamp\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to get the name\n   * @param {Object} opts - Options to affect the format\n   * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.\n   * @param {string} opts.locale - What locale to return the offset name in.\n   * @return {string}\n   */\n  offsetName(ts, opts) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Returns the offset's value as a string\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to get the offset\n   * @param {string} format - What style of offset to return.\n   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively\n   * @return {string}\n   */\n  formatOffset(ts, format) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return the offset in minutes for this zone at the specified timestamp.\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to compute the offset\n   * @return {number}\n   */\n  offset(ts) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return whether this Zone is equal to another zone\n   * @abstract\n   * @param {Zone} otherZone - the zone to compare\n   * @return {boolean}\n   */\n  equals(otherZone) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return whether this Zone is valid.\n   * @abstract\n   * @type {boolean}\n   */\n  get isValid() {\n    throw new ZoneIsAbstractError();\n  }\n}\n","import { formatOffset, parseZoneInfo } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet singleton = null;\n\n/**\n * Represents the local zone for this JavaScript environment.\n * @implements {Zone}\n */\nexport default class SystemZone extends Zone {\n  /**\n   * Get a singleton instance of the local zone\n   * @return {SystemZone}\n   */\n  static get instance() {\n    if (singleton === null) {\n      singleton = new SystemZone();\n    }\n    return singleton;\n  }\n\n  /** @override **/\n  get type() {\n    return \"system\";\n  }\n\n  /** @override **/\n  get name() {\n    return new Intl.DateTimeFormat().resolvedOptions().timeZone;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName(ts, { format, locale }) {\n    return parseZoneInfo(ts, format, locale);\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.offset(ts), format);\n  }\n\n  /** @override **/\n  offset(ts) {\n    return -new Date(ts).getTimezoneOffset();\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"system\";\n  }\n\n  /** @override **/\n  get isValid() {\n    return true;\n  }\n}\n","import { formatOffset, parseZoneInfo, isUndefined, objToLocalTS } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet dtfCache = {};\nfunction makeDTF(zone) {\n  if (!dtfCache[zone]) {\n    dtfCache[zone] = new Intl.DateTimeFormat(\"en-US\", {\n      hour12: false,\n      timeZone: zone,\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      era: \"short\",\n    });\n  }\n  return dtfCache[zone];\n}\n\nconst typeToPos = {\n  year: 0,\n  month: 1,\n  day: 2,\n  era: 3,\n  hour: 4,\n  minute: 5,\n  second: 6,\n};\n\nfunction hackyOffset(dtf, date) {\n  const formatted = dtf.format(date).replace(/\\u200E/g, \"\"),\n    parsed = /(\\d+)\\/(\\d+)\\/(\\d+) (AD|BC),? (\\d+):(\\d+):(\\d+)/.exec(formatted),\n    [, fMonth, fDay, fYear, fadOrBc, fHour, fMinute, fSecond] = parsed;\n  return [fYear, fMonth, fDay, fadOrBc, fHour, fMinute, fSecond];\n}\n\nfunction partsOffset(dtf, date) {\n  const formatted = dtf.formatToParts(date);\n  const filled = [];\n  for (let i = 0; i < formatted.length; i++) {\n    const { type, value } = formatted[i];\n    const pos = typeToPos[type];\n\n    if (type === \"era\") {\n      filled[pos] = value;\n    } else if (!isUndefined(pos)) {\n      filled[pos] = parseInt(value, 10);\n    }\n  }\n  return filled;\n}\n\nlet ianaZoneCache = {};\n/**\n * A zone identified by an IANA identifier, like America/New_York\n * @implements {Zone}\n */\nexport default class IANAZone extends Zone {\n  /**\n   * @param {string} name - Zone name\n   * @return {IANAZone}\n   */\n  static create(name) {\n    if (!ianaZoneCache[name]) {\n      ianaZoneCache[name] = new IANAZone(name);\n    }\n    return ianaZoneCache[name];\n  }\n\n  /**\n   * Reset local caches. Should only be necessary in testing scenarios.\n   * @return {void}\n   */\n  static resetCache() {\n    ianaZoneCache = {};\n    dtfCache = {};\n  }\n\n  /**\n   * Returns whether the provided string is a valid specifier. This only checks the string's format, not that the specifier identifies a known zone; see isValidZone for that.\n   * @param {string} s - The string to check validity on\n   * @example IANAZone.isValidSpecifier(\"America/New_York\") //=> true\n   * @example IANAZone.isValidSpecifier(\"Sport~~blorp\") //=> false\n   * @deprecated This method returns false for some valid IANA names. Use isValidZone instead.\n   * @return {boolean}\n   */\n  static isValidSpecifier(s) {\n    return this.isValidZone(s);\n  }\n\n  /**\n   * Returns whether the provided string identifies a real zone\n   * @param {string} zone - The string to check\n   * @example IANAZone.isValidZone(\"America/New_York\") //=> true\n   * @example IANAZone.isValidZone(\"Fantasia/Castle\") //=> false\n   * @example IANAZone.isValidZone(\"Sport~~blorp\") //=> false\n   * @return {boolean}\n   */\n  static isValidZone(zone) {\n    if (!zone) {\n      return false;\n    }\n    try {\n      new Intl.DateTimeFormat(\"en-US\", { timeZone: zone }).format();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  constructor(name) {\n    super();\n    /** @private **/\n    this.zoneName = name;\n    /** @private **/\n    this.valid = IANAZone.isValidZone(name);\n  }\n\n  /** @override **/\n  get type() {\n    return \"iana\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.zoneName;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName(ts, { format, locale }) {\n    return parseZoneInfo(ts, format, locale, this.name);\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.offset(ts), format);\n  }\n\n  /** @override **/\n  offset(ts) {\n    const date = new Date(ts);\n\n    if (isNaN(date)) return NaN;\n\n    const dtf = makeDTF(this.name);\n    let [year, month, day, adOrBc, hour, minute, second] = dtf.formatToParts\n      ? partsOffset(dtf, date)\n      : hackyOffset(dtf, date);\n\n    if (adOrBc === \"BC\") {\n      year = -Math.abs(year) + 1;\n    }\n\n    // because we're using hour12 and https://bugs.chromium.org/p/chromium/issues/detail?id=1025564&can=2&q=%2224%3A00%22%20datetimeformat\n    const adjustedHour = hour === 24 ? 0 : hour;\n\n    const asUTC = objToLocalTS({\n      year,\n      month,\n      day,\n      hour: adjustedHour,\n      minute,\n      second,\n      millisecond: 0,\n    });\n\n    let asTS = +date;\n    const over = asTS % 1000;\n    asTS -= over >= 0 ? over : 1000 + over;\n    return (asUTC - asTS) / (60 * 1000);\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"iana\" && otherZone.name === this.name;\n  }\n\n  /** @override **/\n  get isValid() {\n    return this.valid;\n  }\n}\n","import { formatOffset, signedOffset } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet singleton = null;\n\n/**\n * A zone with a fixed offset (meaning no DST)\n * @implements {Zone}\n */\nexport default class FixedOffsetZone extends Zone {\n  /**\n   * Get a singleton instance of UTC\n   * @return {FixedOffsetZone}\n   */\n  static get utcInstance() {\n    if (singleton === null) {\n      singleton = new FixedOffsetZone(0);\n    }\n    return singleton;\n  }\n\n  /**\n   * Get an instance with a specified offset\n   * @param {number} offset - The offset in minutes\n   * @return {FixedOffsetZone}\n   */\n  static instance(offset) {\n    return offset === 0 ? FixedOffsetZone.utcInstance : new FixedOffsetZone(offset);\n  }\n\n  /**\n   * Get an instance of FixedOffsetZone from a UTC offset string, like \"UTC+6\"\n   * @param {string} s - The offset string to parse\n   * @example FixedOffsetZone.parseSpecifier(\"UTC+6\")\n   * @example FixedOffsetZone.parseSpecifier(\"UTC+06\")\n   * @example FixedOffsetZone.parseSpecifier(\"UTC-6:00\")\n   * @return {FixedOffsetZone}\n   */\n  static parseSpecifier(s) {\n    if (s) {\n      const r = s.match(/^utc(?:([+-]\\d{1,2})(?::(\\d{2}))?)?$/i);\n      if (r) {\n        return new FixedOffsetZone(signedOffset(r[1], r[2]));\n      }\n    }\n    return null;\n  }\n\n  constructor(offset) {\n    super();\n    /** @private **/\n    this.fixed = offset;\n  }\n\n  /** @override **/\n  get type() {\n    return \"fixed\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.fixed === 0 ? \"UTC\" : `UTC${formatOffset(this.fixed, \"narrow\")}`;\n  }\n\n  get ianaName() {\n    if (this.fixed === 0) {\n      return \"Etc/UTC\";\n    } else {\n      return `Etc/GMT${formatOffset(-this.fixed, \"narrow\")}`;\n    }\n  }\n\n  /** @override **/\n  offsetName() {\n    return this.name;\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.fixed, format);\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return true;\n  }\n\n  /** @override **/\n  offset() {\n    return this.fixed;\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"fixed\" && otherZone.fixed === this.fixed;\n  }\n\n  /** @override **/\n  get isValid() {\n    return true;\n  }\n}\n","import Zone from \"../zone.js\";\n\n/**\n * A zone that failed to parse. You should never need to instantiate this.\n * @implements {Zone}\n */\nexport default class InvalidZone extends Zone {\n  constructor(zoneName) {\n    super();\n    /**  @private */\n    this.zoneName = zoneName;\n  }\n\n  /** @override **/\n  get type() {\n    return \"invalid\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.zoneName;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName() {\n    return null;\n  }\n\n  /** @override **/\n  formatOffset() {\n    return \"\";\n  }\n\n  /** @override **/\n  offset() {\n    return NaN;\n  }\n\n  /** @override **/\n  equals() {\n    return false;\n  }\n\n  /** @override **/\n  get isValid() {\n    return false;\n  }\n}\n","/**\n * @private\n */\n\nimport Zone from \"../zone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport InvalidZone from \"../zones/invalidZone.js\";\n\nimport { isUndefined, isString, isNumber } from \"./util.js\";\n\nexport function normalizeZone(input, defaultZone) {\n  let offset;\n  if (isUndefined(input) || input === null) {\n    return defaultZone;\n  } else if (input instanceof Zone) {\n    return input;\n  } else if (isString(input)) {\n    const lowered = input.toLowerCase();\n    if (lowered === \"local\" || lowered === \"system\") return defaultZone;\n    else if (lowered === \"utc\" || lowered === \"gmt\") return FixedOffsetZone.utcInstance;\n    else return FixedOffsetZone.parseSpecifier(lowered) || IANAZone.create(input);\n  } else if (isNumber(input)) {\n    return FixedOffsetZone.instance(input);\n  } else if (typeof input === \"object\" && input.offset && typeof input.offset === \"number\") {\n    // This is dumb, but the instanceof check above doesn't seem to really work\n    // so we're duck checking it\n    return input;\n  } else {\n    return new InvalidZone(input);\n  }\n}\n","import SystemZone from \"./zones/systemZone.js\";\nimport IANAZone from \"./zones/IANAZone.js\";\nimport Locale from \"./impl/locale.js\";\n\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\n\nlet now = () => Date.now(),\n  defaultZone = \"system\",\n  defaultLocale = null,\n  defaultNumberingSystem = null,\n  defaultOutputCalendar = null,\n  throwOnInvalid;\n\n/**\n * Settings contains static getters and setters that control Luxon's overall behavior. Luxon is a simple library with few options, but the ones it does have live here.\n */\nexport default class Settings {\n  /**\n   * Get the callback for returning the current timestamp.\n   * @type {function}\n   */\n  static get now() {\n    return now;\n  }\n\n  /**\n   * Set the callback for returning the current timestamp.\n   * The function should return a number, which will be interpreted as an Epoch millisecond count\n   * @type {function}\n   * @example Settings.now = () => Date.now() + 3000 // pretend it is 3 seconds in the future\n   * @example Settings.now = () => 0 // always pretend it's Jan 1, 1970 at midnight in UTC time\n   */\n  static set now(n) {\n    now = n;\n  }\n\n  /**\n   * Set the default time zone to create DateTimes in. Does not affect existing instances.\n   * Use the value \"system\" to reset this value to the system's time zone.\n   * @type {string}\n   */\n  static set defaultZone(zone) {\n    defaultZone = zone;\n  }\n\n  /**\n   * Get the default time zone object currently used to create DateTimes. Does not affect existing instances.\n   * The default value is the system's time zone (the one set on the machine that runs this code).\n   * @type {Zone}\n   */\n  static get defaultZone() {\n    return normalizeZone(defaultZone, SystemZone.instance);\n  }\n\n  /**\n   * Get the default locale to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultLocale() {\n    return defaultLocale;\n  }\n\n  /**\n   * Set the default locale to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultLocale(locale) {\n    defaultLocale = locale;\n  }\n\n  /**\n   * Get the default numbering system to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultNumberingSystem() {\n    return defaultNumberingSystem;\n  }\n\n  /**\n   * Set the default numbering system to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultNumberingSystem(numberingSystem) {\n    defaultNumberingSystem = numberingSystem;\n  }\n\n  /**\n   * Get the default output calendar to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultOutputCalendar() {\n    return defaultOutputCalendar;\n  }\n\n  /**\n   * Set the default output calendar to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultOutputCalendar(outputCalendar) {\n    defaultOutputCalendar = outputCalendar;\n  }\n\n  /**\n   * Get whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals\n   * @type {boolean}\n   */\n  static get throwOnInvalid() {\n    return throwOnInvalid;\n  }\n\n  /**\n   * Set whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals\n   * @type {boolean}\n   */\n  static set throwOnInvalid(t) {\n    throwOnInvalid = t;\n  }\n\n  /**\n   * Reset Luxon's global caches. Should only be necessary in testing scenarios.\n   * @return {void}\n   */\n  static resetCaches() {\n    Locale.resetCache();\n    IANAZone.resetCache();\n  }\n}\n","import { padStart, roundTo, hasRelative } from \"./util.js\";\nimport * as English from \"./english.js\";\nimport Settings from \"../settings.js\";\nimport DateTime from \"../datetime.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\n\n// todo - remap caching\n\nlet intlLFCache = {};\nfunction getCachedLF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlLFCache[key];\n  if (!dtf) {\n    dtf = new Intl.ListFormat(locString, opts);\n    intlLFCache[key] = dtf;\n  }\n  return dtf;\n}\n\nlet intlDTCache = {};\nfunction getCachedDTF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlDTCache[key];\n  if (!dtf) {\n    dtf = new Intl.DateTimeFormat(locString, opts);\n    intlDTCache[key] = dtf;\n  }\n  return dtf;\n}\n\nlet intlNumCache = {};\nfunction getCachedINF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let inf = intlNumCache[key];\n  if (!inf) {\n    inf = new Intl.NumberFormat(locString, opts);\n    intlNumCache[key] = inf;\n  }\n  return inf;\n}\n\nlet intlRelCache = {};\nfunction getCachedRTF(locString, opts = {}) {\n  const { base, ...cacheKeyOpts } = opts; // exclude `base` from the options\n  const key = JSON.stringify([locString, cacheKeyOpts]);\n  let inf = intlRelCache[key];\n  if (!inf) {\n    inf = new Intl.RelativeTimeFormat(locString, opts);\n    intlRelCache[key] = inf;\n  }\n  return inf;\n}\n\nlet sysLocaleCache = null;\nfunction systemLocale() {\n  if (sysLocaleCache) {\n    return sysLocaleCache;\n  } else {\n    sysLocaleCache = new Intl.DateTimeFormat().resolvedOptions().locale;\n    return sysLocaleCache;\n  }\n}\n\nfunction parseLocaleString(localeStr) {\n  // I really want to avoid writing a BCP 47 parser\n  // see, e.g. https://github.com/wooorm/bcp-47\n  // Instead, we'll do this:\n\n  // a) if the string has no -u extensions, just leave it alone\n  // b) if it does, use Intl to resolve everything\n  // c) if Intl fails, try again without the -u\n\n  const uIndex = localeStr.indexOf(\"-u-\");\n  if (uIndex === -1) {\n    return [localeStr];\n  } else {\n    let options;\n    const smaller = localeStr.substring(0, uIndex);\n    try {\n      options = getCachedDTF(localeStr).resolvedOptions();\n    } catch (e) {\n      options = getCachedDTF(smaller).resolvedOptions();\n    }\n\n    const { numberingSystem, calendar } = options;\n    // return the smaller one so that we can append the calendar and numbering overrides to it\n    return [smaller, numberingSystem, calendar];\n  }\n}\n\nfunction intlConfigString(localeStr, numberingSystem, outputCalendar) {\n  if (outputCalendar || numberingSystem) {\n    localeStr += \"-u\";\n\n    if (outputCalendar) {\n      localeStr += `-ca-${outputCalendar}`;\n    }\n\n    if (numberingSystem) {\n      localeStr += `-nu-${numberingSystem}`;\n    }\n    return localeStr;\n  } else {\n    return localeStr;\n  }\n}\n\nfunction mapMonths(f) {\n  const ms = [];\n  for (let i = 1; i <= 12; i++) {\n    const dt = DateTime.utc(2016, i, 1);\n    ms.push(f(dt));\n  }\n  return ms;\n}\n\nfunction mapWeekdays(f) {\n  const ms = [];\n  for (let i = 1; i <= 7; i++) {\n    const dt = DateTime.utc(2016, 11, 13 + i);\n    ms.push(f(dt));\n  }\n  return ms;\n}\n\nfunction listStuff(loc, length, defaultOK, englishFn, intlFn) {\n  const mode = loc.listingMode(defaultOK);\n\n  if (mode === \"error\") {\n    return null;\n  } else if (mode === \"en\") {\n    return englishFn(length);\n  } else {\n    return intlFn(length);\n  }\n}\n\nfunction supportsFastNumbers(loc) {\n  if (loc.numberingSystem && loc.numberingSystem !== \"latn\") {\n    return false;\n  } else {\n    return (\n      loc.numberingSystem === \"latn\" ||\n      !loc.locale ||\n      loc.locale.startsWith(\"en\") ||\n      new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem === \"latn\"\n    );\n  }\n}\n\n/**\n * @private\n */\n\nclass PolyNumberFormatter {\n  constructor(intl, forceSimple, opts) {\n    this.padTo = opts.padTo || 0;\n    this.floor = opts.floor || false;\n\n    const { padTo, floor, ...otherOpts } = opts;\n\n    if (!forceSimple || Object.keys(otherOpts).length > 0) {\n      const intlOpts = { useGrouping: false, ...opts };\n      if (opts.padTo > 0) intlOpts.minimumIntegerDigits = opts.padTo;\n      this.inf = getCachedINF(intl, intlOpts);\n    }\n  }\n\n  format(i) {\n    if (this.inf) {\n      const fixed = this.floor ? Math.floor(i) : i;\n      return this.inf.format(fixed);\n    } else {\n      // to match the browser's numberformatter defaults\n      const fixed = this.floor ? Math.floor(i) : roundTo(i, 3);\n      return padStart(fixed, this.padTo);\n    }\n  }\n}\n\n/**\n * @private\n */\n\nclass PolyDateFormatter {\n  constructor(dt, intl, opts) {\n    this.opts = opts;\n\n    let z;\n    if (dt.zone.isUniversal) {\n      // UTC-8 or Etc/UTC-8 are not part of tzdata, only Etc/GMT+8 and the like.\n      // That is why fixed-offset TZ is set to that unless it is:\n      // 1. Representing offset 0 when UTC is used to maintain previous behavior and does not become GMT.\n      // 2. Unsupported by the browser:\n      //    - some do not support Etc/\n      //    - < Etc/GMT-14, > Etc/GMT+12, and 30-minute or 45-minute offsets are not part of tzdata\n      const gmtOffset = -1 * (dt.offset / 60);\n      const offsetZ = gmtOffset >= 0 ? `Etc/GMT+${gmtOffset}` : `Etc/GMT${gmtOffset}`;\n      if (dt.offset !== 0 && IANAZone.create(offsetZ).valid) {\n        z = offsetZ;\n        this.dt = dt;\n      } else {\n        // Not all fixed-offset zones like Etc/+4:30 are present in tzdata.\n        // So we have to make do. Two cases:\n        // 1. The format options tell us to show the zone. We can't do that, so the best\n        // we can do is format the date in UTC.\n        // 2. The format options don't tell us to show the zone. Then we can adjust them\n        // the time and tell the formatter to show it to us in UTC, so that the time is right\n        // and the bad zone doesn't show up.\n        z = \"UTC\";\n        if (opts.timeZoneName) {\n          this.dt = dt;\n        } else {\n          this.dt = dt.offset === 0 ? dt : DateTime.fromMillis(dt.ts + dt.offset * 60 * 1000);\n        }\n      }\n    } else if (dt.zone.type === \"system\") {\n      this.dt = dt;\n    } else {\n      this.dt = dt;\n      z = dt.zone.name;\n    }\n\n    const intlOpts = { ...this.opts };\n    if (z) {\n      intlOpts.timeZone = z;\n    }\n    this.dtf = getCachedDTF(intl, intlOpts);\n  }\n\n  format() {\n    return this.dtf.format(this.dt.toJSDate());\n  }\n\n  formatToParts() {\n    return this.dtf.formatToParts(this.dt.toJSDate());\n  }\n\n  resolvedOptions() {\n    return this.dtf.resolvedOptions();\n  }\n}\n\n/**\n * @private\n */\nclass PolyRelFormatter {\n  constructor(intl, isEnglish, opts) {\n    this.opts = { style: \"long\", ...opts };\n    if (!isEnglish && hasRelative()) {\n      this.rtf = getCachedRTF(intl, opts);\n    }\n  }\n\n  format(count, unit) {\n    if (this.rtf) {\n      return this.rtf.format(count, unit);\n    } else {\n      return English.formatRelativeTime(unit, count, this.opts.numeric, this.opts.style !== \"long\");\n    }\n  }\n\n  formatToParts(count, unit) {\n    if (this.rtf) {\n      return this.rtf.formatToParts(count, unit);\n    } else {\n      return [];\n    }\n  }\n}\n\n/**\n * @private\n */\n\nexport default class Locale {\n  static fromOpts(opts) {\n    return Locale.create(opts.locale, opts.numberingSystem, opts.outputCalendar, opts.defaultToEN);\n  }\n\n  static create(locale, numberingSystem, outputCalendar, defaultToEN = false) {\n    const specifiedLocale = locale || Settings.defaultLocale;\n    // the system locale is useful for human readable strings but annoying for parsing/formatting known formats\n    const localeR = specifiedLocale || (defaultToEN ? \"en-US\" : systemLocale());\n    const numberingSystemR = numberingSystem || Settings.defaultNumberingSystem;\n    const outputCalendarR = outputCalendar || Settings.defaultOutputCalendar;\n    return new Locale(localeR, numberingSystemR, outputCalendarR, specifiedLocale);\n  }\n\n  static resetCache() {\n    sysLocaleCache = null;\n    intlDTCache = {};\n    intlNumCache = {};\n    intlRelCache = {};\n  }\n\n  static fromObject({ locale, numberingSystem, outputCalendar } = {}) {\n    return Locale.create(locale, numberingSystem, outputCalendar);\n  }\n\n  constructor(locale, numbering, outputCalendar, specifiedLocale) {\n    const [parsedLocale, parsedNumberingSystem, parsedOutputCalendar] = parseLocaleString(locale);\n\n    this.locale = parsedLocale;\n    this.numberingSystem = numbering || parsedNumberingSystem || null;\n    this.outputCalendar = outputCalendar || parsedOutputCalendar || null;\n    this.intl = intlConfigString(this.locale, this.numberingSystem, this.outputCalendar);\n\n    this.weekdaysCache = { format: {}, standalone: {} };\n    this.monthsCache = { format: {}, standalone: {} };\n    this.meridiemCache = null;\n    this.eraCache = {};\n\n    this.specifiedLocale = specifiedLocale;\n    this.fastNumbersCached = null;\n  }\n\n  get fastNumbers() {\n    if (this.fastNumbersCached == null) {\n      this.fastNumbersCached = supportsFastNumbers(this);\n    }\n\n    return this.fastNumbersCached;\n  }\n\n  listingMode() {\n    const isActuallyEn = this.isEnglish();\n    const hasNoWeirdness =\n      (this.numberingSystem === null || this.numberingSystem === \"latn\") &&\n      (this.outputCalendar === null || this.outputCalendar === \"gregory\");\n    return isActuallyEn && hasNoWeirdness ? \"en\" : \"intl\";\n  }\n\n  clone(alts) {\n    if (!alts || Object.getOwnPropertyNames(alts).length === 0) {\n      return this;\n    } else {\n      return Locale.create(\n        alts.locale || this.specifiedLocale,\n        alts.numberingSystem || this.numberingSystem,\n        alts.outputCalendar || this.outputCalendar,\n        alts.defaultToEN || false\n      );\n    }\n  }\n\n  redefaultToEN(alts = {}) {\n    return this.clone({ ...alts, defaultToEN: true });\n  }\n\n  redefaultToSystem(alts = {}) {\n    return this.clone({ ...alts, defaultToEN: false });\n  }\n\n  months(length, format = false, defaultOK = true) {\n    return listStuff(this, length, defaultOK, English.months, () => {\n      const intl = format ? { month: length, day: \"numeric\" } : { month: length },\n        formatStr = format ? \"format\" : \"standalone\";\n      if (!this.monthsCache[formatStr][length]) {\n        this.monthsCache[formatStr][length] = mapMonths((dt) => this.extract(dt, intl, \"month\"));\n      }\n      return this.monthsCache[formatStr][length];\n    });\n  }\n\n  weekdays(length, format = false, defaultOK = true) {\n    return listStuff(this, length, defaultOK, English.weekdays, () => {\n      const intl = format\n          ? { weekday: length, year: \"numeric\", month: \"long\", day: \"numeric\" }\n          : { weekday: length },\n        formatStr = format ? \"format\" : \"standalone\";\n      if (!this.weekdaysCache[formatStr][length]) {\n        this.weekdaysCache[formatStr][length] = mapWeekdays((dt) =>\n          this.extract(dt, intl, \"weekday\")\n        );\n      }\n      return this.weekdaysCache[formatStr][length];\n    });\n  }\n\n  meridiems(defaultOK = true) {\n    return listStuff(\n      this,\n      undefined,\n      defaultOK,\n      () => English.meridiems,\n      () => {\n        // In theory there could be aribitrary day periods. We're gonna assume there are exactly two\n        // for AM and PM. This is probably wrong, but it's makes parsing way easier.\n        if (!this.meridiemCache) {\n          const intl = { hour: \"numeric\", hourCycle: \"h12\" };\n          this.meridiemCache = [DateTime.utc(2016, 11, 13, 9), DateTime.utc(2016, 11, 13, 19)].map(\n            (dt) => this.extract(dt, intl, \"dayperiod\")\n          );\n        }\n\n        return this.meridiemCache;\n      }\n    );\n  }\n\n  eras(length, defaultOK = true) {\n    return listStuff(this, length, defaultOK, English.eras, () => {\n      const intl = { era: length };\n\n      // This is problematic. Different calendars are going to define eras totally differently. What I need is the minimum set of dates\n      // to definitely enumerate them.\n      if (!this.eraCache[length]) {\n        this.eraCache[length] = [DateTime.utc(-40, 1, 1), DateTime.utc(2017, 1, 1)].map((dt) =>\n          this.extract(dt, intl, \"era\")\n        );\n      }\n\n      return this.eraCache[length];\n    });\n  }\n\n  extract(dt, intlOpts, field) {\n    const df = this.dtFormatter(dt, intlOpts),\n      results = df.formatToParts(),\n      matching = results.find((m) => m.type.toLowerCase() === field);\n    return matching ? matching.value : null;\n  }\n\n  numberFormatter(opts = {}) {\n    // this forcesimple option is never used (the only caller short-circuits on it, but it seems safer to leave)\n    // (in contrast, the rest of the condition is used heavily)\n    return new PolyNumberFormatter(this.intl, opts.forceSimple || this.fastNumbers, opts);\n  }\n\n  dtFormatter(dt, intlOpts = {}) {\n    return new PolyDateFormatter(dt, this.intl, intlOpts);\n  }\n\n  relFormatter(opts = {}) {\n    return new PolyRelFormatter(this.intl, this.isEnglish(), opts);\n  }\n\n  listFormatter(opts = {}) {\n    return getCachedLF(this.intl, opts);\n  }\n\n  isEnglish() {\n    return (\n      this.locale === \"en\" ||\n      this.locale.toLowerCase() === \"en-us\" ||\n      new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith(\"en-us\")\n    );\n  }\n\n  equals(other) {\n    return (\n      this.locale === other.locale &&\n      this.numberingSystem === other.numberingSystem &&\n      this.outputCalendar === other.outputCalendar\n    );\n  }\n}\n","import {\n  untruncateYear,\n  signedOffset,\n  parseInteger,\n  parseMillis,\n  ianaRegex,\n  isUndefined,\n  parseFloating\n} from \"./util.js\";\nimport * as English from \"./english.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\n\n/*\n * This file handles parsing for well-specified formats. Here's how it works:\n * Two things go into parsing: a regex to match with and an extractor to take apart the groups in the match.\n * An extractor is just a function that takes a regex match array and returns a { year: ..., month: ... } object\n * parse() does the work of executing the regex and applying the extractor. It takes multiple regex/extractor pairs to try in sequence.\n * Extractors can take a \"cursor\" representing the offset in the match to look at. This makes it easy to combine extractors.\n * combineExtractors() does the work of combining them, keeping track of the cursor through multiple extractions.\n * Some extractions are super dumb and simpleParse and fromStrings help DRY them.\n */\n\nfunction combineRegexes(...regexes) {\n  const full = regexes.reduce((f, r) => f + r.source, \"\");\n  return RegExp(`^${full}$`);\n}\n\nfunction combineExtractors(...extractors) {\n  return m =>\n    extractors\n      .reduce(\n        ([mergedVals, mergedZone, cursor], ex) => {\n          const [val, zone, next] = ex(m, cursor);\n          return [{ ...mergedVals, ...val }, zone || mergedZone, next];\n        },\n        [{}, null, 1]\n      )\n      .slice(0, 2);\n}\n\nfunction parse(s, ...patterns) {\n  if (s == null) {\n    return [null, null];\n  }\n\n  for (const [regex, extractor] of patterns) {\n    const m = regex.exec(s);\n    if (m) {\n      return extractor(m);\n    }\n  }\n  return [null, null];\n}\n\nfunction simpleParse(...keys) {\n  return (match, cursor) => {\n    const ret = {};\n    let i;\n\n    for (i = 0; i < keys.length; i++) {\n      ret[keys[i]] = parseInteger(match[cursor + i]);\n    }\n    return [ret, null, cursor + i];\n  };\n}\n\n// ISO and SQL parsing\nconst offsetRegex = /(?:(Z)|([+-]\\d\\d)(?::?(\\d\\d))?)/;\nconst isoExtendedZone = `(?:${offsetRegex.source}?(?:\\\\[(${ianaRegex.source})\\\\])?)?`;\nconst isoTimeBaseRegex = /(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:[.,](\\d{1,30}))?)?)?/;\nconst isoTimeRegex = RegExp(`${isoTimeBaseRegex.source}${isoExtendedZone}`);\nconst isoTimeExtensionRegex = RegExp(`(?:T${isoTimeRegex.source})?`);\nconst isoYmdRegex = /([+-]\\d{6}|\\d{4})(?:-?(\\d\\d)(?:-?(\\d\\d))?)?/;\nconst isoWeekRegex = /(\\d{4})-?W(\\d\\d)(?:-?(\\d))?/;\nconst isoOrdinalRegex = /(\\d{4})-?(\\d{3})/;\nconst extractISOWeekData = simpleParse(\"weekYear\", \"weekNumber\", \"weekDay\");\nconst extractISOOrdinalData = simpleParse(\"year\", \"ordinal\");\nconst sqlYmdRegex = /(\\d{4})-(\\d\\d)-(\\d\\d)/; // dumbed-down version of the ISO one\nconst sqlTimeRegex = RegExp(\n  `${isoTimeBaseRegex.source} ?(?:${offsetRegex.source}|(${ianaRegex.source}))?`\n);\nconst sqlTimeExtensionRegex = RegExp(`(?: ${sqlTimeRegex.source})?`);\n\nfunction int(match, pos, fallback) {\n  const m = match[pos];\n  return isUndefined(m) ? fallback : parseInteger(m);\n}\n\nfunction extractISOYmd(match, cursor) {\n  const item = {\n    year: int(match, cursor),\n    month: int(match, cursor + 1, 1),\n    day: int(match, cursor + 2, 1)\n  };\n\n  return [item, null, cursor + 3];\n}\n\nfunction extractISOTime(match, cursor) {\n  const item = {\n    hours: int(match, cursor, 0),\n    minutes: int(match, cursor + 1, 0),\n    seconds: int(match, cursor + 2, 0),\n    milliseconds: parseMillis(match[cursor + 3])\n  };\n\n  return [item, null, cursor + 4];\n}\n\nfunction extractISOOffset(match, cursor) {\n  const local = !match[cursor] && !match[cursor + 1],\n    fullOffset = signedOffset(match[cursor + 1], match[cursor + 2]),\n    zone = local ? null : FixedOffsetZone.instance(fullOffset);\n  return [{}, zone, cursor + 3];\n}\n\nfunction extractIANAZone(match, cursor) {\n  const zone = match[cursor] ? IANAZone.create(match[cursor]) : null;\n  return [{}, zone, cursor + 1];\n}\n\n// ISO time parsing\n\nconst isoTimeOnly = RegExp(`^T?${isoTimeBaseRegex.source}$`);\n\n// ISO duration parsing\n\nconst isoDuration = /^-?P(?:(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)Y)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)M)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)W)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)D)?(?:T(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)H)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)M)?(?:(-?\\d{1,20})(?:[.,](-?\\d{1,20}))?S)?)?)$/;\n\nfunction extractISODuration(match) {\n  const [\n    s,\n    yearStr,\n    monthStr,\n    weekStr,\n    dayStr,\n    hourStr,\n    minuteStr,\n    secondStr,\n    millisecondsStr\n  ] = match;\n\n  const hasNegativePrefix = s[0] === \"-\";\n  const negativeSeconds = secondStr && secondStr[0] === \"-\";\n\n  const maybeNegate = (num, force = false) =>\n    num !== undefined && (force || (num && hasNegativePrefix)) ? -num : num;\n\n  return [\n    {\n      years: maybeNegate(parseFloating(yearStr)),\n      months: maybeNegate(parseFloating(monthStr)),\n      weeks: maybeNegate(parseFloating(weekStr)),\n      days: maybeNegate(parseFloating(dayStr)),\n      hours: maybeNegate(parseFloating(hourStr)),\n      minutes: maybeNegate(parseFloating(minuteStr)),\n      seconds: maybeNegate(parseFloating(secondStr), secondStr === \"-0\"),\n      milliseconds: maybeNegate(parseMillis(millisecondsStr), negativeSeconds)\n    }\n  ];\n}\n\n// These are a little braindead. EDT *should* tell us that we're in, say, America/New_York\n// and not just that we're in -240 *right now*. But since I don't think these are used that often\n// I'm just going to ignore that\nconst obsOffsets = {\n  GMT: 0,\n  EDT: -4 * 60,\n  EST: -5 * 60,\n  CDT: -5 * 60,\n  CST: -6 * 60,\n  MDT: -6 * 60,\n  MST: -7 * 60,\n  PDT: -7 * 60,\n  PST: -8 * 60\n};\n\nfunction fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n  const result = {\n    year: yearStr.length === 2 ? untruncateYear(parseInteger(yearStr)) : parseInteger(yearStr),\n    month: English.monthsShort.indexOf(monthStr) + 1,\n    day: parseInteger(dayStr),\n    hour: parseInteger(hourStr),\n    minute: parseInteger(minuteStr)\n  };\n\n  if (secondStr) result.second = parseInteger(secondStr);\n  if (weekdayStr) {\n    result.weekday =\n      weekdayStr.length > 3\n        ? English.weekdaysLong.indexOf(weekdayStr) + 1\n        : English.weekdaysShort.indexOf(weekdayStr) + 1;\n  }\n\n  return result;\n}\n\n// RFC 2822/5322\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\\d\\d)(\\d\\d)))$/;\n\nfunction extractRFC2822(match) {\n  const [\n      ,\n      weekdayStr,\n      dayStr,\n      monthStr,\n      yearStr,\n      hourStr,\n      minuteStr,\n      secondStr,\n      obsOffset,\n      milOffset,\n      offHourStr,\n      offMinuteStr\n    ] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n\n  let offset;\n  if (obsOffset) {\n    offset = obsOffsets[obsOffset];\n  } else if (milOffset) {\n    offset = 0;\n  } else {\n    offset = signedOffset(offHourStr, offMinuteStr);\n  }\n\n  return [result, new FixedOffsetZone(offset)];\n}\n\nfunction preprocessRFC2822(s) {\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\n  return s\n    .replace(/\\([^()]*\\)|[\\n\\t]/g, \" \")\n    .replace(/(\\s\\s+)/g, \" \")\n    .trim();\n}\n\n// http date\n\nconst rfc1123 = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d\\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,\n  rfc850 = /^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d\\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,\n  ascii = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \\d|\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) (\\d{4})$/;\n\nfunction extractRFC1123Or850(match) {\n  const [, weekdayStr, dayStr, monthStr, yearStr, hourStr, minuteStr, secondStr] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n  return [result, FixedOffsetZone.utcInstance];\n}\n\nfunction extractASCII(match) {\n  const [, weekdayStr, monthStr, dayStr, hourStr, minuteStr, secondStr, yearStr] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n  return [result, FixedOffsetZone.utcInstance];\n}\n\nconst isoYmdWithTimeExtensionRegex = combineRegexes(isoYmdRegex, isoTimeExtensionRegex);\nconst isoWeekWithTimeExtensionRegex = combineRegexes(isoWeekRegex, isoTimeExtensionRegex);\nconst isoOrdinalWithTimeExtensionRegex = combineRegexes(isoOrdinalRegex, isoTimeExtensionRegex);\nconst isoTimeCombinedRegex = combineRegexes(isoTimeRegex);\n\nconst extractISOYmdTimeAndOffset = combineExtractors(\n  extractISOYmd,\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\nconst extractISOWeekTimeAndOffset = combineExtractors(\n  extractISOWeekData,\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\nconst extractISOOrdinalDateAndTime = combineExtractors(\n  extractISOOrdinalData,\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\nconst extractISOTimeAndOffset = combineExtractors(\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\n\n/*\n * @private\n */\n\nexport function parseISODate(s) {\n  return parse(\n    s,\n    [isoYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset],\n    [isoWeekWithTimeExtensionRegex, extractISOWeekTimeAndOffset],\n    [isoOrdinalWithTimeExtensionRegex, extractISOOrdinalDateAndTime],\n    [isoTimeCombinedRegex, extractISOTimeAndOffset]\n  );\n}\n\nexport function parseRFC2822Date(s) {\n  return parse(preprocessRFC2822(s), [rfc2822, extractRFC2822]);\n}\n\nexport function parseHTTPDate(s) {\n  return parse(\n    s,\n    [rfc1123, extractRFC1123Or850],\n    [rfc850, extractRFC1123Or850],\n    [ascii, extractASCII]\n  );\n}\n\nexport function parseISODuration(s) {\n  return parse(s, [isoDuration, extractISODuration]);\n}\n\nconst extractISOTimeOnly = combineExtractors(extractISOTime);\n\nexport function parseISOTimeOnly(s) {\n  return parse(s, [isoTimeOnly, extractISOTimeOnly]);\n}\n\nconst sqlYmdWithTimeExtensionRegex = combineRegexes(sqlYmdRegex, sqlTimeExtensionRegex);\nconst sqlTimeCombinedRegex = combineRegexes(sqlTimeRegex);\n\nconst extractISOTimeOffsetAndIANAZone = combineExtractors(\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\n\nexport function parseSQL(s) {\n  return parse(\n    s,\n    [sqlYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset],\n    [sqlTimeCombinedRegex, extractISOTimeOffsetAndIANAZone]\n  );\n}\n","import { InvalidArgumentError, InvalidDurationError, InvalidUnitError } from \"./errors.js\";\nimport Formatter from \"./impl/formatter.js\";\nimport Invalid from \"./impl/invalid.js\";\nimport Locale from \"./impl/locale.js\";\nimport { parseISODuration, parseISOTimeOnly } from \"./impl/regexParser.js\";\nimport {\n  asNumber,\n  hasOwnProperty,\n  isNumber,\n  isUndefined,\n  normalizeObject,\n  roundTo,\n} from \"./impl/util.js\";\nimport Settings from \"./settings.js\";\n\nconst INVALID = \"Invalid Duration\";\n\n// unit conversion constants\nexport const lowOrderMatrix = {\n    weeks: {\n      days: 7,\n      hours: 7 * 24,\n      minutes: 7 * 24 * 60,\n      seconds: 7 * 24 * 60 * 60,\n      milliseconds: 7 * 24 * 60 * 60 * 1000,\n    },\n    days: {\n      hours: 24,\n      minutes: 24 * 60,\n      seconds: 24 * 60 * 60,\n      milliseconds: 24 * 60 * 60 * 1000,\n    },\n    hours: { minutes: 60, seconds: 60 * 60, milliseconds: 60 * 60 * 1000 },\n    minutes: { seconds: 60, milliseconds: 60 * 1000 },\n    seconds: { milliseconds: 1000 },\n  },\n  casualMatrix = {\n    years: {\n      quarters: 4,\n      months: 12,\n      weeks: 52,\n      days: 365,\n      hours: 365 * 24,\n      minutes: 365 * 24 * 60,\n      seconds: 365 * 24 * 60 * 60,\n      milliseconds: 365 * 24 * 60 * 60 * 1000,\n    },\n    quarters: {\n      months: 3,\n      weeks: 13,\n      days: 91,\n      hours: 91 * 24,\n      minutes: 91 * 24 * 60,\n      seconds: 91 * 24 * 60 * 60,\n      milliseconds: 91 * 24 * 60 * 60 * 1000,\n    },\n    months: {\n      weeks: 4,\n      days: 30,\n      hours: 30 * 24,\n      minutes: 30 * 24 * 60,\n      seconds: 30 * 24 * 60 * 60,\n      milliseconds: 30 * 24 * 60 * 60 * 1000,\n    },\n\n    ...lowOrderMatrix,\n  },\n  daysInYearAccurate = 146097.0 / 400,\n  daysInMonthAccurate = 146097.0 / 4800,\n  accurateMatrix = {\n    years: {\n      quarters: 4,\n      months: 12,\n      weeks: daysInYearAccurate / 7,\n      days: daysInYearAccurate,\n      hours: daysInYearAccurate * 24,\n      minutes: daysInYearAccurate * 24 * 60,\n      seconds: daysInYearAccurate * 24 * 60 * 60,\n      milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000,\n    },\n    quarters: {\n      months: 3,\n      weeks: daysInYearAccurate / 28,\n      days: daysInYearAccurate / 4,\n      hours: (daysInYearAccurate * 24) / 4,\n      minutes: (daysInYearAccurate * 24 * 60) / 4,\n      seconds: (daysInYearAccurate * 24 * 60 * 60) / 4,\n      milliseconds: (daysInYearAccurate * 24 * 60 * 60 * 1000) / 4,\n    },\n    months: {\n      weeks: daysInMonthAccurate / 7,\n      days: daysInMonthAccurate,\n      hours: daysInMonthAccurate * 24,\n      minutes: daysInMonthAccurate * 24 * 60,\n      seconds: daysInMonthAccurate * 24 * 60 * 60,\n      milliseconds: daysInMonthAccurate * 24 * 60 * 60 * 1000,\n    },\n    ...lowOrderMatrix,\n  };\n\n// units ordered by size\nconst orderedUnits = [\n  \"years\",\n  \"quarters\",\n  \"months\",\n  \"weeks\",\n  \"days\",\n  \"hours\",\n  \"minutes\",\n  \"seconds\",\n  \"milliseconds\",\n];\n\nconst reverseUnits = orderedUnits.slice(0).reverse();\n\n// clone really means \"create another instance just like this one, but with these changes\"\nfunction clone(dur, alts, clear = false) {\n  // deep merge for vals\n  const conf = {\n    values: clear ? alts.values : { ...dur.values, ...(alts.values || {}) },\n    loc: dur.loc.clone(alts.loc),\n    conversionAccuracy: alts.conversionAccuracy || dur.conversionAccuracy,\n  };\n  return new Duration(conf);\n}\n\nfunction antiTrunc(n) {\n  return n < 0 ? Math.floor(n) : Math.ceil(n);\n}\n\n// NB: mutates parameters\nfunction convert(matrix, fromMap, fromUnit, toMap, toUnit) {\n  const conv = matrix[toUnit][fromUnit],\n    raw = fromMap[fromUnit] / conv,\n    sameSign = Math.sign(raw) === Math.sign(toMap[toUnit]),\n    // ok, so this is wild, but see the matrix in the tests\n    added =\n      !sameSign && toMap[toUnit] !== 0 && Math.abs(raw) <= 1 ? antiTrunc(raw) : Math.trunc(raw);\n  toMap[toUnit] += added;\n  fromMap[fromUnit] -= added * conv;\n}\n\n// NB: mutates parameters\nfunction normalizeValues(matrix, vals) {\n  reverseUnits.reduce((previous, current) => {\n    if (!isUndefined(vals[current])) {\n      if (previous) {\n        convert(matrix, vals, previous, vals, current);\n      }\n      return current;\n    } else {\n      return previous;\n    }\n  }, null);\n}\n\n/**\n * A Duration object represents a period of time, like \"2 months\" or \"1 day, 1 hour\". Conceptually, it's just a map of units to their quantities, accompanied by some additional configuration and methods for creating, parsing, interrogating, transforming, and formatting them. They can be used on their own or in conjunction with other Luxon types; for example, you can use {@link DateTime#plus} to add a Duration object to a DateTime, producing another DateTime.\n *\n * Here is a brief overview of commonly used methods and getters in Duration:\n *\n * * **Creation** To create a Duration, use {@link Duration#fromMillis}, {@link Duration#fromObject}, or {@link Duration#fromISO}.\n * * **Unit values** See the {@link Duration#years}, {@link Duration#months}, {@link Duration#weeks}, {@link Duration#days}, {@link Duration#hours}, {@link Duration#minutes}, {@link Duration#seconds}, {@link Duration#milliseconds} accessors.\n * * **Configuration** See  {@link Duration#locale} and {@link Duration#numberingSystem} accessors.\n * * **Transformation** To create new Durations out of old ones use {@link Duration#plus}, {@link Duration#minus}, {@link Duration#normalize}, {@link Duration#set}, {@link Duration#reconfigure}, {@link Duration#shiftTo}, and {@link Duration#negate}.\n * * **Output** To convert the Duration into other representations, see {@link Duration#as}, {@link Duration#toISO}, {@link Duration#toFormat}, and {@link Duration#toJSON}\n *\n * There's are more methods documented below. In addition, for more information on subtler topics like internationalization and validity, see the external documentation.\n */\nexport default class Duration {\n  /**\n   * @private\n   */\n  constructor(config) {\n    const accurate = config.conversionAccuracy === \"longterm\" || false;\n    /**\n     * @access private\n     */\n    this.values = config.values;\n    /**\n     * @access private\n     */\n    this.loc = config.loc || Locale.create();\n    /**\n     * @access private\n     */\n    this.conversionAccuracy = accurate ? \"longterm\" : \"casual\";\n    /**\n     * @access private\n     */\n    this.invalid = config.invalid || null;\n    /**\n     * @access private\n     */\n    this.matrix = accurate ? accurateMatrix : casualMatrix;\n    /**\n     * @access private\n     */\n    this.isLuxonDuration = true;\n  }\n\n  /**\n   * Create Duration from a number of milliseconds.\n   * @param {number} count of milliseconds\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @return {Duration}\n   */\n  static fromMillis(count, opts) {\n    return Duration.fromObject({ milliseconds: count }, opts);\n  }\n\n  /**\n   * Create a Duration from a JavaScript object with keys like 'years' and 'hours'.\n   * If this object is empty then a zero milliseconds duration is returned.\n   * @param {Object} obj - the object to create the DateTime from\n   * @param {number} obj.years\n   * @param {number} obj.quarters\n   * @param {number} obj.months\n   * @param {number} obj.weeks\n   * @param {number} obj.days\n   * @param {number} obj.hours\n   * @param {number} obj.minutes\n   * @param {number} obj.seconds\n   * @param {number} obj.milliseconds\n   * @param {Object} [opts=[]] - options for creating this Duration\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @return {Duration}\n   */\n  static fromObject(obj, opts = {}) {\n    if (obj == null || typeof obj !== \"object\") {\n      throw new InvalidArgumentError(\n        `Duration.fromObject: argument expected to be an object, got ${\n          obj === null ? \"null\" : typeof obj\n        }`\n      );\n    }\n\n    return new Duration({\n      values: normalizeObject(obj, Duration.normalizeUnit),\n      loc: Locale.fromObject(opts),\n      conversionAccuracy: opts.conversionAccuracy,\n    });\n  }\n\n  /**\n   * Create a Duration from DurationLike.\n   *\n   * @param {Object | number | Duration} durationLike\n   * One of:\n   * - object with keys like 'years' and 'hours'.\n   * - number representing milliseconds\n   * - Duration instance\n   * @return {Duration}\n   */\n  static fromDurationLike(durationLike) {\n    if (isNumber(durationLike)) {\n      return Duration.fromMillis(durationLike);\n    } else if (Duration.isDuration(durationLike)) {\n      return durationLike;\n    } else if (typeof durationLike === \"object\") {\n      return Duration.fromObject(durationLike);\n    } else {\n      throw new InvalidArgumentError(\n        `Unknown duration argument ${durationLike} of type ${typeof durationLike}`\n      );\n    }\n  }\n\n  /**\n   * Create a Duration from an ISO 8601 duration string.\n   * @param {string} text - text to parse\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations\n   * @example Duration.fromISO('P3Y6M1W4DT12H30M5S').toObject() //=> { years: 3, months: 6, weeks: 1, days: 4, hours: 12, minutes: 30, seconds: 5 }\n   * @example Duration.fromISO('PT23H').toObject() //=> { hours: 23 }\n   * @example Duration.fromISO('P5Y3M').toObject() //=> { years: 5, months: 3 }\n   * @return {Duration}\n   */\n  static fromISO(text, opts) {\n    const [parsed] = parseISODuration(text);\n    if (parsed) {\n      return Duration.fromObject(parsed, opts);\n    } else {\n      return Duration.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n    }\n  }\n\n  /**\n   * Create a Duration from an ISO 8601 time string.\n   * @param {string} text - text to parse\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Times\n   * @example Duration.fromISOTime('11:22:33.444').toObject() //=> { hours: 11, minutes: 22, seconds: 33, milliseconds: 444 }\n   * @example Duration.fromISOTime('11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('T11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('T1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @return {Duration}\n   */\n  static fromISOTime(text, opts) {\n    const [parsed] = parseISOTimeOnly(text);\n    if (parsed) {\n      return Duration.fromObject(parsed, opts);\n    } else {\n      return Duration.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n    }\n  }\n\n  /**\n   * Create an invalid Duration.\n   * @param {string} reason - simple string of why this datetime is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {Duration}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the Duration is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidDurationError(invalid);\n    } else {\n      return new Duration({ invalid });\n    }\n  }\n\n  /**\n   * @private\n   */\n  static normalizeUnit(unit) {\n    const normalized = {\n      year: \"years\",\n      years: \"years\",\n      quarter: \"quarters\",\n      quarters: \"quarters\",\n      month: \"months\",\n      months: \"months\",\n      week: \"weeks\",\n      weeks: \"weeks\",\n      day: \"days\",\n      days: \"days\",\n      hour: \"hours\",\n      hours: \"hours\",\n      minute: \"minutes\",\n      minutes: \"minutes\",\n      second: \"seconds\",\n      seconds: \"seconds\",\n      millisecond: \"milliseconds\",\n      milliseconds: \"milliseconds\",\n    }[unit ? unit.toLowerCase() : unit];\n\n    if (!normalized) throw new InvalidUnitError(unit);\n\n    return normalized;\n  }\n\n  /**\n   * Check if an object is a Duration. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isDuration(o) {\n    return (o && o.isLuxonDuration) || false;\n  }\n\n  /**\n   * Get  the locale of a Duration, such 'en-GB'\n   * @type {string}\n   */\n  get locale() {\n    return this.isValid ? this.loc.locale : null;\n  }\n\n  /**\n   * Get the numbering system of a Duration, such 'beng'. The numbering system is used when formatting the Duration\n   *\n   * @type {string}\n   */\n  get numberingSystem() {\n    return this.isValid ? this.loc.numberingSystem : null;\n  }\n\n  /**\n   * Returns a string representation of this Duration formatted according to the specified format string. You may use these tokens:\n   * * `S` for milliseconds\n   * * `s` for seconds\n   * * `m` for minutes\n   * * `h` for hours\n   * * `d` for days\n   * * `w` for weeks\n   * * `M` for months\n   * * `y` for years\n   * Notes:\n   * * Add padding by repeating the token, e.g. \"yy\" pads the years to two digits, \"hhhh\" pads the hours out to four digits\n   * * Tokens can be escaped by wrapping with single quotes.\n   * * The duration will be converted to the set of units in the format string using {@link Duration#shiftTo} and the Durations's conversion accuracy setting.\n   * @param {string} fmt - the format string\n   * @param {Object} opts - options\n   * @param {boolean} [opts.floor=true] - floor numerical values\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"y d s\") //=> \"1 6 2\"\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"yy dd sss\") //=> \"01 06 002\"\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"M S\") //=> \"12 518402000\"\n   * @return {string}\n   */\n  toFormat(fmt, opts = {}) {\n    // reverse-compat since 1.2; we always round down now, never up, and we do it by default\n    const fmtOpts = {\n      ...opts,\n      floor: opts.round !== false && opts.floor !== false,\n    };\n    return this.isValid\n      ? Formatter.create(this.loc, fmtOpts).formatDurationFromString(this, fmt)\n      : INVALID;\n  }\n\n  /**\n   * Returns a string representation of a Duration with all units included.\n   * To modify its behavior use the `listStyle` and any Intl.NumberFormat option, though `unitDisplay` is especially relevant.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\n   * @param opts - On option object to override the formatting. Accepts the same keys as the options parameter of the native `Int.NumberFormat` constructor, as well as `listStyle`.\n   * @example\n   * ```js\n   * var dur = Duration.fromObject({ days: 1, hours: 5, minutes: 6 })\n   * dur.toHuman() //=> '1 day, 5 hours, 6 minutes'\n   * dur.toHuman({ listStyle: \"long\" }) //=> '1 day, 5 hours, and 6 minutes'\n   * dur.toHuman({ unitDisplay: \"short\" }) //=> '1 day, 5 hr, 6 min'\n   * ```\n   */\n  toHuman(opts = {}) {\n    const l = orderedUnits\n      .map((unit) => {\n        const val = this.values[unit];\n        if (isUndefined(val)) {\n          return null;\n        }\n        return this.loc\n          .numberFormatter({ style: \"unit\", unitDisplay: \"long\", ...opts, unit: unit.slice(0, -1) })\n          .format(val);\n      })\n      .filter((n) => n);\n\n    return this.loc\n      .listFormatter({ type: \"conjunction\", style: opts.listStyle || \"narrow\", ...opts })\n      .format(l);\n  }\n\n  /**\n   * Returns a JavaScript object with this Duration's values.\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toObject() //=> { years: 1, days: 6, seconds: 2 }\n   * @return {Object}\n   */\n  toObject() {\n    if (!this.isValid) return {};\n    return { ...this.values };\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Duration.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations\n   * @example Duration.fromObject({ years: 3, seconds: 45 }).toISO() //=> 'P3YT45S'\n   * @example Duration.fromObject({ months: 4, seconds: 45 }).toISO() //=> 'P4MT45S'\n   * @example Duration.fromObject({ months: 5 }).toISO() //=> 'P5M'\n   * @example Duration.fromObject({ minutes: 5 }).toISO() //=> 'PT5M'\n   * @example Duration.fromObject({ milliseconds: 6 }).toISO() //=> 'PT0.006S'\n   * @return {string}\n   */\n  toISO() {\n    // we could use the formatter, but this is an easier way to get the minimum string\n    if (!this.isValid) return null;\n\n    let s = \"P\";\n    if (this.years !== 0) s += this.years + \"Y\";\n    if (this.months !== 0 || this.quarters !== 0) s += this.months + this.quarters * 3 + \"M\";\n    if (this.weeks !== 0) s += this.weeks + \"W\";\n    if (this.days !== 0) s += this.days + \"D\";\n    if (this.hours !== 0 || this.minutes !== 0 || this.seconds !== 0 || this.milliseconds !== 0)\n      s += \"T\";\n    if (this.hours !== 0) s += this.hours + \"H\";\n    if (this.minutes !== 0) s += this.minutes + \"M\";\n    if (this.seconds !== 0 || this.milliseconds !== 0)\n      // this will handle \"floating point madness\" by removing extra decimal places\n      // https://stackoverflow.com/questions/588004/is-floating-point-math-broken\n      s += roundTo(this.seconds + this.milliseconds / 1000, 3) + \"S\";\n    if (s === \"P\") s += \"T0S\";\n    return s;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Duration, formatted as a time of day.\n   * Note that this will return null if the duration is invalid, negative, or equal to or greater than 24 hours.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Times\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example Duration.fromObject({ hours: 11 }).toISOTime() //=> '11:00:00.000'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressMilliseconds: true }) //=> '11:00:00'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressSeconds: true }) //=> '11:00'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ includePrefix: true }) //=> 'T11:00:00.000'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ format: 'basic' }) //=> '110000.000'\n   * @return {string}\n   */\n  toISOTime(opts = {}) {\n    if (!this.isValid) return null;\n\n    const millis = this.toMillis();\n    if (millis < 0 || millis >= 86400000) return null;\n\n    opts = {\n      suppressMilliseconds: false,\n      suppressSeconds: false,\n      includePrefix: false,\n      format: \"extended\",\n      ...opts,\n    };\n\n    const value = this.shiftTo(\"hours\", \"minutes\", \"seconds\", \"milliseconds\");\n\n    let fmt = opts.format === \"basic\" ? \"hhmm\" : \"hh:mm\";\n\n    if (!opts.suppressSeconds || value.seconds !== 0 || value.milliseconds !== 0) {\n      fmt += opts.format === \"basic\" ? \"ss\" : \":ss\";\n      if (!opts.suppressMilliseconds || value.milliseconds !== 0) {\n        fmt += \".SSS\";\n      }\n    }\n\n    let str = value.toFormat(fmt);\n\n    if (opts.includePrefix) {\n      str = \"T\" + str;\n    }\n\n    return str;\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this Duration appropriate for use in JSON.\n   * @return {string}\n   */\n  toJSON() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this Duration appropriate for use in debugging.\n   * @return {string}\n   */\n  toString() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns an milliseconds value of this Duration.\n   * @return {number}\n   */\n  toMillis() {\n    return this.as(\"milliseconds\");\n  }\n\n  /**\n   * Returns an milliseconds value of this Duration. Alias of {@link toMillis}\n   * @return {number}\n   */\n  valueOf() {\n    return this.toMillis();\n  }\n\n  /**\n   * Make this Duration longer by the specified amount. Return a newly-constructed Duration.\n   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @return {Duration}\n   */\n  plus(duration) {\n    if (!this.isValid) return this;\n\n    const dur = Duration.fromDurationLike(duration),\n      result = {};\n\n    for (const k of orderedUnits) {\n      if (hasOwnProperty(dur.values, k) || hasOwnProperty(this.values, k)) {\n        result[k] = dur.get(k) + this.get(k);\n      }\n    }\n\n    return clone(this, { values: result }, true);\n  }\n\n  /**\n   * Make this Duration shorter by the specified amount. Return a newly-constructed Duration.\n   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @return {Duration}\n   */\n  minus(duration) {\n    if (!this.isValid) return this;\n\n    const dur = Duration.fromDurationLike(duration);\n    return this.plus(dur.negate());\n  }\n\n  /**\n   * Scale this Duration by the specified amount. Return a newly-constructed Duration.\n   * @param {function} fn - The function to apply to each unit. Arity is 1 or 2: the value of the unit and, optionally, the unit name. Must return a number.\n   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits(x => x * 2) //=> { hours: 2, minutes: 60 }\n   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits((x, u) => u === \"hour\" ? x * 2 : x) //=> { hours: 2, minutes: 30 }\n   * @return {Duration}\n   */\n  mapUnits(fn) {\n    if (!this.isValid) return this;\n    const result = {};\n    for (const k of Object.keys(this.values)) {\n      result[k] = asNumber(fn(this.values[k], k));\n    }\n    return clone(this, { values: result }, true);\n  }\n\n  /**\n   * Get the value of unit.\n   * @param {string} unit - a unit such as 'minute' or 'day'\n   * @example Duration.fromObject({years: 2, days: 3}).get('years') //=> 2\n   * @example Duration.fromObject({years: 2, days: 3}).get('months') //=> 0\n   * @example Duration.fromObject({years: 2, days: 3}).get('days') //=> 3\n   * @return {number}\n   */\n  get(unit) {\n    return this[Duration.normalizeUnit(unit)];\n  }\n\n  /**\n   * \"Set\" the values of specified units. Return a newly-constructed Duration.\n   * @param {Object} values - a mapping of units to numbers\n   * @example dur.set({ years: 2017 })\n   * @example dur.set({ hours: 8, minutes: 30 })\n   * @return {Duration}\n   */\n  set(values) {\n    if (!this.isValid) return this;\n\n    const mixed = { ...this.values, ...normalizeObject(values, Duration.normalizeUnit) };\n    return clone(this, { values: mixed });\n  }\n\n  /**\n   * \"Set\" the locale and/or numberingSystem.  Returns a newly-constructed Duration.\n   * @example dur.reconfigure({ locale: 'en-GB' })\n   * @return {Duration}\n   */\n  reconfigure({ locale, numberingSystem, conversionAccuracy } = {}) {\n    const loc = this.loc.clone({ locale, numberingSystem }),\n      opts = { loc };\n\n    if (conversionAccuracy) {\n      opts.conversionAccuracy = conversionAccuracy;\n    }\n\n    return clone(this, opts);\n  }\n\n  /**\n   * Return the length of the duration in the specified unit.\n   * @param {string} unit - a unit such as 'minutes' or 'days'\n   * @example Duration.fromObject({years: 1}).as('days') //=> 365\n   * @example Duration.fromObject({years: 1}).as('months') //=> 12\n   * @example Duration.fromObject({hours: 60}).as('days') //=> 2.5\n   * @return {number}\n   */\n  as(unit) {\n    return this.isValid ? this.shiftTo(unit).get(unit) : NaN;\n  }\n\n  /**\n   * Reduce this Duration to its canonical representation in its current units.\n   * @example Duration.fromObject({ years: 2, days: 5000 }).normalize().toObject() //=> { years: 15, days: 255 }\n   * @example Duration.fromObject({ hours: 12, minutes: -45 }).normalize().toObject() //=> { hours: 11, minutes: 15 }\n   * @return {Duration}\n   */\n  normalize() {\n    if (!this.isValid) return this;\n    const vals = this.toObject();\n    normalizeValues(this.matrix, vals);\n    return clone(this, { values: vals }, true);\n  }\n\n  /**\n   * Convert this Duration into its representation in a different set of units.\n   * @example Duration.fromObject({ hours: 1, seconds: 30 }).shiftTo('minutes', 'milliseconds').toObject() //=> { minutes: 60, milliseconds: 30000 }\n   * @return {Duration}\n   */\n  shiftTo(...units) {\n    if (!this.isValid) return this;\n\n    if (units.length === 0) {\n      return this;\n    }\n\n    units = units.map((u) => Duration.normalizeUnit(u));\n\n    const built = {},\n      accumulated = {},\n      vals = this.toObject();\n    let lastUnit;\n\n    for (const k of orderedUnits) {\n      if (units.indexOf(k) >= 0) {\n        lastUnit = k;\n\n        let own = 0;\n\n        // anything we haven't boiled down yet should get boiled to this unit\n        for (const ak in accumulated) {\n          own += this.matrix[ak][k] * accumulated[ak];\n          accumulated[ak] = 0;\n        }\n\n        // plus anything that's already in this unit\n        if (isNumber(vals[k])) {\n          own += vals[k];\n        }\n\n        const i = Math.trunc(own);\n        built[k] = i;\n        accumulated[k] = (own * 1000 - i * 1000) / 1000;\n\n        // plus anything further down the chain that should be rolled up in to this\n        for (const down in vals) {\n          if (orderedUnits.indexOf(down) > orderedUnits.indexOf(k)) {\n            convert(this.matrix, vals, down, built, k);\n          }\n        }\n        // otherwise, keep it in the wings to boil it later\n      } else if (isNumber(vals[k])) {\n        accumulated[k] = vals[k];\n      }\n    }\n\n    // anything leftover becomes the decimal for the last unit\n    // lastUnit must be defined since units is not empty\n    for (const key in accumulated) {\n      if (accumulated[key] !== 0) {\n        built[lastUnit] +=\n          key === lastUnit ? accumulated[key] : accumulated[key] / this.matrix[lastUnit][key];\n      }\n    }\n\n    return clone(this, { values: built }, true).normalize();\n  }\n\n  /**\n   * Return the negative of this Duration.\n   * @example Duration.fromObject({ hours: 1, seconds: 30 }).negate().toObject() //=> { hours: -1, seconds: -30 }\n   * @return {Duration}\n   */\n  negate() {\n    if (!this.isValid) return this;\n    const negated = {};\n    for (const k of Object.keys(this.values)) {\n      negated[k] = this.values[k] === 0 ? 0 : -this.values[k];\n    }\n    return clone(this, { values: negated }, true);\n  }\n\n  /**\n   * Get the years.\n   * @type {number}\n   */\n  get years() {\n    return this.isValid ? this.values.years || 0 : NaN;\n  }\n\n  /**\n   * Get the quarters.\n   * @type {number}\n   */\n  get quarters() {\n    return this.isValid ? this.values.quarters || 0 : NaN;\n  }\n\n  /**\n   * Get the months.\n   * @type {number}\n   */\n  get months() {\n    return this.isValid ? this.values.months || 0 : NaN;\n  }\n\n  /**\n   * Get the weeks\n   * @type {number}\n   */\n  get weeks() {\n    return this.isValid ? this.values.weeks || 0 : NaN;\n  }\n\n  /**\n   * Get the days.\n   * @type {number}\n   */\n  get days() {\n    return this.isValid ? this.values.days || 0 : NaN;\n  }\n\n  /**\n   * Get the hours.\n   * @type {number}\n   */\n  get hours() {\n    return this.isValid ? this.values.hours || 0 : NaN;\n  }\n\n  /**\n   * Get the minutes.\n   * @type {number}\n   */\n  get minutes() {\n    return this.isValid ? this.values.minutes || 0 : NaN;\n  }\n\n  /**\n   * Get the seconds.\n   * @return {number}\n   */\n  get seconds() {\n    return this.isValid ? this.values.seconds || 0 : NaN;\n  }\n\n  /**\n   * Get the milliseconds.\n   * @return {number}\n   */\n  get milliseconds() {\n    return this.isValid ? this.values.milliseconds || 0 : NaN;\n  }\n\n  /**\n   * Returns whether the Duration is invalid. Invalid durations are returned by diff operations\n   * on invalid DateTimes or Intervals.\n   * @return {boolean}\n   */\n  get isValid() {\n    return this.invalid === null;\n  }\n\n  /**\n   * Returns an error code if this Duration became invalid, or null if the Duration is valid\n   * @return {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this Duration became invalid, or null if the Duration is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Equality check\n   * Two Durations are equal iff they have the same units and the same values for each unit.\n   * @param {Duration} other\n   * @return {boolean}\n   */\n  equals(other) {\n    if (!this.isValid || !other.isValid) {\n      return false;\n    }\n\n    if (!this.loc.equals(other.loc)) {\n      return false;\n    }\n\n    function eq(v1, v2) {\n      // Consider 0 and undefined as equal\n      if (v1 === undefined || v1 === 0) return v2 === undefined || v2 === 0;\n      return v1 === v2;\n    }\n\n    for (const u of orderedUnits) {\n      if (!eq(this.values[u], other.values[u])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import DateTime, { friendlyDateTime } from \"./datetime.js\";\nimport Duration from \"./duration.js\";\nimport Settings from \"./settings.js\";\nimport { InvalidArgumentError, InvalidIntervalError } from \"./errors.js\";\nimport Invalid from \"./impl/invalid.js\";\n\nconst INVALID = \"Invalid Interval\";\n\n// checks if the start is equal to or before the end\nfunction validateStartEnd(start, end) {\n  if (!start || !start.isValid) {\n    return Interval.invalid(\"missing or invalid start\");\n  } else if (!end || !end.isValid) {\n    return Interval.invalid(\"missing or invalid end\");\n  } else if (end < start) {\n    return Interval.invalid(\n      \"end before start\",\n      `The end of an interval must be after its start, but you had start=${start.toISO()} and end=${end.toISO()}`\n    );\n  } else {\n    return null;\n  }\n}\n\n/**\n * An Interval object represents a half-open interval of time, where each endpoint is a {@link DateTime}. Conceptually, it's a container for those two endpoints, accompanied by methods for creating, parsing, interrogating, comparing, transforming, and formatting them.\n *\n * Here is a brief overview of the most commonly used methods and getters in Interval:\n *\n * * **Creation** To create an Interval, use {@link Interval#fromDateTimes}, {@link Interval#after}, {@link Interval#before}, or {@link Interval#fromISO}.\n * * **Accessors** Use {@link Interval#start} and {@link Interval#end} to get the start and end.\n * * **Interrogation** To analyze the Interval, use {@link Interval#count}, {@link Interval#length}, {@link Interval#hasSame}, {@link Interval#contains}, {@link Interval#isAfter}, or {@link Interval#isBefore}.\n * * **Transformation** To create other Intervals out of this one, use {@link Interval#set}, {@link Interval#splitAt}, {@link Interval#splitBy}, {@link Interval#divideEqually}, {@link Interval#merge}, {@link Interval#xor}, {@link Interval#union}, {@link Interval#intersection}, or {@link Interval#difference}.\n * * **Comparison** To compare this Interval to another one, use {@link Interval#equals}, {@link Interval#overlaps}, {@link Interval#abutsStart}, {@link Interval#abutsEnd}, {@link Interval#engulfs}\n * * **Output** To convert the Interval into other representations, see {@link Interval#toString}, {@link Interval#toISO}, {@link Interval#toISODate}, {@link Interval#toISOTime}, {@link Interval#toFormat}, and {@link Interval#toDuration}.\n */\nexport default class Interval {\n  /**\n   * @private\n   */\n  constructor(config) {\n    /**\n     * @access private\n     */\n    this.s = config.start;\n    /**\n     * @access private\n     */\n    this.e = config.end;\n    /**\n     * @access private\n     */\n    this.invalid = config.invalid || null;\n    /**\n     * @access private\n     */\n    this.isLuxonInterval = true;\n  }\n\n  /**\n   * Create an invalid Interval.\n   * @param {string} reason - simple string of why this Interval is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {Interval}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the Interval is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidIntervalError(invalid);\n    } else {\n      return new Interval({ invalid });\n    }\n  }\n\n  /**\n   * Create an Interval from a start DateTime and an end DateTime. Inclusive of the start but not the end.\n   * @param {DateTime|Date|Object} start\n   * @param {DateTime|Date|Object} end\n   * @return {Interval}\n   */\n  static fromDateTimes(start, end) {\n    const builtStart = friendlyDateTime(start),\n      builtEnd = friendlyDateTime(end);\n\n    const validateError = validateStartEnd(builtStart, builtEnd);\n\n    if (validateError == null) {\n      return new Interval({\n        start: builtStart,\n        end: builtEnd,\n      });\n    } else {\n      return validateError;\n    }\n  }\n\n  /**\n   * Create an Interval from a start DateTime and a Duration to extend to.\n   * @param {DateTime|Date|Object} start\n   * @param {Duration|Object|number} duration - the length of the Interval.\n   * @return {Interval}\n   */\n  static after(start, duration) {\n    const dur = Duration.fromDurationLike(duration),\n      dt = friendlyDateTime(start);\n    return Interval.fromDateTimes(dt, dt.plus(dur));\n  }\n\n  /**\n   * Create an Interval from an end DateTime and a Duration to extend backwards to.\n   * @param {DateTime|Date|Object} end\n   * @param {Duration|Object|number} duration - the length of the Interval.\n   * @return {Interval}\n   */\n  static before(end, duration) {\n    const dur = Duration.fromDurationLike(duration),\n      dt = friendlyDateTime(end);\n    return Interval.fromDateTimes(dt.minus(dur), dt);\n  }\n\n  /**\n   * Create an Interval from an ISO 8601 string.\n   * Accepts `<start>/<end>`, `<start>/<duration>`, and `<duration>/<end>` formats.\n   * @param {string} text - the ISO string to parse\n   * @param {Object} [opts] - options to pass {@link DateTime#fromISO} and optionally {@link Duration#fromISO}\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @return {Interval}\n   */\n  static fromISO(text, opts) {\n    const [s, e] = (text || \"\").split(\"/\", 2);\n    if (s && e) {\n      let start, startIsValid;\n      try {\n        start = DateTime.fromISO(s, opts);\n        startIsValid = start.isValid;\n      } catch (e) {\n        startIsValid = false;\n      }\n\n      let end, endIsValid;\n      try {\n        end = DateTime.fromISO(e, opts);\n        endIsValid = end.isValid;\n      } catch (e) {\n        endIsValid = false;\n      }\n\n      if (startIsValid && endIsValid) {\n        return Interval.fromDateTimes(start, end);\n      }\n\n      if (startIsValid) {\n        const dur = Duration.fromISO(e, opts);\n        if (dur.isValid) {\n          return Interval.after(start, dur);\n        }\n      } else if (endIsValid) {\n        const dur = Duration.fromISO(s, opts);\n        if (dur.isValid) {\n          return Interval.before(end, dur);\n        }\n      }\n    }\n    return Interval.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n  }\n\n  /**\n   * Check if an object is an Interval. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isInterval(o) {\n    return (o && o.isLuxonInterval) || false;\n  }\n\n  /**\n   * Returns the start of the Interval\n   * @type {DateTime}\n   */\n  get start() {\n    return this.isValid ? this.s : null;\n  }\n\n  /**\n   * Returns the end of the Interval\n   * @type {DateTime}\n   */\n  get end() {\n    return this.isValid ? this.e : null;\n  }\n\n  /**\n   * Returns whether this Interval's end is at least its start, meaning that the Interval isn't 'backwards'.\n   * @type {boolean}\n   */\n  get isValid() {\n    return this.invalidReason === null;\n  }\n\n  /**\n   * Returns an error code if this Interval is invalid, or null if the Interval is valid\n   * @type {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this Interval became invalid, or null if the Interval is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Returns the length of the Interval in the specified unit.\n   * @param {string} unit - the unit (such as 'hours' or 'days') to return the length in.\n   * @return {number}\n   */\n  length(unit = \"milliseconds\") {\n    return this.isValid ? this.toDuration(...[unit]).get(unit) : NaN;\n  }\n\n  /**\n   * Returns the count of minutes, hours, days, months, or years included in the Interval, even in part.\n   * Unlike {@link Interval#length} this counts sections of the calendar, not periods of time, e.g. specifying 'day'\n   * asks 'what dates are included in this interval?', not 'how many days long is this interval?'\n   * @param {string} [unit='milliseconds'] - the unit of time to count.\n   * @return {number}\n   */\n  count(unit = \"milliseconds\") {\n    if (!this.isValid) return NaN;\n    const start = this.start.startOf(unit),\n      end = this.end.startOf(unit);\n    return Math.floor(end.diff(start, unit).get(unit)) + 1;\n  }\n\n  /**\n   * Returns whether this Interval's start and end are both in the same unit of time\n   * @param {string} unit - the unit of time to check sameness on\n   * @return {boolean}\n   */\n  hasSame(unit) {\n    return this.isValid ? this.isEmpty() || this.e.minus(1).hasSame(this.s, unit) : false;\n  }\n\n  /**\n   * Return whether this Interval has the same start and end DateTimes.\n   * @return {boolean}\n   */\n  isEmpty() {\n    return this.s.valueOf() === this.e.valueOf();\n  }\n\n  /**\n   * Return whether this Interval's start is after the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  isAfter(dateTime) {\n    if (!this.isValid) return false;\n    return this.s > dateTime;\n  }\n\n  /**\n   * Return whether this Interval's end is before the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  isBefore(dateTime) {\n    if (!this.isValid) return false;\n    return this.e <= dateTime;\n  }\n\n  /**\n   * Return whether this Interval contains the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  contains(dateTime) {\n    if (!this.isValid) return false;\n    return this.s <= dateTime && this.e > dateTime;\n  }\n\n  /**\n   * \"Sets\" the start and/or end dates. Returns a newly-constructed Interval.\n   * @param {Object} values - the values to set\n   * @param {DateTime} values.start - the starting DateTime\n   * @param {DateTime} values.end - the ending DateTime\n   * @return {Interval}\n   */\n  set({ start, end } = {}) {\n    if (!this.isValid) return this;\n    return Interval.fromDateTimes(start || this.s, end || this.e);\n  }\n\n  /**\n   * Split this Interval at each of the specified DateTimes\n   * @param {...DateTime} dateTimes - the unit of time to count.\n   * @return {Array}\n   */\n  splitAt(...dateTimes) {\n    if (!this.isValid) return [];\n    const sorted = dateTimes\n        .map(friendlyDateTime)\n        .filter((d) => this.contains(d))\n        .sort(),\n      results = [];\n    let { s } = this,\n      i = 0;\n\n    while (s < this.e) {\n      const added = sorted[i] || this.e,\n        next = +added > +this.e ? this.e : added;\n      results.push(Interval.fromDateTimes(s, next));\n      s = next;\n      i += 1;\n    }\n\n    return results;\n  }\n\n  /**\n   * Split this Interval into smaller Intervals, each of the specified length.\n   * Left over time is grouped into a smaller interval\n   * @param {Duration|Object|number} duration - The length of each resulting interval.\n   * @return {Array}\n   */\n  splitBy(duration) {\n    const dur = Duration.fromDurationLike(duration);\n\n    if (!this.isValid || !dur.isValid || dur.as(\"milliseconds\") === 0) {\n      return [];\n    }\n\n    let { s } = this,\n      idx = 1,\n      next;\n\n    const results = [];\n    while (s < this.e) {\n      const added = this.start.plus(dur.mapUnits((x) => x * idx));\n      next = +added > +this.e ? this.e : added;\n      results.push(Interval.fromDateTimes(s, next));\n      s = next;\n      idx += 1;\n    }\n\n    return results;\n  }\n\n  /**\n   * Split this Interval into the specified number of smaller intervals.\n   * @param {number} numberOfParts - The number of Intervals to divide the Interval into.\n   * @return {Array}\n   */\n  divideEqually(numberOfParts) {\n    if (!this.isValid) return [];\n    return this.splitBy(this.length() / numberOfParts).slice(0, numberOfParts);\n  }\n\n  /**\n   * Return whether this Interval overlaps with the specified Interval\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  overlaps(other) {\n    return this.e > other.s && this.s < other.e;\n  }\n\n  /**\n   * Return whether this Interval's end is adjacent to the specified Interval's start.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  abutsStart(other) {\n    if (!this.isValid) return false;\n    return +this.e === +other.s;\n  }\n\n  /**\n   * Return whether this Interval's start is adjacent to the specified Interval's end.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  abutsEnd(other) {\n    if (!this.isValid) return false;\n    return +other.e === +this.s;\n  }\n\n  /**\n   * Return whether this Interval engulfs the start and end of the specified Interval.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  engulfs(other) {\n    if (!this.isValid) return false;\n    return this.s <= other.s && this.e >= other.e;\n  }\n\n  /**\n   * Return whether this Interval has the same start and end as the specified Interval.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  equals(other) {\n    if (!this.isValid || !other.isValid) {\n      return false;\n    }\n\n    return this.s.equals(other.s) && this.e.equals(other.e);\n  }\n\n  /**\n   * Return an Interval representing the intersection of this Interval and the specified Interval.\n   * Specifically, the resulting Interval has the maximum start time and the minimum end time of the two Intervals.\n   * Returns null if the intersection is empty, meaning, the intervals don't intersect.\n   * @param {Interval} other\n   * @return {Interval}\n   */\n  intersection(other) {\n    if (!this.isValid) return this;\n    const s = this.s > other.s ? this.s : other.s,\n      e = this.e < other.e ? this.e : other.e;\n\n    if (s >= e) {\n      return null;\n    } else {\n      return Interval.fromDateTimes(s, e);\n    }\n  }\n\n  /**\n   * Return an Interval representing the union of this Interval and the specified Interval.\n   * Specifically, the resulting Interval has the minimum start time and the maximum end time of the two Intervals.\n   * @param {Interval} other\n   * @return {Interval}\n   */\n  union(other) {\n    if (!this.isValid) return this;\n    const s = this.s < other.s ? this.s : other.s,\n      e = this.e > other.e ? this.e : other.e;\n    return Interval.fromDateTimes(s, e);\n  }\n\n  /**\n   * Merge an array of Intervals into a equivalent minimal set of Intervals.\n   * Combines overlapping and adjacent Intervals.\n   * @param {Array} intervals\n   * @return {Array}\n   */\n  static merge(intervals) {\n    const [found, final] = intervals\n      .sort((a, b) => a.s - b.s)\n      .reduce(\n        ([sofar, current], item) => {\n          if (!current) {\n            return [sofar, item];\n          } else if (current.overlaps(item) || current.abutsStart(item)) {\n            return [sofar, current.union(item)];\n          } else {\n            return [sofar.concat([current]), item];\n          }\n        },\n        [[], null]\n      );\n    if (final) {\n      found.push(final);\n    }\n    return found;\n  }\n\n  /**\n   * Return an array of Intervals representing the spans of time that only appear in one of the specified Intervals.\n   * @param {Array} intervals\n   * @return {Array}\n   */\n  static xor(intervals) {\n    let start = null,\n      currentCount = 0;\n    const results = [],\n      ends = intervals.map((i) => [\n        { time: i.s, type: \"s\" },\n        { time: i.e, type: \"e\" },\n      ]),\n      flattened = Array.prototype.concat(...ends),\n      arr = flattened.sort((a, b) => a.time - b.time);\n\n    for (const i of arr) {\n      currentCount += i.type === \"s\" ? 1 : -1;\n\n      if (currentCount === 1) {\n        start = i.time;\n      } else {\n        if (start && +start !== +i.time) {\n          results.push(Interval.fromDateTimes(start, i.time));\n        }\n\n        start = null;\n      }\n    }\n\n    return Interval.merge(results);\n  }\n\n  /**\n   * Return an Interval representing the span of time in this Interval that doesn't overlap with any of the specified Intervals.\n   * @param {...Interval} intervals\n   * @return {Array}\n   */\n  difference(...intervals) {\n    return Interval.xor([this].concat(intervals))\n      .map((i) => this.intersection(i))\n      .filter((i) => i && !i.isEmpty());\n  }\n\n  /**\n   * Returns a string representation of this Interval appropriate for debugging.\n   * @return {string}\n   */\n  toString() {\n    if (!this.isValid) return INVALID;\n    return `[${this.s.toISO()} – ${this.e.toISO()})`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Interval.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @param {Object} opts - The same options as {@link DateTime#toISO}\n   * @return {string}\n   */\n  toISO(opts) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISO(opts)}/${this.e.toISO(opts)}`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of date of this Interval.\n   * The time components are ignored.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @return {string}\n   */\n  toISODate() {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISODate()}/${this.e.toISODate()}`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of time of this Interval.\n   * The date components are ignored.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @param {Object} opts - The same options as {@link DateTime#toISO}\n   * @return {string}\n   */\n  toISOTime(opts) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISOTime(opts)}/${this.e.toISOTime(opts)}`;\n  }\n\n  /**\n   * Returns a string representation of this Interval formatted according to the specified format string.\n   * @param {string} dateFormat - the format string. This string formats the start and end time. See {@link DateTime#toFormat} for details.\n   * @param {Object} opts - options\n   * @param {string} [opts.separator =  ' – '] - a separator to place between the start and end representations\n   * @return {string}\n   */\n  toFormat(dateFormat, { separator = \" – \" } = {}) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toFormat(dateFormat)}${separator}${this.e.toFormat(dateFormat)}`;\n  }\n\n  /**\n   * Return a Duration representing the time spanned by this interval.\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or units (such as 'hours' or 'days') to include in the duration.\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration().toObject() //=> { milliseconds: 88489257 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration('days').toObject() //=> { days: 1.0241812152777778 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes']).toObject() //=> { hours: 24, minutes: 34.82095 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes', 'seconds']).toObject() //=> { hours: 24, minutes: 34, seconds: 49.257 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration('seconds').toObject() //=> { seconds: 88489.257 }\n   * @return {Duration}\n   */\n  toDuration(unit, opts) {\n    if (!this.isValid) {\n      return Duration.invalid(this.invalidReason);\n    }\n    return this.e.diff(this.s, unit, opts);\n  }\n\n  /**\n   * Run mapFn on the interval start and end, returning a new Interval from the resulting DateTimes\n   * @param {function} mapFn\n   * @return {Interval}\n   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.toUTC())\n   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.plus({ hours: 2 }))\n   */\n  mapEndpoints(mapFn) {\n    return Interval.fromDateTimes(mapFn(this.s), mapFn(this.e));\n  }\n}\n","import DateTime from \"./datetime.js\";\nimport Settings from \"./settings.js\";\nimport Locale from \"./impl/locale.js\";\nimport IANAZone from \"./zones/IANAZone.js\";\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\n\nimport { hasRelative } from \"./impl/util.js\";\n\n/**\n * The Info class contains static methods for retrieving general time and date related data. For example, it has methods for finding out if a time zone has a DST, for listing the months in any supported locale, and for discovering which of Luxon features are available in the current environment.\n */\nexport default class Info {\n  /**\n   * Return whether the specified zone contains a DST.\n   * @param {string|Zone} [zone='local'] - Zone to check. Defaults to the environment's local zone.\n   * @return {boolean}\n   */\n  static hasDST(zone = Settings.defaultZone) {\n    const proto = DateTime.now().setZone(zone).set({ month: 12 });\n\n    return !zone.isUniversal && proto.offset !== proto.set({ month: 6 }).offset;\n  }\n\n  /**\n   * Return whether the specified zone is a valid IANA specifier.\n   * @param {string} zone - Zone to check\n   * @return {boolean}\n   */\n  static isValidIANAZone(zone) {\n    return IANAZone.isValidZone(zone);\n  }\n\n  /**\n   * Converts the input into a {@link Zone} instance.\n   *\n   * * If `input` is already a Zone instance, it is returned unchanged.\n   * * If `input` is a string containing a valid time zone name, a Zone instance\n   *   with that name is returned.\n   * * If `input` is a string that doesn't refer to a known time zone, a Zone\n   *   instance with {@link Zone#isValid} == false is returned.\n   * * If `input is a number, a Zone instance with the specified fixed offset\n   *   in minutes is returned.\n   * * If `input` is `null` or `undefined`, the default zone is returned.\n   * @param {string|Zone|number} [input] - the value to be converted\n   * @return {Zone}\n   */\n  static normalizeZone(input) {\n    return normalizeZone(input, Settings.defaultZone);\n  }\n\n  /**\n   * Return an array of standalone month names.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {string} [length='long'] - the length of the month representation, such as \"numeric\", \"2-digit\", \"narrow\", \"short\", \"long\"\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @param {string} [opts.outputCalendar='gregory'] - the calendar\n   * @example Info.months()[0] //=> 'January'\n   * @example Info.months('short')[0] //=> 'Jan'\n   * @example Info.months('numeric')[0] //=> '1'\n   * @example Info.months('short', { locale: 'fr-CA' } )[0] //=> 'janv.'\n   * @example Info.months('numeric', { locale: 'ar' })[0] //=> '١'\n   * @example Info.months('long', { outputCalendar: 'islamic' })[0] //=> 'Rabiʻ I'\n   * @return {Array}\n   */\n  static months(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null, outputCalendar = \"gregory\" } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length);\n  }\n\n  /**\n   * Return an array of format month names.\n   * Format months differ from standalone months in that they're meant to appear next to the day of the month. In some languages, that\n   * changes the string.\n   * See {@link Info#months}\n   * @param {string} [length='long'] - the length of the month representation, such as \"numeric\", \"2-digit\", \"narrow\", \"short\", \"long\"\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @param {string} [opts.outputCalendar='gregory'] - the calendar\n   * @return {Array}\n   */\n  static monthsFormat(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null, outputCalendar = \"gregory\" } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length, true);\n  }\n\n  /**\n   * Return an array of standalone week names.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {string} [length='long'] - the length of the weekday representation, such as \"narrow\", \"short\", \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @example Info.weekdays()[0] //=> 'Monday'\n   * @example Info.weekdays('short')[0] //=> 'Mon'\n   * @example Info.weekdays('short', { locale: 'fr-CA' })[0] //=> 'lun.'\n   * @example Info.weekdays('short', { locale: 'ar' })[0] //=> 'الاثنين'\n   * @return {Array}\n   */\n  static weekdays(length = \"long\", { locale = null, numberingSystem = null, locObj = null } = {}) {\n    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length);\n  }\n\n  /**\n   * Return an array of format week names.\n   * Format weekdays differ from standalone weekdays in that they're meant to appear next to more date information. In some languages, that\n   * changes the string.\n   * See {@link Info#weekdays}\n   * @param {string} [length='long'] - the length of the month representation, such as \"narrow\", \"short\", \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale=null] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @return {Array}\n   */\n  static weekdaysFormat(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length, true);\n  }\n\n  /**\n   * Return an array of meridiems.\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @example Info.meridiems() //=> [ 'AM', 'PM' ]\n   * @example Info.meridiems({ locale: 'my' }) //=> [ 'နံနက်', 'ညနေ' ]\n   * @return {Array}\n   */\n  static meridiems({ locale = null } = {}) {\n    return Locale.create(locale).meridiems();\n  }\n\n  /**\n   * Return an array of eras, such as ['BC', 'AD']. The locale can be specified, but the calendar system is always Gregorian.\n   * @param {string} [length='short'] - the length of the era representation, such as \"short\" or \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @example Info.eras() //=> [ 'BC', 'AD' ]\n   * @example Info.eras('long') //=> [ 'Before Christ', 'Anno Domini' ]\n   * @example Info.eras('long', { locale: 'fr' }) //=> [ 'avant Jésus-Christ', 'après Jésus-Christ' ]\n   * @return {Array}\n   */\n  static eras(length = \"short\", { locale = null } = {}) {\n    return Locale.create(locale, null, \"gregory\").eras(length);\n  }\n\n  /**\n   * Return the set of available features in this environment.\n   * Some features of Luxon are not available in all environments. For example, on older browsers, relative time formatting support is not available. Use this function to figure out if that's the case.\n   * Keys:\n   * * `relative`: whether this environment supports relative time formatting\n   * @example Info.features() //=> { relative: false }\n   * @return {Object}\n   */\n  static features() {\n    return { relative: hasRelative() };\n  }\n}\n","import Duration from \"../duration.js\";\n\nfunction dayDiff(earlier, later) {\n  const utcDayStart = (dt) => dt.toUTC(0, { keepLocalTime: true }).startOf(\"day\").valueOf(),\n    ms = utcDayStart(later) - utcDayStart(earlier);\n  return Math.floor(Duration.fromMillis(ms).as(\"days\"));\n}\n\nfunction highOrderDiffs(cursor, later, units) {\n  const differs = [\n    [\"years\", (a, b) => b.year - a.year],\n    [\"quarters\", (a, b) => b.quarter - a.quarter],\n    [\"months\", (a, b) => b.month - a.month + (b.year - a.year) * 12],\n    [\n      \"weeks\",\n      (a, b) => {\n        const days = dayDiff(a, b);\n        return (days - (days % 7)) / 7;\n      },\n    ],\n    [\"days\", dayDiff],\n  ];\n\n  const results = {};\n  let lowestOrder, highWater;\n\n  for (const [unit, differ] of differs) {\n    if (units.indexOf(unit) >= 0) {\n      lowestOrder = unit;\n\n      let delta = differ(cursor, later);\n      highWater = cursor.plus({ [unit]: delta });\n\n      if (highWater > later) {\n        cursor = cursor.plus({ [unit]: delta - 1 });\n        delta -= 1;\n      } else {\n        cursor = highWater;\n      }\n\n      results[unit] = delta;\n    }\n  }\n\n  return [cursor, results, highWater, lowestOrder];\n}\n\nexport default function (earlier, later, units, opts) {\n  let [cursor, results, highWater, lowestOrder] = highOrderDiffs(earlier, later, units);\n\n  const remainingMillis = later - cursor;\n\n  const lowerOrderUnits = units.filter(\n    (u) => [\"hours\", \"minutes\", \"seconds\", \"milliseconds\"].indexOf(u) >= 0\n  );\n\n  if (lowerOrderUnits.length === 0) {\n    if (highWater < later) {\n      highWater = cursor.plus({ [lowestOrder]: 1 });\n    }\n\n    if (highWater !== cursor) {\n      results[lowestOrder] = (results[lowestOrder] || 0) + remainingMillis / (highWater - cursor);\n    }\n  }\n\n  const duration = Duration.fromObject(results, opts);\n\n  if (lowerOrderUnits.length > 0) {\n    return Duration.fromMillis(remainingMillis, opts)\n      .shiftTo(...lowerOrderUnits)\n      .plus(duration);\n  } else {\n    return duration;\n  }\n}\n","const numberingSystems = {\n  arab: \"[\\u0660-\\u0669]\",\n  arabext: \"[\\u06F0-\\u06F9]\",\n  bali: \"[\\u1B50-\\u1B59]\",\n  beng: \"[\\u09E6-\\u09EF]\",\n  deva: \"[\\u0966-\\u096F]\",\n  fullwide: \"[\\uFF10-\\uFF19]\",\n  gujr: \"[\\u0AE6-\\u0AEF]\",\n  hanidec: \"[〇|一|二|三|四|五|六|七|八|九]\",\n  khmr: \"[\\u17E0-\\u17E9]\",\n  knda: \"[\\u0CE6-\\u0CEF]\",\n  laoo: \"[\\u0ED0-\\u0ED9]\",\n  limb: \"[\\u1946-\\u194F]\",\n  mlym: \"[\\u0D66-\\u0D6F]\",\n  mong: \"[\\u1810-\\u1819]\",\n  mymr: \"[\\u1040-\\u1049]\",\n  orya: \"[\\u0B66-\\u0B6F]\",\n  tamldec: \"[\\u0BE6-\\u0BEF]\",\n  telu: \"[\\u0C66-\\u0C6F]\",\n  thai: \"[\\u0E50-\\u0E59]\",\n  tibt: \"[\\u0F20-\\u0F29]\",\n  latn: \"\\\\d\",\n};\n\nconst numberingSystemsUTF16 = {\n  arab: [1632, 1641],\n  arabext: [1776, 1785],\n  bali: [6992, 7001],\n  beng: [2534, 2543],\n  deva: [2406, 2415],\n  fullwide: [65296, 65303],\n  gujr: [2790, 2799],\n  khmr: [6112, 6121],\n  knda: [3302, 3311],\n  laoo: [3792, 3801],\n  limb: [6470, 6479],\n  mlym: [3430, 3439],\n  mong: [6160, 6169],\n  mymr: [4160, 4169],\n  orya: [2918, 2927],\n  tamldec: [3046, 3055],\n  telu: [3174, 3183],\n  thai: [3664, 3673],\n  tibt: [3872, 3881],\n};\n\nconst hanidecChars = numberingSystems.hanidec.replace(/[\\[|\\]]/g, \"\").split(\"\");\n\nexport function parseDigits(str) {\n  let value = parseInt(str, 10);\n  if (isNaN(value)) {\n    value = \"\";\n    for (let i = 0; i < str.length; i++) {\n      const code = str.charCodeAt(i);\n\n      if (str[i].search(numberingSystems.hanidec) !== -1) {\n        value += hanidecChars.indexOf(str[i]);\n      } else {\n        for (const key in numberingSystemsUTF16) {\n          const [min, max] = numberingSystemsUTF16[key];\n          if (code >= min && code <= max) {\n            value += code - min;\n          }\n        }\n      }\n    }\n    return parseInt(value, 10);\n  } else {\n    return value;\n  }\n}\n\nexport function digitRegex({ numberingSystem }, append = \"\") {\n  return new RegExp(`${numberingSystems[numberingSystem || \"latn\"]}${append}`);\n}\n","import { parseMillis, isUndefined, untruncateYear, signedOffset, hasOwnProperty } from \"./util.js\";\nimport Formatter from \"./formatter.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport DateTime from \"../datetime.js\";\nimport { digitRegex, parseDigits } from \"./digits.js\";\nimport { ConflictingSpecificationError } from \"../errors.js\";\n\nconst MISSING_FTP = \"missing Intl.DateTimeFormat.formatToParts support\";\n\nfunction intUnit(regex, post = (i) => i) {\n  return { regex, deser: ([s]) => post(parseDigits(s)) };\n}\n\nconst NBSP = String.fromCharCode(160);\nconst spaceOrNBSP = `[ ${NBSP}]`;\nconst spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, \"g\");\n\nfunction fixListRegex(s) {\n  // make dots optional and also make them literal\n  // make space and non breakable space characters interchangeable\n  return s.replace(/\\./g, \"\\\\.?\").replace(spaceOrNBSPRegExp, spaceOrNBSP);\n}\n\nfunction stripInsensitivities(s) {\n  return s\n    .replace(/\\./g, \"\") // ignore dots that were made optional\n    .replace(spaceOrNBSPRegExp, \" \") // interchange space and nbsp\n    .toLowerCase();\n}\n\nfunction oneOf(strings, startIndex) {\n  if (strings === null) {\n    return null;\n  } else {\n    return {\n      regex: RegExp(strings.map(fixListRegex).join(\"|\")),\n      deser: ([s]) =>\n        strings.findIndex((i) => stripInsensitivities(s) === stripInsensitivities(i)) + startIndex,\n    };\n  }\n}\n\nfunction offset(regex, groups) {\n  return { regex, deser: ([, h, m]) => signedOffset(h, m), groups };\n}\n\nfunction simple(regex) {\n  return { regex, deser: ([s]) => s };\n}\n\nfunction escapeToken(value) {\n  return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\nfunction unitForToken(token, loc) {\n  const one = digitRegex(loc),\n    two = digitRegex(loc, \"{2}\"),\n    three = digitRegex(loc, \"{3}\"),\n    four = digitRegex(loc, \"{4}\"),\n    six = digitRegex(loc, \"{6}\"),\n    oneOrTwo = digitRegex(loc, \"{1,2}\"),\n    oneToThree = digitRegex(loc, \"{1,3}\"),\n    oneToSix = digitRegex(loc, \"{1,6}\"),\n    oneToNine = digitRegex(loc, \"{1,9}\"),\n    twoToFour = digitRegex(loc, \"{2,4}\"),\n    fourToSix = digitRegex(loc, \"{4,6}\"),\n    literal = (t) => ({ regex: RegExp(escapeToken(t.val)), deser: ([s]) => s, literal: true }),\n    unitate = (t) => {\n      if (token.literal) {\n        return literal(t);\n      }\n      switch (t.val) {\n        // era\n        case \"G\":\n          return oneOf(loc.eras(\"short\", false), 0);\n        case \"GG\":\n          return oneOf(loc.eras(\"long\", false), 0);\n        // years\n        case \"y\":\n          return intUnit(oneToSix);\n        case \"yy\":\n          return intUnit(twoToFour, untruncateYear);\n        case \"yyyy\":\n          return intUnit(four);\n        case \"yyyyy\":\n          return intUnit(fourToSix);\n        case \"yyyyyy\":\n          return intUnit(six);\n        // months\n        case \"M\":\n          return intUnit(oneOrTwo);\n        case \"MM\":\n          return intUnit(two);\n        case \"MMM\":\n          return oneOf(loc.months(\"short\", true, false), 1);\n        case \"MMMM\":\n          return oneOf(loc.months(\"long\", true, false), 1);\n        case \"L\":\n          return intUnit(oneOrTwo);\n        case \"LL\":\n          return intUnit(two);\n        case \"LLL\":\n          return oneOf(loc.months(\"short\", false, false), 1);\n        case \"LLLL\":\n          return oneOf(loc.months(\"long\", false, false), 1);\n        // dates\n        case \"d\":\n          return intUnit(oneOrTwo);\n        case \"dd\":\n          return intUnit(two);\n        // ordinals\n        case \"o\":\n          return intUnit(oneToThree);\n        case \"ooo\":\n          return intUnit(three);\n        // time\n        case \"HH\":\n          return intUnit(two);\n        case \"H\":\n          return intUnit(oneOrTwo);\n        case \"hh\":\n          return intUnit(two);\n        case \"h\":\n          return intUnit(oneOrTwo);\n        case \"mm\":\n          return intUnit(two);\n        case \"m\":\n          return intUnit(oneOrTwo);\n        case \"q\":\n          return intUnit(oneOrTwo);\n        case \"qq\":\n          return intUnit(two);\n        case \"s\":\n          return intUnit(oneOrTwo);\n        case \"ss\":\n          return intUnit(two);\n        case \"S\":\n          return intUnit(oneToThree);\n        case \"SSS\":\n          return intUnit(three);\n        case \"u\":\n          return simple(oneToNine);\n        case \"uu\":\n          return simple(oneOrTwo);\n        case \"uuu\":\n          return intUnit(one);\n        // meridiem\n        case \"a\":\n          return oneOf(loc.meridiems(), 0);\n        // weekYear (k)\n        case \"kkkk\":\n          return intUnit(four);\n        case \"kk\":\n          return intUnit(twoToFour, untruncateYear);\n        // weekNumber (W)\n        case \"W\":\n          return intUnit(oneOrTwo);\n        case \"WW\":\n          return intUnit(two);\n        // weekdays\n        case \"E\":\n        case \"c\":\n          return intUnit(one);\n        case \"EEE\":\n          return oneOf(loc.weekdays(\"short\", false, false), 1);\n        case \"EEEE\":\n          return oneOf(loc.weekdays(\"long\", false, false), 1);\n        case \"ccc\":\n          return oneOf(loc.weekdays(\"short\", true, false), 1);\n        case \"cccc\":\n          return oneOf(loc.weekdays(\"long\", true, false), 1);\n        // offset/zone\n        case \"Z\":\n        case \"ZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`), 2);\n        case \"ZZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`), 2);\n        // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing\n        // because we don't have any way to figure out what they are\n        case \"z\":\n          return simple(/[a-z_+-/]{1,256}?/i);\n        default:\n          return literal(t);\n      }\n    };\n\n  const unit = unitate(token) || {\n    invalidReason: MISSING_FTP,\n  };\n\n  unit.token = token;\n\n  return unit;\n}\n\nconst partTypeStyleToTokenVal = {\n  year: {\n    \"2-digit\": \"yy\",\n    numeric: \"yyyyy\",\n  },\n  month: {\n    numeric: \"M\",\n    \"2-digit\": \"MM\",\n    short: \"MMM\",\n    long: \"MMMM\",\n  },\n  day: {\n    numeric: \"d\",\n    \"2-digit\": \"dd\",\n  },\n  weekday: {\n    short: \"EEE\",\n    long: \"EEEE\",\n  },\n  dayperiod: \"a\",\n  dayPeriod: \"a\",\n  hour: {\n    numeric: \"h\",\n    \"2-digit\": \"hh\",\n  },\n  minute: {\n    numeric: \"m\",\n    \"2-digit\": \"mm\",\n  },\n  second: {\n    numeric: \"s\",\n    \"2-digit\": \"ss\",\n  },\n};\n\nfunction tokenForPart(part, locale, formatOpts) {\n  const { type, value } = part;\n\n  if (type === \"literal\") {\n    return {\n      literal: true,\n      val: value,\n    };\n  }\n\n  const style = formatOpts[type];\n\n  let val = partTypeStyleToTokenVal[type];\n  if (typeof val === \"object\") {\n    val = val[style];\n  }\n\n  if (val) {\n    return {\n      literal: false,\n      val,\n    };\n  }\n\n  return undefined;\n}\n\nfunction buildRegex(units) {\n  const re = units.map((u) => u.regex).reduce((f, r) => `${f}(${r.source})`, \"\");\n  return [`^${re}$`, units];\n}\n\nfunction match(input, regex, handlers) {\n  const matches = input.match(regex);\n\n  if (matches) {\n    const all = {};\n    let matchIndex = 1;\n    for (const i in handlers) {\n      if (hasOwnProperty(handlers, i)) {\n        const h = handlers[i],\n          groups = h.groups ? h.groups + 1 : 1;\n        if (!h.literal && h.token) {\n          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));\n        }\n        matchIndex += groups;\n      }\n    }\n    return [matches, all];\n  } else {\n    return [matches, {}];\n  }\n}\n\nfunction dateTimeFromMatches(matches) {\n  const toField = (token) => {\n    switch (token) {\n      case \"S\":\n        return \"millisecond\";\n      case \"s\":\n        return \"second\";\n      case \"m\":\n        return \"minute\";\n      case \"h\":\n      case \"H\":\n        return \"hour\";\n      case \"d\":\n        return \"day\";\n      case \"o\":\n        return \"ordinal\";\n      case \"L\":\n      case \"M\":\n        return \"month\";\n      case \"y\":\n        return \"year\";\n      case \"E\":\n      case \"c\":\n        return \"weekday\";\n      case \"W\":\n        return \"weekNumber\";\n      case \"k\":\n        return \"weekYear\";\n      case \"q\":\n        return \"quarter\";\n      default:\n        return null;\n    }\n  };\n\n  let zone = null;\n  let specificOffset;\n  if (!isUndefined(matches.z)) {\n    zone = IANAZone.create(matches.z);\n  }\n\n  if (!isUndefined(matches.Z)) {\n    if (!zone) {\n      zone = new FixedOffsetZone(matches.Z);\n    }\n    specificOffset = matches.Z;\n  }\n\n  if (!isUndefined(matches.q)) {\n    matches.M = (matches.q - 1) * 3 + 1;\n  }\n\n  if (!isUndefined(matches.h)) {\n    if (matches.h < 12 && matches.a === 1) {\n      matches.h += 12;\n    } else if (matches.h === 12 && matches.a === 0) {\n      matches.h = 0;\n    }\n  }\n\n  if (matches.G === 0 && matches.y) {\n    matches.y = -matches.y;\n  }\n\n  if (!isUndefined(matches.u)) {\n    matches.S = parseMillis(matches.u);\n  }\n\n  const vals = Object.keys(matches).reduce((r, k) => {\n    const f = toField(k);\n    if (f) {\n      r[f] = matches[k];\n    }\n\n    return r;\n  }, {});\n\n  return [vals, zone, specificOffset];\n}\n\nlet dummyDateTimeCache = null;\n\nfunction getDummyDateTime() {\n  if (!dummyDateTimeCache) {\n    dummyDateTimeCache = DateTime.fromMillis(1555555555555);\n  }\n\n  return dummyDateTimeCache;\n}\n\nfunction maybeExpandMacroToken(token, locale) {\n  if (token.literal) {\n    return token;\n  }\n\n  const formatOpts = Formatter.macroTokenToFormatOpts(token.val);\n\n  if (!formatOpts) {\n    return token;\n  }\n\n  const formatter = Formatter.create(locale, formatOpts);\n  const parts = formatter.formatDateTimeParts(getDummyDateTime());\n\n  const tokens = parts.map((p) => tokenForPart(p, locale, formatOpts));\n\n  if (tokens.includes(undefined)) {\n    return token;\n  }\n\n  return tokens;\n}\n\nfunction expandMacroTokens(tokens, locale) {\n  return Array.prototype.concat(...tokens.map((t) => maybeExpandMacroToken(t, locale)));\n}\n\n/**\n * @private\n */\n\nexport function explainFromTokens(locale, input, format) {\n  const tokens = expandMacroTokens(Formatter.parseFormat(format), locale),\n    units = tokens.map((t) => unitForToken(t, locale)),\n    disqualifyingUnit = units.find((t) => t.invalidReason);\n\n  if (disqualifyingUnit) {\n    return { input, tokens, invalidReason: disqualifyingUnit.invalidReason };\n  } else {\n    const [regexString, handlers] = buildRegex(units),\n      regex = RegExp(regexString, \"i\"),\n      [rawMatches, matches] = match(input, regex, handlers),\n      [result, zone, specificOffset] = matches\n        ? dateTimeFromMatches(matches)\n        : [null, null, undefined];\n    if (hasOwnProperty(matches, \"a\") && hasOwnProperty(matches, \"H\")) {\n      throw new ConflictingSpecificationError(\n        \"Can't include meridiem when specifying 24-hour format\"\n      );\n    }\n    return { input, tokens, regex, rawMatches, matches, result, zone, specificOffset };\n  }\n}\n\nexport function parseFromTokens(locale, input, format) {\n  const { result, zone, specificOffset, invalidReason } = explainFromTokens(locale, input, format);\n  return [result, zone, specificOffset, invalidReason];\n}\n","import {\n  integerBetween,\n  isLeapYear,\n  timeObject,\n  daysInYear,\n  daysInMonth,\n  weeksInWeekYear,\n  isInteger,\n} from \"./util.js\";\nimport Invalid from \"./invalid.js\";\n\nconst nonLeapLadder = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],\n  leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];\n\nfunction unitOutOfRange(unit, value) {\n  return new Invalid(\n    \"unit out of range\",\n    `you specified ${value} (of type ${typeof value}) as a ${unit}, which is invalid`\n  );\n}\n\nfunction dayOfWeek(year, month, day) {\n  const d = new Date(Date.UTC(year, month - 1, day));\n\n  if (year < 100 && year >= 0) {\n    d.setUTCFullYear(d.getUTCFullYear() - 1900);\n  }\n\n  const js = d.getUTCDay();\n\n  return js === 0 ? 7 : js;\n}\n\nfunction computeOrdinal(year, month, day) {\n  return day + (isLeapYear(year) ? leapLadder : nonLeapLadder)[month - 1];\n}\n\nfunction uncomputeOrdinal(year, ordinal) {\n  const table = isLeapYear(year) ? leapLadder : nonLeapLadder,\n    month0 = table.findIndex((i) => i < ordinal),\n    day = ordinal - table[month0];\n  return { month: month0 + 1, day };\n}\n\n/**\n * @private\n */\n\nexport function gregorianToWeek(gregObj) {\n  const { year, month, day } = gregObj,\n    ordinal = computeOrdinal(year, month, day),\n    weekday = dayOfWeek(year, month, day);\n\n  let weekNumber = Math.floor((ordinal - weekday + 10) / 7),\n    weekYear;\n\n  if (weekNumber < 1) {\n    weekYear = year - 1;\n    weekNumber = weeksInWeekYear(weekYear);\n  } else if (weekNumber > weeksInWeekYear(year)) {\n    weekYear = year + 1;\n    weekNumber = 1;\n  } else {\n    weekYear = year;\n  }\n\n  return { weekYear, weekNumber, weekday, ...timeObject(gregObj) };\n}\n\nexport function weekToGregorian(weekData) {\n  const { weekYear, weekNumber, weekday } = weekData,\n    weekdayOfJan4 = dayOfWeek(weekYear, 1, 4),\n    yearInDays = daysInYear(weekYear);\n\n  let ordinal = weekNumber * 7 + weekday - weekdayOfJan4 - 3,\n    year;\n\n  if (ordinal < 1) {\n    year = weekYear - 1;\n    ordinal += daysInYear(year);\n  } else if (ordinal > yearInDays) {\n    year = weekYear + 1;\n    ordinal -= daysInYear(weekYear);\n  } else {\n    year = weekYear;\n  }\n\n  const { month, day } = uncomputeOrdinal(year, ordinal);\n  return { year, month, day, ...timeObject(weekData) };\n}\n\nexport function gregorianToOrdinal(gregData) {\n  const { year, month, day } = gregData;\n  const ordinal = computeOrdinal(year, month, day);\n  return { year, ordinal, ...timeObject(gregData) };\n}\n\nexport function ordinalToGregorian(ordinalData) {\n  const { year, ordinal } = ordinalData;\n  const { month, day } = uncomputeOrdinal(year, ordinal);\n  return { year, month, day, ...timeObject(ordinalData) };\n}\n\nexport function hasInvalidWeekData(obj) {\n  const validYear = isInteger(obj.weekYear),\n    validWeek = integerBetween(obj.weekNumber, 1, weeksInWeekYear(obj.weekYear)),\n    validWeekday = integerBetween(obj.weekday, 1, 7);\n\n  if (!validYear) {\n    return unitOutOfRange(\"weekYear\", obj.weekYear);\n  } else if (!validWeek) {\n    return unitOutOfRange(\"week\", obj.week);\n  } else if (!validWeekday) {\n    return unitOutOfRange(\"weekday\", obj.weekday);\n  } else return false;\n}\n\nexport function hasInvalidOrdinalData(obj) {\n  const validYear = isInteger(obj.year),\n    validOrdinal = integerBetween(obj.ordinal, 1, daysInYear(obj.year));\n\n  if (!validYear) {\n    return unitOutOfRange(\"year\", obj.year);\n  } else if (!validOrdinal) {\n    return unitOutOfRange(\"ordinal\", obj.ordinal);\n  } else return false;\n}\n\nexport function hasInvalidGregorianData(obj) {\n  const validYear = isInteger(obj.year),\n    validMonth = integerBetween(obj.month, 1, 12),\n    validDay = integerBetween(obj.day, 1, daysInMonth(obj.year, obj.month));\n\n  if (!validYear) {\n    return unitOutOfRange(\"year\", obj.year);\n  } else if (!validMonth) {\n    return unitOutOfRange(\"month\", obj.month);\n  } else if (!validDay) {\n    return unitOutOfRange(\"day\", obj.day);\n  } else return false;\n}\n\nexport function hasInvalidTimeData(obj) {\n  const { hour, minute, second, millisecond } = obj;\n  const validHour =\n      integerBetween(hour, 0, 23) ||\n      (hour === 24 && minute === 0 && second === 0 && millisecond === 0),\n    validMinute = integerBetween(minute, 0, 59),\n    validSecond = integerBetween(second, 0, 59),\n    validMillisecond = integerBetween(millisecond, 0, 999);\n\n  if (!validHour) {\n    return unitOutOfRange(\"hour\", hour);\n  } else if (!validMinute) {\n    return unitOutOfRange(\"minute\", minute);\n  } else if (!validSecond) {\n    return unitOutOfRange(\"second\", second);\n  } else if (!validMillisecond) {\n    return unitOutOfRange(\"millisecond\", millisecond);\n  } else return false;\n}\n","import Duration from \"./duration.js\";\nimport Interval from \"./interval.js\";\nimport Settings from \"./settings.js\";\nimport Info from \"./info.js\";\nimport Formatter from \"./impl/formatter.js\";\nimport FixedOffsetZone from \"./zones/fixedOffsetZone.js\";\nimport Locale from \"./impl/locale.js\";\nimport {\n  isUndefined,\n  maybeArray,\n  isDate,\n  isNumber,\n  bestBy,\n  daysInMonth,\n  daysInYear,\n  isLeapYear,\n  weeksInWeekYear,\n  normalizeObject,\n  roundTo,\n  objToLocalTS,\n  padStart,\n} from \"./impl/util.js\";\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\nimport diff from \"./impl/diff.js\";\nimport { parseRFC2822Date, parseISODate, parseHTTPDate, parseSQL } from \"./impl/regexParser.js\";\nimport { parseFromTokens, explainFromTokens } from \"./impl/tokenParser.js\";\nimport {\n  gregorianToWeek,\n  weekToGregorian,\n  gregorianToOrdinal,\n  ordinalToGregorian,\n  hasInvalidGregorianData,\n  hasInvalidWeekData,\n  hasInvalidOrdinalData,\n  hasInvalidTimeData,\n} from \"./impl/conversions.js\";\nimport * as Formats from \"./impl/formats.js\";\nimport {\n  InvalidArgumentError,\n  ConflictingSpecificationError,\n  InvalidUnitError,\n  InvalidDateTimeError,\n} from \"./errors.js\";\nimport Invalid from \"./impl/invalid.js\";\n\nconst INVALID = \"Invalid DateTime\";\nconst MAX_DATE = 8.64e15;\n\nfunction unsupportedZone(zone) {\n  return new Invalid(\"unsupported zone\", `the zone \"${zone.name}\" is not supported`);\n}\n\n// we cache week data on the DT object and this intermediates the cache\nfunction possiblyCachedWeekData(dt) {\n  if (dt.weekData === null) {\n    dt.weekData = gregorianToWeek(dt.c);\n  }\n  return dt.weekData;\n}\n\n// clone really means, \"make a new object with these modifications\". all \"setters\" really use this\n// to create a new object while only changing some of the properties\nfunction clone(inst, alts) {\n  const current = {\n    ts: inst.ts,\n    zone: inst.zone,\n    c: inst.c,\n    o: inst.o,\n    loc: inst.loc,\n    invalid: inst.invalid,\n  };\n  return new DateTime({ ...current, ...alts, old: current });\n}\n\n// find the right offset a given local time. The o input is our guess, which determines which\n// offset we'll pick in ambiguous cases (e.g. there are two 3 AMs b/c Fallback DST)\nfunction fixOffset(localTS, o, tz) {\n  // Our UTC time is just a guess because our offset is just a guess\n  let utcGuess = localTS - o * 60 * 1000;\n\n  // Test whether the zone matches the offset for this ts\n  const o2 = tz.offset(utcGuess);\n\n  // If so, offset didn't change and we're done\n  if (o === o2) {\n    return [utcGuess, o];\n  }\n\n  // If not, change the ts by the difference in the offset\n  utcGuess -= (o2 - o) * 60 * 1000;\n\n  // If that gives us the local time we want, we're done\n  const o3 = tz.offset(utcGuess);\n  if (o2 === o3) {\n    return [utcGuess, o2];\n  }\n\n  // If it's different, we're in a hole time. The offset has changed, but the we don't adjust the time\n  return [localTS - Math.min(o2, o3) * 60 * 1000, Math.max(o2, o3)];\n}\n\n// convert an epoch timestamp into a calendar object with the given offset\nfunction tsToObj(ts, offset) {\n  ts += offset * 60 * 1000;\n\n  const d = new Date(ts);\n\n  return {\n    year: d.getUTCFullYear(),\n    month: d.getUTCMonth() + 1,\n    day: d.getUTCDate(),\n    hour: d.getUTCHours(),\n    minute: d.getUTCMinutes(),\n    second: d.getUTCSeconds(),\n    millisecond: d.getUTCMilliseconds(),\n  };\n}\n\n// convert a calendar object to a epoch timestamp\nfunction objToTS(obj, offset, zone) {\n  return fixOffset(objToLocalTS(obj), offset, zone);\n}\n\n// create a new DT instance by adding a duration, adjusting for DSTs\nfunction adjustTime(inst, dur) {\n  const oPre = inst.o,\n    year = inst.c.year + Math.trunc(dur.years),\n    month = inst.c.month + Math.trunc(dur.months) + Math.trunc(dur.quarters) * 3,\n    c = {\n      ...inst.c,\n      year,\n      month,\n      day:\n        Math.min(inst.c.day, daysInMonth(year, month)) +\n        Math.trunc(dur.days) +\n        Math.trunc(dur.weeks) * 7,\n    },\n    millisToAdd = Duration.fromObject({\n      years: dur.years - Math.trunc(dur.years),\n      quarters: dur.quarters - Math.trunc(dur.quarters),\n      months: dur.months - Math.trunc(dur.months),\n      weeks: dur.weeks - Math.trunc(dur.weeks),\n      days: dur.days - Math.trunc(dur.days),\n      hours: dur.hours,\n      minutes: dur.minutes,\n      seconds: dur.seconds,\n      milliseconds: dur.milliseconds,\n    }).as(\"milliseconds\"),\n    localTS = objToLocalTS(c);\n\n  let [ts, o] = fixOffset(localTS, oPre, inst.zone);\n\n  if (millisToAdd !== 0) {\n    ts += millisToAdd;\n    // that could have changed the offset by going over a DST, but we want to keep the ts the same\n    o = inst.zone.offset(ts);\n  }\n\n  return { ts, o };\n}\n\n// helper useful in turning the results of parsing into real dates\n// by handling the zone options\nfunction parseDataToDateTime(parsed, parsedZone, opts, format, text, specificOffset) {\n  const { setZone, zone } = opts;\n  if (parsed && Object.keys(parsed).length !== 0) {\n    const interpretationZone = parsedZone || zone,\n      inst = DateTime.fromObject(parsed, {\n        ...opts,\n        zone: interpretationZone,\n        specificOffset,\n      });\n    return setZone ? inst : inst.setZone(zone);\n  } else {\n    return DateTime.invalid(\n      new Invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ${format}`)\n    );\n  }\n}\n\n// if you want to output a technical format (e.g. RFC 2822), this helper\n// helps handle the details\nfunction toTechFormat(dt, format, allowZ = true) {\n  return dt.isValid\n    ? Formatter.create(Locale.create(\"en-US\"), {\n        allowZ,\n        forceSimple: true,\n      }).formatDateTimeFromString(dt, format)\n    : null;\n}\n\nfunction toISODate(o, extended) {\n  const longFormat = o.c.year > 9999 || o.c.year < 0;\n  let c = \"\";\n  if (longFormat && o.c.year >= 0) c += \"+\";\n  c += padStart(o.c.year, longFormat ? 6 : 4);\n\n  if (extended) {\n    c += \"-\";\n    c += padStart(o.c.month);\n    c += \"-\";\n    c += padStart(o.c.day);\n  } else {\n    c += padStart(o.c.month);\n    c += padStart(o.c.day);\n  }\n  return c;\n}\n\nfunction toISOTime(\n  o,\n  extended,\n  suppressSeconds,\n  suppressMilliseconds,\n  includeOffset,\n  extendedZone\n) {\n  let c = padStart(o.c.hour);\n  if (extended) {\n    c += \":\";\n    c += padStart(o.c.minute);\n    if (o.c.second !== 0 || !suppressSeconds) {\n      c += \":\";\n    }\n  } else {\n    c += padStart(o.c.minute);\n  }\n\n  if (o.c.second !== 0 || !suppressSeconds) {\n    c += padStart(o.c.second);\n\n    if (o.c.millisecond !== 0 || !suppressMilliseconds) {\n      c += \".\";\n      c += padStart(o.c.millisecond, 3);\n    }\n  }\n\n  if (includeOffset) {\n    if (o.isOffsetFixed && o.offset === 0 && !extendedZone) {\n      c += \"Z\";\n    } else if (o.o < 0) {\n      c += \"-\";\n      c += padStart(Math.trunc(-o.o / 60));\n      c += \":\";\n      c += padStart(Math.trunc(-o.o % 60));\n    } else {\n      c += \"+\";\n      c += padStart(Math.trunc(o.o / 60));\n      c += \":\";\n      c += padStart(Math.trunc(o.o % 60));\n    }\n  }\n\n  if (extendedZone) {\n    c += \"[\" + o.zone.ianaName + \"]\";\n  }\n  return c;\n}\n\n// defaults for unspecified units in the supported calendars\nconst defaultUnitValues = {\n    month: 1,\n    day: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0,\n  },\n  defaultWeekUnitValues = {\n    weekNumber: 1,\n    weekday: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0,\n  },\n  defaultOrdinalUnitValues = {\n    ordinal: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0,\n  };\n\n// Units in the supported calendars, sorted by bigness\nconst orderedUnits = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\", \"millisecond\"],\n  orderedWeekUnits = [\n    \"weekYear\",\n    \"weekNumber\",\n    \"weekday\",\n    \"hour\",\n    \"minute\",\n    \"second\",\n    \"millisecond\",\n  ],\n  orderedOrdinalUnits = [\"year\", \"ordinal\", \"hour\", \"minute\", \"second\", \"millisecond\"];\n\n// standardize case and plurality in units\nfunction normalizeUnit(unit) {\n  const normalized = {\n    year: \"year\",\n    years: \"year\",\n    month: \"month\",\n    months: \"month\",\n    day: \"day\",\n    days: \"day\",\n    hour: \"hour\",\n    hours: \"hour\",\n    minute: \"minute\",\n    minutes: \"minute\",\n    quarter: \"quarter\",\n    quarters: \"quarter\",\n    second: \"second\",\n    seconds: \"second\",\n    millisecond: \"millisecond\",\n    milliseconds: \"millisecond\",\n    weekday: \"weekday\",\n    weekdays: \"weekday\",\n    weeknumber: \"weekNumber\",\n    weeksnumber: \"weekNumber\",\n    weeknumbers: \"weekNumber\",\n    weekyear: \"weekYear\",\n    weekyears: \"weekYear\",\n    ordinal: \"ordinal\",\n  }[unit.toLowerCase()];\n\n  if (!normalized) throw new InvalidUnitError(unit);\n\n  return normalized;\n}\n\n// this is a dumbed down version of fromObject() that runs about 60% faster\n// but doesn't do any validation, makes a bunch of assumptions about what units\n// are present, and so on.\nfunction quickDT(obj, opts) {\n  const zone = normalizeZone(opts.zone, Settings.defaultZone),\n    loc = Locale.fromObject(opts),\n    tsNow = Settings.now();\n\n  let ts, o;\n\n  // assume we have the higher-order units\n  if (!isUndefined(obj.year)) {\n    for (const u of orderedUnits) {\n      if (isUndefined(obj[u])) {\n        obj[u] = defaultUnitValues[u];\n      }\n    }\n\n    const invalid = hasInvalidGregorianData(obj) || hasInvalidTimeData(obj);\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    }\n\n    const offsetProvis = zone.offset(tsNow);\n    [ts, o] = objToTS(obj, offsetProvis, zone);\n  } else {\n    ts = tsNow;\n  }\n\n  return new DateTime({ ts, zone, loc, o });\n}\n\nfunction diffRelative(start, end, opts) {\n  const round = isUndefined(opts.round) ? true : opts.round,\n    format = (c, unit) => {\n      c = roundTo(c, round || opts.calendary ? 0 : 2, true);\n      const formatter = end.loc.clone(opts).relFormatter(opts);\n      return formatter.format(c, unit);\n    },\n    differ = (unit) => {\n      if (opts.calendary) {\n        if (!end.hasSame(start, unit)) {\n          return end.startOf(unit).diff(start.startOf(unit), unit).get(unit);\n        } else return 0;\n      } else {\n        return end.diff(start, unit).get(unit);\n      }\n    };\n\n  if (opts.unit) {\n    return format(differ(opts.unit), opts.unit);\n  }\n\n  for (const unit of opts.units) {\n    const count = differ(unit);\n    if (Math.abs(count) >= 1) {\n      return format(count, unit);\n    }\n  }\n  return format(start > end ? -0 : 0, opts.units[opts.units.length - 1]);\n}\n\nfunction lastOpts(argList) {\n  let opts = {},\n    args;\n  if (argList.length > 0 && typeof argList[argList.length - 1] === \"object\") {\n    opts = argList[argList.length - 1];\n    args = Array.from(argList).slice(0, argList.length - 1);\n  } else {\n    args = Array.from(argList);\n  }\n  return [opts, args];\n}\n\n/**\n * A DateTime is an immutable data structure representing a specific date and time and accompanying methods. It contains class and instance methods for creating, parsing, interrogating, transforming, and formatting them.\n *\n * A DateTime comprises of:\n * * A timestamp. Each DateTime instance refers to a specific millisecond of the Unix epoch.\n * * A time zone. Each instance is considered in the context of a specific zone (by default the local system's zone).\n * * Configuration properties that effect how output strings are formatted, such as `locale`, `numberingSystem`, and `outputCalendar`.\n *\n * Here is a brief overview of the most commonly used functionality it provides:\n *\n * * **Creation**: To create a DateTime from its components, use one of its factory class methods: {@link DateTime#local}, {@link DateTime#utc}, and (most flexibly) {@link DateTime#fromObject}. To create one from a standard string format, use {@link DateTime#fromISO}, {@link DateTime#fromHTTP}, and {@link DateTime#fromRFC2822}. To create one from a custom string format, use {@link DateTime#fromFormat}. To create one from a native JS date, use {@link DateTime#fromJSDate}.\n * * **Gregorian calendar and time**: To examine the Gregorian properties of a DateTime individually (i.e as opposed to collectively through {@link DateTime#toObject}), use the {@link DateTime#year}, {@link DateTime#month},\n * {@link DateTime#day}, {@link DateTime#hour}, {@link DateTime#minute}, {@link DateTime#second}, {@link DateTime#millisecond} accessors.\n * * **Week calendar**: For ISO week calendar attributes, see the {@link DateTime#weekYear}, {@link DateTime#weekNumber}, and {@link DateTime#weekday} accessors.\n * * **Configuration** See the {@link DateTime#locale} and {@link DateTime#numberingSystem} accessors.\n * * **Transformation**: To transform the DateTime into other DateTimes, use {@link DateTime#set}, {@link DateTime#reconfigure}, {@link DateTime#setZone}, {@link DateTime#setLocale}, {@link DateTime.plus}, {@link DateTime#minus}, {@link DateTime#endOf}, {@link DateTime#startOf}, {@link DateTime#toUTC}, and {@link DateTime#toLocal}.\n * * **Output**: To convert the DateTime to other representations, use the {@link DateTime#toRelative}, {@link DateTime#toRelativeCalendar}, {@link DateTime#toJSON}, {@link DateTime#toISO}, {@link DateTime#toHTTP}, {@link DateTime#toObject}, {@link DateTime#toRFC2822}, {@link DateTime#toString}, {@link DateTime#toLocaleString}, {@link DateTime#toFormat}, {@link DateTime#toMillis} and {@link DateTime#toJSDate}.\n *\n * There's plenty others documented below. In addition, for more information on subtler topics like internationalization, time zones, alternative calendars, validity, and so on, see the external documentation.\n */\nexport default class DateTime {\n  /**\n   * @access private\n   */\n  constructor(config) {\n    const zone = config.zone || Settings.defaultZone;\n\n    let invalid =\n      config.invalid ||\n      (Number.isNaN(config.ts) ? new Invalid(\"invalid input\") : null) ||\n      (!zone.isValid ? unsupportedZone(zone) : null);\n    /**\n     * @access private\n     */\n    this.ts = isUndefined(config.ts) ? Settings.now() : config.ts;\n\n    let c = null,\n      o = null;\n    if (!invalid) {\n      const unchanged = config.old && config.old.ts === this.ts && config.old.zone.equals(zone);\n\n      if (unchanged) {\n        [c, o] = [config.old.c, config.old.o];\n      } else {\n        const ot = zone.offset(this.ts);\n        c = tsToObj(this.ts, ot);\n        invalid = Number.isNaN(c.year) ? new Invalid(\"invalid input\") : null;\n        c = invalid ? null : c;\n        o = invalid ? null : ot;\n      }\n    }\n\n    /**\n     * @access private\n     */\n    this._zone = zone;\n    /**\n     * @access private\n     */\n    this.loc = config.loc || Locale.create();\n    /**\n     * @access private\n     */\n    this.invalid = invalid;\n    /**\n     * @access private\n     */\n    this.weekData = null;\n    /**\n     * @access private\n     */\n    this.c = c;\n    /**\n     * @access private\n     */\n    this.o = o;\n    /**\n     * @access private\n     */\n    this.isLuxonDateTime = true;\n  }\n\n  // CONSTRUCT\n\n  /**\n   * Create a DateTime for the current instant, in the system's time zone.\n   *\n   * Use Settings to override these default values if needed.\n   * @example DateTime.now().toISO() //~> now in the ISO format\n   * @return {DateTime}\n   */\n  static now() {\n    return new DateTime({});\n  }\n\n  /**\n   * Create a local DateTime\n   * @param {number} [year] - The calendar year. If omitted (as in, call `local()` with no arguments), the current time will be used\n   * @param {number} [month=1] - The month, 1-indexed\n   * @param {number} [day=1] - The day of the month, 1-indexed\n   * @param {number} [hour=0] - The hour of the day, in 24-hour time\n   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59\n   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59\n   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999\n   * @example DateTime.local()                                  //~> now\n   * @example DateTime.local({ zone: \"America/New_York\" })      //~> now, in US east coast time\n   * @example DateTime.local(2017)                              //~> 2017-01-01T00:00:00\n   * @example DateTime.local(2017, 3)                           //~> 2017-03-01T00:00:00\n   * @example DateTime.local(2017, 3, 12, { locale: \"fr\" })     //~> 2017-03-12T00:00:00, with a French locale\n   * @example DateTime.local(2017, 3, 12, 5)                    //~> 2017-03-12T05:00:00\n   * @example DateTime.local(2017, 3, 12, 5, { zone: \"utc\" })   //~> 2017-03-12T05:00:00, in UTC\n   * @example DateTime.local(2017, 3, 12, 5, 45)                //~> 2017-03-12T05:45:00\n   * @example DateTime.local(2017, 3, 12, 5, 45, 10)            //~> 2017-03-12T05:45:10\n   * @example DateTime.local(2017, 3, 12, 5, 45, 10, 765)       //~> 2017-03-12T05:45:10.765\n   * @return {DateTime}\n   */\n  static local() {\n    const [opts, args] = lastOpts(arguments),\n      [year, month, day, hour, minute, second, millisecond] = args;\n    return quickDT({ year, month, day, hour, minute, second, millisecond }, opts);\n  }\n\n  /**\n   * Create a DateTime in UTC\n   * @param {number} [year] - The calendar year. If omitted (as in, call `utc()` with no arguments), the current time will be used\n   * @param {number} [month=1] - The month, 1-indexed\n   * @param {number} [day=1] - The day of the month\n   * @param {number} [hour=0] - The hour of the day, in 24-hour time\n   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59\n   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59\n   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} [options.outputCalendar] - the output calendar to set on the resulting DateTime instance\n   * @param {string} [options.numberingSystem] - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.utc()                                              //~> now\n   * @example DateTime.utc(2017)                                          //~> 2017-01-01T00:00:00Z\n   * @example DateTime.utc(2017, 3)                                       //~> 2017-03-01T00:00:00Z\n   * @example DateTime.utc(2017, 3, 12)                                   //~> 2017-03-12T00:00:00Z\n   * @example DateTime.utc(2017, 3, 12, 5)                                //~> 2017-03-12T05:00:00Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45)                            //~> 2017-03-12T05:45:00Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45, { locale: \"fr\" })          //~> 2017-03-12T05:45:00Z with a French locale\n   * @example DateTime.utc(2017, 3, 12, 5, 45, 10)                        //~> 2017-03-12T05:45:10Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45, 10, 765, { locale: \"fr\" }) //~> 2017-03-12T05:45:10.765Z with a French locale\n   * @return {DateTime}\n   */\n  static utc() {\n    const [opts, args] = lastOpts(arguments),\n      [year, month, day, hour, minute, second, millisecond] = args;\n\n    opts.zone = FixedOffsetZone.utcInstance;\n    return quickDT({ year, month, day, hour, minute, second, millisecond }, opts);\n  }\n\n  /**\n   * Create a DateTime from a JavaScript Date object. Uses the default zone.\n   * @param {Date} date - a JavaScript Date object\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @return {DateTime}\n   */\n  static fromJSDate(date, options = {}) {\n    const ts = isDate(date) ? date.valueOf() : NaN;\n    if (Number.isNaN(ts)) {\n      return DateTime.invalid(\"invalid input\");\n    }\n\n    const zoneToUse = normalizeZone(options.zone, Settings.defaultZone);\n    if (!zoneToUse.isValid) {\n      return DateTime.invalid(unsupportedZone(zoneToUse));\n    }\n\n    return new DateTime({\n      ts: ts,\n      zone: zoneToUse,\n      loc: Locale.fromObject(options),\n    });\n  }\n\n  /**\n   * Create a DateTime from a number of milliseconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.\n   * @param {number} milliseconds - a number of milliseconds since 1970 UTC\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromMillis(milliseconds, options = {}) {\n    if (!isNumber(milliseconds)) {\n      throw new InvalidArgumentError(\n        `fromMillis requires a numerical input, but received a ${typeof milliseconds} with value ${milliseconds}`\n      );\n    } else if (milliseconds < -MAX_DATE || milliseconds > MAX_DATE) {\n      // this isn't perfect because because we can still end up out of range because of additional shifting, but it's a start\n      return DateTime.invalid(\"Timestamp out of range\");\n    } else {\n      return new DateTime({\n        ts: milliseconds,\n        zone: normalizeZone(options.zone, Settings.defaultZone),\n        loc: Locale.fromObject(options),\n      });\n    }\n  }\n\n  /**\n   * Create a DateTime from a number of seconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.\n   * @param {number} seconds - a number of seconds since 1970 UTC\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromSeconds(seconds, options = {}) {\n    if (!isNumber(seconds)) {\n      throw new InvalidArgumentError(\"fromSeconds requires a numerical input\");\n    } else {\n      return new DateTime({\n        ts: seconds * 1000,\n        zone: normalizeZone(options.zone, Settings.defaultZone),\n        loc: Locale.fromObject(options),\n      });\n    }\n  }\n\n  /**\n   * Create a DateTime from a JavaScript object with keys like 'year' and 'hour' with reasonable defaults.\n   * @param {Object} obj - the object to create the DateTime from\n   * @param {number} obj.year - a year, such as 1987\n   * @param {number} obj.month - a month, 1-12\n   * @param {number} obj.day - a day of the month, 1-31, depending on the month\n   * @param {number} obj.ordinal - day of the year, 1-365 or 366\n   * @param {number} obj.weekYear - an ISO week year\n   * @param {number} obj.weekNumber - an ISO week number, between 1 and 52 or 53, depending on the year\n   * @param {number} obj.weekday - an ISO weekday, 1-7, where 1 is Monday and 7 is Sunday\n   * @param {number} obj.hour - hour of the day, 0-23\n   * @param {number} obj.minute - minute of the hour, 0-59\n   * @param {number} obj.second - second of the minute, 0-59\n   * @param {number} obj.millisecond - millisecond of the second, 0-999\n   * @param {Object} opts - options for creating this DateTime\n   * @param {string|Zone} [opts.zone='local'] - interpret the numbers in the context of a particular zone. Can take any value taken as the first argument to setZone()\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromObject({ year: 1982, month: 5, day: 25}).toISODate() //=> '1982-05-25'\n   * @example DateTime.fromObject({ year: 1982 }).toISODate() //=> '1982-01-01'\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }) //~> today at 10:26:06\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'utc' }),\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'local' })\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'America/New_York' })\n   * @example DateTime.fromObject({ weekYear: 2016, weekNumber: 2, weekday: 3 }).toISODate() //=> '2016-01-13'\n   * @return {DateTime}\n   */\n  static fromObject(obj, opts = {}) {\n    obj = obj || {};\n    const zoneToUse = normalizeZone(opts.zone, Settings.defaultZone);\n    if (!zoneToUse.isValid) {\n      return DateTime.invalid(unsupportedZone(zoneToUse));\n    }\n\n    const tsNow = Settings.now(),\n      offsetProvis = !isUndefined(opts.specificOffset)\n        ? opts.specificOffset\n        : zoneToUse.offset(tsNow),\n      normalized = normalizeObject(obj, normalizeUnit),\n      containsOrdinal = !isUndefined(normalized.ordinal),\n      containsGregorYear = !isUndefined(normalized.year),\n      containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),\n      containsGregor = containsGregorYear || containsGregorMD,\n      definiteWeekDef = normalized.weekYear || normalized.weekNumber,\n      loc = Locale.fromObject(opts);\n\n    // cases:\n    // just a weekday -> this week's instance of that weekday, no worries\n    // (gregorian data or ordinal) + (weekYear or weekNumber) -> error\n    // (gregorian month or day) + ordinal -> error\n    // otherwise just use weeks or ordinals or gregorian, depending on what's specified\n\n    if ((containsGregor || containsOrdinal) && definiteWeekDef) {\n      throw new ConflictingSpecificationError(\n        \"Can't mix weekYear/weekNumber units with year/month/day or ordinals\"\n      );\n    }\n\n    if (containsGregorMD && containsOrdinal) {\n      throw new ConflictingSpecificationError(\"Can't mix ordinal dates with month/day\");\n    }\n\n    const useWeekData = definiteWeekDef || (normalized.weekday && !containsGregor);\n\n    // configure ourselves to deal with gregorian dates or week stuff\n    let units,\n      defaultValues,\n      objNow = tsToObj(tsNow, offsetProvis);\n    if (useWeekData) {\n      units = orderedWeekUnits;\n      defaultValues = defaultWeekUnitValues;\n      objNow = gregorianToWeek(objNow);\n    } else if (containsOrdinal) {\n      units = orderedOrdinalUnits;\n      defaultValues = defaultOrdinalUnitValues;\n      objNow = gregorianToOrdinal(objNow);\n    } else {\n      units = orderedUnits;\n      defaultValues = defaultUnitValues;\n    }\n\n    // set default values for missing stuff\n    let foundFirst = false;\n    for (const u of units) {\n      const v = normalized[u];\n      if (!isUndefined(v)) {\n        foundFirst = true;\n      } else if (foundFirst) {\n        normalized[u] = defaultValues[u];\n      } else {\n        normalized[u] = objNow[u];\n      }\n    }\n\n    // make sure the values we have are in range\n    const higherOrderInvalid = useWeekData\n        ? hasInvalidWeekData(normalized)\n        : containsOrdinal\n        ? hasInvalidOrdinalData(normalized)\n        : hasInvalidGregorianData(normalized),\n      invalid = higherOrderInvalid || hasInvalidTimeData(normalized);\n\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    }\n\n    // compute the actual time\n    const gregorian = useWeekData\n        ? weekToGregorian(normalized)\n        : containsOrdinal\n        ? ordinalToGregorian(normalized)\n        : normalized,\n      [tsFinal, offsetFinal] = objToTS(gregorian, offsetProvis, zoneToUse),\n      inst = new DateTime({\n        ts: tsFinal,\n        zone: zoneToUse,\n        o: offsetFinal,\n        loc,\n      });\n\n    // gregorian data + weekday serves only to validate\n    if (normalized.weekday && containsGregor && obj.weekday !== inst.weekday) {\n      return DateTime.invalid(\n        \"mismatched weekday\",\n        `you can't specify both a weekday of ${normalized.weekday} and a date of ${inst.toISO()}`\n      );\n    }\n\n    return inst;\n  }\n\n  /**\n   * Create a DateTime from an ISO 8601 string\n   * @param {string} text - the ISO string\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the time to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} [opts.outputCalendar] - the output calendar to set on the resulting DateTime instance\n   * @param {string} [opts.numberingSystem] - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123')\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00')\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00', {setZone: true})\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123', {zone: 'utc'})\n   * @example DateTime.fromISO('2016-W05-4')\n   * @return {DateTime}\n   */\n  static fromISO(text, opts = {}) {\n    const [vals, parsedZone] = parseISODate(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"ISO 8601\", text);\n  }\n\n  /**\n   * Create a DateTime from an RFC 2822 string\n   * @param {string} text - the RFC 2822 string\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since the offset is always specified in the string itself, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.\n   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromRFC2822('25 Nov 2016 13:23:12 GMT')\n   * @example DateTime.fromRFC2822('Fri, 25 Nov 2016 13:23:12 +0600')\n   * @example DateTime.fromRFC2822('25 Nov 2016 13:23 Z')\n   * @return {DateTime}\n   */\n  static fromRFC2822(text, opts = {}) {\n    const [vals, parsedZone] = parseRFC2822Date(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"RFC 2822\", text);\n  }\n\n  /**\n   * Create a DateTime from an HTTP header date\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1\n   * @param {string} text - the HTTP header date\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since HTTP dates are always in UTC, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.\n   * @param {boolean} [opts.setZone=false] - override the zone with the fixed-offset zone specified in the string. For HTTP dates, this is always UTC, so this option is equivalent to setting the `zone` option to 'utc', but this option is included for consistency with similar methods.\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromHTTP('Sun, 06 Nov 1994 08:49:37 GMT')\n   * @example DateTime.fromHTTP('Sunday, 06-Nov-94 08:49:37 GMT')\n   * @example DateTime.fromHTTP('Sun Nov  6 08:49:37 1994')\n   * @return {DateTime}\n   */\n  static fromHTTP(text, opts = {}) {\n    const [vals, parsedZone] = parseHTTPDate(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"HTTP\", opts);\n  }\n\n  /**\n   * Create a DateTime from an input string and format string.\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/parsing?id=table-of-tokens).\n   * @param {string} text - the string to parse\n   * @param {string} fmt - the format the string is expected to be in (see the link below for the formats)\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale\n   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromFormat(text, fmt, opts = {}) {\n    if (isUndefined(text) || isUndefined(fmt)) {\n      throw new InvalidArgumentError(\"fromFormat requires an input string and a format\");\n    }\n\n    const { locale = null, numberingSystem = null } = opts,\n      localeToUse = Locale.fromOpts({\n        locale,\n        numberingSystem,\n        defaultToEN: true,\n      }),\n      [vals, parsedZone, specificOffset, invalid] = parseFromTokens(localeToUse, text, fmt);\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    } else {\n      return parseDataToDateTime(vals, parsedZone, opts, `format ${fmt}`, text, specificOffset);\n    }\n  }\n\n  /**\n   * @deprecated use fromFormat instead\n   */\n  static fromString(text, fmt, opts = {}) {\n    return DateTime.fromFormat(text, fmt, opts);\n  }\n\n  /**\n   * Create a DateTime from a SQL date, time, or datetime\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale\n   * @param {string} text - the string to parse\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale\n   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @example DateTime.fromSQL('2017-05-15')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342+06:00')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles', { setZone: true })\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342', { zone: 'America/Los_Angeles' })\n   * @example DateTime.fromSQL('09:12:34.342')\n   * @return {DateTime}\n   */\n  static fromSQL(text, opts = {}) {\n    const [vals, parsedZone] = parseSQL(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"SQL\", text);\n  }\n\n  /**\n   * Create an invalid DateTime.\n   * @param {string} reason - simple string of why this DateTime is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {DateTime}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the DateTime is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidDateTimeError(invalid);\n    } else {\n      return new DateTime({ invalid });\n    }\n  }\n\n  /**\n   * Check if an object is an instance of DateTime. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isDateTime(o) {\n    return (o && o.isLuxonDateTime) || false;\n  }\n\n  // INFO\n\n  /**\n   * Get the value of unit.\n   * @param {string} unit - a unit such as 'minute' or 'day'\n   * @example DateTime.local(2017, 7, 4).get('month'); //=> 7\n   * @example DateTime.local(2017, 7, 4).get('day'); //=> 4\n   * @return {number}\n   */\n  get(unit) {\n    return this[unit];\n  }\n\n  /**\n   * Returns whether the DateTime is valid. Invalid DateTimes occur when:\n   * * The DateTime was created from invalid calendar information, such as the 13th month or February 30\n   * * The DateTime was created by an operation on another invalid date\n   * @type {boolean}\n   */\n  get isValid() {\n    return this.invalid === null;\n  }\n\n  /**\n   * Returns an error code if this DateTime is invalid, or null if the DateTime is valid\n   * @type {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this DateTime became invalid, or null if the DateTime is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Get the locale of a DateTime, such 'en-GB'. The locale is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get locale() {\n    return this.isValid ? this.loc.locale : null;\n  }\n\n  /**\n   * Get the numbering system of a DateTime, such 'beng'. The numbering system is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get numberingSystem() {\n    return this.isValid ? this.loc.numberingSystem : null;\n  }\n\n  /**\n   * Get the output calendar of a DateTime, such 'islamic'. The output calendar is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get outputCalendar() {\n    return this.isValid ? this.loc.outputCalendar : null;\n  }\n\n  /**\n   * Get the time zone associated with this DateTime.\n   * @type {Zone}\n   */\n  get zone() {\n    return this._zone;\n  }\n\n  /**\n   * Get the name of the time zone.\n   * @type {string}\n   */\n  get zoneName() {\n    return this.isValid ? this.zone.name : null;\n  }\n\n  /**\n   * Get the year\n   * @example DateTime.local(2017, 5, 25).year //=> 2017\n   * @type {number}\n   */\n  get year() {\n    return this.isValid ? this.c.year : NaN;\n  }\n\n  /**\n   * Get the quarter\n   * @example DateTime.local(2017, 5, 25).quarter //=> 2\n   * @type {number}\n   */\n  get quarter() {\n    return this.isValid ? Math.ceil(this.c.month / 3) : NaN;\n  }\n\n  /**\n   * Get the month (1-12).\n   * @example DateTime.local(2017, 5, 25).month //=> 5\n   * @type {number}\n   */\n  get month() {\n    return this.isValid ? this.c.month : NaN;\n  }\n\n  /**\n   * Get the day of the month (1-30ish).\n   * @example DateTime.local(2017, 5, 25).day //=> 25\n   * @type {number}\n   */\n  get day() {\n    return this.isValid ? this.c.day : NaN;\n  }\n\n  /**\n   * Get the hour of the day (0-23).\n   * @example DateTime.local(2017, 5, 25, 9).hour //=> 9\n   * @type {number}\n   */\n  get hour() {\n    return this.isValid ? this.c.hour : NaN;\n  }\n\n  /**\n   * Get the minute of the hour (0-59).\n   * @example DateTime.local(2017, 5, 25, 9, 30).minute //=> 30\n   * @type {number}\n   */\n  get minute() {\n    return this.isValid ? this.c.minute : NaN;\n  }\n\n  /**\n   * Get the second of the minute (0-59).\n   * @example DateTime.local(2017, 5, 25, 9, 30, 52).second //=> 52\n   * @type {number}\n   */\n  get second() {\n    return this.isValid ? this.c.second : NaN;\n  }\n\n  /**\n   * Get the millisecond of the second (0-999).\n   * @example DateTime.local(2017, 5, 25, 9, 30, 52, 654).millisecond //=> 654\n   * @type {number}\n   */\n  get millisecond() {\n    return this.isValid ? this.c.millisecond : NaN;\n  }\n\n  /**\n   * Get the week year\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2014, 12, 31).weekYear //=> 2015\n   * @type {number}\n   */\n  get weekYear() {\n    return this.isValid ? possiblyCachedWeekData(this).weekYear : NaN;\n  }\n\n  /**\n   * Get the week number of the week year (1-52ish).\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2017, 5, 25).weekNumber //=> 21\n   * @type {number}\n   */\n  get weekNumber() {\n    return this.isValid ? possiblyCachedWeekData(this).weekNumber : NaN;\n  }\n\n  /**\n   * Get the day of the week.\n   * 1 is Monday and 7 is Sunday\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2014, 11, 31).weekday //=> 4\n   * @type {number}\n   */\n  get weekday() {\n    return this.isValid ? possiblyCachedWeekData(this).weekday : NaN;\n  }\n\n  /**\n   * Get the ordinal (meaning the day of the year)\n   * @example DateTime.local(2017, 5, 25).ordinal //=> 145\n   * @type {number|DateTime}\n   */\n  get ordinal() {\n    return this.isValid ? gregorianToOrdinal(this.c).ordinal : NaN;\n  }\n\n  /**\n   * Get the human readable short month name, such as 'Oct'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).monthShort //=> Oct\n   * @type {string}\n   */\n  get monthShort() {\n    return this.isValid ? Info.months(\"short\", { locObj: this.loc })[this.month - 1] : null;\n  }\n\n  /**\n   * Get the human readable long month name, such as 'October'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).monthLong //=> October\n   * @type {string}\n   */\n  get monthLong() {\n    return this.isValid ? Info.months(\"long\", { locObj: this.loc })[this.month - 1] : null;\n  }\n\n  /**\n   * Get the human readable short weekday, such as 'Mon'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).weekdayShort //=> Mon\n   * @type {string}\n   */\n  get weekdayShort() {\n    return this.isValid ? Info.weekdays(\"short\", { locObj: this.loc })[this.weekday - 1] : null;\n  }\n\n  /**\n   * Get the human readable long weekday, such as 'Monday'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).weekdayLong //=> Monday\n   * @type {string}\n   */\n  get weekdayLong() {\n    return this.isValid ? Info.weekdays(\"long\", { locObj: this.loc })[this.weekday - 1] : null;\n  }\n\n  /**\n   * Get the UTC offset of this DateTime in minutes\n   * @example DateTime.now().offset //=> -240\n   * @example DateTime.utc().offset //=> 0\n   * @type {number}\n   */\n  get offset() {\n    return this.isValid ? +this.o : NaN;\n  }\n\n  /**\n   * Get the short human name for the zone's current offset, for example \"EST\" or \"EDT\".\n   * Defaults to the system's locale if no locale has been specified\n   * @type {string}\n   */\n  get offsetNameShort() {\n    if (this.isValid) {\n      return this.zone.offsetName(this.ts, {\n        format: \"short\",\n        locale: this.locale,\n      });\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the long human name for the zone's current offset, for example \"Eastern Standard Time\" or \"Eastern Daylight Time\".\n   * Defaults to the system's locale if no locale has been specified\n   * @type {string}\n   */\n  get offsetNameLong() {\n    if (this.isValid) {\n      return this.zone.offsetName(this.ts, {\n        format: \"long\",\n        locale: this.locale,\n      });\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get whether this zone's offset ever changes, as in a DST.\n   * @type {boolean}\n   */\n  get isOffsetFixed() {\n    return this.isValid ? this.zone.isUniversal : null;\n  }\n\n  /**\n   * Get whether the DateTime is in a DST.\n   * @type {boolean}\n   */\n  get isInDST() {\n    if (this.isOffsetFixed) {\n      return false;\n    } else {\n      return (\n        this.offset > this.set({ month: 1, day: 1 }).offset ||\n        this.offset > this.set({ month: 5 }).offset\n      );\n    }\n  }\n\n  /**\n   * Returns true if this DateTime is in a leap year, false otherwise\n   * @example DateTime.local(2016).isInLeapYear //=> true\n   * @example DateTime.local(2013).isInLeapYear //=> false\n   * @type {boolean}\n   */\n  get isInLeapYear() {\n    return isLeapYear(this.year);\n  }\n\n  /**\n   * Returns the number of days in this DateTime's month\n   * @example DateTime.local(2016, 2).daysInMonth //=> 29\n   * @example DateTime.local(2016, 3).daysInMonth //=> 31\n   * @type {number}\n   */\n  get daysInMonth() {\n    return daysInMonth(this.year, this.month);\n  }\n\n  /**\n   * Returns the number of days in this DateTime's year\n   * @example DateTime.local(2016).daysInYear //=> 366\n   * @example DateTime.local(2013).daysInYear //=> 365\n   * @type {number}\n   */\n  get daysInYear() {\n    return this.isValid ? daysInYear(this.year) : NaN;\n  }\n\n  /**\n   * Returns the number of weeks in this DateTime's year\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2004).weeksInWeekYear //=> 53\n   * @example DateTime.local(2013).weeksInWeekYear //=> 52\n   * @type {number}\n   */\n  get weeksInWeekYear() {\n    return this.isValid ? weeksInWeekYear(this.weekYear) : NaN;\n  }\n\n  /**\n   * Returns the resolved Intl options for this DateTime.\n   * This is useful in understanding the behavior of formatting methods\n   * @param {Object} opts - the same options as toLocaleString\n   * @return {Object}\n   */\n  resolvedLocaleOptions(opts = {}) {\n    const { locale, numberingSystem, calendar } = Formatter.create(\n      this.loc.clone(opts),\n      opts\n    ).resolvedOptions(this);\n    return { locale, numberingSystem, outputCalendar: calendar };\n  }\n\n  // TRANSFORM\n\n  /**\n   * \"Set\" the DateTime's zone to UTC. Returns a newly-constructed DateTime.\n   *\n   * Equivalent to {@link DateTime#setZone}('utc')\n   * @param {number} [offset=0] - optionally, an offset from UTC in minutes\n   * @param {Object} [opts={}] - options to pass to `setZone()`\n   * @return {DateTime}\n   */\n  toUTC(offset = 0, opts = {}) {\n    return this.setZone(FixedOffsetZone.instance(offset), opts);\n  }\n\n  /**\n   * \"Set\" the DateTime's zone to the host's local zone. Returns a newly-constructed DateTime.\n   *\n   * Equivalent to `setZone('local')`\n   * @return {DateTime}\n   */\n  toLocal() {\n    return this.setZone(Settings.defaultZone);\n  }\n\n  /**\n   * \"Set\" the DateTime's zone to specified zone. Returns a newly-constructed DateTime.\n   *\n   * By default, the setter keeps the underlying time the same (as in, the same timestamp), but the new instance will report different local times and consider DSTs when making computations, as with {@link DateTime#plus}. You may wish to use {@link DateTime#toLocal} and {@link DateTime#toUTC} which provide simple convenience wrappers for commonly used zones.\n   * @param {string|Zone} [zone='local'] - a zone identifier. As a string, that can be any IANA zone supported by the host environment, or a fixed-offset name of the form 'UTC+3', or the strings 'local' or 'utc'. You may also supply an instance of a {@link DateTime#Zone} class.\n   * @param {Object} opts - options\n   * @param {boolean} [opts.keepLocalTime=false] - If true, adjust the underlying time so that the local time stays the same, but in the target zone. You should rarely need this.\n   * @return {DateTime}\n   */\n  setZone(zone, { keepLocalTime = false, keepCalendarTime = false } = {}) {\n    zone = normalizeZone(zone, Settings.defaultZone);\n    if (zone.equals(this.zone)) {\n      return this;\n    } else if (!zone.isValid) {\n      return DateTime.invalid(unsupportedZone(zone));\n    } else {\n      let newTS = this.ts;\n      if (keepLocalTime || keepCalendarTime) {\n        const offsetGuess = zone.offset(this.ts);\n        const asObj = this.toObject();\n        [newTS] = objToTS(asObj, offsetGuess, zone);\n      }\n      return clone(this, { ts: newTS, zone });\n    }\n  }\n\n  /**\n   * \"Set\" the locale, numberingSystem, or outputCalendar. Returns a newly-constructed DateTime.\n   * @param {Object} properties - the properties to set\n   * @example DateTime.local(2017, 5, 25).reconfigure({ locale: 'en-GB' })\n   * @return {DateTime}\n   */\n  reconfigure({ locale, numberingSystem, outputCalendar } = {}) {\n    const loc = this.loc.clone({ locale, numberingSystem, outputCalendar });\n    return clone(this, { loc });\n  }\n\n  /**\n   * \"Set\" the locale. Returns a newly-constructed DateTime.\n   * Just a convenient alias for reconfigure({ locale })\n   * @example DateTime.local(2017, 5, 25).setLocale('en-GB')\n   * @return {DateTime}\n   */\n  setLocale(locale) {\n    return this.reconfigure({ locale });\n  }\n\n  /**\n   * \"Set\" the values of specified units. Returns a newly-constructed DateTime.\n   * You can only set units with this method; for \"setting\" metadata, see {@link DateTime#reconfigure} and {@link DateTime#setZone}.\n   * @param {Object} values - a mapping of units to numbers\n   * @example dt.set({ year: 2017 })\n   * @example dt.set({ hour: 8, minute: 30 })\n   * @example dt.set({ weekday: 5 })\n   * @example dt.set({ year: 2005, ordinal: 234 })\n   * @return {DateTime}\n   */\n  set(values) {\n    if (!this.isValid) return this;\n\n    const normalized = normalizeObject(values, normalizeUnit),\n      settingWeekStuff =\n        !isUndefined(normalized.weekYear) ||\n        !isUndefined(normalized.weekNumber) ||\n        !isUndefined(normalized.weekday),\n      containsOrdinal = !isUndefined(normalized.ordinal),\n      containsGregorYear = !isUndefined(normalized.year),\n      containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),\n      containsGregor = containsGregorYear || containsGregorMD,\n      definiteWeekDef = normalized.weekYear || normalized.weekNumber;\n\n    if ((containsGregor || containsOrdinal) && definiteWeekDef) {\n      throw new ConflictingSpecificationError(\n        \"Can't mix weekYear/weekNumber units with year/month/day or ordinals\"\n      );\n    }\n\n    if (containsGregorMD && containsOrdinal) {\n      throw new ConflictingSpecificationError(\"Can't mix ordinal dates with month/day\");\n    }\n\n    let mixed;\n    if (settingWeekStuff) {\n      mixed = weekToGregorian({ ...gregorianToWeek(this.c), ...normalized });\n    } else if (!isUndefined(normalized.ordinal)) {\n      mixed = ordinalToGregorian({ ...gregorianToOrdinal(this.c), ...normalized });\n    } else {\n      mixed = { ...this.toObject(), ...normalized };\n\n      // if we didn't set the day but we ended up on an overflow date,\n      // use the last day of the right month\n      if (isUndefined(normalized.day)) {\n        mixed.day = Math.min(daysInMonth(mixed.year, mixed.month), mixed.day);\n      }\n    }\n\n    const [ts, o] = objToTS(mixed, this.o, this.zone);\n    return clone(this, { ts, o });\n  }\n\n  /**\n   * Add a period of time to this DateTime and return the resulting DateTime\n   *\n   * Adding hours, minutes, seconds, or milliseconds increases the timestamp by the right number of milliseconds. Adding days, months, or years shifts the calendar, accounting for DSTs and leap years along the way. Thus, `dt.plus({ hours: 24 })` may result in a different time than `dt.plus({ days: 1 })` if there's a DST shift in between.\n   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @example DateTime.now().plus(123) //~> in 123 milliseconds\n   * @example DateTime.now().plus({ minutes: 15 }) //~> in 15 minutes\n   * @example DateTime.now().plus({ days: 1 }) //~> this time tomorrow\n   * @example DateTime.now().plus({ days: -1 }) //~> this time yesterday\n   * @example DateTime.now().plus({ hours: 3, minutes: 13 }) //~> in 3 hr, 13 min\n   * @example DateTime.now().plus(Duration.fromObject({ hours: 3, minutes: 13 })) //~> in 3 hr, 13 min\n   * @return {DateTime}\n   */\n  plus(duration) {\n    if (!this.isValid) return this;\n    const dur = Duration.fromDurationLike(duration);\n    return clone(this, adjustTime(this, dur));\n  }\n\n  /**\n   * Subtract a period of time to this DateTime and return the resulting DateTime\n   * See {@link DateTime#plus}\n   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   @return {DateTime}\n   */\n  minus(duration) {\n    if (!this.isValid) return this;\n    const dur = Duration.fromDurationLike(duration).negate();\n    return clone(this, adjustTime(this, dur));\n  }\n\n  /**\n   * \"Set\" this DateTime to the beginning of a unit of time.\n   * @param {string} unit - The unit to go to the beginning of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.\n   * @example DateTime.local(2014, 3, 3).startOf('month').toISODate(); //=> '2014-03-01'\n   * @example DateTime.local(2014, 3, 3).startOf('year').toISODate(); //=> '2014-01-01'\n   * @example DateTime.local(2014, 3, 3).startOf('week').toISODate(); //=> '2014-03-03', weeks always start on Mondays\n   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('day').toISOTime(); //=> '00:00.000-05:00'\n   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('hour').toISOTime(); //=> '05:00:00.000-05:00'\n   * @return {DateTime}\n   */\n  startOf(unit) {\n    if (!this.isValid) return this;\n    const o = {},\n      normalizedUnit = Duration.normalizeUnit(unit);\n    switch (normalizedUnit) {\n      case \"years\":\n        o.month = 1;\n      // falls through\n      case \"quarters\":\n      case \"months\":\n        o.day = 1;\n      // falls through\n      case \"weeks\":\n      case \"days\":\n        o.hour = 0;\n      // falls through\n      case \"hours\":\n        o.minute = 0;\n      // falls through\n      case \"minutes\":\n        o.second = 0;\n      // falls through\n      case \"seconds\":\n        o.millisecond = 0;\n        break;\n      case \"milliseconds\":\n        break;\n      // no default, invalid units throw in normalizeUnit()\n    }\n\n    if (normalizedUnit === \"weeks\") {\n      o.weekday = 1;\n    }\n\n    if (normalizedUnit === \"quarters\") {\n      const q = Math.ceil(this.month / 3);\n      o.month = (q - 1) * 3 + 1;\n    }\n\n    return this.set(o);\n  }\n\n  /**\n   * \"Set\" this DateTime to the end (meaning the last millisecond) of a unit of time\n   * @param {string} unit - The unit to go to the end of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.\n   * @example DateTime.local(2014, 3, 3).endOf('month').toISO(); //=> '2014-03-31T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3).endOf('year').toISO(); //=> '2014-12-31T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3).endOf('week').toISO(); // => '2014-03-09T23:59:59.999-05:00', weeks start on Mondays\n   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('day').toISO(); //=> '2014-03-03T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('hour').toISO(); //=> '2014-03-03T05:59:59.999-05:00'\n   * @return {DateTime}\n   */\n  endOf(unit) {\n    return this.isValid\n      ? this.plus({ [unit]: 1 })\n          .startOf(unit)\n          .minus(1)\n      : this;\n  }\n\n  // OUTPUT\n\n  /**\n   * Returns a string representation of this DateTime formatted according to the specified format string.\n   * **You may not want this.** See {@link DateTime#toLocaleString} for a more flexible formatting tool. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/formatting?id=table-of-tokens).\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale.\n   * @param {string} fmt - the format string\n   * @param {Object} opts - opts to override the configuration options on this DateTime\n   * @example DateTime.now().toFormat('yyyy LLL dd') //=> '2017 Apr 22'\n   * @example DateTime.now().setLocale('fr').toFormat('yyyy LLL dd') //=> '2017 avr. 22'\n   * @example DateTime.now().toFormat('yyyy LLL dd', { locale: \"fr\" }) //=> '2017 avr. 22'\n   * @example DateTime.now().toFormat(\"HH 'hours and' mm 'minutes'\") //=> '20 hours and 55 minutes'\n   * @return {string}\n   */\n  toFormat(fmt, opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this, fmt)\n      : INVALID;\n  }\n\n  /**\n   * Returns a localized string representing this date. Accepts the same options as the Intl.DateTimeFormat constructor and any presets defined by Luxon, such as `DateTime.DATE_FULL` or `DateTime.TIME_SIMPLE`.\n   * The exact behavior of this method is browser-specific, but in general it will return an appropriate representation\n   * of the DateTime in the assigned locale.\n   * Defaults to the system's locale if no locale has been specified\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param formatOpts {Object} - Intl.DateTimeFormat constructor options and configuration options\n   * @param {Object} opts - opts to override the configuration options on this DateTime\n   * @example DateTime.now().toLocaleString(); //=> 4/20/2017\n   * @example DateTime.now().setLocale('en-gb').toLocaleString(); //=> '20/04/2017'\n   * @example DateTime.now().toLocaleString({ locale: 'en-gb' }); //=> '20/04/2017'\n   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL); //=> 'April 20, 2017'\n   * @example DateTime.now().toLocaleString(DateTime.TIME_SIMPLE); //=> '11:32 AM'\n   * @example DateTime.now().toLocaleString(DateTime.DATETIME_SHORT); //=> '4/20/2017, 11:32 AM'\n   * @example DateTime.now().toLocaleString({ weekday: 'long', month: 'long', day: '2-digit' }); //=> 'Thursday, April 20'\n   * @example DateTime.now().toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> 'Thu, Apr 20, 11:27 AM'\n   * @example DateTime.now().toLocaleString({ hour: '2-digit', minute: '2-digit', hourCycle: 'h23' }); //=> '11:32'\n   * @return {string}\n   */\n  toLocaleString(formatOpts = Formats.DATE_SHORT, opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.loc.clone(opts), formatOpts).formatDateTime(this)\n      : INVALID;\n  }\n\n  /**\n   * Returns an array of format \"parts\", meaning individual tokens along with metadata. This is allows callers to post-process individual sections of the formatted output.\n   * Defaults to the system's locale if no locale has been specified\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/formatToParts\n   * @param opts {Object} - Intl.DateTimeFormat constructor options, same as `toLocaleString`.\n   * @example DateTime.now().toLocaleParts(); //=> [\n   *                                   //=>   { type: 'day', value: '25' },\n   *                                   //=>   { type: 'literal', value: '/' },\n   *                                   //=>   { type: 'month', value: '05' },\n   *                                   //=>   { type: 'literal', value: '/' },\n   *                                   //=>   { type: 'year', value: '1982' }\n   *                                   //=> ]\n   */\n  toLocaleParts(opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.loc.clone(opts), opts).formatDateTimeParts(this)\n      : [];\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.extendedZone=true] - add the time zone format extension\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc(1983, 5, 25).toISO() //=> '1982-05-25T00:00:00.000Z'\n   * @example DateTime.now().toISO() //=> '2017-04-22T20:47:05.335-04:00'\n   * @example DateTime.now().toISO({ includeOffset: false }) //=> '2017-04-22T20:47:05.335'\n   * @example DateTime.now().toISO({ format: 'basic' }) //=> '20170422T204705.335-0400'\n   * @return {string}\n   */\n  toISO({\n    format = \"extended\",\n    suppressSeconds = false,\n    suppressMilliseconds = false,\n    includeOffset = true,\n    extendedZone = false,\n  } = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    const ext = format === \"extended\";\n\n    let c = toISODate(this, ext);\n    c += \"T\";\n    c += toISOTime(this, ext, suppressSeconds, suppressMilliseconds, includeOffset, extendedZone);\n    return c;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's date component\n   * @param {Object} opts - options\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc(1982, 5, 25).toISODate() //=> '1982-05-25'\n   * @example DateTime.utc(1982, 5, 25).toISODate({ format: 'basic' }) //=> '19820525'\n   * @return {string}\n   */\n  toISODate({ format = \"extended\" } = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    return toISODate(this, format === \"extended\");\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's week date\n   * @example DateTime.utc(1982, 5, 25).toISOWeekDate() //=> '1982-W21-2'\n   * @return {string}\n   */\n  toISOWeekDate() {\n    return toTechFormat(this, \"kkkk-'W'WW-c\");\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's time component\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.extendedZone=true] - add the time zone format extension\n   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime() //=> '07:34:19.361Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34, seconds: 0, milliseconds: 0 }).toISOTime({ suppressSeconds: true }) //=> '07:34Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ format: 'basic' }) //=> '073419.361Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ includePrefix: true }) //=> 'T07:34:19.361Z'\n   * @return {string}\n   */\n  toISOTime({\n    suppressMilliseconds = false,\n    suppressSeconds = false,\n    includeOffset = true,\n    includePrefix = false,\n    extendedZone = false,\n    format = \"extended\",\n  } = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    let c = includePrefix ? \"T\" : \"\";\n    return (\n      c +\n      toISOTime(\n        this,\n        format === \"extended\",\n        suppressSeconds,\n        suppressMilliseconds,\n        includeOffset,\n        extendedZone\n      )\n    );\n  }\n\n  /**\n   * Returns an RFC 2822-compatible string representation of this DateTime\n   * @example DateTime.utc(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 +0000'\n   * @example DateTime.local(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 -0400'\n   * @return {string}\n   */\n  toRFC2822() {\n    return toTechFormat(this, \"EEE, dd LLL yyyy HH:mm:ss ZZZ\", false);\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in HTTP headers. The output is always expressed in GMT.\n   * Specifically, the string conforms to RFC 1123.\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1\n   * @example DateTime.utc(2014, 7, 13).toHTTP() //=> 'Sun, 13 Jul 2014 00:00:00 GMT'\n   * @example DateTime.utc(2014, 7, 13, 19).toHTTP() //=> 'Sun, 13 Jul 2014 19:00:00 GMT'\n   * @return {string}\n   */\n  toHTTP() {\n    return toTechFormat(this.toUTC(), \"EEE, dd LLL yyyy HH:mm:ss 'GMT'\");\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL Date\n   * @example DateTime.utc(2014, 7, 13).toSQLDate() //=> '2014-07-13'\n   * @return {string}\n   */\n  toSQLDate() {\n    if (!this.isValid) {\n      return null;\n    }\n    return toISODate(this, true);\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL Time\n   * @param {Object} opts - options\n   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.includeOffsetSpace=true] - include the space between the time and the offset, such as '05:15:16.345 -04:00'\n   * @example DateTime.utc().toSQL() //=> '05:15:16.345'\n   * @example DateTime.now().toSQL() //=> '05:15:16.345 -04:00'\n   * @example DateTime.now().toSQL({ includeOffset: false }) //=> '05:15:16.345'\n   * @example DateTime.now().toSQL({ includeZone: false }) //=> '05:15:16.345 America/New_York'\n   * @return {string}\n   */\n  toSQLTime({ includeOffset = true, includeZone = false, includeOffsetSpace = true } = {}) {\n    let fmt = \"HH:mm:ss.SSS\";\n\n    if (includeZone || includeOffset) {\n      if (includeOffsetSpace) {\n        fmt += \" \";\n      }\n      if (includeZone) {\n        fmt += \"z\";\n      } else if (includeOffset) {\n        fmt += \"ZZ\";\n      }\n    }\n\n    return toTechFormat(this, fmt, true);\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL DateTime\n   * @param {Object} opts - options\n   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.includeOffsetSpace=true] - include the space between the time and the offset, such as '05:15:16.345 -04:00'\n   * @example DateTime.utc(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 Z'\n   * @example DateTime.local(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 -04:00'\n   * @example DateTime.local(2014, 7, 13).toSQL({ includeOffset: false }) //=> '2014-07-13 00:00:00.000'\n   * @example DateTime.local(2014, 7, 13).toSQL({ includeZone: true }) //=> '2014-07-13 00:00:00.000 America/New_York'\n   * @return {string}\n   */\n  toSQL(opts = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    return `${this.toSQLDate()} ${this.toSQLTime(opts)}`;\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for debugging\n   * @return {string}\n   */\n  toString() {\n    return this.isValid ? this.toISO() : INVALID;\n  }\n\n  /**\n   * Returns the epoch milliseconds of this DateTime. Alias of {@link DateTime#toMillis}\n   * @return {number}\n   */\n  valueOf() {\n    return this.toMillis();\n  }\n\n  /**\n   * Returns the epoch milliseconds of this DateTime.\n   * @return {number}\n   */\n  toMillis() {\n    return this.isValid ? this.ts : NaN;\n  }\n\n  /**\n   * Returns the epoch seconds of this DateTime.\n   * @return {number}\n   */\n  toSeconds() {\n    return this.isValid ? this.ts / 1000 : NaN;\n  }\n\n  /**\n   * Returns the epoch seconds (as a whole number) of this DateTime.\n   * @return {number}\n   */\n  toUnixInteger() {\n    return this.isValid ? Math.floor(this.ts / 1000) : NaN;\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this DateTime appropriate for use in JSON.\n   * @return {string}\n   */\n  toJSON() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns a BSON serializable equivalent to this DateTime.\n   * @return {Date}\n   */\n  toBSON() {\n    return this.toJSDate();\n  }\n\n  /**\n   * Returns a JavaScript object with this DateTime's year, month, day, and so on.\n   * @param opts - options for generating the object\n   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output\n   * @example DateTime.now().toObject() //=> { year: 2017, month: 4, day: 22, hour: 20, minute: 49, second: 42, millisecond: 268 }\n   * @return {Object}\n   */\n  toObject(opts = {}) {\n    if (!this.isValid) return {};\n\n    const base = { ...this.c };\n\n    if (opts.includeConfig) {\n      base.outputCalendar = this.outputCalendar;\n      base.numberingSystem = this.loc.numberingSystem;\n      base.locale = this.loc.locale;\n    }\n    return base;\n  }\n\n  /**\n   * Returns a JavaScript Date equivalent to this DateTime.\n   * @return {Date}\n   */\n  toJSDate() {\n    return new Date(this.isValid ? this.ts : NaN);\n  }\n\n  // COMPARE\n\n  /**\n   * Return the difference between two DateTimes as a Duration.\n   * @param {DateTime} otherDateTime - the DateTime to compare this one to\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or array of units (such as 'hours' or 'days') to include in the duration.\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @example\n   * var i1 = DateTime.fromISO('1982-05-25T09:45'),\n   *     i2 = DateTime.fromISO('1983-10-14T10:30');\n   * i2.diff(i1).toObject() //=> { milliseconds: 43807500000 }\n   * i2.diff(i1, 'hours').toObject() //=> { hours: 12168.75 }\n   * i2.diff(i1, ['months', 'days']).toObject() //=> { months: 16, days: 19.03125 }\n   * i2.diff(i1, ['months', 'days', 'hours']).toObject() //=> { months: 16, days: 19, hours: 0.75 }\n   * @return {Duration}\n   */\n  diff(otherDateTime, unit = \"milliseconds\", opts = {}) {\n    if (!this.isValid || !otherDateTime.isValid) {\n      return Duration.invalid(\"created by diffing an invalid DateTime\");\n    }\n\n    const durOpts = { locale: this.locale, numberingSystem: this.numberingSystem, ...opts };\n\n    const units = maybeArray(unit).map(Duration.normalizeUnit),\n      otherIsLater = otherDateTime.valueOf() > this.valueOf(),\n      earlier = otherIsLater ? this : otherDateTime,\n      later = otherIsLater ? otherDateTime : this,\n      diffed = diff(earlier, later, units, durOpts);\n\n    return otherIsLater ? diffed.negate() : diffed;\n  }\n\n  /**\n   * Return the difference between this DateTime and right now.\n   * See {@link DateTime#diff}\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or units units (such as 'hours' or 'days') to include in the duration\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @return {Duration}\n   */\n  diffNow(unit = \"milliseconds\", opts = {}) {\n    return this.diff(DateTime.now(), unit, opts);\n  }\n\n  /**\n   * Return an Interval spanning between this DateTime and another DateTime\n   * @param {DateTime} otherDateTime - the other end point of the Interval\n   * @return {Interval}\n   */\n  until(otherDateTime) {\n    return this.isValid ? Interval.fromDateTimes(this, otherDateTime) : this;\n  }\n\n  /**\n   * Return whether this DateTime is in the same unit of time as another DateTime.\n   * Higher-order units must also be identical for this function to return `true`.\n   * Note that time zones are **ignored** in this comparison, which compares the **local** calendar time. Use {@link DateTime#setZone} to convert one of the dates if needed.\n   * @param {DateTime} otherDateTime - the other DateTime\n   * @param {string} unit - the unit of time to check sameness on\n   * @example DateTime.now().hasSame(otherDT, 'day'); //~> true if otherDT is in the same current calendar day\n   * @return {boolean}\n   */\n  hasSame(otherDateTime, unit) {\n    if (!this.isValid) return false;\n\n    const inputMs = otherDateTime.valueOf();\n    const adjustedToZone = this.setZone(otherDateTime.zone, { keepLocalTime: true });\n    return adjustedToZone.startOf(unit) <= inputMs && inputMs <= adjustedToZone.endOf(unit);\n  }\n\n  /**\n   * Equality check\n   * Two DateTimes are equal iff they represent the same millisecond, have the same zone and location, and are both valid.\n   * To compare just the millisecond values, use `+dt1 === +dt2`.\n   * @param {DateTime} other - the other DateTime\n   * @return {boolean}\n   */\n  equals(other) {\n    return (\n      this.isValid &&\n      other.isValid &&\n      this.valueOf() === other.valueOf() &&\n      this.zone.equals(other.zone) &&\n      this.loc.equals(other.loc)\n    );\n  }\n\n  /**\n   * Returns a string representation of a this time relative to now, such as \"in two days\". Can only internationalize if your\n   * platform supports Intl.RelativeTimeFormat. Rounds down by default.\n   * @param {Object} options - options that affect the output\n   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.\n   * @param {string} [options.style=\"long\"] - the style of units, must be \"long\", \"short\", or \"narrow\"\n   * @param {string|string[]} options.unit - use a specific unit or array of units; if omitted, or an array, the method will pick the best unit. Use an array or one of \"years\", \"quarters\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", or \"seconds\"\n   * @param {boolean} [options.round=true] - whether to round the numbers in the output.\n   * @param {number} [options.padding=0] - padding in milliseconds. This allows you to round up the result if it fits inside the threshold. Don't use in combination with {round: false} because the decimal output will include the padding.\n   * @param {string} options.locale - override the locale of this DateTime\n   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this\n   * @example DateTime.now().plus({ days: 1 }).toRelative() //=> \"in 1 day\"\n   * @example DateTime.now().setLocale(\"es\").toRelative({ days: 1 }) //=> \"dentro de 1 día\"\n   * @example DateTime.now().plus({ days: 1 }).toRelative({ locale: \"fr\" }) //=> \"dans 23 heures\"\n   * @example DateTime.now().minus({ days: 2 }).toRelative() //=> \"2 days ago\"\n   * @example DateTime.now().minus({ days: 2 }).toRelative({ unit: \"hours\" }) //=> \"48 hours ago\"\n   * @example DateTime.now().minus({ hours: 36 }).toRelative({ round: false }) //=> \"1.5 days ago\"\n   */\n  toRelative(options = {}) {\n    if (!this.isValid) return null;\n    const base = options.base || DateTime.fromObject({}, { zone: this.zone }),\n      padding = options.padding ? (this < base ? -options.padding : options.padding) : 0;\n    let units = [\"years\", \"months\", \"days\", \"hours\", \"minutes\", \"seconds\"];\n    let unit = options.unit;\n    if (Array.isArray(options.unit)) {\n      units = options.unit;\n      unit = undefined;\n    }\n    return diffRelative(base, this.plus(padding), {\n      ...options,\n      numeric: \"always\",\n      units,\n      unit,\n    });\n  }\n\n  /**\n   * Returns a string representation of this date relative to today, such as \"yesterday\" or \"next month\".\n   * Only internationalizes on platforms that supports Intl.RelativeTimeFormat.\n   * @param {Object} options - options that affect the output\n   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.\n   * @param {string} options.locale - override the locale of this DateTime\n   * @param {string} options.unit - use a specific unit; if omitted, the method will pick the unit. Use one of \"years\", \"quarters\", \"months\", \"weeks\", or \"days\"\n   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this\n   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar() //=> \"tomorrow\"\n   * @example DateTime.now().setLocale(\"es\").plus({ days: 1 }).toRelative() //=> \"\"mañana\"\n   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar({ locale: \"fr\" }) //=> \"demain\"\n   * @example DateTime.now().minus({ days: 2 }).toRelativeCalendar() //=> \"2 days ago\"\n   */\n  toRelativeCalendar(options = {}) {\n    if (!this.isValid) return null;\n\n    return diffRelative(options.base || DateTime.fromObject({}, { zone: this.zone }), this, {\n      ...options,\n      numeric: \"auto\",\n      units: [\"years\", \"months\", \"days\"],\n      calendary: true,\n    });\n  }\n\n  /**\n   * Return the min of several date times\n   * @param {...DateTime} dateTimes - the DateTimes from which to choose the minimum\n   * @return {DateTime} the min DateTime, or undefined if called with no argument\n   */\n  static min(...dateTimes) {\n    if (!dateTimes.every(DateTime.isDateTime)) {\n      throw new InvalidArgumentError(\"min requires all arguments be DateTimes\");\n    }\n    return bestBy(dateTimes, (i) => i.valueOf(), Math.min);\n  }\n\n  /**\n   * Return the max of several date times\n   * @param {...DateTime} dateTimes - the DateTimes from which to choose the maximum\n   * @return {DateTime} the max DateTime, or undefined if called with no argument\n   */\n  static max(...dateTimes) {\n    if (!dateTimes.every(DateTime.isDateTime)) {\n      throw new InvalidArgumentError(\"max requires all arguments be DateTimes\");\n    }\n    return bestBy(dateTimes, (i) => i.valueOf(), Math.max);\n  }\n\n  // MISC\n\n  /**\n   * Explain how a string would be parsed by fromFormat()\n   * @param {string} text - the string to parse\n   * @param {string} fmt - the format the string is expected to be in (see description)\n   * @param {Object} options - options taken by fromFormat()\n   * @return {Object}\n   */\n  static fromFormatExplain(text, fmt, options = {}) {\n    const { locale = null, numberingSystem = null } = options,\n      localeToUse = Locale.fromOpts({\n        locale,\n        numberingSystem,\n        defaultToEN: true,\n      });\n    return explainFromTokens(localeToUse, text, fmt);\n  }\n\n  /**\n   * @deprecated use fromFormatExplain instead\n   */\n  static fromStringExplain(text, fmt, options = {}) {\n    return DateTime.fromFormatExplain(text, fmt, options);\n  }\n\n  // FORMAT PRESETS\n\n  /**\n   * {@link DateTime#toLocaleString} format like 10/14/1983\n   * @type {Object}\n   */\n  static get DATE_SHORT() {\n    return Formats.DATE_SHORT;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_MED() {\n    return Formats.DATE_MED;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Fri, Oct 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_MED_WITH_WEEKDAY() {\n    return Formats.DATE_MED_WITH_WEEKDAY;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_FULL() {\n    return Formats.DATE_FULL;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Tuesday, October 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_HUGE() {\n    return Formats.DATE_HUGE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_SIMPLE() {\n    return Formats.TIME_SIMPLE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_SECONDS() {\n    return Formats.TIME_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_SHORT_OFFSET() {\n    return Formats.TIME_WITH_SHORT_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_LONG_OFFSET() {\n    return Formats.TIME_WITH_LONG_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_SIMPLE() {\n    return Formats.TIME_24_SIMPLE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_SECONDS() {\n    return Formats.TIME_24_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 EDT', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_SHORT_OFFSET() {\n    return Formats.TIME_24_WITH_SHORT_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 Eastern Daylight Time', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_LONG_OFFSET() {\n    return Formats.TIME_24_WITH_LONG_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_SHORT() {\n    return Formats.DATETIME_SHORT;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_SHORT_WITH_SECONDS() {\n    return Formats.DATETIME_SHORT_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED() {\n    return Formats.DATETIME_MED;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30:33 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED_WITH_SECONDS() {\n    return Formats.DATETIME_MED_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Fri, 14 Oct 1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED_WITH_WEEKDAY() {\n    return Formats.DATETIME_MED_WITH_WEEKDAY;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_FULL() {\n    return Formats.DATETIME_FULL;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30:33 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_FULL_WITH_SECONDS() {\n    return Formats.DATETIME_FULL_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_HUGE() {\n    return Formats.DATETIME_HUGE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30:33 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_HUGE_WITH_SECONDS() {\n    return Formats.DATETIME_HUGE_WITH_SECONDS;\n  }\n}\n\n/**\n * @private\n */\nexport function friendlyDateTime(dateTimeish) {\n  if (DateTime.isDateTime(dateTimeish)) {\n    return dateTimeish;\n  } else if (dateTimeish && dateTimeish.valueOf && isNumber(dateTimeish.valueOf())) {\n    return DateTime.fromJSDate(dateTimeish);\n  } else if (dateTimeish && typeof dateTimeish === \"object\") {\n    return DateTime.fromObject(dateTimeish);\n  } else {\n    throw new InvalidArgumentError(\n      `Unknown datetime argument: ${dateTimeish}, of type ${typeof dateTimeish}`\n    );\n  }\n}\n","import { createPlugin } from '@fullcalendar/core/index.js';\nimport { DateTime, Duration } from 'luxon';\nimport { CalendarImpl, NamedTimeZoneImpl } from '@fullcalendar/core/internal.js';\n\nfunction toLuxonDateTime(date, calendar) {\n    if (!(calendar instanceof CalendarImpl)) {\n        throw new Error('must supply a CalendarApi instance');\n    }\n    let { dateEnv } = calendar.getCurrentData();\n    return DateTime.fromJSDate(date, {\n        zone: dateEnv.timeZone,\n        locale: dateEnv.locale.codes[0],\n    });\n}\nfunction toLuxonDuration(duration, calendar) {\n    if (!(calendar instanceof CalendarImpl)) {\n        throw new Error('must supply a CalendarApi instance');\n    }\n    let { dateEnv } = calendar.getCurrentData();\n    return Duration.fromObject(duration, {\n        locale: dateEnv.locale.codes[0],\n    });\n}\n// Internal Utils\nfunction luxonToArray(datetime) {\n    return [\n        datetime.year,\n        datetime.month - 1,\n        datetime.day,\n        datetime.hour,\n        datetime.minute,\n        datetime.second,\n        datetime.millisecond,\n    ];\n}\nfunction arrayToLuxon(arr, timeZone, locale) {\n    return DateTime.fromObject({\n        year: arr[0],\n        month: arr[1] + 1,\n        day: arr[2],\n        hour: arr[3],\n        minute: arr[4],\n        second: arr[5],\n        millisecond: arr[6],\n    }, {\n        locale,\n        zone: timeZone,\n    });\n}\n\nclass LuxonNamedTimeZone extends NamedTimeZoneImpl {\n    offsetForArray(a) {\n        return arrayToLuxon(a, this.timeZoneName).offset;\n    }\n    timestampToArray(ms) {\n        return luxonToArray(DateTime.fromMillis(ms, {\n            zone: this.timeZoneName,\n        }));\n    }\n}\n\nfunction formatWithCmdStr(cmdStr, arg) {\n    let cmd = parseCmdStr(cmdStr);\n    if (arg.end) {\n        let start = arrayToLuxon(arg.start.array, arg.timeZone, arg.localeCodes[0]);\n        let end = arrayToLuxon(arg.end.array, arg.timeZone, arg.localeCodes[0]);\n        return formatRange(cmd, start.toFormat.bind(start), end.toFormat.bind(end), arg.defaultSeparator);\n    }\n    return arrayToLuxon(arg.date.array, arg.timeZone, arg.localeCodes[0]).toFormat(cmd.whole);\n}\nfunction parseCmdStr(cmdStr) {\n    let parts = cmdStr.match(/^(.*?)\\{(.*)\\}(.*)$/); // TODO: lookbehinds for escape characters\n    if (parts) {\n        let middle = parseCmdStr(parts[2]);\n        return {\n            head: parts[1],\n            middle,\n            tail: parts[3],\n            whole: parts[1] + middle.whole + parts[3],\n        };\n    }\n    return {\n        head: null,\n        middle: null,\n        tail: null,\n        whole: cmdStr,\n    };\n}\nfunction formatRange(cmd, formatStart, formatEnd, separator) {\n    if (cmd.middle) {\n        let startHead = formatStart(cmd.head);\n        let startMiddle = formatRange(cmd.middle, formatStart, formatEnd, separator);\n        let startTail = formatStart(cmd.tail);\n        let endHead = formatEnd(cmd.head);\n        let endMiddle = formatRange(cmd.middle, formatStart, formatEnd, separator);\n        let endTail = formatEnd(cmd.tail);\n        if (startHead === endHead && startTail === endTail) {\n            return startHead +\n                (startMiddle === endMiddle ? startMiddle : startMiddle + separator + endMiddle) +\n                startTail;\n        }\n    }\n    let startWhole = formatStart(cmd.whole);\n    let endWhole = formatEnd(cmd.whole);\n    if (startWhole === endWhole) {\n        return startWhole;\n    }\n    return startWhole + separator + endWhole;\n}\n\nvar index = createPlugin({\n    name: '@fullcalendar/luxon2',\n    cmdFormatter: formatWithCmdStr,\n    namedTimeZonedImpl: LuxonNamedTimeZone,\n});\n\nexport { index as default, toLuxonDateTime, toLuxonDuration };\n","export function getUserLanguage() {\n    return {\n        de: \"de\",\n        en: \"en\",\n        fr: \"fr\",\n        es: \"es\",\n        cs: \"cs\",\n        cn: \"zh\"\n    }[(navigator.language || navigator.userLanguage).split(\"-\")[0]] || \"de\";\n}\n\nexport function tg(textcode) {\n    return document.getElementById(`ed_wp_${ textcode }`)?.innerText?.trim();\n}","import { tg } from \"../localisation/language.js\";\n\nexport function getStatusInfoByBookingStatus(bookingStatus) {\n    return {\n        normal: {\n            iconName: 'ok-circle text-primary',\n            offerStatusText: tg('N7520')/*Für Anmeldungen geöffnet*/,\n            secondButtonText: tg('N4929')/*Jetzt anmelden*/,\n            secondButtonStatus: 'success'\n        },\n        guaranteed: {\n            iconName: 'ok-sign text-success',\n            offerStatusText: tg('N3832')/*Garantierte Durchführung*/,\n            secondButtonText: tg('N4929')/*Jetzt anmelden*/,\n            secondButtonStatus: 'success'\n        },\n        alreadystarted: {\n            iconName: 'exclamation-sign text-warning',\n            offerStatusText: tg('N850')/*Gestartet, Einstieg noch möglich*/,\n            secondButtonText: tg('N4929')/*Jetzt anmelden*/,\n            secondButtonStatus: 'success'\n        },\n        waitinglist: {\n            iconName: 'hourglass text-info',\n            offerStatusText: tg('N13104')/*Ausgebucht,  Eintrag in Warteliste möglich*/,\n            secondButtonText: tg('N63385')/*Auf Warteliste eintragen*/,\n            secondButtonStatus: 'warning'\n        },\n        full: {\n            iconName: 'ban-circle text-danger',\n            offerStatusText: tg('N72446')/*Ausgebucht / Anmeldefrist abgelaufen*/\n        }\n    }[bookingStatus];\n}","import { DateTime } from \"luxon\";\nimport { buildEventQueryParams, getQuery, pushQuery } from \"../../router/router\";\nimport { Calendar } from \"@fullcalendar/core\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listPlugin from \"@fullcalendar/list\";\nimport luxon2Plugin from \"@fullcalendar/luxon2\";\nimport { getUserLanguage, tg } from \"../../localisation/language\";\nimport { getStatusInfoByBookingStatus } from \"../../models/offer\";\n\nconst state = {\n    offers: {}\n};\n\n\n\"dayGridMonth\";\n\"timeGridWeek\";\n\"timeGridDay\";\n\"listWeek\";\n\nexport const availableCalendarViews: Array<CalendarView> = [\n    {\n        keyEdoobox: \"month\",\n        keyFullCalendar: \"dayGridMonth\"\n    },\n    {\n        keyEdoobox: \"agendaWeek\",\n        keyFullCalendar: \"timeGridWeek\"\n    },\n    {\n        keyEdoobox: \"agendaDay\",\n        keyFullCalendar: \"timeGridDay\"\n    },\n    {\n        keyEdoobox: \"listMonth\",\n        keyFullCalendar: \"listWeek\"\n    },\n];\n\nexport const calendarViewMap: object = {\n    v1: availableCalendarViews[0].keyFullCalendar,\n    v2: availableCalendarViews[1].keyFullCalendar,\n    v3: availableCalendarViews[2].keyFullCalendar,\n    v4: availableCalendarViews[3].keyFullCalendar\n};\n\nexport default function ($) {\n    var calendarElement = document.getElementById('calendar');\n    var calendar = new Calendar(calendarElement, {\n        allDaySlot: false,\n        aspectRatio: 1.75,\n        expandRows: true,\n        plugins: [\n            dayGridPlugin,\n            timeGridPlugin,\n            listPlugin,\n            luxon2Plugin\n        ],\n        buttonText: {\n            today: tg('N88771')/*Heute*/,\n            month: tg('N33644')/*Monat*/,\n            week: tg('N17274')/*Woche*/,\n            day: tg('N6351')/*Tag*/,\n            list: tg('N91117')/*Liste*/\n        },\n        dayMaxEventRows: 4,\n        headerToolbar: {\n            start: 'prev,next today',\n            center: 'title',\n            end: getActiveCalendarViewsSetByAdmin().map((view: CalendarView) => view.keyFullCalendar).join(\",\")\n        },\n        editable: false,\n        eventTimeFormat: 'HH:mm',\n        firstDay: 1,\n        initialDate: getInitialCalendarDate(),\n        initialView: getInitialCalendarView(),\n        locale: getUserLanguage(),\n        moreLinkText: tg('N39246')/*Weitere*/,\n        navLinks: true,\n        slotLabelFormat: {\n            hour: \"2-digit\",\n            hour12: false,\n            minute: \"2-digit\"\n        },\n        themeSystem: 'bootstrap3',\n        weekends: !! +calendarElement.dataset.weekend ? true : false,\n        allDayDidMount: updateCalendarUrlQueries,\n        dayCellDidMount: updateCalendarUrlQueries,\n        events: fetchEvents,\n        eventDidMount: function (info) {\n            var element = info.el;\n            var offerId = info.event.extendedProps.offerid;\n            var offer = state.offers[offerId];\n            var {\n                iconName,\n                offerStatusText,\n                secondButtonStatus,\n                secondButtonText\n            } = getStatusInfoByBookingStatus(offer.booking_status);\n            var statusTemplate = $('<span class=\"offer_status glyphicon glyphicon-' + iconName + '\" style=\"margin-right: 4px\"></span>');\n\n            $(element).find('.fc-daygrid-event-dot').replaceWith(statusTemplate);\n            $(element).addClass('edevents_' + offerId);\n            $(element).addClass('edevents');\n\n            element.title = info.event.title;\n\n            $(\".edevents\").popover({\n                placement: 'top',\n                trigger: \"click\",\n                container: \".edoobox-plugin\",\n                content: function () {\n                    var content = '<div style=\"max-width: 300px\"><span class=\"close\">&times;</span>';\n\n                    //Wurde ein Bild übermittelt?\n                    if (offer.image) {\n                        content += '<div>';\n                        content += '<div><img src=\"' + offer.image + '\" class=\"img-rounded img-responsive\"></div>';\n                        content += '</div>';\n                        content += '<div>';\n                    } else {\n                        content += '<div>';\n                    }\n\n                    content += '<dl class=\"dl-horizontal ed-cal-dl\">';\n\n                    //Gibt es eine Beschreibung?\n                    if (offer.shortdescription.length > 4) {\n                        content += '<dt><span class=\"glyphicon glyphicon-info-sign\"></span></dt>' + '<dd>' + offer.shortdescription + '</dd>';\n                    }\n\n                    content += '<dt><span class=\"glyphicon glyphicon-calendar\"></span></dt>';\n\n                    if (DateTime.fromISO(offer.start_date).toFormat('LLLL d, yyyy') == DateTime.fromISO(offer.end_date).toFormat('LLLL d, yyyy')) {\n                        content += '<dd>' + DateTime.fromISO(offer.start_date).toFormat('LLLL d, yyyy t') + ' – ' + DateTime.fromISO(offer.end_date).toFormat('HH:mm') + '</dd>';\n                    } else {\n                        content += '<dd>' + DateTime.fromISO(offer.start_date).toFormat('LLLL d, yyyy t') + ' – ' + DateTime.fromISO(offer.end_date).toFormat('LLLL d, yyyy t') + '</dd>';\n                    }\n\n                    content += '<dt><span class=\"offer_status glyphicon glyphicon-' + iconName + '\"></span></dt>' + '<dd>' + offerStatusText + '</dd>' +\n\n                        '</dl>';\n\n                    content += '<div class=\"ed-cal-btns-grp\"><a class=\"ed-cal-btn btn btn-info\" href=\"' + offer.offer_details_url + '\">' + tg('N3238')/*Details*/ + '</a>';\n\n                    if (secondButtonText) {\n                        content += '<a class=\"ed-cal-btn btn btn-' + secondButtonStatus + '\" href=\"' + offer.booking_start_url + '\">' + secondButtonText + '</a></div>';\n                    }\n\n                    content += '</div></div>';\n                    return content;\n                },\n                html: true\n            });\n\n            $(\".edevents\").on('click', function () {\n                $(\".edevents\").not(this).popover('hide');\n            });\n\n            $(\".edevents\").on(\"shown.bs.popover\", function (e) {\n                $(\".close\").on(\"click\", function (e) {\n                    $(\".edoobox-plugin .popover\").remove();\n                });\n            });\n\n        },\n        viewDidMount: updateCalendarUrlQueries\n    });\n    calendar.render();\n}\n\nexport function dateIsValid(date: Date): boolean {\n    return date instanceof Date && ! isNaN(date.getTime());\n}\n\nexport function getInitialCalendarView(): string {\n    return calendarViewMap[getQuery('edview')] ||\n        getFullCalendarViewKeySetByAdmin() ||\n        availableCalendarViews[0].keyFullCalendar;\n}\n\nexport function getInitialCalendarDate(): Date {\n    const dateFromShortcode: Date | undefined = getStartDateFromShortcode();\n    const date: Date = dateFromShortcode || new Date(getQuery(\"edstart\") || Date.now());\n    return dateIsValid(date) ? date : new Date;\n}\n\nexport function getQueryParamFromView(view: string): string {\n    return Object.keys(calendarViewMap).find(key => calendarViewMap[key] === view);\n}\n\nexport function getStartDateFromShortcode(): Date | undefined {\n    const eventsUrl = calendarElement(\"#calendar\")?.dataset?.events;\n    const shortcodeDateAsString = new URLSearchParams(eventsUrl).get(\"edstart\")?.split(\"?\")[0];\n    const shortcodeDate = new Date(shortcodeDateAsString);\n    return dateIsValid(shortcodeDate) ? new Date(shortcodeDate) : undefined;\n}\n\nexport function fetchEvents(info) {\n    const queryParams = buildEventQueryParams({\n        start: info.start.toISOString(),\n        end: info.end.toISOString()\n    });\n    return fetch(calendarElement().dataset.events + queryParams)\n        .then(response => response.json())\n        .then(json => {\n            state.offers = { ...(state.offers || {}), ...(json.offers || {}) };\n            return Object.values(json.rsl)?.map(value => ({\n                id: value.id,\n                classNames: [value.id],\n                title: json.offers[value['offerid']].name,\n                start: value.start,\n                end: value.end,\n                borderColor: value.color,\n                allDay: false,\n                offerid: value['offerid']\n            }));\n        });\n}\n\nexport function updateCalendarUrlQueries(view): void {\n    const date: string = DateTime.fromJSDate(view.view.currentStart).toFormat(\"yyyy-LL-dd\");\n    const viewQueryParam: string = getQueryParamFromView(view.view.type);\n    pushQuery(\"edstart\", date);\n    pushQuery(\"edview\", viewQueryParam);\n    document.querySelectorAll(\".popover\").forEach(element => element.remove());\n}\n\nfunction calendarElement(id: string = \"#calendar\"): HTMLElement | undefined {\n    return document.querySelector(id);\n}\n\nfunction getActiveCalendarViewsSetByAdmin(): Array<CalendarView> {\n    const availableViews: string = calendarElement()?.dataset?.views;\n    return availableCalendarViews.filter(view => availableViews.includes(view.keyEdoobox));\n}\n\nfunction getFullCalendarViewKeySetByAdmin(): string {\n    const edooboxViewKeySetByAdmin: string = calendarElement()?.dataset?.defaultview || \"\";\n    return availableCalendarViews.find(view => view.keyEdoobox === edooboxViewKeySetByAdmin)?.keyFullCalendar || \"\";\n}","export default function utable($) {\n    const tableElement: HTMLElement = document.querySelector(\".utable1\");\n    const isResponsive: boolean = tableElement?.dataset?.responsive === \"1\";\n    if (isResponsive) makeTableResponsive($);\n}\n\nexport function utableclick($) {\n    const tableRows: NodeList = document.querySelectorAll(\".utable1 tbody tr.angebot_row:not(.btn)\");\n    tableRows.forEach((element: HTMLElement) => element.addEventListener(\"click\", function () {\n        const openDescriptions: NodeList = document.querySelectorAll(\".utable1 tbody tr.wgd_tableview_beschr\");\n        const tableRows: NodeList = document.querySelectorAll(\".utable1 tbody tr.angebot_row, .utable1 tbody tr.wgd_tableview_beschr\");\n        openDescriptions.forEach((descriptionElement: HTMLElement) => descriptionElement.style.display = \"none\");\n        tableRows.forEach((row: HTMLElement) => row.classList.remove(\"selected\"));\n        element.classList.remove(\"selected\");\n        element.classList.add(\"selected\");\n        this.nextElementSibling.classList.remove(\"selected\");\n        this.nextElementSibling.style.display = \"table-row\";\n    }));\n    utable($);\n}\n\nexport function makeTableResponsive($): void {\n    $('.utable1').stacktable({ headIndex: $('.utable1').data('nameindex') });\n    $('.utable1.small-only .wgd_tableview_beschr').hide();\n}","export function initialise(selector, callback) {\n    if ( ! openLinkInIFrameAllowed(\".edoobox-plugin\")) {\n        return;\n    }\n    const allEdooboxLinks: NodeList = document.querySelectorAll(`${ selector } a[href*=\".edoobox.com/\"]`);\n    allEdooboxLinks.forEach((element: HTMLElement) => element.addEventListener(\"click\", function (e) {\n        e.preventDefault();\n        callback(element.closest(\".edoobox-plugin\"), element.getAttribute('href'));\n    }));\n}\n\nexport function openLinkInIFrameAllowed(selector: string): boolean {\n    const pluginElement = document.querySelector(\".edoobox-plugin\") as HTMLElement | null;\n    return pluginElement?.dataset?.noframe === \"0\";\n}\n\nexport function sizeFrame(id: string) {\n    if ( ! id) return;\n    postMessage(id);\n    setTimeout(() => postMessage(id), 50);\n    setTimeout(() => postMessage(id), 150);\n}\n\nfunction postMessage(id: string): void {\n    try {\n        window.parent.postMessage(['setheight', document.body.clientHeight, id], '*');\n    } catch (e) {\n    }\n}","import { sizeFrame } from \"../../iframe/iframe\";\n\nexport default function($, iframe){\n    console.log('alektionen');\n    if($('.alektionen').first().data('responsive') == '1'){\n        $('.alektionen').stacktable();\n        sizeFrame(iframe?.data?.id);\n    }\n}","export default function ($) {\n    let tallest: number = 0;\n    $('.sameheight').each(function () {\n        var thisHeight = $(this).innerHeight();\n        if (thisHeight > tallest) {\n            tallest = thisHeight;\n        }\n    });\n    $('.sameheight').find('.thumbnail').css('min-height', tallest + 'px');\n}","import facebook from \"./facebook/main\";\nimport googlemap from \"./google-maps/main\";\nimport social_xing from \"./social_xing/main\";\nimport social_googleplus from \"./social_googleplus/main\";\nimport ucalendar from \"./ucalendar/main\";\nimport utable, { utableclick } from \"./utable/main\";\nimport alektionen from \"./alektionen/main\";\nimport { makeTableResponsive } from \"./utable/main\";\nimport sameHeight from \"./sameHeight/sameHeight\";\n\nexport default function ($, iframe) {\n    return {\n        //Lektionen Übersicht\n        alektionen: () => alektionen($, iframe),\n        facebook,\n        googlemap,\n        sameHeight: () => sameHeight($),\n        social_xing,\n        social_googleplus,\n        ucalendar: () => ucalendar($),\n        utable: () => utable($),\n        utableclick: () => utableclick($)\n    };\n}","import \"./types/window\";\nimport widgets from \"./widgets/main\";\nimport { Settings } from \"luxon\";\nimport { getUserLanguage } from \"./localisation/language.js\";\nimport { initialise, sizeFrame } from \"./iframe/iframe\";\nimport { initialiseGoogleMaps } from \"./widgets/google-maps/main\";\n\nSettings.defaultLocale = getUserLanguage();\n\nif (typeof edooboxIFrameInitialized === \"undefined\") {\n    var edooboxIFrameInitialized = false; // only allow one initialization\n}\n\n(function run($) {\n    var edbsLastInterval = false;\n\n    const iframe = {\n        data: {\n            id: \"\",\n            autoh3: 0,\n            interval1: 0,\n            t2: 0\n        },\n        set: function (selector, url) {\n            //Ist es eine ID oder eine Class?\n            // Creates a new ID for the new iframe.\n            iframe.data.id = 'ediframe' + Math.round(new Date().getTime());\n\n            // Prepare the new iframe with given URL.\n            var i_html = '<iframe id=\"' + iframe.data.id + '\" src=\"' + url + '\" seamless=\"seamless\" style=\"width:100%; height:300px; border:0 none;\" frameborder=\"0\" hspace=\"0\" vspace=\"0\" marginheight=\"0\" marginwidth=\"0\" allowtransparency=\"true\"></iframe>';\n\n            // Insert the new iframe before the current iframe.\n            $(i_html).insertBefore(selector);\n\n            // Hide the current iframe.\n            $(selector).hide();\n\n            // Add the '#edinframe' hash to the URL.\n            window.location.hash = '#edinframe';\n\n            // Check if the event onhashchange is available on the window object.\n            if ('onhashchange' in window) {\n                // If yes, add callback to onhashchange event.\n                // Callback will fire every time the hash changes.\n                // Callback: If the hash is not #edinframe, then remove\n                // event listeners for the \"message\" event, that is defined\n                // below this callback.\n                window.onhashchange = function (a) {\n                    // If the new hash is not '#edinframe', then..\n                    if (window.location.hash != '#edinframe') {\n                        // .. fetch the '#edinframe + timestamp' (new) iframe, that was defined above.\n                        // See: iframe.data.id = 'ediframe' + Math.round(new Date().getTime());\n                        $('#' + iframe.data.id).remove();\n\n                        // Show the default (previously referred to as: 'current') iframe.\n                        $(selector).show();\n\n                        // Stop listening to the \"message\" event.\n                        // Message event listener is defined below in this 'set' function.\n                        try {\n                            if (window.addEventListener) {\n                                window.removeEventListener(\"message\", iframe.iFrameListener, false);\n                            } else {\n                                window.detachEvent(\"onmessage\", iframe.iFrameListener);\n                            }\n                        } catch (e) {\n                        }\n                    }\n                };\n            }\n\n            // Add event listender for the \"message\" event and fire callback iFrameListener.\n            try {\n                if (window.addEventListener) {\n                    window.addEventListener(\"message\", iframe.iFrameListener, false);\n                } else {\n                    window.attachEvent(\"onmessage\", iframe.iFrameListener);\n                }\n            } catch (e) {\n            }\n\n            // Select the \"new\" iframe (which is the registration form).\n            var iframetmp = document.getElementById(iframe.data.id);\n            // Wait for the iframe to load and then set the height withing 20 * 100ms intervals.\n            iframetmp.onload = function () {\n                iframe.data.interval1 = setInterval(function () {\n                    if (iframe.data.t2 < 20) {\n                        if ($(\"#\" + iframe.data.id).length == 1) {\n                            if (typeof iframetmp.attributes['seamless'] != 'undefined' && typeof iframetmp.contentWindow != null) {\n                                iframetmp.contentWindow.postMessage(['getheight', 1, iframe.data.id], '*');\n                                iframe.data.t2++;\n                            }\n                        }\n                    } else {\n                        iframe.data.t2 = 0;\n                        clearInterval(iframe.data.interval1);\n                        iframetmp.style.overflow = \"auto\";\n                    }\n                }, 100);\n            };\n        },\n        iFrameListener: function (e) {\n            var eventName = e.data[0], data = e.data[1];\n            var iframetmp = document.getElementById(iframe.data.id);\n            if (iframetmp != null) {\n                switch (eventName) {\n                    //GTM E-Commerce Events\n                    case 'gtmedoobox':\n                        window.dataLayer = window.dataLayer || [];\n                        dataLayer.push({ecommerce: null});\n                        dataLayer.push(data);\n                        return;\n                    case 'setheight':\n                        if (iframe.data.autoh3 == 0 || data > iframe.data.autoh3 + 30 || data < iframe.data.autoh3 - 100) {\n                            iframetmp.style.height = (data + 50) + 'px';\n                            iframe.data.autoh3 = data;\n                        }\n                        break;\n                }\n            }\n            // execute once on each new page\n            var currentInterval = e.currentTarget?.frames?.iframe?.data?.interval1;\n            if (edbsLastInterval !== currentInterval) {\n                // write a div with id $edbsAnchor above the iframe\n                function edbs_anchor() {\n                    var edbsAnchor = e.currentTarget?.frames?.iframe?.data?.id;\n\n                    // jump to the iframe anchor\n                    if (document.getElementById(edbsAnchor)) {\n                        function jump(anchorId) {\n                            let url = location.href;               //Save down the URL without hash.\n                            location.href = \"#\" + anchorId;                 //Go to the target element.\n                            history.replaceState(null, null, url);   //Don't like hashes. Changing it back.\n                        }\n\n                        jump(edbsAnchor);\n                    }\n                }\n\n                edbs_anchor();\n                edbsLastInterval = e.currentTarget?.frames?.iframe?.data?.interval1;\n            }\n        }\n    };\n\n    // Initialize the iframe after DOM is loaded.\n    window.onload = function () {\n        if (edooboxIFrameInitialized) return;\n        edooboxIFrameInitialized = true;\n\n        // Initialization adds an event listener to\n        initialise(\".edoobox-plugin\", iframe.set);\n\n        $('.edoobox-plugin .hidden').removeClass('hidden');\n        // Alle Widget Funktionen ausführen\n        $('.edoobox-plugin .edoobox-func').each(function () {\n            // --- Replace all faulty thumbnail placeholders\n            // --- \"placeholderImageURL\" is passed in Enqueue.php service as an array.\n            if (Array.isArray(window.placeholderImageURL)) {\n                var placeholderImages = document\n                    .querySelectorAll(\".thumbnail img[src*='placeholder_200x300.jpg']\");\n                for (var image of (window.placeholderImages || [])) {\n                    if (image.src.includes(\"plugins/booking-system-edoobox\")) return;\n                    image.src = window.placeholderImageURL[0];\n                }\n            }\n\n            const widgetFunction = this.dataset?.func;\n\n            if (typeof widgets($, iframe)[widgetFunction] === \"function\") {\n                widgets($, iframe)[widgetFunction]($(this));\n            }\n        });\n\n        sizeFrame(iframe.data.id);\n    };\n\n    window.initialiseGoogleMaps = initialiseGoogleMaps;\n})(window.jQuery);\n\n"],"names":["facebook","userLang","lang","d","s","id","js","fjs","googlemap","_a","script","apiKey","initialiseGoogleMaps","element","googleMarker","googleStyle","googleType","styleIsJson","addMarker","zoom","langitude","latitude","myLatlng","map","buildMapOptions","setCustomEdooboxMapType","setMapMarker","center","edooboxStyle","position","social_xing","x","social_googleplus","po","LuxonError$1","LuxonError","reason","ConflictingSpecificationError$1","unit","InvalidArgumentError$1","n","l","DATE_SHORT","DATE_MED","DATE_MED_WITH_WEEKDAY","DATE_FULL","DATE_HUGE","TIME_SIMPLE","TIME_WITH_SECONDS","TIME_WITH_SHORT_OFFSET","TIME_WITH_LONG_OFFSET","TIME_24_SIMPLE","TIME_24_WITH_SECONDS","TIME_24_WITH_SHORT_OFFSET","TIME_24_WITH_LONG_OFFSET","DATETIME_SHORT","DATETIME_SHORT_WITH_SECONDS","DATETIME_MED","DATETIME_MED_WITH_SECONDS","DATETIME_MED_WITH_WEEKDAY","DATETIME_FULL","DATETIME_FULL_WITH_SECONDS","DATETIME_HUGE","DATETIME_HUGE_WITH_SECONDS","Zone$1","ZoneIsAbstractError","ts","opts","format","otherZone","singleton","Zone","SystemZone","locale","parseZoneInfo","formatOffset","dtfCache","makeDTF","zone","typeToPos","hackyOffset","dtf","date","formatted","parsed","fMonth","fDay","fYear","fadOrBc","fHour","fMinute","fSecond","partsOffset","filled","i","type","value","pos","isUndefined","ianaZoneCache","name","IANAZone","year","month","day","adOrBc","hour","minute","second","asUTC","objToLocalTS","asTS","over","intlLFCache","getCachedLF","locString","key","intlDTCache","getCachedDTF","intlNumCache","getCachedINF","inf","intlRelCache","getCachedRTF","base","cacheKeyOpts","sysLocaleCache","systemLocale","parseLocaleString","localeStr","xIndex","uIndex","options","selectedStr","smaller","numberingSystem","calendar","intlConfigString","outputCalendar","mapMonths","f","ms","dt","DateTime","mapWeekdays","listStuff","loc","length","englishFn","intlFn","mode","supportsFastNumbers","PolyNumberFormatter$1","intl","forceSimple","padTo","floor","otherOpts","intlOpts","fixed","roundTo","padStart","PolyDateFormatter$1","z","gmtOffset","offsetZ","parts","part","offsetName","PolyRelFormatter$1","isEnglish","hasRelative","count","English.formatRelativeTime","Locale$1","Locale","defaultToEN","specifiedLocale","Settings","localeR","numberingSystemR","outputCalendarR","numbering","parsedLocale","parsedNumberingSystem","parsedOutputCalendar","isActuallyEn","hasNoWeirdness","alts","English.months","formatStr","English.weekdays","English.meridiems","English.eras","field","df","results","matching","m","PolyNumberFormatter","PolyDateFormatter","PolyRelFormatter","other","FixedOffsetZone","offset","r","signedOffset","zoneName","normalizeZone","input","defaultZone","isString","lowered","isNumber","InvalidZone","now","defaultLocale","defaultNumberingSystem","defaultOutputCalendar","twoDigitCutoffYear","throwOnInvalid","Settings$1","cutoffYear","t","o","isInteger","isDate","maybeArray","thing","bestBy","arr","by","compare","best","next","pair","pick","obj","keys","a","k","hasOwnProperty","prop","integerBetween","bottom","top","floorMod","isNeg","padded","parseInteger","string","parseFloating","parseMillis","fraction","number","digits","towardZero","factor","isLeapYear","daysInYear","daysInMonth","modMonth","modYear","weeksInWeekYear","weekYear","p1","last","p2","untruncateYear","offsetFormat","timeZone","modified","offHourStr","offMinuteStr","offHour","offMin","offMinSigned","asNumber","numericValue","InvalidArgumentError","normalizeObject","normalizer","normalized","u","v","hours","minutes","sign","timeObject","monthsLong","monthsShort","monthsNarrow","months","weekdaysLong","weekdaysShort","weekdaysNarrow","weekdays","meridiems","erasLong","erasShort","erasNarrow","eras","meridiemForDateTime","weekdayForDateTime","monthForDateTime","eraForDateTime","formatRelativeTime","numeric","narrow","units","lastable","isDay","isInPast","fmtValue","singular","lilUnits","fmtUnit","stringifyTokens","splits","tokenToString","token","macroTokenToFormatOpts","Formats.DATE_SHORT","Formats.DATE_MED","Formats.DATE_FULL","Formats.DATE_HUGE","Formats.TIME_SIMPLE","Formats.TIME_WITH_SECONDS","Formats.TIME_WITH_SHORT_OFFSET","Formats.TIME_WITH_LONG_OFFSET","Formats.TIME_24_SIMPLE","Formats.TIME_24_WITH_SECONDS","Formats.TIME_24_WITH_SHORT_OFFSET","Formats.TIME_24_WITH_LONG_OFFSET","Formats.DATETIME_SHORT","Formats.DATETIME_MED","Formats.DATETIME_FULL","Formats.DATETIME_HUGE","Formats.DATETIME_SHORT_WITH_SECONDS","Formats.DATETIME_MED_WITH_SECONDS","Formats.DATETIME_FULL_WITH_SECONDS","Formats.DATETIME_HUGE_WITH_SECONDS","Formatter$1","Formatter","fmt","current","currentFull","bracketed","c","formatOpts","interval","p","knownEnglish","useDateTimeFormatter","extract","meridiem","English.meridiemForDateTime","standalone","English.monthForDateTime","weekday","English.weekdayForDateTime","maybeMacro","era","English.eraForDateTime","dur","tokenToField","lildur","mapped","tokens","realTokens","found","literal","val","collapsed","Invalid$1","explanation","ianaRegex","combineRegexes","regexes","full","combineExtractors","extractors","mergedVals","mergedZone","cursor","ex","parse","patterns","regex","extractor","simpleParse","match","ret","offsetRegex","isoExtendedZone","isoTimeBaseRegex","isoTimeRegex","isoTimeExtensionRegex","isoYmdRegex","isoWeekRegex","isoOrdinalRegex","extractISOWeekData","extractISOOrdinalData","sqlYmdRegex","sqlTimeRegex","sqlTimeExtensionRegex","int","fallback","extractISOYmd","extractISOTime","extractISOOffset","local","fullOffset","extractIANAZone","isoTimeOnly","isoDuration","extractISODuration","yearStr","monthStr","weekStr","dayStr","hourStr","minuteStr","secondStr","millisecondsStr","hasNegativePrefix","negativeSeconds","maybeNegate","num","force","obsOffsets","fromStrings","weekdayStr","result","English.monthsShort","English.weekdaysLong","English.weekdaysShort","rfc2822","extractRFC2822","obsOffset","milOffset","preprocessRFC2822","rfc1123","rfc850","ascii","extractRFC1123Or850","extractASCII","isoYmdWithTimeExtensionRegex","isoWeekWithTimeExtensionRegex","isoOrdinalWithTimeExtensionRegex","isoTimeCombinedRegex","extractISOYmdTimeAndOffset","extractISOWeekTimeAndOffset","extractISOOrdinalDateAndTime","extractISOTimeAndOffset","parseISODate","parseRFC2822Date","parseHTTPDate","parseISODuration","extractISOTimeOnly","parseISOTimeOnly","sqlYmdWithTimeExtensionRegex","sqlTimeCombinedRegex","extractISOTimeOffsetAndIANAZone","parseSQL","INVALID","lowOrderMatrix","casualMatrix","daysInYearAccurate","daysInMonthAccurate","accurateMatrix","orderedUnits","reverseUnits","clone","clear","conf","Duration","durationToMillis","matrix","vals","sum","normalizeValues","previous","previousVal","conv","rollUp","removeZeroes","newVals","Duration$1","config","accurate","durationLike","text","invalid","Invalid","InvalidDurationError","InvalidUnitError","fmtOpts","millis","duration","fn","values","mixed","conversionAccuracy","built","accumulated","lastUnit","own","ak","negated","eq","v1","v2","validateStartEnd","start","end","Interval","Interval$1","InvalidIntervalError","builtStart","friendlyDateTime","builtEnd","validateError","e","startIsValid","endIsValid","dateTime","dateTimes","sorted","added","idx","numberOfParts","intervals","final","b","sofar","item","currentCount","ends","flattened","dateFormat","separator","mapFn","Info$1","proto","locObj","dayDiff","earlier","later","utcDayStart","highOrderDiffs","differs","days","lowestOrder","highWater","differ","diff$1","remainingMillis","lowerOrderUnits","numberingSystems","numberingSystemsUTF16","hanidecChars","parseDigits","str","code","min","max","digitRegex","append","MISSING_FTP","intUnit","post","NBSP","spaceOrNBSP","spaceOrNBSPRegExp","fixListRegex","stripInsensitivities","oneOf","strings","startIndex","groups","h","simple","escapeToken","unitForToken","one","two","three","four","six","oneOrTwo","oneToThree","oneToSix","oneToNine","twoToFour","fourToSix","partTypeStyleToTokenVal","tokenForPart","resolvedOpts","isSpace","style","actualType","buildRegex","handlers","matches","all","matchIndex","dateTimeFromMatches","toField","specificOffset","dummyDateTimeCache","getDummyDateTime","maybeExpandMacroToken","formatOptsToTokens","expandMacroTokens","explainFromTokens","disqualifyingUnit","regexString","rawMatches","ConflictingSpecificationError","parseFromTokens","invalidReason","nonLeapLadder","leapLadder","unitOutOfRange","dayOfWeek","computeOrdinal","uncomputeOrdinal","ordinal","table","month0","gregorianToWeek","gregObj","weekNumber","weekToGregorian","weekData","weekdayOfJan4","yearInDays","gregorianToOrdinal","gregData","ordinalToGregorian","ordinalData","hasInvalidWeekData","validYear","validWeek","validWeekday","hasInvalidOrdinalData","validOrdinal","hasInvalidGregorianData","validMonth","validDay","hasInvalidTimeData","millisecond","validHour","validMinute","validSecond","validMillisecond","MAX_DATE","unsupportedZone","possiblyCachedWeekData","inst","fixOffset","localTS","tz","utcGuess","o2","o3","tsToObj","objToTS","adjustTime","oPre","millisToAdd","parseDataToDateTime","parsedZone","setZone","interpretationZone","toTechFormat","allowZ","toISODate","extended","longFormat","toISOTime","suppressSeconds","suppressMilliseconds","includeOffset","extendedZone","defaultUnitValues","defaultWeekUnitValues","defaultOrdinalUnitValues","orderedWeekUnits","orderedOrdinalUnits","normalizeUnit","quickDT","tsNow","offsetProvis","diffRelative","round","lastOpts","argList","args","DateTime$1","ot","zoneToUse","milliseconds","seconds","containsOrdinal","containsGregorYear","containsGregorMD","containsGregor","definiteWeekDef","useWeekData","defaultValues","objNow","foundFirst","higherOrderInvalid","gregorian","tsFinal","offsetFinal","localeToUse","InvalidDateTimeError","localeOpts","tokenList","Info","dayMs","minuteMs","oEarlier","oLater","o1","ts1","ts2","c1","c2","keepLocalTime","keepCalendarTime","newTS","offsetGuess","asObj","settingWeekStuff","normalizedUnit","q","ext","includePrefix","includeZone","includeOffsetSpace","otherDateTime","durOpts","otherIsLater","diffed","diff","inputMs","adjustedToZone","padding","Formats.DATE_MED_WITH_WEEKDAY","Formats.DATETIME_MED_WITH_WEEKDAY","dateTimeish","buildEventQueryParams","getQuery","pushQuery","currentUrl","y","_","g","w","A","P","C","T","$","M","N","H","I","L","S","j","B","O","D","G","U","F","V","W","Z","J","K","Q","nn","tn","en","styleTexts","styleEls","injectStyles","styleText","styleEl","appendStylesTo","ensureElHasStyles","el","registerStylesRoot","rootNode","nonce","getNonceValue","parentEl","insertBefore","hydrateStylesRoot","sheet","ruleCnt","styleStr","queriedNonceValue","queryNonceValue","metaWithNonce","elWithNonce","css_248z","DelayedRunner","drainedOption","delay","scope","pauseDepths","removeElement","elementClosest","selector","elementMatches","findElements","container","containers","allMatches","PIXEL_PROP_RE","applyStyle","props","propName","applyStyleProp","getEventTargetViaRoot","ev","_b","guid$1","getUniqueDomId","buildDelegationHandler","handler","matchedChild","listenBySelector","eventType","attachedHandler","listenToHoverBySelector","onMouseEnter","onMouseLeave","currentMatchedChild","mouseOverEv","realOnMouseLeave","mouseLeaveEv","createAriaClickAttrs","createAriaKeyboardAttrs","guidNumber","guid","parseFieldSpecs","specs","compareByFieldSpecs","obj0","obj1","fieldSpecs","cmp","compareByFieldSpec","fieldSpec","flexibleCompare","len","formatWithOrdinals","formatter","fallbackText","arg","index","isInt","computeSmallestCellWidth","cellEl","allWidthEl","contentWidthEl","INTERNAL_UNITS","PARSE_RE","createDuration","parseString","parseObject","weeks","durationsEqual","d0","d1","addDurations","subtractDurations","multiplyDuration","asRoughYears","asRoughDays","asRoughMonths","asRoughMs","wholeDivideDurations","numerator","denominator","res","localRes","greatestDurationDenominator","isArraysEqual","a0","a1","equalityFunc","DAY_IDS","addWeeks","dateToUtcArray","arrayToUtcDate","addDays","addMs","diffWeeks","m0","m1","diffDays","diffHours","diffMinutes","diffSeconds","diffDayAndTime","m0day","startOfDay","m1day","diffWholeWeeks","diffWholeDays","timeAsMs","startOfHour","startOfMinute","startOfSecond","weekOfYear","marker","dow","doy","weekOfGivenYear","nextW","firstWeekStart","firstWeekOffset","dayStart","fwd","dateToLocalArray","arrayToLocalDate","isValidDate","buildIsoString","timeZoneOffset","stripZeroTime","formatTimeZoneOffset","formatDayString","formatIsoMonthStr","formatIsoTimeString","doIso","abs","mins","memoize","workerFunc","resEquality","teardownFunc","currentArgs","currentRes","newArgs","memoizeObjArg","currentArg","newArg","isPropsEqual","EXTENDED_SETTINGS_AND_SEVERITIES","STANDARD_DATE_PROP_SEVERITIES","MERIDIEM_RE","COMMA_RE","MULTI_SPACE_RE","LTR_RE","UTC_RE","NativeFormatter$1","formatSettings","standardDateProps","extendedSettings","severity","buildFormattingFunc","context","betterDefaultSeparator","diffSeverity","computeMarkerDiffSeverity","biggestUnitForPartial","full0","full1","partialDateProps","computePartialFormattingOptions","partialFormattingFunc","partial0","partial1","insertion","findCommonInsertion","standardDatePropCnt","formatWeekNumber","buildNativeFormattingFunc","sanitizeSettings","normalFormat","zeroFormat","zeroProps","postProcess","injectTzoStr","tzoStr","replaced","weekText","weekTextLong","display","ca","biggestUnit","partialOptions","i0","found0","before0","after0","i1","found1","before1","after1","expandZonedMarker","dateInfo","calendarSystem","createVerboseFormattingArg","startInfo","endInfo","CmdFormatter$1","cmdStr","FuncFormatter$1","func","createFormatter","NativeFormatter","CmdFormatter","FuncFormatter","BASE_OPTION_REFINERS","identity","BASE_OPTION_DEFAULTS","CALENDAR_LISTENER_REFINERS","CALENDAR_OPTION_REFINERS","COMPLEX_OPTION_COMPARATORS","isMaybeObjectsEqual","isMaybeArraysEqual","VIEW_OPTION_REFINERS","mergeRawOptions","optionSets","mergeProps","refineProps","refiners","refined","extra","raw","propObjs","complexPropsMap","dest","complexObjs","filterHash","hash","filtered","mapHash","newHash","arrayToHash","hashValuesToArray","HANDLER_RE","isNonHandlerPropsEqual","getUnequalProps","compareObjs","oldProps","newProps","equalityFuncs","isObjValsEqual","val0","val1","comparator","collectFromHash","endIndex","step","calendarSystemClassMap","registerCalendarSystem","theClass","createCalendarSystem","GregorianCalendarSystem","ISO_RE","DateEnv","settings","isNamedTimeZone","meta","forcedTzo","dateOptions","extraOptions","Theme","calendarOptions","iconOverrideHash","iconClassesCopy","buttonName","className","prefix","isRtl","customButtonProps","flushSync","runBeforeFlush","oldDebounceRendering","preact.options","callbackQ","execCallbackSync","callback","preact.render","preact.createElement","FakeComponent","preact.Component","createContext","defaultValue","ContextType","preact.createContext","origProvider","isNew","children","subs","_props","old","ScrollResponder","execFunc","emitter","scrollTime","scrollTimeReset","request","isDatesNew","ViewContextType","buildViewContext","viewSpec","viewApi","viewOptions","dateProfileGenerator","dateEnv","theme","pluginHooks","dispatch","getCurrentData","calendarApi","registerInteractiveComponent","unregisterInteractiveComponent","Component","nextProps","nextState","newState","PureComponent","addPropsEquality","addStateEquality","BaseComponent","propEquality","stateEquality","setRef","ref","hasCustomRenderingHandler","customGenerator","defaultGenerator","renderProps","attrs","buildElAttrs","useDefault","innerContent","queuedDomNodes","currentGeneratorMeta","customGeneratorRes","createElement","isObject","isValidElement","isActive","handleCustomRendering","customRenderingMetaMap","generatorMeta","isTruthy","currentDomNodes","newNode","ContentInjector","generatorName","extraClassNames","elRef","RenderId","InnerContentInjector","generatedClassNames","generateClassNames","elAttrs","ContentContainer","containerComponent","parentProps","classNameGenerator","classNames","ViewContainer","buildViewClassNames","parseRange","invertRanges","ranges","constraintRange","invertedRanges","dateRange","compareRanges","range0","range1","intersectRanges","newRange","rangesIntersect","rangeContainsMarker","range","constrainMarkerToRange","computeAlignedDayRange","timedRange","dayCnt","computeVisibleDayRange","nextDayThreshold","startDay","endDay","endTimeMS","isMultiDayRange","visibleRange","diffDates","date0","date1","largeUnit","reduceCurrentDate","currentDate","action","getInitialDate","initialDateInput","getNow","nowInput","DateProfileGenerator","currentDateProfile","forceToValid","prevDate","nextDate","direction","validRange","currentInfo","isRangeAllDay","renderRange","activeRange","isValid","simpleInput","dayCount","usesMinMaxTime","slotMinTime","slotMaxTime","dateAlignment","dateIncrement","computeRes","runningCount","currentRange","currentRangeUnit","customAlignment","rangeInput","hiddenDays","isHiddenDayHash","inc","isExclusive","createEventInstance","defId","forcedStartTzo","forcedEndTzo","parseRecurring","defaultAllDay","recurringTypes","allDay","expandRecurring","eventStore","framingRange","defs","instances","instance","def","starts","expandRecurringRanges","eventDef","markers","EVENT_NON_DATE_REFINERS","EVENT_DATE_REFINERS","EVENT_REFINERS","parseEvent","eventSource","allowOpenRange","buildEventRefiners","defIdMap","instanceIdMap","refineEventDef","computeIsDefaultAllDay","recurringRes","parseEventDef","singleRes","parseSingle","EVENT_UI_REFINERS","sourceId","hasEnd","createEventUi","memberAdder","startMeta","startMarker","endMeta","endMarker","startInput","parseEvents","rawEvents","createEmptyEventStore","eventRefiners","rawEvent","tuple","eventTupleToStore","getRelevantEvents","instanceId","newStore","filterEventStoreDefs","lookDef","isEventDefsGrouped","def0","def1","mergeEventStores","store0","store1","filterFunc","excludeSubEventStore","master","sub","filteredDefs","filteredInstances","normalizeConstraint","parseClassNames","EMPTY_EVENT_UI","constraint","combineEventUis","uis","combineTwoEventUis","item0","item1","EVENT_SOURCE_REFINERS","parseEventSource","buildEventSourceRefiners","rawObj","metaRes","buildEventSourceMeta","reduceEventStore","eventSources","dateProfile","receiveRawEvents","resetRawEvents","addEvent","excludeEventsBySourceId","fetchId","fetchRange","subset","transformRawEvents","existingEventStore","buildPublicIdMaps","newEventStore","calEachTransform","sourceEachTransform","transformEachRawEvent","refinedEvents","refinedEvent","expandRange","rezoneEventStoreDates","oldDateEnv","newDateEnv","publicId","Emitter","thisContext","addToHash","removeFromHash","attachedHandlers","optionHandler","DEF_DEFAULTS","parseBusinessHours","refineInputs","rawDefs","rawDef","triggerDateSelect","selection","pev","buildDateSpanApiWithContext","triggerDateUnselect","dateSpan","transform","buildDateSpanApi","getDefaultEventEnd","applyMutationToEventStore","eventConfigBase","mutation","eventConfigs","compileEventUis","applyMutationToEventDef","applyMutationToEventInstance","eventConfig","standardProps","copy","applier","eventInstance","forceAllDay","clearEnd","EventSourceImpl$1","internalEventSource","EventImpl$1","ui","instanceRange","startDelta","endInput","endDelta","deltaInput","delta","maintainDuration","formatInput","relevantEvents","oldEvent","EventImpl","buildEventApis","asStore","eventApiToStore","EventSourceImpl","startStr","endStr","eventApi","excludeInstance","eventApis","excludeInstanceId","sliceEventStore","eventUiBases","inverseBgByGroupId","inverseBgByDefId","defByGroupId","bgRanges","fgRanges","eventUis","origRange","normalRange","slicedRange","groupId","invertedRange","hasBgRendering","setElSeg","seg","getElSeg","eventDefs","compileEventUi","sortEventSegs","segs","eventOrderSpecs","objs","buildSegCompareObj","eventRange","computeSegDraggable","transformers","transformer","computeSegStartResizable","computeSegEndResizable","buildSegTimeText","timeFormat","defaultDisplayEventTime","defaultDisplayEventEnd","startOverride","endOverride","displayEventTime","displayEventEnd","wholeEventStart","wholeEventEnd","segStart","segEnd","isStartDay","isEndDay","getSegMeta","todayRange","nowDate","segRange","getEventClassNames","buildEventRangeKey","getSegAnchorAttrs","url","eventInteractive","STANDARD_PROPS","parseDateSpan","defaultDuration","span","parseOpenDateSpan","buildRangeApi","buildRangeApiWithTimeZone","omitTime","fabricateEventRange","unpromisify","normalizedSuccessCallback","normalizedFailureCallback","isResolved","wrappedSuccess","wrappedFailure","error","message","response","requestJson","method","params","fetchOptions","fetchRes","parsedResponse","JsonRequestError","canVGrowWithinCell","getCanVGrowWithinCell","computeCanVGrowWithinCell","possible","CalendarRoot","forPrint","isHeightAuto","height","Interaction","parseInteractionSettings","component","interactionSettingsStore","CalendarImpl","handlerName","currentDataManager","viewType","dateOrRange","dateMarker","state","spec","viewSpecs","toolbarConfig","viewTypes","zonedDateInput","dateOrObj","endDate","selectionInput","eventInput","sourceInput","sourceApi","newEventApi","currentData","sourceHash","sourceApis","internalId","timeInput","time","intersectRects","rect1","rect2","EMPTY_EVENT_STORE","Splitter","keyInfos","defKeys","dateSelections","individualUi","eventStores","eventDrags","eventResizes","splitProps","info","buildEventUiForKey","keyInfo","buildEventUi","dateSpans","splitStores","splitHashes","interaction","splitStates","affectedStores","mutatedKeysByDefId","mutatedStores","populate","allUi","eventUiForKey","baseParts","stuff","getDateMeta","getDayClassNames","DAY_FORMAT","WEEK_FORMAT","buildNavLinkAttrs","isTabbable","dateStr","zonedDate","handleInteraction","customAction","_scrollbarWidths","getScrollbarWidths","computeScrollbarWidths","computeScrollbarWidthsForEl","computeClippedClientRect","clippingParents","getClippingParents","rect","clippingParent","intersection","parents","computedStyle","PositionCache","originEl","els","isHorizontal","isVertical","originClientRect","originClientLeft","lefts","rights","originClientTop","tops","bottoms","leftPosition","topPosition","leftIndex","topIndex","otherCache","similarNumArrays","DateComponent","positionLeft","positionTop","elWidth","elHeight","SegHierarchy","getEntryThickness","entry","inputs","hiddenEntries","barrier","partCnt","splitHiddenEntries","entrySpan","barrierSpan","intersectSpans","entriesByLevel","levelCoords","insertAt","buildEntryKey","newEntry","strictOrder","stackCnts","levelCnt","candidateCoord","touchingLevel","touchingLateral","touchingEntry","stackCnt","trackingLevel","trackingCoord","trackingEntries","trackingEntry","searchRes","binarySearch","getEntrySpanEnd","lateralIndex","trackingEntryBottom","destLevel","destLateral","rects","level","entries","levelCoord","groupIntersectingEntries","merges","filteredMerges","hungryMerge","merge","joinSpans","span0","span1","searchVal","getItemVal","middleIndex","middleVal","computeFallbackHeaderFormat","datesRepDistinctDays","CLASS_NAME","renderInner$1","TableDateCell","dayMeta","navLinkAttrs","InnerContainer","WEEKDAY_FORMAT","TableDowCell","dateMeta","InnerContent","prevProps","unroundedNow","currentUnitStart","nextUnitStart","waitMs","buildDayRange","NowTimer","DayHeader","createDayHeaderFormatter","dates","renderIntro","dayHeaderFormat","explicitFormat","dateCnt","DaySeriesModel","indices","dayIndex","firstIndex","lastIndex","clippedFirstIndex","clippedLastIndex","dayOffset","DayTableModel","daySeries","breakOnWeeks","daysPerRow","firstDay","rowCnt","rows","row","cells","col","colCnt","seriesSeg","nextIndex","Slicer","extraArgs","eventSegs","businessHours","computeActiveRange","rangeRes","activeDateSpanRange","eventRanges","isComponentAllDay","VISIBLE_HIDDEN_RE","liquid","liquidIsAbsolute","isAbsolute","realClientWidth","realClientHeight","RefMap$1","masterCallback","depths","currentMap","removed","refCallback","computeShrinkWidth","chunkEls","shrinkCells","largestWidth","shrinkCell","getSectionHasLiquidHeight","sectionConfig","getAllowYScrolling","renderChunkContent","chunkConfig","isHeader","expandRows","isColPropsEqual","cols0","cols1","renderMicroColGroup","cols","shrinkWidth","colNodes","colProps","sanitizeShrinkWidth","hasShrinkWidth","getScrollGridClassNames","getSectionClassNames","wholeTableVGrow","renderScrollShim","getStickyHeaderDates","stickyHeaderDates","getStickyFooterScrollbar","stickyFooterScrollbar","RefMap","sectionConfigs","microColGroupNode","configCnt","configI","currentConfig","headSectionNodes","bodySectionNodes","footSectionNodes","isBuggy","roleAttrs","Fragment","forceYScrollbars","scrollerClientWidths","scrollerClientHeights","needsYScrolling","isLiquid","overflowY","sectionKey","content","Scroller","scrollerEl","section","getSectionByKey","scrollbarWidth","scrollerRefs","scrollerElRefs","scroller","harnessEl","SimpleScrollGrid","sections","EventContainer","StandardEvent","timeText","renderInnerContent$1","eventContentArg","innerProps","NowIndicatorContainer","DAY_NUM_FORMAT","DayCellContainer","refineRenderProps","hasCustomDayCellContent","isMonthStart","dayNumberText","BgEvent","renderInnerContent","title","renderFill","fillType","WeekNumberContainer","renderInner","PADDING_FROM_VIEWPORT","Popover","target","onClose","createPortal","alignmentEl","alignGridTop","rootEl","alignmentRect","popoverDims","popoverTop","popoverLeft","origin","MorePopover","startDate","MoreLinkContainer","linkEl","moreLinkClick","computeRange","buildPublicSeg","moreLinkText","moreCnt","hint","renderMoreLinkInner","hiddenSegs","computeEarliestSegStart","computeLatestSegEnd","pickEarliestStart","seg0","seg1","pickLatestEnd","globalLocales","MINIMAL_RAW_EN_LOCALE","RAW_EN_LOCALE","buttonText","eventCnt","organizeRawLocales","explicitRawLocales","defaultCode","allRawLocales","rawLocaleMap","rawLocale","buildLocale","inputSingular","available","parseLocale","queryLocale","codeArg","codes","queryRawLocale","simpleId","merged","week","createPlugin","buildPluginHooks","pluginDefs","globalDefs","currentPluginIds","hooks","addDefs","pluginName","currentId","combineHooks","buildBuildPluginHooks","currentOverrideDefs","currentGlobalDefs","currentHooks","overrideDefs","hooks0","hooks1","compareOptionalDates","StandardTheme","compileViewDefs","defaultConfigs","overrideConfigs","ensureViewDef","viewDef","buildViewDef","defaultConfig","overrideConfig","queryProp","theComponent","superType","superDef","parseViewConfigs","parseViewConfig","rawOptions","createViewHookComponent","viewProps","buildViewSpecs","defaultInputs","optionOverrides","dynamicOptionOverrides","localeDefaults","viewDefs","buildViewSpec","durationInput","durationUnit","singleUnit","singleUnitOverrides","createDurationCached","denom","queryButtonText","optionsSubset","buttonTextMap","buttonTextKey","queryButtonTitle","buttonHints","buttonKey","durationInputMap","json","reduceViewType","reduceDynamicOptionOverrides","reduceDateProfile","dp","initEventSources","addSources","parseInitialSources","reduceEventSources","removeSource","fetchDirtySources","fetchSourcesByIds","excludeStaticSources","receiveResponse","reduceEventSourcesNewTimeZone","computeEventSourcesLoading","eventSourceHash","sources","source","isSourceDirty","doesSourceNeedRange","prevSources","sourceIdHash","isRefetch","nextSources","fetchSource","sourceDef","errorHandled","rawSources","rawSource","reduceDateSelection","currentSelection","reduceSelectedEvent","currentInstanceId","reduceEventDrag","currentDrag","newDrag","reduceEventResize","currentResize","newResize","parseToolbars","calendarOptionOverrides","header","parseToolbar","footer","sectionStrHash","sectionWidgets","viewsWithButtons","hasTitle","sectionName","sectionStr","sectionRes","parseSection","calendarCustomButtons","calendarButtonTextOverrides","calendarButtonText","calendarButtonHintOverrides","calendarButtonHints","sectionSubstrs","buttonGroupStr","buttonClick","buttonIcon","buttonHint","textFallback","prevOrNext","navUnit","ViewImpl","eventSourceDef$2","successCallback","arrayEventSourcePlugin","eventSourceDef$1","errorCallback","funcEventSourcePlugin","JSON_FEED_EVENT_SOURCE_REFINERS","eventSourceDef","requestParams","buildRequestParams","jsonFeedEventSourcePlugin","startParam","endParam","timeZoneParam","customRequestParams","SIMPLE_RECURRING_REFINERS","recurring","recurringData","typeData","clippedFramingRange","expandRanges","simpleRecurringEventsPlugin","daysOfWeek","startTime","dowHash","dayMarker","instanceStarts","instanceStart","changeHandlerPlugin","events","handleEventSources","unfoundSources","newInputs","inputFound","unfoundSource","newInput","handleDateProfile","handleEventStore","globalPlugins","TaskRunner","runTaskOption","task","queue","completedTasks","buildTitle","buildTitleFormat","CalendarDataManager","buildDateEnv$1","buildTheme","buildDateProfileGenerator","buildViewApi","buildViewUiProps","buildEventUiBySource","buildEventUiBases","parseContextBusinessHours","optionsData","currentViewType","currentViewData","calendarContext","initialState","contextAndState","reducer","computeIsLoading","changedOptionNames","renderableEventStore","eventUiSingleBase","selectionConfig","eventUiBySource","wasLoading","isLoading","oldData","data","changeHandlers","oldCalendarOptions","newCalendarOptions","optionName","refinedOptions","availableLocaleData","warnUnknownOptions","locales","availableRawLocales","currentRaw","currentRefined","anyChanges","explicitLocale","weekNumberCalculation","defaultSeparator","ThemeClass","DateProfileGeneratorClass","isLoadingFunc","viewName","ToolbarSection","widgetGroup","isOnlyButtons","widget","isPressed","isDisabled","buttonClasses","groupClassName","Toolbar","model","extraClassName","forceLtr","startContent","endContent","centerContent","widgetGroups","ViewHarness","aspectRatio","paddingBottom","EventClicking","segEl","hasUrlContainer","EventHovering","publicEvName","CalendarContent","buildViewPropTransformers","buildToolbarProps","createRef","settingsInput","interactions","TheInteractionClass","listeners","listener","toolbarProps","viewVGrow","viewHeight","viewAspectRatio","viewContext","viewLabelId","CalendarInteractionClass","propSetHandlers","buildAppendContent","ViewComponent","todayInfo","prevInfo","nextInfo","theClasses","TheClass","Calendar","render","wasRendering","classList","splitSegsByRow","byRow","splitSegsByFirstCol","byCol","splitInteractionByRow","DEFAULT_TABLE_EVENT_TIME_FORMAT","hasListItemDisplay","TableBlockEvent","TableListItemEvent","TableCellMoreLink","compileSegs","allSegs","invisibleSegs","isForcedInvisible","singlePlacements","placement","DEFAULT_WEEK_NUM_FORMAT","TableCell","rootElRef","shouldDisplayMonthStart","renderTopInner","currentStart","currentEnd","currentEndIncl","currentFirstYear","currentFirstMonth","currentLastYear","currentLastMonth","generateSegKey","generateSegUid","computeFgSegPlacement","dayMaxEvents","dayMaxEventRows","segHeights","maxContentHeight","hierarchy","DayGridSegHierarchy","segEntry","segUid","segInputs","unknownHeightSegs","segRects","singleColPlacements","multiColPlacements","leftoverMargins","placeRects","moreCnts","moreMarginTops","resliceSeg","hiddenEntry","hiddenSpan","allRects","rectsByEachCol","groupRectsByEachCol","currentHeight","currentMarginTop","multiPlacements","isFirstCol","spanStart","spanEnd","excludeHidden","forceHidden","touchingEntryId","placeholderEntry","placeholderEntryId","TableRow","isForced","businessHoursByCol","bgEventSegsByCol","highlightSegsByCol","mirrorSegsByCol","cell","normalFgNodes","mirrorFgNodes","buildMirrorPlacements","prevState","currentProps","segPlacements","isDragging","isResizing","isDateSelecting","eventSelection","framePositions","isMirror","nodes","isVisible","left","right","leftRightCss","isExternalSizingChange","frameElRefs","frameEls","newPositionCache","oldSegHeights","newSegHeights","limitByContentHeight","segElMap","firstKey","fcContainerEl","elMap","mirrorSegs","colPlacements","topsByInstanceId","buildAbsoluteTopHash","placements","TableRows","businessHourSegsByRow","bgEventSegsByRow","fgEventSegsByRow","dateSelectionSegsByRow","eventDragByRow","eventResizeByRow","cellMinHeight","isSegAllDay","firstCellEl","rowObj","colPositions","rowPositions","Table","limitViaBalanced","subjectEl","getScrollSubjectEl","scrollEl","scrollTop","containerEl","DayTableSlicer","dayTableModel","DayTable","TableDateProfileGenerator","buildDayTableRenderRange","endOfWeek","lastMonthRenderStart","TableView","headerRowContent","bodyContent","dayMinWidth","ScrollGrid","DayTableView","buildDayTableModel","headerContent","contentArg","AllDaySplitter","DEFAULT_SLAT_LABEL_FORMAT","TimeColsAxisCell","labelFormat","TimeBodyAxis","slatMeta","AUTO_ALL_DAY_MAX_EVENT_ROWS","TimeColsView","rowKey","frameHeight","rowHeight","renderAllDayInner","slatCoords","allDayContent","timeContent","slatMetas","isNowIndicator","nowIndicatorTop","TimeColsSlatsCoords","positions","slotDuration","startOfDayDate","timeMs","when","slatCoverage","slatIndex","slatRemainder","TimeColsSlatsBody","slatElRefs","TimeColsSlats","collectSlatEls","splitSegsByCol","segsByCol","splitInteractionByCol","TimeColMoreLink","renderPlainFgSegs","buildPositioning","maxStackCnt","hiddenGroups","web","buildWeb","stretchWeb","webToRects","buildNode","cacheable","lateral","siblingRange","findNextLevelSegs","nextLevelRes","buildNodes","lateralStart","lateralEnd","pairs","cmpDescPressures","extractNode","subjectLevel","subjectLateral","subjectEntry","afterSubject","searchIndex","topLevelNodes","totalThickness","stretchNode","node","startCoord","prevThickness","nextLevelNodes","thickness","allThickness","thicknessFraction","endCoord","newChildren","childNode","newThickness","processNode","stackDepth","processNodes","stackForward","keyFunc","workFunc","cache","computeSegVCoords","colDate","eventMinHeight","vcoords","computeFgSegPlacements","segVCoords","eventOrderStrict","eventMaxStack","dumbSegs","segRect","dumbSeg","DEFAULT_TIME_FORMAT","TimeColEvent","TimeCol","isSelectMirror","interactionAffectedInstances","sortedFgSegs","segIsInvisible","forcedKey","eventShortHeight","segPlacement","vStyle","computeSegVStyle","hStyle","isInset","isShort","extraDateSpan","eventDrag","eventResize","hiddenGroup","positionCss","compileSegsFromEntries","segHCoords","shouldOverlap","nearCoord","farCoord","hiddenInstances","segEntries","TimeColsContent","nowIndicatorSegsByRow","collectCellEls","TimeCols","processSlotOptions","onScrollTopRequest","colCoords","snapDuration","snapsPerSlot","colIndex","slatTop","slatHeight","partial","localSnapIndex","snapIndex","dayDate","snapDurationOverride","DayTimeColsSlicer","dayRanges","DayTimeCols","buildDayRanges","nowIndicator","STOCK_SUB_DURATIONS","buildSlatMetas","explicitLabelInterval","slatTime","slatIterator","labelInterval","computeLabelInterval","metas","isLabeled","slotsPerLabel","DayTimeColsView","buildTimeColsModel","hasAttachedAxis","hasDetachedAxis","timeGridContent","OPTION_REFINERS","ListViewHeaderRow","cellId","textId","sideText","ListViewEventRow","timeHeaderId","eventHeaderId","dateHeaderId","renderEventInnerContent","buildTimeContent","interactiveAttrs","doAllDay","ListView","computeDateVars","dayDates","renderNoEventsInner","dateHeaderIdRoot","segsByDay","groupSegsByDay","innerNodes","daySegs","viewEnd","createFalsableFormatter","generator","customContent","customRenderingMeta","NamedTimeZoneImpl","timeZoneName","defaultOK","antiTrunc","convert","fromMap","fromUnit","toMap","toUnit","sameSign","down","luxonToArray","datetime","arrayToLuxon","LuxonNamedTimeZone","formatWithCmdStr","cmd","parseCmdStr","formatRange","middle","formatStart","formatEnd","startHead","startMiddle","startTail","endHead","endMiddle","endTail","startWhole","endWhole","getUserLanguage","tg","textcode","getStatusInfoByBookingStatus","bookingStatus","availableCalendarViews","calendarViewMap","ucalendar","calendarElement","dayGridPlugin","timeGridPlugin","listPlugin","luxon2Plugin","getActiveCalendarViewsSetByAdmin","view","getInitialCalendarDate","getInitialCalendarView","updateCalendarUrlQueries","fetchEvents","offerId","offer","iconName","offerStatusText","secondButtonStatus","secondButtonText","statusTemplate","dateIsValid","getFullCalendarViewKeySetByAdmin","getStartDateFromShortcode","getQueryParamFromView","_c","eventsUrl","shortcodeDateAsString","shortcodeDate","queryParams","viewQueryParam","availableViews","edooboxViewKeySetByAdmin","utable","tableElement","makeTableResponsive","utableclick","openDescriptions","tableRows","descriptionElement","initialise","openLinkInIFrameAllowed","pluginElement","sizeFrame","postMessage","alektionen","iframe","sameHeight","tallest","thisHeight","widgets","edooboxIFrameInitialized","edbsLastInterval","i_html","iframetmp","_d","_e","_f","_g","_h","eventName","currentInterval","edbsAnchor","anchorId","image","widgetFunction"],"mappings":"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"}